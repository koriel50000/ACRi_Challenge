#include "kernel.hpp"
1
#define UP(a,b) if (a > b) { int t = a; a = b; b = t; }
#define DN(a,b) if (a < b) { int t = a; a = b; b = t; }

using buffer_t = int[SIZE];

void sort0101(buffer_t b) {
	UP(b[0], b[1]);
	DN(b[2], b[3]);
	UP(b[4], b[5]);
	DN(b[6], b[7]);
	UP(b[8], b[9]);
	DN(b[10], b[11]);
	UP(b[12], b[13]);
	DN(b[14], b[15]);
	UP(b[16], b[17]);
	DN(b[18], b[19]);
	UP(b[20], b[21]);
	DN(b[22], b[23]);
	UP(b[24], b[25]);
	DN(b[26], b[27]);
	UP(b[28], b[29]);
	DN(b[30], b[31]);
	UP(b[32], b[33]);
	DN(b[34], b[35]);
	UP(b[36], b[37]);
	DN(b[38], b[39]);
	UP(b[40], b[41]);
	DN(b[42], b[43]);
	UP(b[44], b[45]);
	DN(b[46], b[47]);
	UP(b[48], b[49]);
	DN(b[50], b[51]);
	UP(b[52], b[53]);
	DN(b[54], b[55]);
	UP(b[56], b[57]);
	DN(b[58], b[59]);
	UP(b[60], b[61]);
	DN(b[62], b[63]);
	UP(b[64], b[65]);
	DN(b[66], b[67]);
	UP(b[68], b[69]);
	DN(b[70], b[71]);
	UP(b[72], b[73]);
	DN(b[74], b[75]);
	UP(b[76], b[77]);
	DN(b[78], b[79]);
	UP(b[80], b[81]);
	DN(b[82], b[83]);
	UP(b[84], b[85]);
	DN(b[86], b[87]);
	UP(b[88], b[89]);
	DN(b[90], b[91]);
	UP(b[92], b[93]);
	DN(b[94], b[95]);
	UP(b[96], b[97]);
	DN(b[98], b[99]);
	UP(b[100], b[101]);
	DN(b[102], b[103]);
	UP(b[104], b[105]);
	DN(b[106], b[107]);
	UP(b[108], b[109]);
	DN(b[110], b[111]);
	UP(b[112], b[113]);
	DN(b[114], b[115]);
	UP(b[116], b[117]);
	DN(b[118], b[119]);
	UP(b[120], b[121]);
	DN(b[122], b[123]);
	UP(b[124], b[125]);
	DN(b[126], b[127]);
}

void sort0201(buffer_t b) {
	UP(b[0], b[2]);
	UP(b[1], b[3]);
	DN(b[4], b[6]);
	DN(b[5], b[7]);
	UP(b[8], b[10]);
	UP(b[9], b[11]);
	DN(b[12], b[14]);
	DN(b[13], b[15]);
	UP(b[16], b[18]);
	UP(b[17], b[19]);
	DN(b[20], b[22]);
	DN(b[21], b[23]);
	UP(b[24], b[26]);
	UP(b[25], b[27]);
	DN(b[28], b[30]);
	DN(b[29], b[31]);
	UP(b[32], b[34]);
	UP(b[33], b[35]);
	DN(b[36], b[38]);
	DN(b[37], b[39]);
	UP(b[40], b[42]);
	UP(b[41], b[43]);
	DN(b[44], b[46]);
	DN(b[45], b[47]);
	UP(b[48], b[50]);
	UP(b[49], b[51]);
	DN(b[52], b[54]);
	DN(b[53], b[55]);
	UP(b[56], b[58]);
	UP(b[57], b[59]);
	DN(b[60], b[62]);
	DN(b[61], b[63]);
	UP(b[64], b[66]);
	UP(b[65], b[67]);
	DN(b[68], b[70]);
	DN(b[69], b[71]);
	UP(b[72], b[74]);
	UP(b[73], b[75]);
	DN(b[76], b[78]);
	DN(b[77], b[79]);
	UP(b[80], b[82]);
	UP(b[81], b[83]);
	DN(b[84], b[86]);
	DN(b[85], b[87]);
	UP(b[88], b[90]);
	UP(b[89], b[91]);
	DN(b[92], b[94]);
	DN(b[93], b[95]);
	UP(b[96], b[98]);
	UP(b[97], b[99]);
	DN(b[100], b[102]);
	DN(b[101], b[103]);
	UP(b[104], b[106]);
	UP(b[105], b[107]);
	DN(b[108], b[110]);
	DN(b[109], b[111]);
	UP(b[112], b[114]);
	UP(b[113], b[115]);
	DN(b[116], b[118]);
	DN(b[117], b[119]);
	UP(b[120], b[122]);
	UP(b[121], b[123]);
	DN(b[124], b[126]);
	DN(b[125], b[127]);
}

void sort0202(buffer_t b) {
	UP(b[0], b[1]);
	UP(b[2], b[3]);
	DN(b[4], b[5]);
	DN(b[6], b[7]);
	UP(b[8], b[9]);
	UP(b[10], b[11]);
	DN(b[12], b[13]);
	DN(b[14], b[15]);
	UP(b[16], b[17]);
	UP(b[18], b[19]);
	DN(b[20], b[21]);
	DN(b[22], b[23]);
	UP(b[24], b[25]);
	UP(b[26], b[27]);
	DN(b[28], b[29]);
	DN(b[30], b[31]);
	UP(b[32], b[33]);
	UP(b[34], b[35]);
	DN(b[36], b[37]);
	DN(b[38], b[39]);
	UP(b[40], b[41]);
	UP(b[42], b[43]);
	DN(b[44], b[45]);
	DN(b[46], b[47]);
	UP(b[48], b[49]);
	UP(b[50], b[51]);
	DN(b[52], b[53]);
	DN(b[54], b[55]);
	UP(b[56], b[57]);
	UP(b[58], b[59]);
	DN(b[60], b[61]);
	DN(b[62], b[63]);
	UP(b[64], b[65]);
	UP(b[66], b[67]);
	DN(b[68], b[69]);
	DN(b[70], b[71]);
	UP(b[72], b[73]);
	UP(b[74], b[75]);
	DN(b[76], b[77]);
	DN(b[78], b[79]);
	UP(b[80], b[81]);
	UP(b[82], b[83]);
	DN(b[84], b[85]);
	DN(b[86], b[87]);
	UP(b[88], b[89]);
	UP(b[90], b[91]);
	DN(b[92], b[93]);
	DN(b[94], b[95]);
	UP(b[96], b[97]);
	UP(b[98], b[99]);
	DN(b[100], b[101]);
	DN(b[102], b[103]);
	UP(b[104], b[105]);
	UP(b[106], b[107]);
	DN(b[108], b[109]);
	DN(b[110], b[111]);
	UP(b[112], b[113]);
	UP(b[114], b[115]);
	DN(b[116], b[117]);
	DN(b[118], b[119]);
	UP(b[120], b[121]);
	UP(b[122], b[123]);
	DN(b[124], b[125]);
	DN(b[126], b[127]);
}

void sort0301(buffer_t b) {
	UP(b[0], b[4]);
	UP(b[1], b[5]);
	UP(b[2], b[6]);
	UP(b[3], b[7]);
	DN(b[8], b[12]);
	DN(b[9], b[13]);
	DN(b[10], b[14]);
	DN(b[11], b[15]);
	UP(b[16], b[20]);
	UP(b[17], b[21]);
	UP(b[18], b[22]);
	UP(b[19], b[23]);
	DN(b[24], b[28]);
	DN(b[25], b[29]);
	DN(b[26], b[30]);
	DN(b[27], b[31]);
	UP(b[32], b[36]);
	UP(b[33], b[37]);
	UP(b[34], b[38]);
	UP(b[35], b[39]);
	DN(b[40], b[44]);
	DN(b[41], b[45]);
	DN(b[42], b[46]);
	DN(b[43], b[47]);
	UP(b[48], b[52]);
	UP(b[49], b[53]);
	UP(b[50], b[54]);
	UP(b[51], b[55]);
	DN(b[56], b[60]);
	DN(b[57], b[61]);
	DN(b[58], b[62]);
	DN(b[59], b[63]);
	UP(b[64], b[68]);
	UP(b[65], b[69]);
	UP(b[66], b[70]);
	UP(b[67], b[71]);
	DN(b[72], b[76]);
	DN(b[73], b[77]);
	DN(b[74], b[78]);
	DN(b[75], b[79]);
	UP(b[80], b[84]);
	UP(b[81], b[85]);
	UP(b[82], b[86]);
	UP(b[83], b[87]);
	DN(b[88], b[92]);
	DN(b[89], b[93]);
	DN(b[90], b[94]);
	DN(b[91], b[95]);
	UP(b[96], b[100]);
	UP(b[97], b[101]);
	UP(b[98], b[102]);
	UP(b[99], b[103]);
	DN(b[104], b[108]);
	DN(b[105], b[109]);
	DN(b[106], b[110]);
	DN(b[107], b[111]);
	UP(b[112], b[116]);
	UP(b[113], b[117]);
	UP(b[114], b[118]);
	UP(b[115], b[119]);
	DN(b[120], b[124]);
	DN(b[121], b[125]);
	DN(b[122], b[126]);
	DN(b[123], b[127]);
}

void sort0302(buffer_t b) {
	UP(b[0], b[2]);
	UP(b[1], b[3]);
	UP(b[4], b[6]);
	UP(b[5], b[7]);
	DN(b[8], b[10]);
	DN(b[9], b[11]);
	DN(b[12], b[14]);
	DN(b[13], b[15]);
	UP(b[16], b[18]);
	UP(b[17], b[19]);
	UP(b[20], b[22]);
	UP(b[21], b[23]);
	DN(b[24], b[26]);
	DN(b[25], b[27]);
	DN(b[28], b[30]);
	DN(b[29], b[31]);
	UP(b[32], b[34]);
	UP(b[33], b[35]);
	UP(b[36], b[38]);
	UP(b[37], b[39]);
	DN(b[40], b[42]);
	DN(b[41], b[43]);
	DN(b[44], b[46]);
	DN(b[45], b[47]);
	UP(b[48], b[50]);
	UP(b[49], b[51]);
	UP(b[52], b[54]);
	UP(b[53], b[55]);
	DN(b[56], b[58]);
	DN(b[57], b[59]);
	DN(b[60], b[62]);
	DN(b[61], b[63]);
	UP(b[64], b[66]);
	UP(b[65], b[67]);
	UP(b[68], b[70]);
	UP(b[69], b[71]);
	DN(b[72], b[74]);
	DN(b[73], b[75]);
	DN(b[76], b[78]);
	DN(b[77], b[79]);
	UP(b[80], b[82]);
	UP(b[81], b[83]);
	UP(b[84], b[86]);
	UP(b[85], b[87]);
	DN(b[88], b[90]);
	DN(b[89], b[91]);
	DN(b[92], b[94]);
	DN(b[93], b[95]);
	UP(b[96], b[98]);
	UP(b[97], b[99]);
	UP(b[100], b[102]);
	UP(b[101], b[103]);
	DN(b[104], b[106]);
	DN(b[105], b[107]);
	DN(b[108], b[110]);
	DN(b[109], b[111]);
	UP(b[112], b[114]);
	UP(b[113], b[115]);
	UP(b[116], b[118]);
	UP(b[117], b[119]);
	DN(b[120], b[122]);
	DN(b[121], b[123]);
	DN(b[124], b[126]);
	DN(b[125], b[127]);
}

void sort0303(buffer_t b) {
	UP(b[0], b[1]);
	UP(b[2], b[3]);
	UP(b[4], b[5]);
	UP(b[6], b[7]);
	DN(b[8], b[9]);
	DN(b[10], b[11]);
	DN(b[12], b[13]);
	DN(b[14], b[15]);
	UP(b[16], b[17]);
	UP(b[18], b[19]);
	UP(b[20], b[21]);
	UP(b[22], b[23]);
	DN(b[24], b[25]);
	DN(b[26], b[27]);
	DN(b[28], b[29]);
	DN(b[30], b[31]);
	UP(b[32], b[33]);
	UP(b[34], b[35]);
	UP(b[36], b[37]);
	UP(b[38], b[39]);
	DN(b[40], b[41]);
	DN(b[42], b[43]);
	DN(b[44], b[45]);
	DN(b[46], b[47]);
	UP(b[48], b[49]);
	UP(b[50], b[51]);
	UP(b[52], b[53]);
	UP(b[54], b[55]);
	DN(b[56], b[57]);
	DN(b[58], b[59]);
	DN(b[60], b[61]);
	DN(b[62], b[63]);
	UP(b[64], b[65]);
	UP(b[66], b[67]);
	UP(b[68], b[69]);
	UP(b[70], b[71]);
	DN(b[72], b[73]);
	DN(b[74], b[75]);
	DN(b[76], b[77]);
	DN(b[78], b[79]);
	UP(b[80], b[81]);
	UP(b[82], b[83]);
	UP(b[84], b[85]);
	UP(b[86], b[87]);
	DN(b[88], b[89]);
	DN(b[90], b[91]);
	DN(b[92], b[93]);
	DN(b[94], b[95]);
	UP(b[96], b[97]);
	UP(b[98], b[99]);
	UP(b[100], b[101]);
	UP(b[102], b[103]);
	DN(b[104], b[105]);
	DN(b[106], b[107]);
	DN(b[108], b[109]);
	DN(b[110], b[111]);
	UP(b[112], b[113]);
	UP(b[114], b[115]);
	UP(b[116], b[117]);
	UP(b[118], b[119]);
	DN(b[120], b[121]);
	DN(b[122], b[123]);
	DN(b[124], b[125]);
	DN(b[126], b[127]);
}

void sort0401(buffer_t b) {
	UP(b[0], b[8]);
	UP(b[1], b[9]);
	UP(b[2], b[10]);
	UP(b[3], b[11]);
	UP(b[4], b[12]);
	UP(b[5], b[13]);
	UP(b[6], b[14]);
	UP(b[7], b[15]);
	DN(b[16], b[24]);
	DN(b[17], b[25]);
	DN(b[18], b[26]);
	DN(b[19], b[27]);
	DN(b[20], b[28]);
	DN(b[21], b[29]);
	DN(b[22], b[30]);
	DN(b[23], b[31]);
	UP(b[32], b[40]);
	UP(b[33], b[41]);
	UP(b[34], b[42]);
	UP(b[35], b[43]);
	UP(b[36], b[44]);
	UP(b[37], b[45]);
	UP(b[38], b[46]);
	UP(b[39], b[47]);
	DN(b[48], b[56]);
	DN(b[49], b[57]);
	DN(b[50], b[58]);
	DN(b[51], b[59]);
	DN(b[52], b[60]);
	DN(b[53], b[61]);
	DN(b[54], b[62]);
	DN(b[55], b[63]);
	UP(b[64], b[72]);
	UP(b[65], b[73]);
	UP(b[66], b[74]);
	UP(b[67], b[75]);
	UP(b[68], b[76]);
	UP(b[69], b[77]);
	UP(b[70], b[78]);
	UP(b[71], b[79]);
	DN(b[80], b[88]);
	DN(b[81], b[89]);
	DN(b[82], b[90]);
	DN(b[83], b[91]);
	DN(b[84], b[92]);
	DN(b[85], b[93]);
	DN(b[86], b[94]);
	DN(b[87], b[95]);
	UP(b[96], b[104]);
	UP(b[97], b[105]);
	UP(b[98], b[106]);
	UP(b[99], b[107]);
	UP(b[100], b[108]);
	UP(b[101], b[109]);
	UP(b[102], b[110]);
	UP(b[103], b[111]);
	DN(b[112], b[120]);
	DN(b[113], b[121]);
	DN(b[114], b[122]);
	DN(b[115], b[123]);
	DN(b[116], b[124]);
	DN(b[117], b[125]);
	DN(b[118], b[126]);
	DN(b[119], b[127]);
}

void sort0402(buffer_t b) {
	UP(b[0], b[4]);
	UP(b[1], b[5]);
	UP(b[2], b[6]);
	UP(b[3], b[7]);
	UP(b[8], b[12]);
	UP(b[9], b[13]);
	UP(b[10], b[14]);
	UP(b[11], b[15]);
	DN(b[16], b[20]);
	DN(b[17], b[21]);
	DN(b[18], b[22]);
	DN(b[19], b[23]);
	DN(b[24], b[28]);
	DN(b[25], b[29]);
	DN(b[26], b[30]);
	DN(b[27], b[31]);
	UP(b[32], b[36]);
	UP(b[33], b[37]);
	UP(b[34], b[38]);
	UP(b[35], b[39]);
	UP(b[40], b[44]);
	UP(b[41], b[45]);
	UP(b[42], b[46]);
	UP(b[43], b[47]);
	DN(b[48], b[52]);
	DN(b[49], b[53]);
	DN(b[50], b[54]);
	DN(b[51], b[55]);
	DN(b[56], b[60]);
	DN(b[57], b[61]);
	DN(b[58], b[62]);
	DN(b[59], b[63]);
	UP(b[64], b[68]);
	UP(b[65], b[69]);
	UP(b[66], b[70]);
	UP(b[67], b[71]);
	UP(b[72], b[76]);
	UP(b[73], b[77]);
	UP(b[74], b[78]);
	UP(b[75], b[79]);
	DN(b[80], b[84]);
	DN(b[81], b[85]);
	DN(b[82], b[86]);
	DN(b[83], b[87]);
	DN(b[88], b[92]);
	DN(b[89], b[93]);
	DN(b[90], b[94]);
	DN(b[91], b[95]);
	UP(b[96], b[100]);
	UP(b[97], b[101]);
	UP(b[98], b[102]);
	UP(b[99], b[103]);
	UP(b[104], b[108]);
	UP(b[105], b[109]);
	UP(b[106], b[110]);
	UP(b[107], b[111]);
	DN(b[112], b[116]);
	DN(b[113], b[117]);
	DN(b[114], b[118]);
	DN(b[115], b[119]);
	DN(b[120], b[124]);
	DN(b[121], b[125]);
	DN(b[122], b[126]);
	DN(b[123], b[127]);
}

void sort0403(buffer_t b) {
	UP(b[0], b[2]);
	UP(b[1], b[3]);
	UP(b[4], b[6]);
	UP(b[5], b[7]);
	UP(b[8], b[10]);
	UP(b[9], b[11]);
	UP(b[12], b[14]);
	UP(b[13], b[15]);
	DN(b[16], b[18]);
	DN(b[17], b[19]);
	DN(b[20], b[22]);
	DN(b[21], b[23]);
	DN(b[24], b[26]);
	DN(b[25], b[27]);
	DN(b[28], b[30]);
	DN(b[29], b[31]);
	UP(b[32], b[34]);
	UP(b[33], b[35]);
	UP(b[36], b[38]);
	UP(b[37], b[39]);
	UP(b[40], b[42]);
	UP(b[41], b[43]);
	UP(b[44], b[46]);
	UP(b[45], b[47]);
	DN(b[48], b[50]);
	DN(b[49], b[51]);
	DN(b[52], b[54]);
	DN(b[53], b[55]);
	DN(b[56], b[58]);
	DN(b[57], b[59]);
	DN(b[60], b[62]);
	DN(b[61], b[63]);
	UP(b[64], b[66]);
	UP(b[65], b[67]);
	UP(b[68], b[70]);
	UP(b[69], b[71]);
	UP(b[72], b[74]);
	UP(b[73], b[75]);
	UP(b[76], b[78]);
	UP(b[77], b[79]);
	DN(b[80], b[82]);
	DN(b[81], b[83]);
	DN(b[84], b[86]);
	DN(b[85], b[87]);
	DN(b[88], b[90]);
	DN(b[89], b[91]);
	DN(b[92], b[94]);
	DN(b[93], b[95]);
	UP(b[96], b[98]);
	UP(b[97], b[99]);
	UP(b[100], b[102]);
	UP(b[101], b[103]);
	UP(b[104], b[106]);
	UP(b[105], b[107]);
	UP(b[108], b[110]);
	UP(b[109], b[111]);
	DN(b[112], b[114]);
	DN(b[113], b[115]);
	DN(b[116], b[118]);
	DN(b[117], b[119]);
	DN(b[120], b[122]);
	DN(b[121], b[123]);
	DN(b[124], b[126]);
	DN(b[125], b[127]);
}

void sort0404(buffer_t b) {
	UP(b[0], b[1]);
	UP(b[2], b[3]);
	UP(b[4], b[5]);
	UP(b[6], b[7]);
	UP(b[8], b[9]);
	UP(b[10], b[11]);
	UP(b[12], b[13]);
	UP(b[14], b[15]);
	DN(b[16], b[17]);
	DN(b[18], b[19]);
	DN(b[20], b[21]);
	DN(b[22], b[23]);
	DN(b[24], b[25]);
	DN(b[26], b[27]);
	DN(b[28], b[29]);
	DN(b[30], b[31]);
	UP(b[32], b[33]);
	UP(b[34], b[35]);
	UP(b[36], b[37]);
	UP(b[38], b[39]);
	UP(b[40], b[41]);
	UP(b[42], b[43]);
	UP(b[44], b[45]);
	UP(b[46], b[47]);
	DN(b[48], b[49]);
	DN(b[50], b[51]);
	DN(b[52], b[53]);
	DN(b[54], b[55]);
	DN(b[56], b[57]);
	DN(b[58], b[59]);
	DN(b[60], b[61]);
	DN(b[62], b[63]);
	UP(b[64], b[65]);
	UP(b[66], b[67]);
	UP(b[68], b[69]);
	UP(b[70], b[71]);
	UP(b[72], b[73]);
	UP(b[74], b[75]);
	UP(b[76], b[77]);
	UP(b[78], b[79]);
	DN(b[80], b[81]);
	DN(b[82], b[83]);
	DN(b[84], b[85]);
	DN(b[86], b[87]);
	DN(b[88], b[89]);
	DN(b[90], b[91]);
	DN(b[92], b[93]);
	DN(b[94], b[95]);
	UP(b[96], b[97]);
	UP(b[98], b[99]);
	UP(b[100], b[101]);
	UP(b[102], b[103]);
	UP(b[104], b[105]);
	UP(b[106], b[107]);
	UP(b[108], b[109]);
	UP(b[110], b[111]);
	DN(b[112], b[113]);
	DN(b[114], b[115]);
	DN(b[116], b[117]);
	DN(b[118], b[119]);
	DN(b[120], b[121]);
	DN(b[122], b[123]);
	DN(b[124], b[125]);
	DN(b[126], b[127]);
}

void sort0501(buffer_t b) {
	UP(b[0], b[16]);
	UP(b[1], b[17]);
	UP(b[2], b[18]);
	UP(b[3], b[19]);
	UP(b[4], b[20]);
	UP(b[5], b[21]);
	UP(b[6], b[22]);
	UP(b[7], b[23]);
	UP(b[8], b[24]);
	UP(b[9], b[25]);
	UP(b[10], b[26]);
	UP(b[11], b[27]);
	UP(b[12], b[28]);
	UP(b[13], b[29]);
	UP(b[14], b[30]);
	UP(b[15], b[31]);
	DN(b[32], b[48]);
	DN(b[33], b[49]);
	DN(b[34], b[50]);
	DN(b[35], b[51]);
	DN(b[36], b[52]);
	DN(b[37], b[53]);
	DN(b[38], b[54]);
	DN(b[39], b[55]);
	DN(b[40], b[56]);
	DN(b[41], b[57]);
	DN(b[42], b[58]);
	DN(b[43], b[59]);
	DN(b[44], b[60]);
	DN(b[45], b[61]);
	DN(b[46], b[62]);
	DN(b[47], b[63]);
	UP(b[64], b[80]);
	UP(b[65], b[81]);
	UP(b[66], b[82]);
	UP(b[67], b[83]);
	UP(b[68], b[84]);
	UP(b[69], b[85]);
	UP(b[70], b[86]);
	UP(b[71], b[87]);
	UP(b[72], b[88]);
	UP(b[73], b[89]);
	UP(b[74], b[90]);
	UP(b[75], b[91]);
	UP(b[76], b[92]);
	UP(b[77], b[93]);
	UP(b[78], b[94]);
	UP(b[79], b[95]);
	DN(b[96], b[112]);
	DN(b[97], b[113]);
	DN(b[98], b[114]);
	DN(b[99], b[115]);
	DN(b[100], b[116]);
	DN(b[101], b[117]);
	DN(b[102], b[118]);
	DN(b[103], b[119]);
	DN(b[104], b[120]);
	DN(b[105], b[121]);
	DN(b[106], b[122]);
	DN(b[107], b[123]);
	DN(b[108], b[124]);
	DN(b[109], b[125]);
	DN(b[110], b[126]);
	DN(b[111], b[127]);
}

void sort0502(buffer_t b) {
	UP(b[0], b[8]);
	UP(b[1], b[9]);
	UP(b[2], b[10]);
	UP(b[3], b[11]);
	UP(b[4], b[12]);
	UP(b[5], b[13]);
	UP(b[6], b[14]);
	UP(b[7], b[15]);
	UP(b[16], b[24]);
	UP(b[17], b[25]);
	UP(b[18], b[26]);
	UP(b[19], b[27]);
	UP(b[20], b[28]);
	UP(b[21], b[29]);
	UP(b[22], b[30]);
	UP(b[23], b[31]);
	DN(b[32], b[40]);
	DN(b[33], b[41]);
	DN(b[34], b[42]);
	DN(b[35], b[43]);
	DN(b[36], b[44]);
	DN(b[37], b[45]);
	DN(b[38], b[46]);
	DN(b[39], b[47]);
	DN(b[48], b[56]);
	DN(b[49], b[57]);
	DN(b[50], b[58]);
	DN(b[51], b[59]);
	DN(b[52], b[60]);
	DN(b[53], b[61]);
	DN(b[54], b[62]);
	DN(b[55], b[63]);
	UP(b[64], b[72]);
	UP(b[65], b[73]);
	UP(b[66], b[74]);
	UP(b[67], b[75]);
	UP(b[68], b[76]);
	UP(b[69], b[77]);
	UP(b[70], b[78]);
	UP(b[71], b[79]);
	UP(b[80], b[88]);
	UP(b[81], b[89]);
	UP(b[82], b[90]);
	UP(b[83], b[91]);
	UP(b[84], b[92]);
	UP(b[85], b[93]);
	UP(b[86], b[94]);
	UP(b[87], b[95]);
	DN(b[96], b[104]);
	DN(b[97], b[105]);
	DN(b[98], b[106]);
	DN(b[99], b[107]);
	DN(b[100], b[108]);
	DN(b[101], b[109]);
	DN(b[102], b[110]);
	DN(b[103], b[111]);
	DN(b[112], b[120]);
	DN(b[113], b[121]);
	DN(b[114], b[122]);
	DN(b[115], b[123]);
	DN(b[116], b[124]);
	DN(b[117], b[125]);
	DN(b[118], b[126]);
	DN(b[119], b[127]);
}

void sort0503(buffer_t b) {
	UP(b[0], b[4]);
	UP(b[1], b[5]);
	UP(b[2], b[6]);
	UP(b[3], b[7]);
	UP(b[8], b[12]);
	UP(b[9], b[13]);
	UP(b[10], b[14]);
	UP(b[11], b[15]);
	UP(b[16], b[20]);
	UP(b[17], b[21]);
	UP(b[18], b[22]);
	UP(b[19], b[23]);
	UP(b[24], b[28]);
	UP(b[25], b[29]);
	UP(b[26], b[30]);
	UP(b[27], b[31]);
	DN(b[32], b[36]);
	DN(b[33], b[37]);
	DN(b[34], b[38]);
	DN(b[35], b[39]);
	DN(b[40], b[44]);
	DN(b[41], b[45]);
	DN(b[42], b[46]);
	DN(b[43], b[47]);
	DN(b[48], b[52]);
	DN(b[49], b[53]);
	DN(b[50], b[54]);
	DN(b[51], b[55]);
	DN(b[56], b[60]);
	DN(b[57], b[61]);
	DN(b[58], b[62]);
	DN(b[59], b[63]);
	UP(b[64], b[68]);
	UP(b[65], b[69]);
	UP(b[66], b[70]);
	UP(b[67], b[71]);
	UP(b[72], b[76]);
	UP(b[73], b[77]);
	UP(b[74], b[78]);
	UP(b[75], b[79]);
	UP(b[80], b[84]);
	UP(b[81], b[85]);
	UP(b[82], b[86]);
	UP(b[83], b[87]);
	UP(b[88], b[92]);
	UP(b[89], b[93]);
	UP(b[90], b[94]);
	UP(b[91], b[95]);
	DN(b[96], b[100]);
	DN(b[97], b[101]);
	DN(b[98], b[102]);
	DN(b[99], b[103]);
	DN(b[104], b[108]);
	DN(b[105], b[109]);
	DN(b[106], b[110]);
	DN(b[107], b[111]);
	DN(b[112], b[116]);
	DN(b[113], b[117]);
	DN(b[114], b[118]);
	DN(b[115], b[119]);
	DN(b[120], b[124]);
	DN(b[121], b[125]);
	DN(b[122], b[126]);
	DN(b[123], b[127]);
}

void sort0504(buffer_t b) {
	UP(b[0], b[2]);
	UP(b[1], b[3]);
	UP(b[4], b[6]);
	UP(b[5], b[7]);
	UP(b[8], b[10]);
	UP(b[9], b[11]);
	UP(b[12], b[14]);
	UP(b[13], b[15]);
	UP(b[16], b[18]);
	UP(b[17], b[19]);
	UP(b[20], b[22]);
	UP(b[21], b[23]);
	UP(b[24], b[26]);
	UP(b[25], b[27]);
	UP(b[28], b[30]);
	UP(b[29], b[31]);
	DN(b[32], b[34]);
	DN(b[33], b[35]);
	DN(b[36], b[38]);
	DN(b[37], b[39]);
	DN(b[40], b[42]);
	DN(b[41], b[43]);
	DN(b[44], b[46]);
	DN(b[45], b[47]);
	DN(b[48], b[50]);
	DN(b[49], b[51]);
	DN(b[52], b[54]);
	DN(b[53], b[55]);
	DN(b[56], b[58]);
	DN(b[57], b[59]);
	DN(b[60], b[62]);
	DN(b[61], b[63]);
	UP(b[64], b[66]);
	UP(b[65], b[67]);
	UP(b[68], b[70]);
	UP(b[69], b[71]);
	UP(b[72], b[74]);
	UP(b[73], b[75]);
	UP(b[76], b[78]);
	UP(b[77], b[79]);
	UP(b[80], b[82]);
	UP(b[81], b[83]);
	UP(b[84], b[86]);
	UP(b[85], b[87]);
	UP(b[88], b[90]);
	UP(b[89], b[91]);
	UP(b[92], b[94]);
	UP(b[93], b[95]);
	DN(b[96], b[98]);
	DN(b[97], b[99]);
	DN(b[100], b[102]);
	DN(b[101], b[103]);
	DN(b[104], b[106]);
	DN(b[105], b[107]);
	DN(b[108], b[110]);
	DN(b[109], b[111]);
	DN(b[112], b[114]);
	DN(b[113], b[115]);
	DN(b[116], b[118]);
	DN(b[117], b[119]);
	DN(b[120], b[122]);
	DN(b[121], b[123]);
	DN(b[124], b[126]);
	DN(b[125], b[127]);
}

void sort0505(buffer_t b) {
	UP(b[0], b[1]);
	UP(b[2], b[3]);
	UP(b[4], b[5]);
	UP(b[6], b[7]);
	UP(b[8], b[9]);
	UP(b[10], b[11]);
	UP(b[12], b[13]);
	UP(b[14], b[15]);
	UP(b[16], b[17]);
	UP(b[18], b[19]);
	UP(b[20], b[21]);
	UP(b[22], b[23]);
	UP(b[24], b[25]);
	UP(b[26], b[27]);
	UP(b[28], b[29]);
	UP(b[30], b[31]);
	DN(b[32], b[33]);
	DN(b[34], b[35]);
	DN(b[36], b[37]);
	DN(b[38], b[39]);
	DN(b[40], b[41]);
	DN(b[42], b[43]);
	DN(b[44], b[45]);
	DN(b[46], b[47]);
	DN(b[48], b[49]);
	DN(b[50], b[51]);
	DN(b[52], b[53]);
	DN(b[54], b[55]);
	DN(b[56], b[57]);
	DN(b[58], b[59]);
	DN(b[60], b[61]);
	DN(b[62], b[63]);
	UP(b[64], b[65]);
	UP(b[66], b[67]);
	UP(b[68], b[69]);
	UP(b[70], b[71]);
	UP(b[72], b[73]);
	UP(b[74], b[75]);
	UP(b[76], b[77]);
	UP(b[78], b[79]);
	UP(b[80], b[81]);
	UP(b[82], b[83]);
	UP(b[84], b[85]);
	UP(b[86], b[87]);
	UP(b[88], b[89]);
	UP(b[90], b[91]);
	UP(b[92], b[93]);
	UP(b[94], b[95]);
	DN(b[96], b[97]);
	DN(b[98], b[99]);
	DN(b[100], b[101]);
	DN(b[102], b[103]);
	DN(b[104], b[105]);
	DN(b[106], b[107]);
	DN(b[108], b[109]);
	DN(b[110], b[111]);
	DN(b[112], b[113]);
	DN(b[114], b[115]);
	DN(b[116], b[117]);
	DN(b[118], b[119]);
	DN(b[120], b[121]);
	DN(b[122], b[123]);
	DN(b[124], b[125]);
	DN(b[126], b[127]);
}

void sort0601(buffer_t b) {
	UP(b[0], b[32]);
	UP(b[1], b[33]);
	UP(b[2], b[34]);
	UP(b[3], b[35]);
	UP(b[4], b[36]);
	UP(b[5], b[37]);
	UP(b[6], b[38]);
	UP(b[7], b[39]);
	UP(b[8], b[40]);
	UP(b[9], b[41]);
	UP(b[10], b[42]);
	UP(b[11], b[43]);
	UP(b[12], b[44]);
	UP(b[13], b[45]);
	UP(b[14], b[46]);
	UP(b[15], b[47]);
	UP(b[16], b[48]);
	UP(b[17], b[49]);
	UP(b[18], b[50]);
	UP(b[19], b[51]);
	UP(b[20], b[52]);
	UP(b[21], b[53]);
	UP(b[22], b[54]);
	UP(b[23], b[55]);
	UP(b[24], b[56]);
	UP(b[25], b[57]);
	UP(b[26], b[58]);
	UP(b[27], b[59]);
	UP(b[28], b[60]);
	UP(b[29], b[61]);
	UP(b[30], b[62]);
	UP(b[31], b[63]);
	DN(b[64], b[96]);
	DN(b[65], b[97]);
	DN(b[66], b[98]);
	DN(b[67], b[99]);
	DN(b[68], b[100]);
	DN(b[69], b[101]);
	DN(b[70], b[102]);
	DN(b[71], b[103]);
	DN(b[72], b[104]);
	DN(b[73], b[105]);
	DN(b[74], b[106]);
	DN(b[75], b[107]);
	DN(b[76], b[108]);
	DN(b[77], b[109]);
	DN(b[78], b[110]);
	DN(b[79], b[111]);
	DN(b[80], b[112]);
	DN(b[81], b[113]);
	DN(b[82], b[114]);
	DN(b[83], b[115]);
	DN(b[84], b[116]);
	DN(b[85], b[117]);
	DN(b[86], b[118]);
	DN(b[87], b[119]);
	DN(b[88], b[120]);
	DN(b[89], b[121]);
	DN(b[90], b[122]);
	DN(b[91], b[123]);
	DN(b[92], b[124]);
	DN(b[93], b[125]);
	DN(b[94], b[126]);
	DN(b[95], b[127]);
}

void sort0602(buffer_t b) {
	UP(b[0], b[16]);
	UP(b[1], b[17]);
	UP(b[2], b[18]);
	UP(b[3], b[19]);
	UP(b[4], b[20]);
	UP(b[5], b[21]);
	UP(b[6], b[22]);
	UP(b[7], b[23]);
	UP(b[8], b[24]);
	UP(b[9], b[25]);
	UP(b[10], b[26]);
	UP(b[11], b[27]);
	UP(b[12], b[28]);
	UP(b[13], b[29]);
	UP(b[14], b[30]);
	UP(b[15], b[31]);
	UP(b[32], b[48]);
	UP(b[33], b[49]);
	UP(b[34], b[50]);
	UP(b[35], b[51]);
	UP(b[36], b[52]);
	UP(b[37], b[53]);
	UP(b[38], b[54]);
	UP(b[39], b[55]);
	UP(b[40], b[56]);
	UP(b[41], b[57]);
	UP(b[42], b[58]);
	UP(b[43], b[59]);
	UP(b[44], b[60]);
	UP(b[45], b[61]);
	UP(b[46], b[62]);
	UP(b[47], b[63]);
	DN(b[64], b[80]);
	DN(b[65], b[81]);
	DN(b[66], b[82]);
	DN(b[67], b[83]);
	DN(b[68], b[84]);
	DN(b[69], b[85]);
	DN(b[70], b[86]);
	DN(b[71], b[87]);
	DN(b[72], b[88]);
	DN(b[73], b[89]);
	DN(b[74], b[90]);
	DN(b[75], b[91]);
	DN(b[76], b[92]);
	DN(b[77], b[93]);
	DN(b[78], b[94]);
	DN(b[79], b[95]);
	DN(b[96], b[112]);
	DN(b[97], b[113]);
	DN(b[98], b[114]);
	DN(b[99], b[115]);
	DN(b[100], b[116]);
	DN(b[101], b[117]);
	DN(b[102], b[118]);
	DN(b[103], b[119]);
	DN(b[104], b[120]);
	DN(b[105], b[121]);
	DN(b[106], b[122]);
	DN(b[107], b[123]);
	DN(b[108], b[124]);
	DN(b[109], b[125]);
	DN(b[110], b[126]);
	DN(b[111], b[127]);
}

void sort0603(buffer_t b) {
	UP(b[0], b[8]);
	UP(b[1], b[9]);
	UP(b[2], b[10]);
	UP(b[3], b[11]);
	UP(b[4], b[12]);
	UP(b[5], b[13]);
	UP(b[6], b[14]);
	UP(b[7], b[15]);
	UP(b[16], b[24]);
	UP(b[17], b[25]);
	UP(b[18], b[26]);
	UP(b[19], b[27]);
	UP(b[20], b[28]);
	UP(b[21], b[29]);
	UP(b[22], b[30]);
	UP(b[23], b[31]);
	UP(b[32], b[40]);
	UP(b[33], b[41]);
	UP(b[34], b[42]);
	UP(b[35], b[43]);
	UP(b[36], b[44]);
	UP(b[37], b[45]);
	UP(b[38], b[46]);
	UP(b[39], b[47]);
	UP(b[48], b[56]);
	UP(b[49], b[57]);
	UP(b[50], b[58]);
	UP(b[51], b[59]);
	UP(b[52], b[60]);
	UP(b[53], b[61]);
	UP(b[54], b[62]);
	UP(b[55], b[63]);
	DN(b[64], b[72]);
	DN(b[65], b[73]);
	DN(b[66], b[74]);
	DN(b[67], b[75]);
	DN(b[68], b[76]);
	DN(b[69], b[77]);
	DN(b[70], b[78]);
	DN(b[71], b[79]);
	DN(b[80], b[88]);
	DN(b[81], b[89]);
	DN(b[82], b[90]);
	DN(b[83], b[91]);
	DN(b[84], b[92]);
	DN(b[85], b[93]);
	DN(b[86], b[94]);
	DN(b[87], b[95]);
	DN(b[96], b[104]);
	DN(b[97], b[105]);
	DN(b[98], b[106]);
	DN(b[99], b[107]);
	DN(b[100], b[108]);
	DN(b[101], b[109]);
	DN(b[102], b[110]);
	DN(b[103], b[111]);
	DN(b[112], b[120]);
	DN(b[113], b[121]);
	DN(b[114], b[122]);
	DN(b[115], b[123]);
	DN(b[116], b[124]);
	DN(b[117], b[125]);
	DN(b[118], b[126]);
	DN(b[119], b[127]);
}

void sort0604(buffer_t b) {
	UP(b[0], b[4]);
	UP(b[1], b[5]);
	UP(b[2], b[6]);
	UP(b[3], b[7]);
	UP(b[8], b[12]);
	UP(b[9], b[13]);
	UP(b[10], b[14]);
	UP(b[11], b[15]);
	UP(b[16], b[20]);
	UP(b[17], b[21]);
	UP(b[18], b[22]);
	UP(b[19], b[23]);
	UP(b[24], b[28]);
	UP(b[25], b[29]);
	UP(b[26], b[30]);
	UP(b[27], b[31]);
	UP(b[32], b[36]);
	UP(b[33], b[37]);
	UP(b[34], b[38]);
	UP(b[35], b[39]);
	UP(b[40], b[44]);
	UP(b[41], b[45]);
	UP(b[42], b[46]);
	UP(b[43], b[47]);
	UP(b[48], b[52]);
	UP(b[49], b[53]);
	UP(b[50], b[54]);
	UP(b[51], b[55]);
	UP(b[56], b[60]);
	UP(b[57], b[61]);
	UP(b[58], b[62]);
	UP(b[59], b[63]);
	DN(b[64], b[68]);
	DN(b[65], b[69]);
	DN(b[66], b[70]);
	DN(b[67], b[71]);
	DN(b[72], b[76]);
	DN(b[73], b[77]);
	DN(b[74], b[78]);
	DN(b[75], b[79]);
	DN(b[80], b[84]);
	DN(b[81], b[85]);
	DN(b[82], b[86]);
	DN(b[83], b[87]);
	DN(b[88], b[92]);
	DN(b[89], b[93]);
	DN(b[90], b[94]);
	DN(b[91], b[95]);
	DN(b[96], b[100]);
	DN(b[97], b[101]);
	DN(b[98], b[102]);
	DN(b[99], b[103]);
	DN(b[104], b[108]);
	DN(b[105], b[109]);
	DN(b[106], b[110]);
	DN(b[107], b[111]);
	DN(b[112], b[116]);
	DN(b[113], b[117]);
	DN(b[114], b[118]);
	DN(b[115], b[119]);
	DN(b[120], b[124]);
	DN(b[121], b[125]);
	DN(b[122], b[126]);
	DN(b[123], b[127]);
}

void sort0605(buffer_t b) {
	UP(b[0], b[2]);
	UP(b[1], b[3]);
	UP(b[4], b[6]);
	UP(b[5], b[7]);
	UP(b[8], b[10]);
	UP(b[9], b[11]);
	UP(b[12], b[14]);
	UP(b[13], b[15]);
	UP(b[16], b[18]);
	UP(b[17], b[19]);
	UP(b[20], b[22]);
	UP(b[21], b[23]);
	UP(b[24], b[26]);
	UP(b[25], b[27]);
	UP(b[28], b[30]);
	UP(b[29], b[31]);
	UP(b[32], b[34]);
	UP(b[33], b[35]);
	UP(b[36], b[38]);
	UP(b[37], b[39]);
	UP(b[40], b[42]);
	UP(b[41], b[43]);
	UP(b[44], b[46]);
	UP(b[45], b[47]);
	UP(b[48], b[50]);
	UP(b[49], b[51]);
	UP(b[52], b[54]);
	UP(b[53], b[55]);
	UP(b[56], b[58]);
	UP(b[57], b[59]);
	UP(b[60], b[62]);
	UP(b[61], b[63]);
	DN(b[64], b[66]);
	DN(b[65], b[67]);
	DN(b[68], b[70]);
	DN(b[69], b[71]);
	DN(b[72], b[74]);
	DN(b[73], b[75]);
	DN(b[76], b[78]);
	DN(b[77], b[79]);
	DN(b[80], b[82]);
	DN(b[81], b[83]);
	DN(b[84], b[86]);
	DN(b[85], b[87]);
	DN(b[88], b[90]);
	DN(b[89], b[91]);
	DN(b[92], b[94]);
	DN(b[93], b[95]);
	DN(b[96], b[98]);
	DN(b[97], b[99]);
	DN(b[100], b[102]);
	DN(b[101], b[103]);
	DN(b[104], b[106]);
	DN(b[105], b[107]);
	DN(b[108], b[110]);
	DN(b[109], b[111]);
	DN(b[112], b[114]);
	DN(b[113], b[115]);
	DN(b[116], b[118]);
	DN(b[117], b[119]);
	DN(b[120], b[122]);
	DN(b[121], b[123]);
	DN(b[124], b[126]);
	DN(b[125], b[127]);
}

void sort0606(buffer_t b) {
	UP(b[0], b[1]);
	UP(b[2], b[3]);
	UP(b[4], b[5]);
	UP(b[6], b[7]);
	UP(b[8], b[9]);
	UP(b[10], b[11]);
	UP(b[12], b[13]);
	UP(b[14], b[15]);
	UP(b[16], b[17]);
	UP(b[18], b[19]);
	UP(b[20], b[21]);
	UP(b[22], b[23]);
	UP(b[24], b[25]);
	UP(b[26], b[27]);
	UP(b[28], b[29]);
	UP(b[30], b[31]);
	UP(b[32], b[33]);
	UP(b[34], b[35]);
	UP(b[36], b[37]);
	UP(b[38], b[39]);
	UP(b[40], b[41]);
	UP(b[42], b[43]);
	UP(b[44], b[45]);
	UP(b[46], b[47]);
	UP(b[48], b[49]);
	UP(b[50], b[51]);
	UP(b[52], b[53]);
	UP(b[54], b[55]);
	UP(b[56], b[57]);
	UP(b[58], b[59]);
	UP(b[60], b[61]);
	UP(b[62], b[63]);
	DN(b[64], b[65]);
	DN(b[66], b[67]);
	DN(b[68], b[69]);
	DN(b[70], b[71]);
	DN(b[72], b[73]);
	DN(b[74], b[75]);
	DN(b[76], b[77]);
	DN(b[78], b[79]);
	DN(b[80], b[81]);
	DN(b[82], b[83]);
	DN(b[84], b[85]);
	DN(b[86], b[87]);
	DN(b[88], b[89]);
	DN(b[90], b[91]);
	DN(b[92], b[93]);
	DN(b[94], b[95]);
	DN(b[96], b[97]);
	DN(b[98], b[99]);
	DN(b[100], b[101]);
	DN(b[102], b[103]);
	DN(b[104], b[105]);
	DN(b[106], b[107]);
	DN(b[108], b[109]);
	DN(b[110], b[111]);
	DN(b[112], b[113]);
	DN(b[114], b[115]);
	DN(b[116], b[117]);
	DN(b[118], b[119]);
	DN(b[120], b[121]);
	DN(b[122], b[123]);
	DN(b[124], b[125]);
	DN(b[126], b[127]);
}

void sort0701(buffer_t b) {
	UP(b[0], b[64]);
	UP(b[1], b[65]);
	UP(b[2], b[66]);
	UP(b[3], b[67]);
	UP(b[4], b[68]);
	UP(b[5], b[69]);
	UP(b[6], b[70]);
	UP(b[7], b[71]);
	UP(b[8], b[72]);
	UP(b[9], b[73]);
	UP(b[10], b[74]);
	UP(b[11], b[75]);
	UP(b[12], b[76]);
	UP(b[13], b[77]);
	UP(b[14], b[78]);
	UP(b[15], b[79]);
	UP(b[16], b[80]);
	UP(b[17], b[81]);
	UP(b[18], b[82]);
	UP(b[19], b[83]);
	UP(b[20], b[84]);
	UP(b[21], b[85]);
	UP(b[22], b[86]);
	UP(b[23], b[87]);
	UP(b[24], b[88]);
	UP(b[25], b[89]);
	UP(b[26], b[90]);
	UP(b[27], b[91]);
	UP(b[28], b[92]);
	UP(b[29], b[93]);
	UP(b[30], b[94]);
	UP(b[31], b[95]);
	UP(b[32], b[96]);
	UP(b[33], b[97]);
	UP(b[34], b[98]);
	UP(b[35], b[99]);
	UP(b[36], b[100]);
	UP(b[37], b[101]);
	UP(b[38], b[102]);
	UP(b[39], b[103]);
	UP(b[40], b[104]);
	UP(b[41], b[105]);
	UP(b[42], b[106]);
	UP(b[43], b[107]);
	UP(b[44], b[108]);
	UP(b[45], b[109]);
	UP(b[46], b[110]);
	UP(b[47], b[111]);
	UP(b[48], b[112]);
	UP(b[49], b[113]);
	UP(b[50], b[114]);
	UP(b[51], b[115]);
	UP(b[52], b[116]);
	UP(b[53], b[117]);
	UP(b[54], b[118]);
	UP(b[55], b[119]);
	UP(b[56], b[120]);
	UP(b[57], b[121]);
	UP(b[58], b[122]);
	UP(b[59], b[123]);
	UP(b[60], b[124]);
	UP(b[61], b[125]);
	UP(b[62], b[126]);
	UP(b[63], b[127]);
}

void sort0702(buffer_t b) {
	UP(b[0], b[32]);
	UP(b[1], b[33]);
	UP(b[2], b[34]);
	UP(b[3], b[35]);
	UP(b[4], b[36]);
	UP(b[5], b[37]);
	UP(b[6], b[38]);
	UP(b[7], b[39]);
	UP(b[8], b[40]);
	UP(b[9], b[41]);
	UP(b[10], b[42]);
	UP(b[11], b[43]);
	UP(b[12], b[44]);
	UP(b[13], b[45]);
	UP(b[14], b[46]);
	UP(b[15], b[47]);
	UP(b[16], b[48]);
	UP(b[17], b[49]);
	UP(b[18], b[50]);
	UP(b[19], b[51]);
	UP(b[20], b[52]);
	UP(b[21], b[53]);
	UP(b[22], b[54]);
	UP(b[23], b[55]);
	UP(b[24], b[56]);
	UP(b[25], b[57]);
	UP(b[26], b[58]);
	UP(b[27], b[59]);
	UP(b[28], b[60]);
	UP(b[29], b[61]);
	UP(b[30], b[62]);
	UP(b[31], b[63]);
	UP(b[64], b[96]);
	UP(b[65], b[97]);
	UP(b[66], b[98]);
	UP(b[67], b[99]);
	UP(b[68], b[100]);
	UP(b[69], b[101]);
	UP(b[70], b[102]);
	UP(b[71], b[103]);
	UP(b[72], b[104]);
	UP(b[73], b[105]);
	UP(b[74], b[106]);
	UP(b[75], b[107]);
	UP(b[76], b[108]);
	UP(b[77], b[109]);
	UP(b[78], b[110]);
	UP(b[79], b[111]);
	UP(b[80], b[112]);
	UP(b[81], b[113]);
	UP(b[82], b[114]);
	UP(b[83], b[115]);
	UP(b[84], b[116]);
	UP(b[85], b[117]);
	UP(b[86], b[118]);
	UP(b[87], b[119]);
	UP(b[88], b[120]);
	UP(b[89], b[121]);
	UP(b[90], b[122]);
	UP(b[91], b[123]);
	UP(b[92], b[124]);
	UP(b[93], b[125]);
	UP(b[94], b[126]);
	UP(b[95], b[127]);
}

void sort0703(buffer_t b) {
	UP(b[0], b[16]);
	UP(b[1], b[17]);
	UP(b[2], b[18]);
	UP(b[3], b[19]);
	UP(b[4], b[20]);
	UP(b[5], b[21]);
	UP(b[6], b[22]);
	UP(b[7], b[23]);
	UP(b[8], b[24]);
	UP(b[9], b[25]);
	UP(b[10], b[26]);
	UP(b[11], b[27]);
	UP(b[12], b[28]);
	UP(b[13], b[29]);
	UP(b[14], b[30]);
	UP(b[15], b[31]);
	UP(b[32], b[48]);
	UP(b[33], b[49]);
	UP(b[34], b[50]);
	UP(b[35], b[51]);
	UP(b[36], b[52]);
	UP(b[37], b[53]);
	UP(b[38], b[54]);
	UP(b[39], b[55]);
	UP(b[40], b[56]);
	UP(b[41], b[57]);
	UP(b[42], b[58]);
	UP(b[43], b[59]);
	UP(b[44], b[60]);
	UP(b[45], b[61]);
	UP(b[46], b[62]);
	UP(b[47], b[63]);
	UP(b[64], b[80]);
	UP(b[65], b[81]);
	UP(b[66], b[82]);
	UP(b[67], b[83]);
	UP(b[68], b[84]);
	UP(b[69], b[85]);
	UP(b[70], b[86]);
	UP(b[71], b[87]);
	UP(b[72], b[88]);
	UP(b[73], b[89]);
	UP(b[74], b[90]);
	UP(b[75], b[91]);
	UP(b[76], b[92]);
	UP(b[77], b[93]);
	UP(b[78], b[94]);
	UP(b[79], b[95]);
	UP(b[96], b[112]);
	UP(b[97], b[113]);
	UP(b[98], b[114]);
	UP(b[99], b[115]);
	UP(b[100], b[116]);
	UP(b[101], b[117]);
	UP(b[102], b[118]);
	UP(b[103], b[119]);
	UP(b[104], b[120]);
	UP(b[105], b[121]);
	UP(b[106], b[122]);
	UP(b[107], b[123]);
	UP(b[108], b[124]);
	UP(b[109], b[125]);
	UP(b[110], b[126]);
	UP(b[111], b[127]);
}

void sort0704(buffer_t b) {
	UP(b[0], b[8]);
	UP(b[1], b[9]);
	UP(b[2], b[10]);
	UP(b[3], b[11]);
	UP(b[4], b[12]);
	UP(b[5], b[13]);
	UP(b[6], b[14]);
	UP(b[7], b[15]);
	UP(b[16], b[24]);
	UP(b[17], b[25]);
	UP(b[18], b[26]);
	UP(b[19], b[27]);
	UP(b[20], b[28]);
	UP(b[21], b[29]);
	UP(b[22], b[30]);
	UP(b[23], b[31]);
	UP(b[32], b[40]);
	UP(b[33], b[41]);
	UP(b[34], b[42]);
	UP(b[35], b[43]);
	UP(b[36], b[44]);
	UP(b[37], b[45]);
	UP(b[38], b[46]);
	UP(b[39], b[47]);
	UP(b[48], b[56]);
	UP(b[49], b[57]);
	UP(b[50], b[58]);
	UP(b[51], b[59]);
	UP(b[52], b[60]);
	UP(b[53], b[61]);
	UP(b[54], b[62]);
	UP(b[55], b[63]);
	UP(b[64], b[72]);
	UP(b[65], b[73]);
	UP(b[66], b[74]);
	UP(b[67], b[75]);
	UP(b[68], b[76]);
	UP(b[69], b[77]);
	UP(b[70], b[78]);
	UP(b[71], b[79]);
	UP(b[80], b[88]);
	UP(b[81], b[89]);
	UP(b[82], b[90]);
	UP(b[83], b[91]);
	UP(b[84], b[92]);
	UP(b[85], b[93]);
	UP(b[86], b[94]);
	UP(b[87], b[95]);
	UP(b[96], b[104]);
	UP(b[97], b[105]);
	UP(b[98], b[106]);
	UP(b[99], b[107]);
	UP(b[100], b[108]);
	UP(b[101], b[109]);
	UP(b[102], b[110]);
	UP(b[103], b[111]);
	UP(b[112], b[120]);
	UP(b[113], b[121]);
	UP(b[114], b[122]);
	UP(b[115], b[123]);
	UP(b[116], b[124]);
	UP(b[117], b[125]);
	UP(b[118], b[126]);
	UP(b[119], b[127]);
}

void sort0705(buffer_t b) {
	UP(b[0], b[4]);
	UP(b[1], b[5]);
	UP(b[2], b[6]);
	UP(b[3], b[7]);
	UP(b[8], b[12]);
	UP(b[9], b[13]);
	UP(b[10], b[14]);
	UP(b[11], b[15]);
	UP(b[16], b[20]);
	UP(b[17], b[21]);
	UP(b[18], b[22]);
	UP(b[19], b[23]);
	UP(b[24], b[28]);
	UP(b[25], b[29]);
	UP(b[26], b[30]);
	UP(b[27], b[31]);
	UP(b[32], b[36]);
	UP(b[33], b[37]);
	UP(b[34], b[38]);
	UP(b[35], b[39]);
	UP(b[40], b[44]);
	UP(b[41], b[45]);
	UP(b[42], b[46]);
	UP(b[43], b[47]);
	UP(b[48], b[52]);
	UP(b[49], b[53]);
	UP(b[50], b[54]);
	UP(b[51], b[55]);
	UP(b[56], b[60]);
	UP(b[57], b[61]);
	UP(b[58], b[62]);
	UP(b[59], b[63]);
	UP(b[64], b[68]);
	UP(b[65], b[69]);
	UP(b[66], b[70]);
	UP(b[67], b[71]);
	UP(b[72], b[76]);
	UP(b[73], b[77]);
	UP(b[74], b[78]);
	UP(b[75], b[79]);
	UP(b[80], b[84]);
	UP(b[81], b[85]);
	UP(b[82], b[86]);
	UP(b[83], b[87]);
	UP(b[88], b[92]);
	UP(b[89], b[93]);
	UP(b[90], b[94]);
	UP(b[91], b[95]);
	UP(b[96], b[100]);
	UP(b[97], b[101]);
	UP(b[98], b[102]);
	UP(b[99], b[103]);
	UP(b[104], b[108]);
	UP(b[105], b[109]);
	UP(b[106], b[110]);
	UP(b[107], b[111]);
	UP(b[112], b[116]);
	UP(b[113], b[117]);
	UP(b[114], b[118]);
	UP(b[115], b[119]);
	UP(b[120], b[124]);
	UP(b[121], b[125]);
	UP(b[122], b[126]);
	UP(b[123], b[127]);
}

void sort0706(buffer_t b) {
	UP(b[0], b[2]);
	UP(b[1], b[3]);
	UP(b[4], b[6]);
	UP(b[5], b[7]);
	UP(b[8], b[10]);
	UP(b[9], b[11]);
	UP(b[12], b[14]);
	UP(b[13], b[15]);
	UP(b[16], b[18]);
	UP(b[17], b[19]);
	UP(b[20], b[22]);
	UP(b[21], b[23]);
	UP(b[24], b[26]);
	UP(b[25], b[27]);
	UP(b[28], b[30]);
	UP(b[29], b[31]);
	UP(b[32], b[34]);
	UP(b[33], b[35]);
	UP(b[36], b[38]);
	UP(b[37], b[39]);
	UP(b[40], b[42]);
	UP(b[41], b[43]);
	UP(b[44], b[46]);
	UP(b[45], b[47]);
	UP(b[48], b[50]);
	UP(b[49], b[51]);
	UP(b[52], b[54]);
	UP(b[53], b[55]);
	UP(b[56], b[58]);
	UP(b[57], b[59]);
	UP(b[60], b[62]);
	UP(b[61], b[63]);
	UP(b[64], b[66]);
	UP(b[65], b[67]);
	UP(b[68], b[70]);
	UP(b[69], b[71]);
	UP(b[72], b[74]);
	UP(b[73], b[75]);
	UP(b[76], b[78]);
	UP(b[77], b[79]);
	UP(b[80], b[82]);
	UP(b[81], b[83]);
	UP(b[84], b[86]);
	UP(b[85], b[87]);
	UP(b[88], b[90]);
	UP(b[89], b[91]);
	UP(b[92], b[94]);
	UP(b[93], b[95]);
	UP(b[96], b[98]);
	UP(b[97], b[99]);
	UP(b[100], b[102]);
	UP(b[101], b[103]);
	UP(b[104], b[106]);
	UP(b[105], b[107]);
	UP(b[108], b[110]);
	UP(b[109], b[111]);
	UP(b[112], b[114]);
	UP(b[113], b[115]);
	UP(b[116], b[118]);
	UP(b[117], b[119]);
	UP(b[120], b[122]);
	UP(b[121], b[123]);
	UP(b[124], b[126]);
	UP(b[125], b[127]);
}

void sort0707(buffer_t b) {
	UP(b[0], b[1]);
	UP(b[2], b[3]);
	UP(b[4], b[5]);
	UP(b[6], b[7]);
	UP(b[8], b[9]);
	UP(b[10], b[11]);
	UP(b[12], b[13]);
	UP(b[14], b[15]);
	UP(b[16], b[17]);
	UP(b[18], b[19]);
	UP(b[20], b[21]);
	UP(b[22], b[23]);
	UP(b[24], b[25]);
	UP(b[26], b[27]);
	UP(b[28], b[29]);
	UP(b[30], b[31]);
	UP(b[32], b[33]);
	UP(b[34], b[35]);
	UP(b[36], b[37]);
	UP(b[38], b[39]);
	UP(b[40], b[41]);
	UP(b[42], b[43]);
	UP(b[44], b[45]);
	UP(b[46], b[47]);
	UP(b[48], b[49]);
	UP(b[50], b[51]);
	UP(b[52], b[53]);
	UP(b[54], b[55]);
	UP(b[56], b[57]);
	UP(b[58], b[59]);
	UP(b[60], b[61]);
	UP(b[62], b[63]);
	UP(b[64], b[65]);
	UP(b[66], b[67]);
	UP(b[68], b[69]);
	UP(b[70], b[71]);
	UP(b[72], b[73]);
	UP(b[74], b[75]);
	UP(b[76], b[77]);
	UP(b[78], b[79]);
	UP(b[80], b[81]);
	UP(b[82], b[83]);
	UP(b[84], b[85]);
	UP(b[86], b[87]);
	UP(b[88], b[89]);
	UP(b[90], b[91]);
	UP(b[92], b[93]);
	UP(b[94], b[95]);
	UP(b[96], b[97]);
	UP(b[98], b[99]);
	UP(b[100], b[101]);
	UP(b[102], b[103]);
	UP(b[104], b[105]);
	UP(b[106], b[107]);
	UP(b[108], b[109]);
	UP(b[110], b[111]);
	UP(b[112], b[113]);
	UP(b[114], b[115]);
	UP(b[116], b[117]);
	UP(b[118], b[119]);
	UP(b[120], b[121]);
	UP(b[122], b[123]);
	UP(b[124], b[125]);
	UP(b[126], b[127]);
}

// @see https://ja.wikipedia.org/wiki/バイトニックソート
// @thanks https://edom18.hateblo.jp/entry/2020/09/21/150416
// 「バイトニックソートの実装を理解する」
void bitonic_sort(buffer_t buf) {
	sort0101(buf);
	sort0201(buf);
	sort0202(buf);
	sort0301(buf);
	sort0302(buf);
	sort0303(buf);
	sort0401(buf);
	sort0402(buf);
	sort0403(buf);
	sort0404(buf);
	sort0501(buf);
	sort0502(buf);
	sort0503(buf);
	sort0504(buf);
	sort0505(buf);
	sort0601(buf);
	sort0602(buf);
	sort0603(buf);
	sort0604(buf);
	sort0605(buf);
	sort0606(buf);
	sort0701(buf);
	sort0702(buf);
	sort0703(buf);
	sort0704(buf);
	sort0705(buf);
	sort0706(buf);
	sort0707(buf);
}

void kernel(const int in[SIZE], int out[SIZE]) {
#pragma HLS interface axis port=in
#pragma HLS interface axis port=out
#pragma HLS array_partition variable=in
#pragma HLS array_partition variable=out

	buffer_t buf;
#pragma HLS array_partition variable=buf

	for (int i = 0; i < SIZE; i++) {
#pragma HLS unroll
		buf[i] = in[i];
	}

	bitonic_sort(buf);

	for (int i = 0; i < SIZE; i++) {
#pragma HLS unroll
		out[i] = buf[i];
	}
}
