static uint64_t backbone_model0_conv1_weight[16 * 9] =
{ // torch.Size([16, 3, 3, 3])
0xb4b, 0xb31, 0xb4a, 0xc4a, 0xc43, 0xc42, 0xc3a, 0xc53, 0xc42, 
0x344, 0xbbb, 0xcdc, 0x655, 0xb30, 0xcdd, 0x555, 0x545, 0xb30, 
0x3b4, 0x494, 0x414, 0xbd8, 0x4c2, 0x584, 0xcdb, 0xbdb, 0x3b4, 
0xcbb, 0x213, 0x443, 0xddc, 0xbbc, 0x554, 0xcbc, 0x922, 0x444, 
0xb22, 0xdcb, 0xcca, 0xaa3, 0x2b0, 0xab2, 0x3b2, 0x4b3, 0x4a2, 
0x42a, 0x343, 0x441, 0xbb3, 0xcbb, 0x212, 0xbc9, 0xddc, 0xcb0, 
0x254, 0x665, 0x644, 0xa2b, 0x033, 0x443, 0xccc, 0xdec, 0xccb, 
0x2c3, 0x3c3, 0x3b3, 0x3b4, 0x2d2, 0xcd8, 0x4b3, 0x3d3, 0x3d2, 
0x38b, 0x3bb, 0x4bb, 0x4ba, 0x5bb, 0x4bc, 0x4cb, 0x5bb, 0x4bb, 
0x422, 0x434, 0x444, 0x444, 0xab9, 0xddc, 0x434, 0xdbb, 0xeed, 
0xddc, 0xbdc, 0x020, 0xddd, 0xcba, 0x534, 0x324, 0x434, 0x534, 
0x3c3, 0x4c4, 0x3c3, 0x5b5, 0x3d4, 0x2d3, 0x4b4, 0x4c4, 0x3c3, 
0x04b, 0xa5c, 0xb4c, 0xb4c, 0xc5c, 0xc5c, 0xb4b, 0xc5c, 0xc5c, 
0xca4, 0xd34, 0xd33, 0xc35, 0xd44, 0xd34, 0xca3, 0xc45, 0xc25, 
0x434, 0x554, 0x444, 0x223, 0x203, 0x38b, 0xccc, 0xeee, 0xcdc, 
0xccb, 0xddd, 0xccc, 0x432, 0x2b0, 0x1ab, 0x434, 0x555, 0x534, 
};

static int backbone_model0_relu1_threshold[16 * 7] =
{ // torch.Size([16, 7])
-369, -134, 100, 334, 687, 1156, 2095,
414, 914, 1414, 1915, 2665, 3665, 5666,
-166, -2, 162, 326, 573, 902, 1560,
-62, 138, 339, 540, 841, 1243, 2047,
-338, -189, -39, 109, 334, 633, 1231,
-681, -511, -341, -172, 82, 421, 1099,
37, 380, 723, 1066, 1581, 2267, 3640,
-656, -502, -348, -194, 35, 343, 959,
-18, 270, 559, 848, 1281, 1859, 3014,
-1788, -1462, -1135, -809, -319, 333, 1638,
-1188, -929, -671, -412, -24, 492, 1527,
292, 585, 879, 1173, 1613, 2200, 3375,
-117, 32, 182, 332, 557, 857, 1457,
-686, -472, -258, -44, 276, 704, 1560,
-719, -549, -379, -209, 45, 385, 1064,
-90, 43, 177, 311, 513, 781, 1317,
};

static uint64_t backbone_model0_conv2_conv1_weight[16 * 1] =
{ // torch.Size([16, 1, 1, 16])
0x815ca8aec2318a94, 
0x5c3104b19cb4bb42, 
0xc4223a4a243aca42, 
0x04223c5a213bdb51, 
0x22dd39a6a0c983ad, 
0xd523bb3b155b44c1, 
0x9022b5c8c34a54c3, 
0x4c003c333b94cc42, 
0xd4bb0e49434cc0ac, 
0x4dbbb3db3ca52c1b, 
0xc4a9bab9144b55d9, 
0x2334a33353550133, 
0x325b541a52842533, 
0x2346d014e22a0c83, 
0x4cba24d0bcb450c1, 
0xc4ab2d3a242cb2ca, 
};

static int backbone_model0_conv2_quant1_threshold[16 * 14] =
{ // torch.Size([16, 14])
-856, -562, -415, -305, -232, -158, -85, -11, 61, 134, 208, 318, 465, 758,
-695, -451, -329, -237, -176, -115, -54, 6, 67, 128, 189, 281, 403, 647,
-313, -131, -40, 27, 73, 118, 163, 209, 254, 300, 345, 413, 504, 686,
-444, -249, -151, -78, -29, 19, 68, 116, 165, 214, 263, 336, 433, 629,
-891, -592, -443, -331, -257, -182, -108, -33, 41, 115, 190, 302, 451, 749,
-786, -473, -316, -199, -120, -42, 36, 114, 192, 271, 349, 467, 623, 937,
-448, -246, -145, -70, -19, 30, 81, 131, 182, 232, 283, 358, 459, 661,
-470, -294, -206, -140, -96, -52, -8, 35, 80, 124, 168, 234, 322, 498,
-871, -612, -483, -386, -321, -257, -192, -127, -63, 1, 66, 163, 292, 551,
-858, -612, -490, -398, -337, -275, -214, -153, -91, -30, 30, 122, 245, 490,
-563, -280, -138, -32, 38, 108, 179, 250, 321, 392, 462, 569, 710, 993,
-260, 1, 132, 230, 296, 361, 427, 492, 558, 623, 689, 787, 918, 1180,
-312, 35, 209, 340, 427, 514, 601, 688, 775, 862, 949, 1080, 1254, 1603,
-832, -485, -311, -181, -94, -7, 79, 166, 253, 340, 426, 557, 730, 1078,
-658, -439, -330, -248, -194, -139, -85, -30, 23, 78, 133, 214, 324, 542,
-394, -263, -198, -149, -117, -84, -52, -19, 13, 45, 78, 127, 192, 322,
};

static uint64_t backbone_model0_conv2_conv2_weight[16 * 9] =
{ // torch.Size([16, 3, 3, 1])
0xc, 0xb, 0xc, 0x8, 0x4, 0x5, 0xb, 0x5, 0x6, 
0x3, 0x1, 0x0, 0x3, 0x4, 0x4, 0xc, 0xd, 0xc, 
0x0, 0xc, 0xa, 0xb, 0xc, 0x5, 0xc, 0x5, 0x3, 
0x0, 0x3, 0xa, 0x0, 0x4, 0xd, 0x4, 0x3, 0xd, 
0xc, 0xb, 0xc, 0xb, 0x3, 0x3, 0xb, 0x4, 0x6, 
0xa, 0x9, 0x3, 0xa, 0xc, 0xd, 0x9, 0x8, 0xc, 
0x2, 0x0, 0xb, 0x3, 0x3, 0xd, 0x3, 0x4, 0xd, 
0x2, 0xa, 0xa, 0x4, 0x0, 0xc, 0xc, 0x6, 0xc, 
0xb, 0x8, 0x0, 0x1, 0x3, 0x4, 0x0, 0x4, 0x5, 
0xa, 0xa, 0xb, 0x2, 0xa, 0x9, 0x3, 0x5, 0x5, 
0x3, 0x2, 0xc, 0x9, 0x5, 0x3, 0xc, 0xa, 0x5, 
0xb, 0x0, 0x0, 0xb, 0x3, 0x4, 0x8, 0x4, 0x4, 
0xa, 0xa, 0xa, 0x0, 0x3, 0x3, 0x1, 0x4, 0x5, 
0xb, 0xa, 0xa, 0x8, 0x3, 0x4, 0x2, 0x5, 0x5, 
0xb, 0xb, 0x3, 0xc, 0x5, 0x4, 0x3, 0x3, 0xb, 
0xb, 0xb, 0x8, 0x2, 0x5, 0x5, 0x2, 0xc, 0xc, 
};

static int backbone_model0_conv2_relu2_threshold[16 * 7] =
{ // torch.Size([16, 7])
-181, -89, 1, 93, 230, 414, 780,
33, 87, 141, 195, 276, 384, 599,
56, 112, 169, 225, 309, 421, 646,
22, 77, 131, 185, 266, 375, 591,
-106, -41, 24, 89, 187, 318, 581,
-91, -25, 40, 107, 206, 338, 603,
25, 79, 133, 186, 267, 375, 591,
67, 118, 168, 219, 294, 395, 597,
-111, -44, 21, 88, 188, 321, 587,
-82, -15, 51, 117, 217, 351, 617,
-48, 0, 49, 98, 171, 269, 465,
-18, 21, 61, 101, 162, 242, 403,
23, 54, 85, 116, 162, 224, 348,
-85, -23, 39, 102, 196, 321, 572,
-6, 38, 82, 127, 193, 282, 460,
35, 117, 198, 279, 401, 564, 890,
};

static uint64_t backbone_model1_conv1_conv1_weight[16 * 1] =
{ // torch.Size([16, 1, 1, 16])
0x34222d13ecb3b312, 
0x4c013cc5011ba2a1, 
0x123da335020a2240, 
0xb542ac1ca4530140, 
0x46109ca4bbb326b1, 
0xaac44a92a08612ad, 
0xbcacddbb01c21cbc, 
0xda6542bc04003094, 
0xd2112aca93b333e1, 
0x4da124a44bcb29b2, 
0xaba9bbc0a6a0b38a, 
0xaa093d403053c092, 
0x903b4b3ab82d00a5, 
0xcb22b3e412090242, 
0x8b654a8319cc01a4, 
0x8c43b4012c42eb42, 
};

static int backbone_model1_conv1_quant1_threshold[16 * 14] =
{ // torch.Size([16, 14])
-864, -592, -455, -353, -285, -217, -149, -80, -12, 55, 123, 225, 362, 634,
-481, -291, -196, -125, -77, -30, 17, 64, 112, 159, 207, 278, 373, 563,
-425, -217, -113, -34, 17, 69, 121, 173, 225, 277, 329, 408, 512, 720,
-659, -402, -273, -177, -112, -48, 15, 80, 144, 208, 273, 369, 498, 755,
-689, -358, -193, -69, 12, 95, 178, 260, 343, 425, 508, 632, 797, 1128,
-817, -511, -357, -242, -166, -89, -12, 63, 140, 216, 293, 408, 561, 868,
-1047, -802, -679, -587, -526, -464, -403, -342, -280, -219, -157, -65, 56, 302,
-670, -409, -279, -181, -116, -50, 14, 79, 144, 210, 275, 373, 503, 764,
-1054, -741, -584, -467, -389, -311, -232, -154, -76, 1, 79, 197, 353, 666,
-632, -403, -288, -202, -144, -87, -30, 27, 84, 142, 199, 285, 400, 629,
-475, -308, -225, -163, -121, -80, -38, 2, 44, 85, 127, 189, 272, 439,
-436, -252, -160, -91, -45, 0, 46, 92, 138, 184, 230, 300, 392, 576,
-760, -505, -378, -282, -218, -155, -91, -27, 35, 99, 163, 258, 386, 640,
-820, -559, -428, -330, -265, -200, -134, -69, -4, 60, 126, 224, 354, 615,
-791, -495, -347, -236, -162, -88, -14, 59, 134, 208, 282, 393, 541, 837,
-585, -375, -271, -192, -140, -88, -36, 16, 68, 120, 173, 251, 356, 565,
};

static uint64_t backbone_model1_conv1_conv2_weight[16 * 9] =
{ // torch.Size([16, 3, 3, 1])
0x2, 0x8, 0xa, 0x3, 0xc, 0xe, 0x9, 0x2, 0xb, 
0x3, 0x3, 0xa, 0x5, 0x4, 0xc, 0x3, 0xd, 0xb, 
0xb, 0xe, 0xd, 0x9, 0x8, 0x0, 0x3, 0x4, 0x5, 
0x8, 0x2, 0x2, 0x0, 0xb, 0x3, 0x0, 0xe, 0xa, 
0x2, 0x0, 0x1, 0xb, 0x5, 0x5, 0x9, 0x4, 0x4, 
0xc, 0xd, 0x3, 0xb, 0xd, 0x1, 0x4, 0x2, 0x4, 
0x1, 0x3, 0x3, 0x4, 0xb, 0x2, 0x4, 0xe, 0xd, 
0x0, 0xb, 0x3, 0x2, 0xe, 0x0, 0x1, 0xc, 0x2, 
0x1, 0x8, 0xa, 0x3, 0xd, 0xd, 0x3, 0xc, 0xc, 
0x0, 0x2, 0x8, 0x3, 0xc, 0xe, 0x0, 0x8, 0x4, 
0x0, 0xa, 0x1, 0xa, 0x6, 0xb, 0x2, 0x3, 0xb, 
0x9, 0x0, 0xa, 0x9, 0x6, 0xb, 0xb, 0x8, 0x4, 
0xb, 0x3, 0x3, 0x2, 0xd, 0xb, 0x3, 0xc, 0x2, 
0xb, 0x3, 0x0, 0x3, 0xe, 0xc, 0x0, 0x3, 0x3, 
0x8, 0x2, 0xa, 0x3, 0xe, 0x8, 0x0, 0xb, 0x2, 
0x9, 0x2, 0x8, 0x1, 0xe, 0xc, 0x3, 0xd, 0x1, 
};

static int backbone_model1_conv1_relu2_threshold[16 * 7] =
{ // torch.Size([16, 7])
-217, -129, -41, 46, 178, 354, 706,
-126, -63, 0, 62, 156, 282, 534,
-48, 66, 181, 296, 468, 697, 1156,
-171, -103, -36, 30, 130, 265, 533,
-187, -105, -22, 59, 183, 347, 677,
-190, -113, -36, 40, 156, 310, 618,
-173, -99, -25, 49, 160, 309, 606,
-174, -99, -24, 49, 162, 311, 610,
-156, -78, 0, 77, 194, 350, 662,
-113, -52, 8, 69, 161, 283, 527,
-154, -57, 38, 134, 279, 471, 856,
-249, -162, -75, 11, 142, 316, 665,
-137, -75, -13, 48, 140, 264, 512,
-202, -124, -46, 31, 148, 304, 615,
-103, -43, 17, 77, 168, 288, 530,
-265, -154, -42, 69, 236, 460, 906,
};

static uint64_t backbone_model1_conv2_conv1_weight[64 * 1] =
{ // torch.Size([64, 1, 1, 16])
0x3429a215519bab34, 
0xb2d323ca310332db, 
0x432bb34cc0a4a03a, 
0xb8ac1b9d4b39222b, 
0x220cbaaa4db4ab0b, 
0xa492013cc22d12a4, 
0xc2393a35242303a2, 
0x2930bbb52333a003, 
0x320a32ab249a3935, 
0x91162aab24d12c99, 
0xc321421c0cdb9bcc, 
0x34a1ba385ad8420b, 
0xa34a52bbb0828003, 
0xa4494232b422c291, 
0xbbb2cb33a48a51ab, 
0x4b9ca408c3330191, 
0x3cccb1b13ba35b23, 
0xacaac9c133abc438, 
0x21322b4c033204ac, 
0x2bacabc94cbc3b48, 
0x0059392caa9a49c3, 
0x30c1c1bdaba8a0a3, 
0x5012cc3aa00b2820, 
0x34a4a99a4ad11922, 
0xb8110b44ac2b32ac, 
0x84a582824bcb049b, 
0x4333ba4bbb00b93c, 
0xc34abe3232bbab31, 
0x435b419b1ac3d0bc, 
0xccb01ba3b53b441b, 
0xba4b4ca534a1ba3a, 
0xb3c323d242dc3c93, 
0xa304a8334d33b4c3, 
0x60b1c4ac33940809, 
0xb0b833bbb0a223d9, 
0xacb1c8442b84329b, 
0x2033324c2c2cbd43, 
0xa325392981c990a2, 
0x3a3b31a434330132, 
0xba2d0bac1b2c239b, 
0xa8320db32b1201aa, 
0x324d39b3343bc033, 
0xbb1a53c30aabc1c5, 
0x323c2b3c84bb3152, 
0xc1493d333a13c23c, 
0xc3d3cb329bbb2a0b, 
0xb33953b92bbbcaa3, 
0x2594a83a4ac02bb8, 
0xb3c1b23ab32143da, 
0xd23c3b1142cabcbc, 
0x35289a244ac4bb82, 
0xc2234c32ab8a3b03, 
0x4341a31ba882ca24, 
0x0a4b40448230b324, 
0xa8859219bac2cbbb, 
0x481cb21c21c3ab3c, 
0xa0202a833224232e, 
0xac312a42b494b3c8, 
0x33521c3b0931cd4b, 
0x8c23c2d3328b3392, 
0x04da3049b39058ab, 
0xc034baa4393ab3bc, 
0xc3c232bbb98da9b4, 
0x2b9322bc21362aba, 
};

static int backbone_model1_conv2_quant1_threshold[64 * 14] =
{ // torch.Size([64, 14])
-800, -416, -224, -80, 15, 111, 207, 303, 399, 495, 591, 735, 927, 1311,
-721, -496, -384, -299, -243, -187, -131, -75, -18, 37, 93, 177, 290, 514,
-505, -305, -205, -130, -80, -30, 19, 69, 119, 170, 220, 295, 395, 595,
-871, -592, -452, -347, -277, -208, -138, -68, 1, 71, 140, 245, 385, 664,
-766, -534, -418, -332, -274, -216, -158, -100, -42, 15, 72, 159, 275, 506,
-631, -415, -307, -226, -172, -117, -63, -9, 44, 98, 152, 233, 341, 557,
-494, -263, -147, -60, -2, 55, 112, 170, 228, 286, 344, 430, 546, 778,
-527, -299, -185, -99, -42, 14, 71, 128, 185, 242, 299, 385, 499, 727,
-410, -202, -98, -20, 31, 83, 135, 187, 239, 291, 342, 420, 524, 732,
-1147, -740, -536, -383, -282, -180, -78, 23, 125, 227, 329, 481, 685, 1092,
-992, -700, -555, -446, -373, -300, -227, -155, -82, -9, 63, 172, 318, 609,
-712, -429, -287, -181, -111, -40, 30, 101, 171, 242, 313, 419, 560, 843,
-475, -262, -156, -76, -23, 30, 83, 136, 190, 243, 296, 376, 483, 696,
-458, -244, -137, -56, -3, 50, 103, 157, 210, 264, 318, 398, 505, 719,
-642, -405, -286, -197, -137, -78, -19, 40, 99, 159, 218, 307, 426, 663,
-650, -405, -283, -192, -130, -69, -8, 52, 113, 174, 235, 326, 449, 693,
-678, -429, -305, -212, -149, -87, -25, 36, 98, 160, 223, 316, 440, 689,
-904, -649, -521, -426, -362, -298, -234, -171, -107, -43, 20, 115, 243, 498,
-491, -282, -177, -99, -47, 5, 57, 109, 161, 214, 266, 344, 449, 658,
-749, -503, -380, -288, -227, -165, -104, -42, 18, 79, 141, 233, 356, 602,
-518, -306, -200, -120, -67, -14, 38, 91, 144, 197, 250, 329, 435, 647,
-841, -598, -476, -385, -324, -263, -202, -142, -81, -20, 40, 131, 252, 496,
-573, -373, -273, -198, -148, -98, -48, 1, 51, 101, 151, 226, 326, 526,
-915, -614, -463, -351, -275, -200, -125, -49, 25, 100, 175, 288, 439, 740,
-633, -417, -308, -227, -172, -118, -64, -10, 43, 98, 152, 233, 342, 559,
-871, -564, -410, -295, -218, -142, -65, 11, 88, 165, 241, 357, 510, 818,
-532, -313, -204, -122, -67, -13, 41, 96, 150, 205, 260, 342, 451, 670,
-989, -671, -512, -393, -314, -234, -155, -75, 3, 83, 162, 281, 440, 758,
-1026, -677, -503, -372, -284, -197, -110, -23, 63, 151, 238, 369, 543, 892,
-707, -451, -323, -227, -163, -99, -35, 28, 92, 156, 220, 316, 444, 700,
-791, -466, -304, -182, -101, -20, 60, 142, 223, 304, 385, 507, 669, 994,
-1005, -686, -526, -406, -326, -247, -167, -87, -7, 72, 152, 271, 431, 750,
-571, -355, -247, -166, -113, -59, -5, 48, 102, 156, 210, 291, 398, 614,
-897, -538, -358, -223, -133, -44, 45, 135, 225, 315, 405, 539, 719, 1078,
-657, -453, -352, -276, -225, -174, -123, -72, -22, 28, 79, 155, 257, 460,
-537, -348, -253, -182, -134, -87, -40, 7, 54, 101, 149, 220, 315, 504,
-565, -339, -226, -141, -84, -28, 28, 85, 141, 198, 254, 339, 452, 678,
-667, -419, -295, -201, -139, -77, -15, 46, 108, 170, 232, 325, 449, 697,
-368, -161, -57, 20, 72, 123, 175, 227, 279, 331, 383, 461, 564, 772,
-1025, -718, -564, -449, -372, -296, -219, -142, -65, 11, 87, 203, 356, 663,
-634, -426, -322, -244, -192, -140, -88, -36, 15, 68, 120, 198, 302, 510,
-647, -389, -260, -164, -99, -35, 29, 93, 157, 222, 286, 383, 512, 770,
-725, -476, -351, -257, -195, -132, -70, -8, 54, 116, 178, 272, 397, 646,
-529, -295, -178, -91, -32, 25, 84, 142, 201, 259, 318, 405, 522, 756,
-696, -437, -307, -209, -144, -80, -15, 49, 114, 179, 244, 342, 471, 731,
-780, -561, -451, -369, -314, -259, -204, -149, -94, -39, 15, 97, 207, 426,
-659, -412, -289, -196, -135, -73, -11, 49, 111, 173, 234, 327, 450, 696,
-834, -549, -407, -301, -230, -159, -88, -17, 53, 124, 195, 302, 444, 728,
-731, -475, -347, -251, -187, -123, -59, 4, 68, 132, 196, 292, 420, 676,
-1081, -770, -614, -497, -420, -342, -264, -186, -108, -30, 46, 163, 319, 630,
-863, -505, -326, -192, -103, -13, 75, 165, 254, 343, 433, 567, 746, 1104,
-502, -309, -212, -140, -91, -43, 4, 53, 101, 149, 198, 270, 367, 560,
-434, -241, -145, -73, -24, 23, 71, 119, 168, 216, 264, 336, 433, 626,
-362, -156, -52, 24, 76, 128, 179, 231, 283, 335, 386, 464, 567, 774,
-689, -466, -355, -272, -216, -161, -105, -49, 5, 61, 116, 200, 311, 533,
-652, -444, -340, -262, -209, -157, -105, -53, -1, 50, 102, 180, 284, 492,
-709, -453, -325, -229, -165, -101, -37, 26, 90, 154, 218, 314, 442, 698,
-685, -413, -277, -175, -107, -38, 29, 97, 165, 233, 301, 403, 539, 811,
-700, -407, -260, -150, -77, -3, 69, 142, 216, 289, 363, 473, 619, 913,
-770, -508, -377, -279, -213, -148, -82, -17, 48, 113, 178, 277, 408, 670,
-576, -360, -252, -171, -117, -64, -10, 43, 97, 151, 205, 286, 394, 610,
-658, -434, -322, -238, -181, -125, -69, -13, 42, 98, 154, 238, 350, 574,
-746, -524, -413, -330, -275, -219, -164, -108, -53, 2, 57, 140, 251, 473,
-619, -349, -215, -114, -46, 20, 88, 155, 222, 290, 357, 458, 593, 863,
};

static uint64_t backbone_model1_conv2_conv2_weight[64 * 9] =
{ // torch.Size([64, 3, 3, 1])
0xb, 0x3, 0x3, 0xb, 0x4, 0x2, 0x4, 0x6, 0xb, 
0xa, 0xc, 0x4, 0x3, 0x6, 0xb, 0x3, 0xc, 0xb, 
0xa, 0x4, 0xc, 0xa, 0x3, 0xd, 0x3, 0xb, 0xd, 
0xd, 0xd, 0xa, 0xc, 0x4, 0x4, 0xb, 0x4, 0x4, 
0xc, 0x2, 0x4, 0xa, 0xe, 0x3, 0x2, 0x3, 0x2, 
0x2, 0xc, 0xd, 0xb, 0x4, 0x9, 0x5, 0x6, 0x2, 
0xd, 0xd, 0x4, 0xd, 0xc, 0x4, 0x3, 0x3, 0x4, 
0xc, 0xc, 0xd, 0x5, 0x4, 0xd, 0x4, 0x0, 0xc, 
0x5, 0x0, 0xb, 0x4, 0xa, 0xc, 0x4, 0xb, 0xd, 
0x4, 0x4, 0x4, 0x4, 0xb, 0xc, 0xb, 0xd, 0xd, 
0x4, 0x5, 0xc, 0x5, 0x5, 0xc, 0x3, 0x3, 0xc, 
0x4, 0x2, 0x2, 0x3, 0x5, 0xa, 0xb, 0x4, 0x9, 
0x2, 0x4, 0xb, 0xd, 0x3, 0x5, 0x3, 0xc, 0xb, 
0x8, 0x3, 0x3, 0xb, 0xb, 0x4, 0xd, 0xd, 0x5, 
0x3, 0x4, 0x0, 0xc, 0x3, 0x5, 0xa, 0xd, 0x9, 
0x3, 0x5, 0x4, 0xa, 0x3, 0x4, 0xc, 0xd, 0xc, 
0x0, 0x4, 0x4, 0x3, 0x5, 0x2, 0x8, 0xc, 0xb, 
0x1, 0xa, 0x3, 0x3, 0x3, 0xa, 0xd, 0xd, 0xc, 
0xc, 0xc, 0xb, 0xc, 0x3, 0x0, 0x4, 0x5, 0x2, 
0xb, 0x2, 0x4, 0xb, 0x4, 0x6, 0xb, 0x9, 0x3, 
0xb, 0xc, 0xb, 0x4, 0x5, 0x4, 0xb, 0xc, 0xb, 
0x1, 0xb, 0xa, 0xc, 0x3, 0x6, 0xb, 0xb, 0x5, 
0x3, 0x1, 0x0, 0x3, 0x5, 0xc, 0xb, 0x6, 0xd, 
0x3, 0xb, 0xc, 0x5, 0x2, 0xc, 0x4, 0x3, 0xd, 
0x5, 0x4, 0xb, 0xc, 0xa, 0xb, 0x4, 0x4, 0x3, 
0xb, 0x4, 0x4, 0xc, 0x0, 0x5, 0xd, 0xd, 0xb, 
0x3, 0x2, 0x0, 0x6, 0x9, 0xc, 0x4, 0xd, 0x3, 
0x0, 0x4, 0x3, 0x0, 0x6, 0x3, 0x4, 0x3, 0xb, 
0xc, 0x3, 0x3, 0xb, 0xd, 0x3, 0x3, 0xb, 0xc, 
0xc, 0xb, 0xb, 0xb, 0xd, 0xc, 0x3, 0x3, 0x3, 
0xc, 0x0, 0x3, 0xb, 0x2, 0x0, 0xc, 0xd, 0xc, 
0xa, 0x5, 0x2, 0x3, 0x6, 0x1, 0x2, 0xb, 0xb, 
0x4, 0x4, 0xc, 0x5, 0x4, 0xd, 0xc, 0xc, 0xc, 
0x2, 0x3, 0x2, 0x1, 0xa, 0x3, 0x3, 0xd, 0xe, 
0x4, 0x4, 0xa, 0x5, 0x2, 0xd, 0x3, 0xb, 0xa, 
0xb, 0x3, 0x2, 0xd, 0xc, 0x2, 0x4, 0xc, 0xa, 
0x2, 0xb, 0xa, 0xa, 0xc, 0x4, 0x4, 0x6, 0x3, 
0xb, 0xc, 0xc, 0x4, 0x3, 0xd, 0x5, 0x4, 0x0, 
0xd, 0x3, 0x4, 0xd, 0x4, 0x4, 0xd, 0x2, 0x4, 
0xb, 0xd, 0xe, 0x1, 0xc, 0xc, 0x5, 0x5, 0x4, 
0x2, 0xc, 0x3, 0x3, 0xd, 0x4, 0x3, 0xc, 0x3, 
0x3, 0x3, 0x5, 0x4, 0x4, 0x3, 0xd, 0xd, 0xb, 
0xd, 0xb, 0x3, 0x0, 0xe, 0x3, 0x1, 0xb, 0x0, 
0xb, 0x2, 0xb, 0xb, 0xa, 0xc, 0xa, 0xd, 0x3, 
0xb, 0xb, 0xa, 0xb, 0xc, 0xa, 0x5, 0x6, 0x3, 
0xa, 0xb, 0x9, 0xb, 0x9, 0xc, 0xa, 0x6, 0x4, 
0x4, 0xa, 0xc, 0x3, 0x5, 0xc, 0xc, 0x4, 0xc, 
0xc, 0xc, 0x0, 0xd, 0x3, 0x5, 0xd, 0x4, 0x4, 
0x5, 0x5, 0x4, 0x2, 0xc, 0x8, 0xb, 0x1, 0xa, 
0x3, 0x9, 0xb, 0x4, 0xb, 0xc, 0x8, 0xc, 0xd, 
0xb, 0x4, 0xb, 0x9, 0x5, 0x5, 0xb, 0xb, 0x5, 
0x9, 0x0, 0x5, 0xc, 0x1, 0x5, 0xa, 0xc, 0xc, 
0xa, 0xc, 0xc, 0xc, 0xd, 0xb, 0x3, 0x5, 0x4, 
0xb, 0x4, 0x3, 0x3, 0x4, 0x2, 0x4, 0xe, 0xc, 
0xc, 0x2, 0x5, 0xd, 0x2, 0x4, 0xd, 0xa, 0x4, 
0xc, 0xa, 0x4, 0xa, 0x4, 0x3, 0x4, 0x4, 0xd, 
0x9, 0xa, 0xa, 0x3, 0x4, 0x0, 0x5, 0x6, 0xa, 
0xb, 0xb, 0x3, 0x4, 0x6, 0x4, 0x2, 0x1, 0x9, 
0x0, 0x0, 0x2, 0x1, 0x5, 0x1, 0x3, 0x5, 0xc, 
0xd, 0xa, 0xb, 0xc, 0xb, 0xa, 0x3, 0x5, 0x3, 
0xb, 0xc, 0xb, 0x4, 0x5, 0x5, 0xb, 0xc, 0xb, 
0x0, 0xc, 0x2, 0x3, 0xd, 0x3, 0x3, 0xd, 0x0, 
0xb, 0x8, 0x3, 0xc, 0x3, 0x6, 0x2, 0xa, 0x4, 
0xb, 0x4, 0x0, 0x4, 0x5, 0xb, 0x4, 0xb, 0x2, 
};

static int backbone_model1_conv2_relu2_threshold[64 * 7] =
{ // torch.Size([64, 7])
85, 162, 238, 315, 430, 583, 889,
-4, 55, 116, 176, 266, 387, 628,
-100, -8, 82, 174, 311, 495, 861,
-45, 32, 111, 190, 308, 466, 781,
46, 101, 155, 209, 290, 399, 615,
-64, 24, 114, 203, 337, 516, 873,
-51, 15, 81, 147, 246, 378, 642,
-42, 24, 91, 158, 259, 393, 661,
-33, 35, 104, 174, 278, 417, 694,
-193, -70, 53, 176, 361, 607, 1100,
-49, 16, 82, 148, 246, 378, 640,
-1, 53, 108, 164, 246, 357, 578,
38, 86, 134, 181, 253, 348, 539,
-37, 23, 84, 144, 236, 357, 600,
-13, 34, 82, 129, 201, 297, 488,
69, 108, 147, 186, 245, 323, 479,
7, 56, 105, 154, 228, 326, 523,
-2, 43, 89, 135, 204, 295, 479,
-27, 19, 67, 114, 186, 281, 471,
-62, -5, 51, 108, 193, 307, 536,
49, 105, 161, 217, 300, 412, 636,
-34, 42, 119, 196, 311, 465, 772,
80, 147, 213, 279, 379, 511, 776,
37, 75, 112, 150, 206, 282, 432,
13, 57, 101, 145, 211, 300, 476,
4, 49, 94, 138, 205, 294, 473,
15, 71, 126, 182, 266, 377, 600,
-121, -44, 31, 108, 222, 375, 682,
22, 58, 94, 130, 184, 257, 401,
-69, -5, 58, 122, 217, 345, 601,
-8, 45, 99, 153, 234, 342, 558,
-5, 80, 165, 250, 377, 548, 888,
40, 89, 137, 185, 258, 354, 548,
-53, 10, 75, 139, 236, 364, 622,
39, 89, 139, 188, 263, 363, 563,
-20, 30, 82, 133, 210, 313, 520,
-86, -6, 74, 154, 275, 436, 758,
64, 117, 169, 221, 300, 405, 614,
51, 111, 171, 231, 321, 440, 679,
-30, 98, 226, 354, 547, 804, 1317,
50, 89, 128, 168, 227, 306, 463,
58, 106, 155, 203, 276, 373, 567,
-86, -11, 63, 138, 251, 401, 701,
-25, 29, 84, 139, 221, 331, 551,
-1, 54, 109, 164, 247, 357, 578,
-17, 43, 105, 166, 259, 382, 629,
50, 103, 156, 209, 288, 393, 604,
20, 61, 101, 142, 203, 284, 446,
-21, 25, 73, 121, 192, 287, 478,
-16, 44, 104, 164, 254, 375, 616,
102, 160, 218, 276, 362, 478, 708,
20, 72, 124, 175, 253, 356, 563,
18, 84, 150, 216, 315, 447, 712,
-59, 0, 58, 117, 205, 324, 560,
79, 120, 161, 202, 263, 345, 508,
-12, 31, 75, 120, 187, 275, 453,
-91, 1, 94, 187, 327, 513, 885,
79, 150, 221, 292, 399, 542, 826,
-4, 45, 94, 144, 218, 318, 516,
4, 56, 108, 161, 239, 344, 553,
46, 104, 162, 220, 306, 422, 653,
9, 51, 93, 134, 197, 281, 449,
-26, 41, 110, 179, 282, 419, 694,
25, 78, 131, 185, 264, 371, 583,
};

static uint64_t backbone_model2_conv1_conv1_weight[64 * 1*4] =
{ // torch.Size([64, 1, 1, 64])
0x2b3ccb4b34bbd239,0xabc3ac440a353c3a,0x4214dbb4338c4043,0x428cc934403443a3, 
0xac34b44348b2b4ab,0x3c34bb9545a2c15a,0x432cb2c214b32532,0x3b1bbb44b5b30c99, 
0xa3c213040c833ba3,0xcb44ca4cbb3b9c4a,0x09b44d34bcb4a931,0x804a20bd0cb2a3c0, 
0x24493984103d4c22,0x322244bcbb1c3443,0xb44125232c8bc2bb,0xbc848331b39ac30d, 
0x04144d23aa4c1a85,0xb38a5a0a534b13bb,0x43cbc11329334cca,0x318c0450cca944ab, 
0x3b03324528980cb3,0xab03394c42c2b154,0x4cb33b4bcc13b302,0x43230451b030824d, 
0x3420b034b34c3c03,0x2aa543a9bb22a299,0x33b04b533941abb4,0x08cc3b444a3443b3, 
0xabab3bc3ba0b33cb,0x3b3b3b3b54a3b34c,0x0342a9340caba3bc,0x3c44141bb44c2290, 
0xbb2cbb0c43c33c2b,0xd3b9bbb103333ba3,0x1ac498cb32ac4091,0x1533c4313b32bbb2, 
0x23d440b0bc1a42d5,0x233bba3bca94b03b,0xbc0ba43bcbd48c2c,0x32c923cccc3c9411, 
0xb2a1b4bb30b0c23a,0x39b434393b9a1cd9,0x2a3b5a0b1332c43c,0x989c3c9901db4caa, 
0x342bb45242c3a230,0xb1c330328aa43222,0xacc18003bb3b4443,0x34cbbb3c43953a83, 
0xac44c1b039ab03c1,0xc2b4c2b340cc0234,0x5c2aac499a1a92a1,0xab334344ca1c3c53, 
0x333bbba2331c340c,0x0548cb34243b2342,0xb444c3b09c123b28,0x0385b404a4141a9b, 
0x9231b434b82b2a20,0x2cc31d2028d310c2,0x0a4bb2c2bb324414,0xc1ccc42bc3cc33b4, 
0x35aa438333bb2d4c,0x2a31bbb3cc9c2093,0x144b1422341bb3b9,0x1cb8233b4329c0cc, 
0xaabbabc118c334b2,0x3aa2d2a8a233c382,0x48b2b933b3b2a3b8,0x9b3213b0b223bd34, 
0x3340201b32822a23,0x432bc432a285952c,0xcb22ab2b3a985935,0x8233c9b90b1b1411, 
0x3802bb4aa0c29c4b,0xb0c399a333ca32cd,0xdbc31b90c18333a4,0x28aad24302243a13, 
0x4d1acb1831410401,0x1a483c23438b3a43,0xc443ab21b9c494a4,0x132ca32bc4aca2bc, 
0xca43c323a9434a2a,0x14c4484cbb3aac92,0xb42252ab2a530332,0x32b080380bc23bc2, 
0x4033343c32932c91,0x2432b43bbc34490b,0x9cc4233bb2b33834,0x24b4cb130ba4c34b, 
0x2bc99b320a3aca33,0x9a43bd4b34b4bb48,0x4524cb032bb33c32,0x3c4a251b3c133209, 
0x992bcb9242dada42,0xb9c08ab331bcba23,0x4c94db23c3c140c2,0xbc4b34acc433ca88, 
0xb9b09cac9a34bb33,0x232db4c3b34425c8,0xc2a3c3a8a5034ab1,0x3344249c3443cb24, 
0xb3c20a3b24234c3c,0xb343342a33500233,0xa2d2aab24483b0ba,0x4245cc434a14aa9b, 
0xdd2aa3913443bb8c,0x49834b02a3bb3bc4,0x88c89c2433bad44c,0x32cab43335c3babc, 
0xa9c40a42a1dab4bc,0x3bbba0cadabcbbaa,0xbc3a3ba3b3b38b49,0xbcccb2cb44a9c4b5, 
0xac3a305233b3b448,0x2c32b91b440a1032,0xbbc43432c2ba2bb5,0x4a4ba43cc553c420, 
0x43bbba0b3dc0c4c3,0xbcccaacd3ad2bccc,0x49431bccacbbb8cb,0xc8b0accccd0b09a5, 
0xb4228b2cccc03222,0xd432caba9b322ccb,0x4cb34b22b90abb22,0xa3a403ba3a22a8c4, 
0x1a30bbbd03b234cc,0x44bcb9a3b13338bb,0xb24bcb4c32a04c31,0x9032a3cbbc3a14c3, 
0x3ad2c3252c33a2b3,0x3bcabb2db4aac2b3,0x3adbabbbcdb423a4,0xb33c323dc9cba241, 
0x433cb33c142b3c2b,0x11bc8b9b33cba3b0,0x22c0843cb10b83a2,0xb9b1eb4bbbb3baac, 
0x9bba0293ac2cdb43,0xcb324c41145a3033,0x9320bcc44cb93a23,0x4b4bb440c4820218, 
0xb9409ab244acbc3c,0xc4bccb01cc3c1034,0x3bb2b1cc418148c2,0xa48219441ccb4b33, 
0xb33bb0cc03233b2c,0x3c4b04c40913abb2,0x30baa31144ab80ab,0x22b32ba3344303cb, 
0x3cacb03ba1c3b4b0,0x13cc2c20023a3308,0xab2822223b4aa932,0x24bcb3c803bb1200, 
0xcbc2b4c83b3cabc0,0xbc4cc3cbacca249b,0xca0c42cba22bb2b0,0xcaba3ac3b30bc3c9, 
0xabcccc9bb3bc2499,0x33ca44d3b5acd4ca,0x3cba818a435cb2d8,0xbacb3084432249c3, 
0xbdb44dbcca3d323a,0x4cab3bc33bcccbcc,0x3133cb9cc293dbcb,0x0cbc30b80bcb3bc2, 
0x950a0b0b01bc3b53,0xbac1ccc213b3baa9,0xb51314ab2330abcb,0x088bd43a91423bcc, 
0x88b44c8443492942,0x3c4234cb49cbc23b,0xc3c4422433232dc3,0x38514d444aa3a233, 
0xa0b3bc3304a32b39,0xcc2323b34382bc93,0x3cc34c832ab3d9ca,0x534b8c3b3cb322bb, 
0x31408bac34ab2a2b,0x133c0bb5a9204b5c,0x05a4c23b44cb4b43,0x1444c2a1a333b5b4, 
0x90c45b1ab1a4a3a4,0x49bc4a18b309b3cb,0x08cdc4a8b2b49c4b,0xbabb2aacb2cac244, 
0x0cc23244bcca2a0b,0xdb353cbcbbb3bc4b,0xd2428acadc223314,0x49abdcaac3a933a4, 
0x12302c4330b3bb34,0xc2bb2ba3c3bc0345,0x51cac22341334a9b,0xc339455253b23b4c, 
0x4b3cc9ac154bb22b,0x44cc318c44a22302,0x9332334a443c8bbb,0xb44394a2a94a4cac, 
0xc9b4b93bb0a433b4,0xb44a004ba343bb4b,0x22c4bb33a3a54c48,0x24b59ca42c4434a4, 
0xbcb6b1229cb4c4b3,0x0204025314a4b4cc,0xc8cc9cb3b2b64243,0xa133bcba0acbbc41, 
0x12b44a32cac53a44,0xb2a48c3b2b8babdb,0x4a99431491044433,0x2b09133c1cc31c14, 
0x2b4c344a4342b34b,0x2d3a1345b1c39594,0xc43bb4c34510ba49,0xcd3cbb2a3b0bbc3b, 
0xbb41a3cc03bb3cbc,0xb0341c4a32334b44,0xcd00cd3b2cbabb31,0x4ca2a2314a2bbacb, 
0x0aba233b2b111c0b,0xd02abc819b114a1c,0xd2343bc291294403,0xa3c2d234cb3c30bc, 
0x3b0cb30ca48c333c,0x44a5c4ba35418413,0x22a4331c4a4c38c1,0x3413ba8143a33cc3, 
0xac3032a43a03a393,0x11b3233b0c0523b9,0x2ccbc2baab094c32,0x3c3304b02abbbc5c, 
0xcb1204ad5dc3aaab,0xcccbabc0a8bbd325,0x5cbbb4cc41a38b1c,0xaac1401bcbcc1c42, 
0x43890c32ab391bb2,0x03c04c22ba0a0419,0x432adb38ba023b28,0x8bc294ab4b24413b, 
0xcdb43bbbcb4b0bbb,0x3b83cdb1398dac24,0x8a3bac41b8b3c4dd,0x8d2b33b3b9203cda, 
0x4b2d34344c30322a,0x2dc091b9a3c1b4c4,0xa33cb4dbbcbd24a3,0xbb2d3a2bc8ac2b4b, 
0xb9b22bcca3acc332,0x44cb3cba333bb2b4,0x0bbcb31c88a23caa,0xba33b4ddbabbbc43, 
0xb43ac82c2ac124bc,0xc2abcbbc930c2c90,0x2b4b4b323422b23c,0xbbca944b543cbbc4, 
0x344ca45954b33b38,0x15a4c334b123522a,0xc3124332250ca340,0x24b48140b445bb3a, 
};

static int backbone_model2_conv1_quant1_threshold[64 * 14] =
{ // torch.Size([64, 14])
-1164, -751, -544, -389, -286, -182, -79, 24, 127, 230, 334, 489, 695, 1109,
-838, -485, -308, -176, -88, 0, 88, 176, 265, 353, 441, 574, 750, 1104,
-1047, -680, -496, -359, -267, -175, -83, 8, 99, 191, 283, 421, 604, 972,
-814, -459, -281, -147, -59, 29, 118, 207, 296, 385, 474, 607, 785, 1140,
-874, -507, -323, -185, -93, -1, 90, 182, 274, 366, 458, 596, 779, 1147,
-668, -336, -170, -46, 36, 119, 202, 285, 368, 451, 533, 658, 824, 1155,
-587, -285, -135, -22, 53, 128, 203, 278, 354, 429, 504, 617, 768, 1069,
-866, -495, -309, -170, -77, 15, 108, 200, 293, 386, 479, 618, 803, 1175,
-964, -617, -443, -313, -226, -139, -52, 33, 120, 207, 294, 424, 598, 945,
-1104, -708, -510, -362, -263, -164, -65, 33, 132, 231, 330, 478, 676, 1072,
-1005, -673, -508, -383, -300, -217, -135, -52, 30, 113, 196, 320, 486, 818,
-813, -486, -322, -200, -118, -36, 45, 127, 209, 290, 372, 495, 659, 986,
-980, -604, -416, -275, -181, -87, 6, 100, 194, 288, 382, 523, 711, 1087,
-837, -493, -321, -192, -106, -20, 65, 151, 237, 323, 409, 538, 710, 1054,
-978, -645, -479, -355, -272, -189, -105, -22, 60, 143, 226, 350, 517, 849,
-879, -536, -364, -236, -150, -64, 20, 106, 192, 277, 363, 492, 663, 1006,
-945, -648, -500, -388, -314, -240, -166, -92, -17, 56, 130, 241, 390, 686,
-800, -457, -285, -156, -71, 14, 100, 186, 272, 357, 443, 572, 743, 1086,
-1232, -748, -505, -324, -203, -82, 38, 160, 281, 402, 523, 704, 947, 1431,
-772, -471, -320, -207, -132, -56, 18, 93, 168, 244, 319, 432, 583, 884,
-727, -426, -275, -162, -87, -12, 63, 138, 213, 289, 364, 477, 628, 929,
-815, -484, -319, -195, -112, -29, 53, 135, 218, 301, 384, 508, 673, 1004,
-871, -534, -365, -239, -155, -70, 13, 97, 181, 266, 350, 476, 645, 982,
-1530, -1070, -840, -667, -552, -437, -322, -207, -92, 22, 137, 309, 539, 1000,
-1165, -714, -488, -319, -206, -93, 18, 131, 244, 357, 470, 639, 865, 1316,
-894, -518, -330, -189, -95, -1, 92, 186, 280, 374, 468, 609, 797, 1173,
-1039, -670, -485, -347, -254, -162, -70, 21, 114, 206, 298, 436, 621, 990,
-1427, -988, -769, -604, -495, -385, -275, -165, -56, 53, 163, 327, 547, 986,
-734, -408, -246, -124, -42, 38, 119, 201, 282, 363, 445, 567, 729, 1055,
-1368, -1012, -834, -700, -611, -522, -433, -344, -255, -166, -77, 55, 233, 589,
-908, -627, -487, -381, -311, -241, -170, -100, -30, 39, 110, 215, 356, 637,
-1041, -706, -538, -412, -328, -244, -160, -77, 6, 90, 174, 300, 468, 803,
-1128, -737, -541, -394, -297, -199, -101, -3, 94, 192, 289, 436, 632, 1023,
-1155, -783, -597, -457, -364, -271, -178, -85, 7, 100, 193, 333, 519, 891,
-846, -517, -353, -230, -148, -65, 16, 98, 180, 262, 344, 468, 632, 961,
-1071, -705, -522, -384, -292, -201, -109, -17, 73, 165, 257, 394, 577, 944,
-787, -478, -324, -208, -131, -54, 22, 99, 176, 254, 331, 446, 601, 909,
-796, -542, -415, -319, -256, -192, -129, -65, -2, 61, 125, 220, 347, 601,
-1076, -714, -533, -397, -306, -215, -125, -34, 55, 146, 237, 373, 554, 916,
-955, -641, -484, -366, -288, -209, -131, -52, 25, 103, 182, 300, 457, 770,
-1355, -999, -821, -687, -598, -509, -420, -331, -242, -153, -64, 68, 246, 602,
-946, -594, -419, -287, -199, -111, -23, 64, 151, 239, 327, 459, 635, 986,
-1154, -707, -483, -315, -203, -91, 19, 131, 243, 355, 467, 635, 858, 1306,
-1018, -651, -467, -329, -238, -146, -54, 37, 129, 220, 312, 450, 633, 1001,
-800, -456, -284, -155, -69, 16, 102, 188, 274, 360, 446, 575, 747, 1091,
-1107, -766, -596, -468, -383, -298, -213, -128, -43, 41, 126, 254, 424, 765,
-1091, -720, -534, -395, -302, -209, -116, -23, 69, 161, 254, 394, 579, 951,
-835, -459, -272, -131, -37, 55, 149, 243, 337, 431, 524, 665, 853, 1228,
-853, -499, -321, -188, -100, -11, 77, 165, 254, 343, 431, 564, 742, 1096,
-894, -535, -356, -221, -132, -42, 47, 136, 226, 316, 405, 540, 719, 1078,
-1053, -679, -491, -351, -257, -163, -70, 23, 117, 210, 304, 445, 632, 1007,
-1075, -712, -531, -395, -304, -214, -123, -32, 57, 148, 238, 374, 556, 918,
-1005, -629, -441, -300, -206, -113, -19, 74, 168, 262, 356, 497, 685, 1060,
-949, -655, -508, -398, -324, -251, -177, -104, -30, 42, 116, 226, 373, 667,
-866, -556, -400, -284, -206, -129, -51, 26, 103, 181, 259, 375, 530, 841,
-739, -452, -308, -200, -128, -56, 15, 87, 159, 231, 303, 411, 555, 842,
-811, -513, -364, -252, -177, -103, -28, 46, 120, 195, 269, 381, 530, 829,
-1205, -884, -723, -603, -522, -442, -362, -281, -201, -121, -41, 79, 239, 561,
-782, -490, -344, -234, -161, -88, -15, 57, 130, 203, 276, 385, 532, 824,
-1257, -891, -708, -571, -480, -388, -297, -205, -114, -22, 68, 206, 389, 755,
-1025, -689, -521, -396, -312, -228, -144, -60, 23, 107, 191, 316, 484, 820,
-1271, -910, -730, -595, -504, -414, -324, -234, -144, -54, 36, 171, 351, 712,
-1162, -762, -562, -412, -312, -212, -112, -12, 87, 187, 287, 437, 637, 1036,
-621, -287, -120, 5, 88, 172, 255, 339, 423, 506, 590, 715, 882, 1217,
};

static uint64_t backbone_model2_conv1_conv2_weight[64 * 9] =
{ // torch.Size([64, 3, 3, 1])
0xb, 0xe, 0xb, 0xb, 0x2, 0x4, 0xc, 0x3, 0xa, 
0x3, 0x3, 0xb, 0x2, 0xa, 0xd, 0xa, 0xc, 0xc, 
0x5, 0x4, 0x9, 0x5, 0x5, 0xb, 0x1, 0xb, 0xc, 
0x5, 0x4, 0x5, 0xa, 0xc, 0xb, 0xc, 0xb, 0xc, 
0x3, 0x9, 0xc, 0x2, 0xd, 0x9, 0xc, 0xc, 0x4, 
0x2, 0x4, 0x2, 0xb, 0xc, 0xc, 0xc, 0xc, 0xc, 
0x3, 0x0, 0xc, 0x3, 0x4, 0xd, 0x2, 0x3, 0xc, 
0x0, 0x3, 0x4, 0x0, 0x4, 0x4, 0x2, 0xa, 0x4, 
0x3, 0x3, 0x3, 0x8, 0xb, 0x5, 0x8, 0xd, 0x5, 
0x3, 0x5, 0x4, 0xc, 0x5, 0xb, 0x0, 0x4, 0xc, 
0x2, 0x0, 0xb, 0x4, 0x1, 0xb, 0x5, 0xb, 0xc, 
0xc, 0x4, 0xb, 0xd, 0xc, 0x2, 0x0, 0xb, 0x2, 
0x3, 0xb, 0x9, 0x1, 0x5, 0x5, 0x3, 0x2, 0xa, 
0x9, 0xb, 0xb, 0xb, 0xd, 0x8, 0x1, 0xc, 0x4, 
0xb, 0xd, 0x2, 0x3, 0xb, 0xc, 0x4, 0x4, 0xc, 
0x4, 0x5, 0x3, 0x2, 0x4, 0x3, 0xc, 0xc, 0xb, 
0xc, 0x4, 0x9, 0x4, 0x4, 0xd, 0x3, 0xd, 0xb, 
0xa, 0xd, 0x3, 0xc, 0xb, 0x4, 0xc, 0x4, 0x3, 
0x2, 0x4, 0x4, 0x4, 0x2, 0x3, 0x4, 0xc, 0xd, 
0x3, 0x3, 0x8, 0x1, 0xc, 0xd, 0x2, 0x4, 0x9, 
0x4, 0x2, 0xc, 0x1, 0xb, 0x3, 0xd, 0xb, 0x4, 
0x0, 0xd, 0xc, 0x3, 0xa, 0xc, 0x4, 0x4, 0x4, 
0xd, 0xc, 0xb, 0x3, 0x4, 0x4, 0x0, 0x4, 0x9, 
0xc, 0xc, 0xb, 0x9, 0xc, 0x4, 0xb, 0x3, 0x4, 
0xa, 0xc, 0xd, 0xb, 0xc, 0xb, 0x1, 0x0, 0x2, 
0x3, 0xb, 0xc, 0x3, 0x5, 0x0, 0x2, 0x4, 0x4, 
0x4, 0x3, 0x4, 0x4, 0x3, 0x8, 0x3, 0xd, 0xb, 
0xc, 0xa, 0xb, 0xb, 0xc, 0xc, 0x9, 0xb, 0x8, 
0x3, 0x9, 0xc, 0x3, 0xb, 0xd, 0x4, 0xb, 0xc, 
0xa, 0xa, 0xb, 0xb, 0xb, 0xc, 0xa, 0xc, 0xc, 
0x5, 0x4, 0xb, 0x3, 0xb, 0xc, 0x1, 0xd, 0xc, 
0xb, 0x4, 0x4, 0xa, 0xb, 0x5, 0xc, 0xd, 0x3, 
0x4, 0x5, 0x5, 0x9, 0x3, 0x4, 0xc, 0xc, 0xb, 
0x2, 0x8, 0xc, 0x4, 0x0, 0xb, 0x5, 0x4, 0x4, 
0xb, 0xb, 0x0, 0xc, 0xc, 0xc, 0x2, 0x3, 0xc, 
0xb, 0xb, 0x5, 0xb, 0xb, 0x4, 0x3, 0x3, 0x3, 
0xc, 0x4, 0x8, 0xd, 0x9, 0x5, 0xa, 0xc, 0x0, 
0x3, 0x4, 0xc, 0xc, 0x4, 0x4, 0x2, 0xd, 0x1, 
0x5, 0x3, 0xb, 0x5, 0xb, 0xb, 0x4, 0x9, 0xb, 
0xa, 0x1, 0xb, 0xa, 0x9, 0x1, 0x3, 0x5, 0x5, 
0x0, 0x1, 0x3, 0x2, 0x4, 0x6, 0x9, 0x1, 0x2, 
0xb, 0xc, 0xb, 0x1, 0x2, 0x1, 0x4, 0x5, 0x5, 
0x8, 0x8, 0x2, 0x0, 0x0, 0xa, 0xb, 0xc, 0xe, 
0x4, 0x4, 0x3, 0x4, 0xa, 0x4, 0xb, 0xb, 0x2, 
0x1, 0x8, 0x9, 0x2, 0xa, 0xc, 0x4, 0x3, 0xe, 
0x9, 0x9, 0xa, 0xa, 0x3, 0x5, 0x9, 0x4, 0x3, 
0x1, 0x9, 0x2, 0xa, 0x5, 0x5, 0xb, 0x3, 0x3, 
0xb, 0x3, 0xb, 0xb, 0xb, 0xd, 0x0, 0xc, 0xc, 
0xb, 0x2, 0x1, 0xc, 0x9, 0x1, 0xd, 0xc, 0x3, 
0x4, 0x8, 0xc, 0x3, 0xc, 0xd, 0x3, 0xb, 0xb, 
0xc, 0xb, 0xb, 0xc, 0xc, 0xb, 0x9, 0xc, 0x0, 
0xc, 0x1, 0x4, 0xd, 0x3, 0x4, 0xc, 0x0, 0x3, 
0x9, 0x3, 0x8, 0x0, 0xa, 0xd, 0xb, 0xc, 0xc, 
0x4, 0x4, 0x4, 0x9, 0x3, 0x4, 0xc, 0xc, 0xb, 
0x4, 0x3, 0x4, 0xb, 0x0, 0x4, 0xc, 0xd, 0x3, 
0x3, 0xa, 0xc, 0x3, 0x0, 0xd, 0x3, 0xb, 0xc, 
0x1, 0x9, 0xb, 0xb, 0xc, 0x4, 0xb, 0x4, 0x5, 
0x3, 0x4, 0x2, 0x2, 0x8, 0xa, 0x0, 0xa, 0x6, 
0x4, 0x0, 0xc, 0x4, 0x0, 0xc, 0x4, 0x3, 0xc, 
0xa, 0x2, 0xb, 0x0, 0xc, 0xb, 0x4, 0x5, 0x5, 
0x2, 0x1, 0xb, 0x4, 0x4, 0xb, 0x4, 0x5, 0x2, 
0x3, 0x2, 0xa, 0xa, 0x5, 0xb, 0xb, 0x5, 0x0, 
0x2, 0xb, 0xc, 0xc, 0xd, 0xb, 0xb, 0x1, 0x2, 
0x0, 0x0, 0xa, 0x2, 0xa, 0x9, 0x4, 0xe, 0xc, 
};

static int backbone_model2_conv1_relu2_threshold[64 * 7] =
{ // torch.Size([64, 7])
-19, 37, 93, 149, 233, 346, 571,
2, 44, 86, 128, 191, 276, 444,
-55, 22, 100, 177, 294, 450, 761,
115, 165, 216, 267, 342, 444, 646,
0, 47, 94, 141, 211, 306, 494,
-10, 54, 119, 183, 280, 410, 669,
54, 90, 126, 161, 215, 286, 428,
28, 64, 100, 136, 189, 261, 404,
-4, 41, 86, 132, 200, 292, 474,
-117, -51, 15, 81, 180, 313, 578,
45, 81, 117, 153, 207, 279, 423,
-18, 25, 68, 112, 177, 263, 437,
32, 86, 140, 194, 274, 382, 597,
35, 68, 100, 133, 182, 247, 378,
34, 79, 123, 167, 233, 322, 498,
73, 119, 166, 212, 281, 374, 559,
54, 98, 143, 187, 254, 342, 520,
61, 98, 135, 173, 228, 303, 452,
-32, -6, 20, 46, 86, 139, 245,
52, 87, 123, 158, 212, 283, 425,
38, 74, 110, 146, 201, 273, 418,
-6, 36, 80, 123, 188, 275, 449,
52, 87, 122, 158, 210, 281, 422,
-27, 14, 55, 97, 159, 243, 410,
47, 97, 147, 198, 274, 374, 576,
41, 87, 134, 181, 251, 345, 532,
76, 119, 162, 205, 270, 356, 529,
74, 118, 161, 204, 269, 356, 530,
27, 91, 154, 218, 313, 440, 694,
61, 104, 146, 188, 252, 336, 506,
-1, 53, 107, 161, 242, 350, 566,
31, 70, 110, 149, 209, 287, 445,
-52, 7, 67, 126, 216, 335, 573,
-84, -14, 55, 125, 231, 371, 651,
-20, 30, 80, 131, 206, 307, 509,
31, 68, 105, 142, 197, 271, 419,
36, 75, 114, 153, 212, 290, 445,
41, 85, 128, 171, 236, 323, 496,
-41, 7, 55, 103, 176, 272, 465,
-4, 50, 104, 159, 241, 350, 568,
-4, 65, 134, 203, 307, 446, 724,
11, 64, 118, 172, 252, 360, 575,
-76, -7, 61, 130, 233, 370, 645,
43, 79, 116, 152, 207, 279, 425,
-1, 58, 117, 177, 266, 385, 624,
11, 47, 84, 120, 175, 248, 393,
-58, 7, 73, 139, 238, 370, 635,
-41, 22, 87, 151, 248, 377, 634,
4, 51, 98, 145, 216, 311, 500,
-22, 19, 60, 102, 165, 248, 415,
-10, 49, 109, 169, 259, 379, 619,
7, 51, 95, 138, 204, 291, 466,
3, 52, 101, 150, 224, 323, 519,
31, 71, 110, 149, 208, 287, 444,
-15, 37, 90, 143, 222, 328, 540,
-2, 44, 91, 138, 209, 303, 491,
45, 81, 117, 153, 207, 279, 424,
-13, 58, 129, 200, 308, 450, 736,
44, 87, 130, 173, 237, 323, 495,
-19, 35, 89, 143, 225, 334, 551,
-36, 36, 109, 182, 292, 438, 730,
22, 67, 111, 156, 222, 311, 488,
69, 116, 163, 209, 279, 373, 559,
-2, 57, 117, 177, 267, 386, 626,
};

static uint64_t backbone_model2_conv2_conv1_weight[64 * 1*4] =
{ // torch.Size([64, 1, 1, 64])
0x43a43a0bb432a445,0x55c04ba03bc1bbcc,0xa34243331bc3b4cc,0x2bcd3bca4a40c24c, 
0x34cb4bab5d23b39b,0x51448c434331b234,0xcb403a4413314333,0x232ca13cac331b15, 
0xd488cb24a9b413b2,0x45ba45324c45c012,0xab8b4334c034c844,0x342443b14b23b43c, 
0x43c24aa2bb440bc3,0x3433421bd3ba1c03,0x3c2babb32cb9422a,0x4c30ac3403384533, 
0x32b2b2a33c3c8452,0xb1b9ba4ccb3a4c9b,0xb44c5c314b2bcb3a,0xb41121c242b3c341, 
0xa4934a3383b22a1a,0x533948ccb32cdab4,0x3ccccc9cbcb83444,0x11adcbc4bc533302, 
0xccba4b31bc0b51cc,0x043291abb543bba5,0xdc2d9b1a45cba31b,0xbbbb4a5c49bd4cb1, 
0x395acc3cc2b038bc,0xb2330bb54925ab2b,0xbca8b2bcd8a522ca,0x4cda5c3bdbbcc30c, 
0xb34b2404c52034b3,0xd1bcc59cad23acb0,0x33dbc3d829c3cbca,0x0dcb4b44b23c324c, 
0xdbbdb0922b03b3bc,0x2db4c531bc8a444a,0xacc1cab82134cbc3,0xc8b3ba3b01c2bcb2, 
0x45b4a4ca49a41b9b,0xc5d29122d8cbb323,0x9bba35a44833b2b0,0x3b33c04a9a1b3d3c, 
0xdccd540bdabc3d4c,0x3cc5c33db04a4133,0xacc3ccbcca22bb34,0xca03339029c4a2d4, 
0xbac059135b2cba98,0x0c3b340dd8ac31a3,0x000b20c2598c9bc9,0x235ac4a2334b5a04, 
0x341d303492d11c5a,0xb431b3b22c1389b3,0xb332c4c4b443aab2,0x3d041b9dc90443b3, 
0x892ba940d1a2c9b3,0xb1dc10b54b229d0b,0x93b4c0cbc4b4c0c8,0xbaca5a32a3aab52a, 
0xca4533aca34ad334,0x093c244b53c4c511,0x444a543145d22232,0x3b32b040c2542201, 
0x5cbba84a4bbbbc3c,0x39352dc443bc43c4,0xcc32bdcc3c4bc3ab,0xbb341a3a4131ac1a, 
0xbc2c43da3bab4cbd,0x0a3ab8ccd32b333b,0x4bb58ccb4bcc41c3,0xcbbcc941223c3dc3, 
0x4449bbca2832b220,0x3a4bca42bcabc843,0x9524261343b2b405,0xc32cc33cbbb3cc49, 
0x494a0142c4ba2acc,0xbcbc13bcb48b4038,0x2ba4b0b0abbb34a9,0x0a3a495520392b48, 
0xc23aa440c48cbcba,0xbacd042c21314ddb,0x23b43cb99b2c4b43,0x0b3455aabbca0bb0, 
0xbc2c3b21b02645bb,0xa9c304cabb51a34b,0xca9cac3aac4320cc,0x45cc3a4492bc3bc2, 
0x3d3d4aac343433b2,0xc3b043030122b00c,0x3b43bc39332c4bdd,0x341c3a344b3d2b3b, 
0x034ba32b5cb34a0d,0x932bd420bcb4043d,0x32abb9a14a19c332,0xa4624ac0c3b45533, 
0xd23a83d2ad3cdcc0,0x4c2bc3c4c2a0834b,0x5cbbb4b1c2a1bb41,0xbba0bccdaacab2b1, 
0x4a329c9c4cb30314,0xdc0bcd4342ab3b50,0x334ca24ca2398b11,0x2b340abb3bdc2333, 
0xda1341cd90043bc1,0x43c9321d23a1a3a4,0x3c3b2042a3a43bba,0x3baba3433b402914, 
0xb4034ac11244b3b4,0x3438444ccb33b533,0x332b4155bc3a4a02,0x43b2d4a40d535c21, 
0xba3cc4b02433c0b5,0xacccbbc351a0b4cc,0x4c839abb8b0bbcc0,0x23bab3c1b80aac2b, 
0xc3aa0bd04c443493,0x4523822a3351d318,0x3b4a405293000c83,0x44cbc3ccb2b90b2b, 
0xacbdb8cca14dabca,0xcccb4c020b3bc2ad,0x33a3084b14399cca,0x95cb3abcb8b2a349, 
0xba4d04cc33434cdc,0xcabc34c4324cc932,0xcc3b3b4ccab93ccc,0xb23b44bb344c12bb, 
0x44b3bbb3341b433b,0x8803ba2034cc3c32,0x39a32db34cacc410,0x2a8a5b423cb40453, 
0x5ba1aa49484404aa,0xc4839399b3ab4a31,0xbc4432b2333123cc,0x0b04834430ab3b34, 
0xbc8bacb0bd9b2cbc,0xaba513acd31b3323,0x43b4c8cc33184ba2,0xa13cc631352a32c3, 
0x43cb04b2a32c9409,0x4b9339a384a33bbb,0x4820c3acc233b2cb,0x6bac91a3c9b22b1c, 
0xb233b248b25c4cdc,0x904c8c3b392b2954,0xb421444b23204443,0x34299024b9404242, 
0x24cc22bba214bc00,0x83b350938bcbb8b4,0xcb2cb802b34cc4dd,0x3249abb0cb3a333c, 
0xb432359539cb4a5b,0xc053bbbbb2c34cca,0x3042259244c53445,0x0b34c59cc2c34ccb, 
0xd311c9d4ab3baa24,0x4bcc9484cb33023a,0x50bc1422ba43cd24,0x1204caccc8c394bb, 
0xda343bacbc23c29b,0x3409242a3ab3b333,0x2031130a3bb13020,0x0babc34ab14a20c3, 
0xbbabc2e2193bbba4,0x8b0bc24a9b29442b,0xbaacaa22b490bdb2,0xcb14babdc8dcbbc3, 
0x44c43e3c0352ccd3,0x401bc4341dcccc2b,0xcbbc43d449bcc0bc,0xb9443c3b2cc38bb3, 
0x2d4bd4392dca444c,0x2cb3c0a323ca543d,0x39b5b9c09a30c93b,0xd30a3423232bddbc, 
0x30d5b2c39c40355b,0xb3b2344ccbb20b44,0x243d4224414bca2c,0xb130a0c15323b40c, 
0x25c34444ca252bcc,0x318055cccbbb9cc5,0xcbcac3cdc840833a,0x8b12ab43ba303aa0, 
0xabb3b4cc1cda232b,0x4ccaccc1b40bb223,0xcdbcaccca90ad321,0xc32c33db3425ad21, 
0x29bc92bb345bb33b,0x099b45d3b1cabcca,0x324ac42b433cc51d,0x3c3c35b2484532ac, 
0xc4a5acad934305b5,0xbb5d1a3122213cc1,0x343d443ca5ba2243,0x443309c332453343, 
0xcb9c4b9bb2a20c45,0x41d44c232c4433cc,0x5a34ac3b145d42cb,0x34a83b23334b44ba, 
0x0393498950cb344c,0x4348c19429b14ca4,0xb34b3214a39bb343,0x2a23a4dc9a9cadd2, 
0x22a4cb8b439bc8c0,0xbd9a4915420c24bd,0xb94231b03b43bbca,0x424a3021aaa94448, 
0xc2bc42cb408b3c0b,0xab43940cc32c224b,0xbba9b2cbc4ba3c02,0xc930dcabcc9049d2, 
0x84cc5c0510333c33,0x3335325bcccb3cc4,0xa1a04ab32aad34cb,0x32053d3b1dab32c2, 
0x4c3c444c3bcc5ccc,0x9b2bbcbd04cc3c8b,0xbcb0cacd44dc10ba,0xcb9dbc33c93babb4, 
0xc4a3c8a5d434c344,0x31b23434ac44c4b4,0x033b3334bd54a335,0x431524b334b4232d, 
0xa09c442b3caa4434,0xb3454c534bea2321,0x435c29412b5c129c,0x4c229aac13ac34aa, 
0xb5a3bb24025bab2b,0x55aa44331ccaa854,0x82544344dc0bc340,0xca2ab2c39243c32c, 
0x1bc2a42d3b014042,0xd4c4144c44dbb433,0xbb3cba312b4b9aac,0xcc1cac35242aa32c, 
0x84c3b0b32acacc43,0x40ca2c389903953d,0x031341b443cc3532,0x334babc2cc44003a, 
0xc03cc24a34414bc3,0xb3333444a3ca235a,0xbb43a041db49328c,0x414b94b4dd34301a, 
0x34dbbc3439343381,0x25043cb24b4aa348,0xdb431b45a24aa838,0x32c42c9bcdc1ab49, 
0x48cb4bb4bb93dac2,0xc2c241cccb553dcc,0x1a1a142bb2294c33,0xb425b8a048cc232b, 
0xccaa2abbc0bb13b2,0x3ba433bcc3020333,0x8bc3aa9dc3b34b0b,0xa1dcca4b4c4b2cd2, 
};

static int backbone_model2_conv2_quant1_threshold[64 * 14] =
{ // torch.Size([64, 14])
-1087, -662, -450, -291, -185, -79, 26, 132, 238, 344, 450, 610, 822, 1246,
-1000, -590, -386, -232, -130, -27, 74, 176, 279, 381, 483, 637, 842, 1251,
-871, -509, -328, -192, -101, -11, 79, 169, 260, 350, 441, 577, 758, 1120,
-1053, -634, -425, -268, -163, -58, 45, 150, 255, 359, 464, 621, 831, 1249,
-938, -586, -410, -278, -190, -101, -13, 74, 162, 250, 338, 470, 646, 999,
-949, -568, -378, -235, -140, -45, 50, 145, 240, 335, 430, 573, 764, 1144,
-1307, -824, -582, -400, -279, -159, -38, 82, 203, 324, 445, 626, 868, 1352,
-1011, -658, -481, -349, -260, -172, -84, 4, 92, 180, 269, 401, 578, 931,
-1374, -824, -549, -343, -205, -68, 69, 207, 344, 482, 619, 826, 1101, 1651,
-1279, -876, -675, -524, -423, -322, -222, -121, -20, 79, 180, 331, 532, 935,
-1041, -671, -486, -347, -254, -162, -69, 22, 115, 207, 300, 439, 624, 994,
-1324, -887, -669, -505, -396, -287, -178, -68, 40, 149, 258, 422, 640, 1077,
-1027, -671, -493, -360, -271, -182, -93, -4, 84, 173, 261, 395, 573, 928,
-1186, -772, -565, -410, -307, -203, -100, 2, 106, 209, 313, 468, 674, 1088,
-1153, -744, -540, -386, -284, -182, -80, 21, 124, 226, 328, 481, 686, 1094,
-1163, -697, -464, -290, -173, -57, 59, 175, 292, 408, 525, 699, 932, 1398,
-1105, -716, -521, -375, -277, -180, -82, 14, 111, 209, 306, 452, 647, 1037,
-1157, -785, -599, -460, -367, -274, -181, -88, 4, 97, 190, 330, 516, 888,
-1109, -669, -449, -284, -174, -64, 45, 155, 265, 375, 485, 650, 869, 1309,
-1072, -676, -479, -331, -232, -133, -34, 63, 162, 261, 360, 508, 705, 1101,
-1236, -820, -612, -456, -352, -248, -144, -40, 63, 167, 271, 427, 635, 1051,
-1314, -796, -538, -344, -215, -85, 43, 172, 302, 431, 560, 754, 1013, 1530,
-453, -280, -193, -128, -84, -41, 2, 45, 89, 132, 176, 241, 328, 501,
-715, -424, -278, -169, -96, -23, 48, 121, 194, 267, 339, 448, 594, 885,
-1201, -854, -681, -551, -465, -378, -291, -205, -118, -32, 54, 184, 357, 703,
-1329, -879, -654, -486, -373, -261, -149, -36, 75, 188, 300, 469, 693, 1143,
-983, -634, -460, -329, -242, -155, -68, 18, 106, 193, 280, 411, 585, 934,
-850, -499, -323, -191, -104, -16, 71, 159, 246, 334, 422, 554, 729, 1080,
-1287, -869, -660, -504, -399, -295, -190, -86, 17, 122, 226, 383, 591, 1009,
-980, -601, -411, -269, -174, -80, 14, 109, 204, 299, 393, 536, 725, 1104,
-1175, -820, -642, -509, -420, -331, -243, -154, -65, 23, 112, 245, 423, 778,
-1612, -1104, -850, -659, -532, -405, -278, -151, -25, 101, 228, 419, 673, 1181,
-925, -502, -291, -132, -27, 78, 184, 289, 395, 500, 606, 764, 976, 1398,
-664, -359, -206, -92, -15, 60, 136, 213, 289, 365, 442, 556, 709, 1014,
-1160, -736, -524, -365, -259, -154, -48, 57, 163, 269, 375, 534, 746, 1169,
-946, -604, -432, -304, -218, -133, -47, 38, 123, 209, 294, 423, 594, 937,
-1141, -665, -427, -249, -130, -11, 107, 226, 345, 464, 582, 761, 999, 1474,
-1241, -808, -591, -428, -320, -211, -103, 5, 113, 222, 330, 493, 710, 1143,
-1139, -724, -516, -360, -256, -153, -49, 54, 158, 262, 366, 521, 729, 1144,
-1346, -844, -594, -405, -280, -155, -29, 95, 221, 346, 472, 660, 911, 1412,
-967, -620, -446, -315, -228, -141, -55, 31, 118, 205, 292, 423, 596, 944,
-1391, -982, -778, -624, -522, -420, -317, -215, -113, -11, 91, 244, 448, 857,
-1264, -840, -628, -469, -363, -257, -151, -45, 60, 166, 272, 431, 643, 1067,
-1289, -848, -627, -462, -352, -241, -131, -21, 89, 199, 309, 475, 695, 1136,
-1038, -627, -421, -267, -164, -61, 41, 144, 247, 350, 453, 607, 813, 1224,
-1245, -779, -547, -372, -255, -139, -23, 93, 209, 326, 442, 617, 850, 1315,
-1333, -902, -687, -526, -418, -310, -203, -95, 12, 119, 227, 388, 604, 1034,
-1080, -672, -468, -315, -214, -112, -10, 91, 193, 295, 397, 550, 754, 1162,
-1059, -651, -447, -293, -191, -89, 12, 114, 216, 318, 420, 573, 777, 1185,
-942, -580, -399, -263, -173, -82, 7, 98, 188, 279, 369, 505, 686, 1049,
-1197, -777, -568, -410, -305, -201, -96, 8, 113, 218, 323, 480, 690, 1109,
-932, -587, -414, -284, -198, -111, -25, 61, 147, 234, 320, 450, 623, 968,
-1166, -799, -616, -478, -386, -294, -203, -111, -19, 72, 163, 301, 485, 852,
-1163, -714, -490, -321, -209, -97, 14, 126, 238, 351, 463, 631, 855, 1304,
-1244, -840, -637, -486, -385, -284, -183, -81, 19, 120, 221, 373, 575, 979,
-1116, -680, -462, -298, -189, -80, 28, 137, 246, 356, 465, 628, 846, 1283,
-998, -598, -399, -249, -149, -49, 50, 150, 250, 350, 450, 600, 800, 1200,
-1111, -680, -465, -303, -195, -87, 20, 127, 235, 343, 451, 612, 828, 1259,
-1015, -610, -407, -255, -154, -52, 48, 149, 251, 352, 453, 605, 808, 1213,
-966, -597, -413, -275, -183, -91, 0, 92, 184, 276, 368, 506, 691, 1059,
-1036, -650, -457, -312, -216, -119, -23, 73, 170, 266, 363, 507, 701, 1087,
-1152, -730, -519, -361, -256, -150, -45, 60, 165, 271, 376, 535, 746, 1168,
-1426, -970, -742, -570, -456, -342, -228, -114, 0, 113, 227, 398, 626, 1082,
-1100, -743, -564, -430, -341, -252, -162, -73, 15, 104, 194, 328, 506, 863,
};

static uint64_t backbone_model2_conv2_conv2_weight[64 * 9] =
{ // torch.Size([64, 3, 3, 1])
0xb, 0xc, 0xb, 0xc, 0xd, 0xd, 0x8, 0xa, 0x9, 
0x3, 0x1, 0xd, 0x3, 0x4, 0xd, 0x3, 0x9, 0xd, 
0xa, 0x3, 0x3, 0x4, 0x3, 0x3, 0xb, 0xe, 0xd, 
0x4, 0x0, 0xc, 0x4, 0x3, 0xc, 0x5, 0x3, 0xd, 
0xb, 0xb, 0x3, 0xd, 0xb, 0x4, 0xc, 0xa, 0x5, 
0x0, 0x5, 0x3, 0x3, 0x5, 0x3, 0x3, 0xd, 0xc, 
0x4, 0x4, 0x4, 0x3, 0x4, 0x3, 0x5, 0x5, 0xa, 
0x3, 0xc, 0xd, 0x3, 0x4, 0x5, 0x1, 0x5, 0x5, 
0x4, 0x5, 0x4, 0x2, 0x5, 0x3, 0x8, 0x4, 0x4, 
0x3, 0x0, 0xc, 0x2, 0x5, 0x4, 0xb, 0x4, 0x5, 
0xd, 0xa, 0x5, 0xc, 0x3, 0x4, 0xd, 0x8, 0x4, 
0x2, 0x2, 0x3, 0x0, 0x4, 0x5, 0x4, 0x5, 0x4, 
0x9, 0x3, 0x4, 0xa, 0x4, 0x5, 0x1, 0xc, 0xd, 
0xb, 0xd, 0xc, 0x4, 0xa, 0xd, 0x3, 0x2, 0xb, 
0xa, 0x0, 0x5, 0xc, 0xd, 0xa, 0x4, 0x4, 0x5, 
0xb, 0x4, 0xa, 0xc, 0xa, 0xb, 0xb, 0xd, 0xd, 
0xc, 0x4, 0x5, 0xd, 0x0, 0x5, 0xc, 0xd, 0x0, 
0x3, 0x3, 0x3, 0x4, 0x5, 0x5, 0x3, 0x3, 0x3, 
0x3, 0x4, 0x4, 0x4, 0x4, 0x3, 0x4, 0x3, 0x3, 
0xb, 0xc, 0xa, 0x1, 0x5, 0xc, 0xb, 0x6, 0xb, 
0x2, 0x3, 0x4, 0x2, 0x4, 0x4, 0x4, 0x5, 0x1, 
0x3, 0x3, 0x3, 0x4, 0x4, 0x3, 0x5, 0x4, 0x3, 
0xd, 0xd, 0x2, 0xd, 0xa, 0x4, 0xc, 0x4, 0x4, 
0x3, 0x5, 0xd, 0x5, 0x3, 0xd, 0x4, 0xc, 0xd, 
0x3, 0x4, 0xc, 0x2, 0x4, 0xc, 0x0, 0x5, 0x4, 
0xa, 0xb, 0xb, 0xb, 0xc, 0xa, 0xc, 0xd, 0xc, 
0x1, 0x3, 0xc, 0x2, 0xd, 0xb, 0xd, 0xa, 0x4, 
0x2, 0x3, 0x2, 0xb, 0xc, 0xe, 0x4, 0xc, 0xd, 
0x3, 0xb, 0xc, 0x4, 0x3, 0xb, 0x3, 0x5, 0x3, 
0xc, 0xc, 0x2, 0xd, 0xc, 0x4, 0xc, 0x4, 0x5, 
0x3, 0x5, 0xa, 0xa, 0x3, 0x5, 0xd, 0xb, 0x5, 
0xc, 0xc, 0xb, 0xb, 0xc, 0xc, 0xc, 0xc, 0xb, 
0x5, 0x5, 0x4, 0x3, 0x4, 0x3, 0x2, 0xb, 0xb, 
0x3, 0xd, 0x2, 0x4, 0xd, 0x5, 0x3, 0xc, 0x4, 
0x5, 0x3, 0x5, 0x2, 0xb, 0x3, 0xb, 0xc, 0xb, 
0x3, 0x4, 0x4, 0x2, 0x3, 0x4, 0xc, 0xc, 0xb, 
0xc, 0xc, 0xd, 0x0, 0x2, 0x3, 0x4, 0x5, 0x5, 
0x4, 0x3, 0x3, 0x4, 0x3, 0x2, 0x3, 0x2, 0x4, 
0xc, 0xb, 0xc, 0xb, 0xb, 0xc, 0xc, 0xb, 0xc, 
0x3, 0xc, 0x0, 0x4, 0xd, 0xc, 0x5, 0x2, 0x4, 
0x3, 0x3, 0x3, 0x3, 0x2, 0x9, 0xd, 0xc, 0xd, 
0xd, 0x8, 0x4, 0x2, 0x4, 0x3, 0x5, 0x4, 0xa, 
0x4, 0x4, 0x5, 0x3, 0x4, 0x4, 0x2, 0x2, 0x3, 
0x3, 0x5, 0x5, 0x4, 0x4, 0x4, 0x9, 0x1, 0x2, 
0x9, 0xc, 0xb, 0xc, 0xc, 0xc, 0xc, 0xc, 0xc, 
0x0, 0x0, 0x4, 0xa, 0x4, 0x4, 0x0, 0x4, 0x5, 
0x4, 0x4, 0xb, 0x5, 0x4, 0xb, 0x4, 0x5, 0x2, 
0xd, 0xb, 0xc, 0xc, 0xb, 0xb, 0xb, 0xc, 0xb, 
0xb, 0xb, 0xb, 0xb, 0xd, 0xc, 0x1, 0xd, 0xd, 
0xd, 0xd, 0x1, 0xc, 0xd, 0x2, 0xc, 0x0, 0x3, 
0x3, 0xc, 0xe, 0x3, 0xa, 0xd, 0x0, 0x3, 0xa, 
0x1, 0x4, 0x5, 0xd, 0xb, 0x3, 0xc, 0xc, 0xb, 
0x0, 0xb, 0xc, 0x0, 0xc, 0xb, 0x5, 0x5, 0x5, 
0x4, 0x3, 0x2, 0x4, 0x3, 0x4, 0x4, 0x4, 0x4, 
0x8, 0xa, 0x2, 0x9, 0x3, 0xb, 0x4, 0x6, 0x3, 
0x3, 0xb, 0x0, 0x2, 0xd, 0xe, 0x2, 0x3, 0x3, 
0xc, 0xc, 0xa, 0xb, 0xd, 0x9, 0xa, 0xb, 0xc, 
0x2, 0xc, 0xc, 0xd, 0xc, 0xb, 0xb, 0xb, 0xb, 
0x2, 0x4, 0x3, 0x8, 0x4, 0x4, 0x3, 0x4, 0x4, 
0x5, 0xa, 0xd, 0x4, 0x3, 0xd, 0x4, 0x2, 0xd, 
0xc, 0xb, 0xc, 0xb, 0xc, 0xc, 0xb, 0xc, 0xc, 
0xb, 0xc, 0xc, 0xb, 0xd, 0xc, 0x9, 0xc, 0xc, 
0xc, 0xb, 0xb, 0xc, 0xb, 0xb, 0xc, 0xc, 0xc, 
0xc, 0x4, 0x5, 0x2, 0x5, 0xb, 0x3, 0x9, 0xd, 
};

static int backbone_model2_conv2_relu2_threshold[64 * 7] =
{ // torch.Size([64, 7])
25, 95, 164, 234, 338, 477, 755,
78, 131, 184, 236, 315, 421, 632,
135, 195, 255, 315, 404, 524, 764,
109, 164, 220, 275, 358, 469, 690,
113, 170, 226, 282, 366, 478, 703,
39, 103, 166, 229, 324, 451, 705,
38, 93, 148, 203, 285, 395, 616,
170, 230, 290, 351, 441, 561, 802,
-103, -55, -7, 40, 112, 208, 401,
61, 107, 154, 201, 271, 364, 551,
81, 129, 176, 224, 295, 389, 579,
12, 81, 150, 219, 322, 460, 735,
172, 218, 264, 310, 378, 470, 653,
61, 118, 174, 230, 315, 428, 653,
120, 164, 208, 251, 317, 404, 579,
53, 105, 157, 208, 286, 389, 596,
143, 203, 264, 325, 417, 539, 782,
-46, 28, 103, 178, 290, 439, 738,
58, 109, 159, 209, 285, 386, 587,
102, 155, 209, 263, 343, 450, 664,
55, 114, 173, 231, 320, 437, 672,
66, 117, 169, 220, 298, 401, 607,
164, 342, 520, 699, 966, 1323, 2036,
215, 279, 343, 407, 503, 631, 886,
77, 132, 186, 241, 323, 432, 651,
-5, 49, 103, 158, 240, 350, 568,
58, 116, 175, 234, 322, 440, 675,
31, 116, 201, 286, 414, 584, 924,
68, 111, 154, 196, 260, 345, 516,
96, 156, 215, 274, 363, 482, 720,
95, 155, 215, 275, 365, 485, 724,
42, 97, 152, 207, 289, 400, 620,
43, 93, 142, 192, 266, 364, 562,
89, 140, 191, 242, 318, 420, 623,
82, 133, 184, 236, 312, 415, 620,
81, 134, 186, 239, 318, 423, 633,
82, 133, 184, 236, 313, 416, 622,
9, 58, 107, 156, 229, 327, 523,
-11, 56, 125, 193, 296, 433, 707,
98, 140, 183, 225, 289, 375, 545,
72, 127, 183, 238, 321, 431, 652,
115, 167, 218, 269, 346, 448, 653,
28, 102, 177, 251, 362, 510, 806,
16, 108, 201, 293, 432, 617, 987,
-42, 30, 104, 177, 287, 433, 727,
9, 67, 125, 182, 269, 384, 614,
-35, 38, 113, 187, 299, 448, 746,
5, 77, 148, 220, 328, 472, 759,
12, 87, 163, 238, 352, 503, 804,
-17, 71, 160, 249, 382, 560, 916,
69, 147, 226, 304, 421, 577, 889,
107, 164, 221, 278, 364, 478, 706,
45, 106, 166, 227, 319, 441, 685,
64, 133, 202, 271, 375, 513, 789,
54, 120, 186, 252, 351, 483, 746,
99, 153, 208, 262, 344, 452, 670,
-92, 1, 95, 188, 329, 516, 891,
-10, 59, 130, 200, 305, 446, 727,
14, 67, 121, 175, 255, 363, 577,
144, 211, 279, 346, 447, 582, 851,
23, 82, 141, 199, 287, 405, 640,
-44, 24, 94, 163, 268, 407, 685,
10, 71, 132, 193, 285, 407, 651,
114, 173, 232, 291, 380, 498, 734,
};

static uint64_t backbone_model3_conv1_conv1_weight[64 * 1*4] =
{ // torch.Size([64, 1, 1, 64])
0x4c911c31a4b445c4,0xcb44dab4294c23c2,0xd4d44c824cbd2db3,0x223b1c843a383430, 
0xc0b432b8bdcc1b43,0x3424430b23b31c2c,0x243203b2c09431d3,0x5dcd30400b243aac, 
0x230d952bbb234cc1,0xbd3cb2bcaca42404,0x9a3bcbca32190cbb,0xeb4059038a1c9c25, 
0x91bdba52331532b2,0x4bb598939bc24bcc,0x009bbcca3a45a3c9,0x34b3233923150344, 
0x109a44cc32bbb2a5,0xc5bca3d1ba28c2c3,0x3ac34b3b3cbcba4b,0x4a2bb3c0bad2444e, 
0xa33c31b93bcbcd10,0xc39243a12dc8bb30,0xac4c34c4a2339a0a,0x4ac1b3083ca1caac, 
0x93c28b400ac00c4a,0xbb4b35339dc34b2a,0xcb10b3b2a52285a2,0x19cb843c0183cb10, 
0x23343bab5c3cb2c3,0xb440c283513b0b3a,0x3b0352b4b9a23c9a,0xa02cba31cb51bc5c, 
0xa3450b4b33cca231,0xa3bc431ab50bd984,0x2bbc4b2cbbab0ccc,0x212b3d019302bb0b, 
0xb204443d324cca90,0xccc4349b2235bb43,0x8d1b3dbb2dc4248d,0xc4d2c4cc94133913, 
0xab3b31bbdbb4a141,0xaaac4202b1b4a1b4,0xb289cba3b22b25c2,0x4c9d4c42bcac3b02, 
0xd3bb343b4842b94c,0x338c242043343d4a,0x4042c319d3340003,0x033a2430d2bc33cb, 
0xa33bb3b23380db94,0x14baab2b1ccbcc09,0xbb434b4ba4c41bb3,0x94bb53a3bd290243, 
0xc95b834913114bc4,0x3cc4bc1aac4b440b,0x480bcd4b543924ca,0xa23599bc5ea403ba, 
0x2023b95c3444ab4a,0xcc1409348b3c9333,0xbd9000439b43130d,0x24d1219201432341, 
0xc5ccbb3a1c30c9bb,0x22a412bca431bd24,0x4a0cac33c4449bc2,0x32bbb325bb4b343c, 
0x0c43423333042b24,0xd34b22a31b44c9ab,0x1b5ccc4431832844,0x31c05c52c333ac03, 
0x382243c0d33b4112,0x33bbcbdbd40384cc,0x25d4cb2a4a524433,0xa8430ba334c2441b, 
0x343baaab1329bc5b,0x444923b9bcc0cb19,0xad4b313c144484ab,0xa3dbb4c3aac4890c, 
0x9ab24c05c4c33ca1,0xcc050b544cc0ba33,0xd149c13ca8bc5b41,0x3bcbaa45bc4434bc, 
0xb3db03b443c14043,0x34c312a133bbcb3b,0xc545cc4b343a4435,0x9b49c44a14cbccd1, 
0x9c50244222c3bb0a,0x14c83d4ba2cdc94b,0x334422c4c3a4b343,0xc33a1205cbb04c5c, 
0xb44234ba93ca153b,0xc423c2bc04a4b983,0xb3c2cc4202ab4239,0xc9422234204394a3, 
0xcbc3a22c0b4bbba2,0x52dc94c1a4ca3cc2,0x43c9a0dbd44cc2b2,0x393c9b1abbbc4112, 
0x2cd4ba449213813a,0x4c04d541c4c414d3,0x4ccc243c813cb39c,0xabc4be3c4b43d4c4, 
0xa44cc3d3b1b2943b,0x3323d0c24a152b0b,0xa2c2c9443bca3bc1,0x8bab50adcd21a91c, 
0x355a44baaa4ca339,0xc3ab5cb901bd9249,0x434388bbcb33ba4b,0xba9b08b0b3c33b4c, 
0xc52c324a93c0cc3d,0x03b4990bb2332a20,0x9b3442cd50181ccb,0xbb23d4c12bb890ac, 
0x18a439a25cad2cb4,0x993032ac3a3204bd,0xba335a483bb330c0,0x0c448c3c5824dd1b, 
0x3293a3a12d8bbcc9,0x3bca4019c130044c,0xc1932a223cb2d213,0x3c3490293cc0cdc2, 
0xc3adc5dd318ccc32,0x3cbc04acc43babac,0x3c1cdab2cc8acbac,0x0abbbc8aaadc9cbc, 
0xc9525a1b3bc9cb92,0xbb4bac3b0c323a92,0xbb3dc2b8532b23b2,0x4833a3345cbcb384, 
0xd1434c0b33cbcd2c,0xc43d429993c3bb04,0x29ac34c040243cc0,0x3a142290449dba0a, 
0xb32d0ab3b2ba3c98,0x30c44c4c3cc10b4b,0xc441b2c5bba53b2a,0xab3b840ba32a3c23, 
0x0b4cbbb832cb853d,0x3340cb0834b43ba9,0xc5312234b3c3bcb0,0xc13c2aa3c93c448b, 
0xb418342a10da1943,0x35934dbd3bcccb3b,0x329029a4a20b3844,0xc04ba32bb8344222, 
0xaccbd4b032cab02b,0xbc23833a24430cab,0xd49b490bccdc1bc3,0xc4d4c4343cac329c, 
0x143a3a90c95bcdc2,0xc34cab9318549c3c,0x5cb23b5bb44a3bbb,0xcb3a4d138b4201cd, 
0xcb3032cacc4ba4cb,0xbc3c333b44453b10,0x24c50a15cc3d4405,0xba3cab54dd3a8392, 
0x03ba22c03b4b24a9,0xcbc8441a413cbb34,0x53023434b3da0402,0xdb44ca9b334342aa, 
0x3233104bca40ac88,0x1c8b1353ba4333d9,0x3b4ab40d3b32a4bd,0x2aab2bda32c3bb33, 
0xb230b293a5ab32b9,0xbab2aacbb4334cab,0xc34bbb2bbb453b4b,0x3400c4b503b0443c, 
0x2ac0d1a9b3534335,0x4bc2bb1424b0143c,0x2c1caa4bc943b93b,0x42ab40cbb431499c, 
0xab4b3423301cbcd4,0xcbc04cca3445133c,0x44949bc39d484305,0x4a44bc3043a34dbb, 
0x43344432dc334cbd,0xb80bb334d9344423,0x4b03c34b2b43b4bb,0xbcab4bcca422acc3, 
0x8cc8833cacb56cbb,0xc33cca354b435444,0xdba3bca23dd02c93,0xcac314ccb2212b04, 
0x14b3b0389393a14b,0x3a43c03b3cb33131,0x4b1c043b95c9150c,0xc2c0ab9c1b444122, 
0x8b3440b4ccdc4b3b,0x33a33c2b8adc922d,0xb423a2abb3c34acb,0xad4b994b29a29ab2, 
0x9838ba10bacbb2c0,0x1bb43cc1840cbac9,0x33c423c30d283cb4,0x234bcc343cb44a4d, 
0x21430a3b2a43bbb0,0x443b51b2933cc1b2,0x4db92c903b44cc4b,0xb2403ca0a381c0a2, 
0x2c3424b4cc8cb4d4,0x9bcaac1bb4bcc303,0x33432b3b3c442aa9,0x0c4da2c4cbb22a3a, 
0x4342c3ccc84ab3a2,0x4cc58933bac24143,0x234cc4b14bd43ccb,0xca4bb4d19cc44443, 
0xc44c3bada4443cc4,0xac1244d23db1404b,0xdd442dc41dc2ad3d,0x3adc34abb10b4b3a, 
0x0bc40b44baab2dcb,0xc4ca43b3b01db201,0x8bc41a2bcc4c0c94,0x493bbc3bbbb1d3cb, 
0x3a4ba4d4ca4a130c,0xb45adba3bc2bb34c,0xb101c142b4444bab,0x1c3db4c2bb3b542c, 
0xd343c4b8324224cb,0x2a33a4ca053499bb,0xbbba2db3ad0cab03,0x0344d32342b113a4, 
0xc13c21acab4cab29,0xb3cab2bc9a40a0ab,0xaccb2cc9adbbbbbb,0xb3c2b9bba3c20c20, 
0x2b4a34b4cba0cbb3,0xcc3a24bb1ccb82ca,0x5ccb0450b1438b29,0xc92cbb459caab13c, 
0x3d2004c1b3234a20,0x4b42d81c9b92949b,0xbaa99cb011033334,0xc1ca431cb4a32cb5, 
0xb8bca32c31241ab4,0x33254b2130944b3d,0xa1abc3b45acb1cb3,0x1a24b9bd54132bd4, 
0x1335013a443c3338,0x4144dbc8aa290322,0x2ac43bb2298d224b,0x45c3d2ca4043342a, 
0x230cb44143bc0a2d,0xbcb3042db44b4333,0xa9313c2b4434a28c,0xd324c3c34a4cc2bb, 
0xb52034ccab4cc448,0x42bd142994a43925,0x433402cc944344c4,0x4b4cc4b4c4bc4a3a, 
0xca32554dabcb305c,0xc44cbc3b40545044,0xc1443ccc3ac939b4,0xbc2ac4c0cab34b43, 
};

static int backbone_model3_conv1_quant1_threshold[64 * 14] =
{ // torch.Size([64, 14])
-1106, -698, -494, -341, -239, -137, -35, 66, 168, 270, 372, 525, 729, 1137,
-1043, -679, -497, -361, -270, -179, -88, 2, 93, 184, 275, 411, 593, 957,
-1064, -725, -555, -428, -343, -258, -174, -89, -4, 80, 165, 292, 462, 801,
-838, -512, -350, -228, -147, -65, 15, 96, 178, 259, 340, 462, 625, 950,
-1534, -1035, -786, -599, -474, -349, -224, -100, 24, 149, 274, 461, 710, 1210,
-1150, -767, -576, -432, -337, -241, -145, -50, 45, 140, 236, 380, 571, 953,
-961, -575, -382, -238, -141, -45, 51, 147, 243, 340, 436, 581, 774, 1159,
-722, -432, -286, -177, -104, -32, 40, 113, 185, 258, 331, 440, 585, 876,
-1149, -753, -555, -406, -307, -208, -109, -10, 88, 187, 286, 435, 633, 1029,
-1369, -940, -725, -564, -457, -350, -243, -135, -28, 78, 185, 346, 561, 990,
-895, -581, -424, -306, -227, -149, -70, 7, 86, 164, 243, 360, 517, 831,
-889, -549, -379, -252, -167, -81, 3, 88, 173, 258, 343, 470, 641, 981,
-896, -567, -402, -278, -196, -114, -31, 50, 132, 215, 297, 421, 585, 915,
-979, -648, -483, -359, -276, -193, -111, -28, 54, 137, 219, 343, 509, 840,
-1036, -673, -492, -356, -265, -174, -84, 6, 97, 188, 278, 414, 596, 958,
-795, -515, -375, -270, -200, -130, -60, 9, 80, 150, 220, 325, 465, 745,
-862, -515, -342, -212, -126, -39, 46, 133, 219, 306, 393, 522, 696, 1042,
-1041, -655, -462, -317, -221, -124, -28, 68, 165, 261, 358, 502, 695, 1081,
-942, -598, -426, -297, -211, -125, -40, 45, 131, 217, 303, 432, 604, 948,
-986, -612, -425, -284, -191, -97, -4, 89, 182, 276, 369, 510, 697, 1071,
-1038, -624, -417, -261, -158, -54, 48, 152, 256, 359, 463, 618, 825, 1240,
-1090, -692, -492, -343, -243, -144, -44, 54, 154, 253, 353, 502, 702, 1100,
-740, -431, -276, -160, -83, -6, 71, 148, 225, 303, 380, 496, 650, 959,
-1124, -750, -563, -422, -329, -235, -142, -48, 45, 138, 232, 372, 559, 933,
-1495, -989, -736, -547, -420, -294, -167, -41, 84, 211, 337, 527, 780, 1285,
-815, -509, -356, -241, -164, -88, -11, 64, 141, 217, 294, 408, 562, 868,
-955, -587, -402, -264, -172, -80, 11, 103, 196, 288, 380, 518, 702, 1071,
-1003, -657, -485, -355, -269, -182, -96, -9, 76, 163, 249, 379, 552, 897,
-898, -578, -418, -298, -218, -138, -58, 21, 101, 181, 261, 381, 541, 862,
-1221, -832, -638, -492, -395, -297, -200, -103, -6, 91, 188, 334, 528, 917,
-1892, -1359, -1092, -892, -759, -626, -492, -359, -226, -92, 40, 240, 507, 1040,
-872, -564, -411, -295, -219, -142, -65, 11, 88, 165, 242, 357, 511, 818,
-1029, -684, -511, -381, -295, -208, -122, -36, 50, 136, 222, 352, 525, 870,
-1148, -723, -511, -352, -245, -139, -33, 72, 179, 285, 391, 550, 763, 1188,
-836, -534, -383, -270, -195, -120, -44, 30, 105, 181, 256, 369, 520, 822,
-865, -495, -311, -172, -80, 12, 104, 197, 289, 381, 474, 612, 797, 1166,
-1156, -759, -560, -411, -312, -213, -113, -14, 84, 184, 283, 432, 630, 1028,
-1191, -745, -522, -355, -244, -132, -21, 90, 201, 313, 424, 591, 814, 1260,
-1040, -651, -456, -310, -213, -116, -18, 78, 175, 273, 370, 516, 711, 1100,
-729, -448, -308, -203, -132, -62, 7, 77, 148, 218, 288, 393, 534, 815,
-1126, -755, -570, -431, -338, -245, -153, -60, 32, 125, 217, 357, 542, 913,
-838, -524, -367, -250, -171, -93, -14, 63, 142, 220, 299, 417, 574, 888,
-880, -551, -386, -262, -180, -98, -15, 66, 149, 231, 313, 437, 602, 931,
-1040, -678, -498, -362, -272, -181, -91, -1, 89, 179, 269, 405, 586, 947,
-987, -637, -463, -332, -244, -157, -70, 17, 104, 191, 279, 410, 584, 934,
-1282, -819, -588, -415, -299, -183, -68, 47, 163, 278, 394, 567, 798, 1261,
-894, -518, -331, -190, -96, -2, 91, 184, 278, 372, 466, 607, 794, 1169,
-1087, -714, -527, -387, -293, -200, -107, -13, 79, 172, 266, 406, 593, 966,
-1272, -845, -632, -472, -365, -258, -152, -45, 61, 167, 274, 434, 648, 1074,
-794, -493, -342, -229, -154, -79, -3, 71, 146, 221, 297, 410, 560, 861,
-1147, -756, -561, -414, -316, -219, -121, -23, 74, 171, 269, 416, 611, 1002,
-1047, -685, -504, -369, -278, -188, -98, -7, 82, 173, 263, 399, 579, 941,
-1499, -1039, -810, -637, -523, -408, -293, -178, -63, 51, 166, 338, 568, 1027,
-1443, -968, -731, -553, -434, -316, -197, -78, 39, 158, 276, 454, 692, 1166,
-949, -521, -307, -147, -40, 66, 173, 280, 387, 495, 602, 762, 976, 1404,
-1067, -675, -479, -332, -234, -136, -38, 59, 157, 255, 353, 500, 696, 1088,
-1336, -921, -713, -557, -453, -349, -245, -141, -37, 66, 170, 326, 534, 950,
-832, -551, -411, -305, -235, -165, -95, -25, 44, 115, 185, 290, 430, 711,
-927, -585, -415, -286, -201, -116, -30, 54, 139, 225, 310, 438, 609, 951,
-949, -599, -424, -292, -205, -117, -30, 57, 144, 232, 319, 451, 626, 976,
-971, -605, -422, -285, -193, -102, -10, 80, 172, 263, 354, 492, 674, 1040,
-907, -602, -450, -336, -259, -183, -107, -31, 44, 121, 197, 311, 464, 769,
-881, -503, -314, -172, -78, 16, 110, 205, 299, 394, 488, 630, 819, 1196,
-1044, -637, -434, -282, -180, -78, 22, 124, 226, 328, 429, 582, 785, 1192,
};

static uint64_t backbone_model3_conv1_conv2_weight[64 * 9] =
{ // torch.Size([64, 3, 3, 1])
0x9, 0xb, 0x6, 0x4, 0x4, 0x8, 0xa, 0x4, 0xa, 
0x9, 0xe, 0xb, 0x2, 0x4, 0x4, 0x1, 0x1, 0x9, 
0x9, 0xd, 0xb, 0x2, 0xc, 0xa, 0x3, 0x4, 0x6, 
0xb, 0xc, 0xc, 0xc, 0xc, 0x5, 0xc, 0xa, 0x5, 
0x4, 0x2, 0xa, 0xb, 0xe, 0xd, 0x2, 0xb, 0xa, 
0xc, 0xd, 0x3, 0xb, 0xb, 0x4, 0xb, 0x3, 0x4, 
0x5, 0x4, 0xb, 0x4, 0xc, 0xc, 0xb, 0xb, 0x0, 
0x1, 0xb, 0xa, 0xa, 0x6, 0x0, 0xb, 0xc, 0xb, 
0x4, 0xa, 0xe, 0x1, 0x4, 0xc, 0x4, 0x2, 0xc, 
0x3, 0x3, 0x4, 0x3, 0x4, 0x2, 0x3, 0x4, 0x0, 
0x4, 0xd, 0xc, 0x3, 0x4, 0x4, 0x3, 0x9, 0x1, 
0x2, 0x1, 0x0, 0x1, 0x3, 0xb, 0x1, 0xc, 0xe, 
0x4, 0x4, 0xb, 0x4, 0x3, 0xc, 0x9, 0xc, 0xd, 
0xd, 0x4, 0x3, 0xc, 0x4, 0x4, 0xb, 0xc, 0x0, 
0x4, 0x4, 0xb, 0xc, 0x0, 0xc, 0x2, 0xa, 0xd, 
0x4, 0x4, 0x4, 0xc, 0xd, 0xc, 0x0, 0x2, 0x9, 
0x3, 0x4, 0x3, 0x4, 0x4, 0x2, 0xc, 0xc, 0xd, 
0xb, 0x0, 0xb, 0xb, 0x4, 0x9, 0xc, 0xd, 0xa, 
0x4, 0xc, 0xd, 0x5, 0x4, 0xb, 0x1, 0x2, 0x3, 
0x3, 0xa, 0x1, 0xa, 0x6, 0xc, 0x8, 0x9, 0x3, 
0x1, 0xc, 0xd, 0x3, 0xc, 0xc, 0x9, 0xc, 0x1, 
0x3, 0x6, 0x2, 0x0, 0x2, 0xc, 0xb, 0x4, 0xc, 
0xb, 0xc, 0xd, 0x9, 0xb, 0x3, 0x2, 0x4, 0x5, 
0x8, 0x3, 0x4, 0xb, 0x3, 0x3, 0xd, 0xd, 0xc, 
0x1, 0x5, 0x3, 0x3, 0x4, 0x3, 0xb, 0x5, 0x3, 
0x9, 0x5, 0x4, 0x4, 0x3, 0xd, 0x4, 0xd, 0xc, 
0xc, 0xb, 0xc, 0x0, 0x0, 0xb, 0x4, 0x5, 0x4, 
0x3, 0xd, 0xc, 0x4, 0xc, 0xb, 0x4, 0x4, 0x4, 
0x9, 0x9, 0xc, 0x0, 0xd, 0xc, 0x9, 0x5, 0x3, 
0x0, 0x3, 0x2, 0x3, 0xe, 0x4, 0x3, 0x4, 0x3, 
0xa, 0xe, 0x0, 0x2, 0xd, 0x2, 0x0, 0x3, 0xa, 
0xc, 0x5, 0xa, 0x3, 0x4, 0xc, 0x4, 0xb, 0xc, 
0xb, 0xb, 0x3, 0xd, 0xc, 0x4, 0xc, 0x3, 0x4, 
0xb, 0x4, 0xb, 0xb, 0x4, 0xb, 0x3, 0x5, 0x2, 
0x5, 0x0, 0xc, 0x4, 0x9, 0xd, 0x9, 0x4, 0xc, 
0xc, 0x3, 0x5, 0xd, 0x0, 0x4, 0xd, 0xb, 0x0, 
0xb, 0xd, 0xd, 0x4, 0x3, 0xc, 0x3, 0x3, 0x3, 
0xb, 0x9, 0xc, 0xb, 0x4, 0x5, 0x8, 0x4, 0x4, 
0xc, 0xa, 0xa, 0xb, 0xd, 0x9, 0x3, 0xd, 0xb, 
0x3, 0x3, 0xc, 0x4, 0xc, 0x2, 0xc, 0xd, 0x3, 
0x2, 0xc, 0xc, 0x4, 0xe, 0x3, 0x4, 0x1, 0xb, 
0xb, 0x9, 0x5, 0x3, 0xd, 0xa, 0xb, 0xb, 0xc, 
0x0, 0x4, 0xb, 0xc, 0x9, 0x3, 0xc, 0x3, 0x5, 
0xd, 0xe, 0x2, 0x3, 0x2, 0xb, 0xa, 0x3, 0xb, 
0x1, 0x2, 0xb, 0x1, 0xe, 0x3, 0x2, 0xb, 0x9, 
0xb, 0xb, 0xc, 0xb, 0xc, 0xc, 0xc, 0x9, 0xb, 
0xe, 0xc, 0x4, 0xa, 0xc, 0x3, 0x3, 0x4, 0xb, 
0x4, 0x1, 0x4, 0x3, 0xd, 0xd, 0x2, 0x9, 0x1, 
0xa, 0xa, 0x3, 0x1, 0x4, 0x5, 0x3, 0x5, 0x2, 
0x4, 0x4, 0x4, 0xb, 0xc, 0xa, 0xb, 0xc, 0xc, 
0x3, 0xb, 0xd, 0xb, 0xb, 0xc, 0xa, 0x3, 0xb, 
0xa, 0x9, 0x2, 0x3, 0xd, 0x0, 0xc, 0xd, 0x4, 
0x4, 0x3, 0x3, 0x4, 0x3, 0x3, 0x0, 0x4, 0x2, 
0xb, 0x9, 0xb, 0x0, 0x4, 0x4, 0xa, 0x4, 0x5, 
0x4, 0x5, 0x4, 0x2, 0xd, 0x1, 0x2, 0xc, 0x2, 
0x4, 0x4, 0x0, 0x0, 0x3, 0x4, 0xb, 0xa, 0x4, 
0x4, 0x4, 0x2, 0x1, 0x4, 0x4, 0xc, 0x3, 0x3, 
0x3, 0xc, 0xc, 0x4, 0xa, 0xc, 0x5, 0x4, 0x2, 
0xc, 0xc, 0xd, 0xb, 0x4, 0x4, 0xa, 0x4, 0x5, 
0xa, 0xc, 0xc, 0x4, 0xc, 0xb, 0x5, 0xa, 0xb, 
0x5, 0x3, 0xc, 0xa, 0xd, 0x1, 0xb, 0x0, 0xb, 
0x9, 0x4, 0xa, 0x3, 0x2, 0x2, 0xc, 0xe, 0x9, 
0x3, 0x4, 0x3, 0x4, 0x4, 0x4, 0x3, 0x3, 0x0, 
0xb, 0xb, 0xc, 0xb, 0xc, 0xb, 0xa, 0x1, 0xa, 
};

static int backbone_model3_conv1_relu2_threshold[64 * 7] =
{ // torch.Size([64, 7])
-80, 3, 87, 171, 297, 465, 801,
9, 58, 107, 157, 231, 329, 526,
72, 131, 190, 249, 338, 457, 694,
23, 75, 126, 178, 255, 358, 564,
-46, 63, 172, 281, 445, 663, 1100,
16, 62, 107, 153, 222, 314, 497,
23, 63, 103, 143, 203, 283, 443,
-9, 48, 105, 163, 249, 364, 595,
-74, -5, 64, 133, 238, 377, 655,
39, 86, 132, 179, 249, 342, 528,
55, 85, 116, 146, 192, 253, 376,
78, 131, 185, 239, 320, 427, 642,
-8, 42, 92, 142, 217, 318, 519,
38, 93, 148, 202, 285, 394, 614,
-8, 51, 110, 170, 259, 378, 616,
37, 81, 126, 170, 237, 326, 504,
7, 57, 107, 157, 231, 331, 530,
2, 45, 89, 132, 197, 284, 457,
-17, 41, 99, 158, 247, 364, 600,
1, 58, 114, 170, 255, 367, 592,
28, 76, 125, 174, 247, 345, 540,
-21, 49, 120, 191, 297, 438, 722,
-22, 31, 85, 140, 221, 330, 547,
-24, 46, 118, 190, 297, 440, 727,
6, 74, 143, 211, 314, 452, 726,
-14, 47, 108, 170, 262, 385, 631,
63, 102, 141, 180, 239, 317, 473,
30, 73, 117, 161, 227, 314, 490,
89, 128, 168, 208, 267, 347, 506,
4, 55, 106, 157, 233, 335, 538,
-23, 49, 122, 195, 304, 450, 741,
52, 90, 127, 164, 219, 294, 442,
42, 81, 120, 159, 218, 297, 454,
-4, 38, 81, 124, 188, 274, 446,
17, 69, 120, 172, 249, 352, 559,
-35, 28, 93, 157, 254, 382, 640,
-6, 51, 110, 168, 255, 372, 605,
-4, 34, 73, 112, 171, 249, 405,
-3, 65, 133, 202, 305, 442, 716,
-32, 13, 59, 104, 173, 265, 448,
-22, 48, 120, 191, 298, 441, 727,
-4, 47, 99, 151, 228, 332, 539,
74, 108, 142, 177, 228, 296, 433,
-92, -18, 56, 131, 243, 393, 692,
-3, 45, 95, 145, 219, 318, 517,
36, 89, 141, 193, 271, 375, 584,
-33, 43, 119, 196, 311, 464, 770,
-1, 36, 75, 113, 171, 248, 402,
21, 79, 137, 195, 281, 397, 628,
6, 55, 105, 154, 227, 326, 522,
-18, 22, 63, 104, 165, 247, 411,
-37, 32, 102, 173, 278, 418, 698,
63, 103, 144, 185, 246, 327, 490,
17, 65, 112, 159, 230, 324, 513,
-9, 27, 64, 101, 157, 231, 379,
10, 58, 105, 152, 223, 318, 508,
35, 68, 101, 133, 183, 248, 379,
-2, 49, 101, 152, 230, 334, 541,
74, 122, 170, 219, 291, 387, 579,
-1, 49, 99, 150, 225, 326, 528,
43, 79, 115, 151, 204, 276, 419,
70, 124, 177, 231, 312, 419, 634,
64, 110, 156, 202, 272, 364, 548,
49, 92, 134, 176, 240, 325, 495,
};

static uint64_t backbone_model3_conv2_conv1_weight[64 * 1*4] =
{ // torch.Size([64, 1, 1, 64])
0xcccab4bcd4dc2c3b,0xcbcaba4a5cb3b22b,0x14493babcb20aba2,0x00bbb2d99ac484bc, 
0x344a22851c449344,0x022bc2bd25142994,0x9b04c3b43943a44c,0x3c02ac5ab44b302c, 
0x33cc10aab2ab8cba,0x51b809caa23a9b2a,0x2135833c11ca930b,0x3aa23db202024bdc, 
0x434a00c2a43430a1,0x22394a439445bcc2,0x34b032a4b244c00b,0x221043433bc3324a, 
0x8b450aacb2ca1ca8,0xbb33323b84ab0b21,0x02ddcaaac335ca0b,0xb402baa13b4ac44a, 
0x3852bc393ba2133b,0xa203b4c24bb338a4,0x41bc3321c42c4b3c,0xc049d13a33890232, 
0x2b58ccbac3b33cab,0xba94a4bb45b3caab,0x3bccd280d9c92abc,0xb04bb2a3c0b28a44, 
0xa3aa3215bac39c2b,0xa52bc1b4a9345434,0x130acbbc9c514dbb,0x293bbbb21d4babca, 
0xaa302b1902a19b13,0xba843a323391ab21,0x833dbcb308b18abb,0xc320c083592a9349, 
0xa32b23324b23c554,0xc359c2ba4bc34443,0x23ac02b093444c13,0x431cb3511933b83b, 
0xa5b4c3334c23443a,0xb43ba2441c834032,0x2ada1009432b0bc2,0x3a93444babb3325a, 
0xabbc09cbabc2b10b,0xbcc8a00caabcab43,0xa358abba2c444a4b,0x3a2cac08434cca08, 
0x33435430441440a2,0x332459a3c3b10b2b,0xdabbca1333a31c2c,0xb8b1b4304bb24434, 
0x343281cb34a41a91,0x544242028332ac3a,0x92cb13b4a345bcc5,0x44b44b344dc33a3a, 
0x4394cb399c1b832b,0xc12cb43a4cc34104,0x329c320aa328429a,0xcb2bd433b938a84b, 
0xb53c33c43b343449,0x5410332192a432b3,0x3803333599a3cb3c,0x1cac3343103b33b4, 
0x9439521b2b44b334,0x0bb344288b8a2bb4,0x8b9a22c412033b23,0x9812bb3cbb18d9b3, 
0x3b4330ccd3b9c0aa,0x0b842c4c923c3cc0,0x9213bac5ba94ca31,0x342c32b4244a9343, 
0x3820b4c34a13a339,0x2433c032b2a4445a,0x2330102cca43ac00,0x218b29333d33022c, 
0x0b4a3343a43b3bc2,0x1c0442031441b223,0x04c4a234482b4ca1,0x4122a0cd2a089333, 
0x430bbbc49931aba9,0x0932bb93b2b5343a,0xb49b4333dc3cb190,0xb324b242aba92b4b, 
0x9bd580889809b3cc,0x2c9cc1ac0b33a39a,0xaad121bb922113c2,0x23b42a0ac3b31acb, 
0xa2ba34cc1ab1b909,0xa9baa02232d0b330,0x94933cd3dd43ba33,0x4331b13c1234b419, 
0xcbbb3b0abb2c0239,0x13345a45d94b383a,0xac34024b2abc023a,0xab3c23cc40ab9895, 
0xbb02d32932c8240b,0xbb82052000bcccc5,0xac38c4c42003b3ca,0x20bb2b21b293b3b0, 
0xcb2cc4acc3c44102,0x1ccb34bc4332bccd,0x4b3bbbc01cc3c303,0x4a59bac332232b24, 
0xa3432c0293422bd0,0xac8233339449b922,0x2639c3444a234b40,0x31bb233b30242242, 
0x33c4cc344ca85422,0x2342a4c09340443b,0xeb4bb332354b822b,0xc243b44419433a2c, 
0x2b3b31bc93ab3939,0x2b94aab3c30da89c,0xbb64bb33acc94a02,0x809b2ba248b3abc2, 
0x4b4d3c3daba31a94,0xa1a3b202b4c3c440,0x14bbc9c8bb3233cc,0x382cc4cbccccbb54, 
0xaaacb5ca94daa1a1,0x0cbca29b3c1aa440,0xc5acbc2010b932b2,0xc131c2c592065b22, 
0x344aa44208534b42,0xaa53423a3c44ccc1,0xaa3b1395c2cca332,0xb8a0a22c94cba3b0, 
0x43593b84333a2202,0x5154c3a21b2c43a4,0xdab294803253a9cc,0xb2c3333a8b0c13bb, 
0xa3c042cc44333333,0x333313389b22bcc4,0x3b231405c1d3ca29,0x039bca4d2242b994, 
0x308bb1401bb2b34c,0x09aba342bd234aba,0x4bac283385b2a1b4,0x22a1c10818b4c332, 
0xb4b1a2454cb4ca33,0x05b3c9b04cc15909,0x02a423c2ca43b199,0x952caa34b943b328, 
0x335b43cc3bc3d399,0x3a019abac5422a13,0x3c3333c44001345a,0x23491c343359ad31, 
0xc0baa2bbbca0a480,0xa20b02ba33bc1ca1,0x4bc2b0bb3434ba4c,0x2ba08c33029a3abb, 
0x040b32ac2b23b9c5,0xac4912bc3402ca3a,0x3c3303c339b2044c,0x2b2b1b12b52b2b22, 
0x11212a3a14393cd4,0x4a44403433433a09,0x04142133accab2b3,0x130239b24213b2b3, 
0xa3330bb4bab3c3b4,0xcc53ab54b43b4124,0x038bbb4a2101233b,0x323b393b353b4c8b, 
0xa1cbb3804b32b4a2,0xb3bdca434c123229,0x90cb39bb224921c3,0x3c0a8323b2832bcb, 
0xacb1219b299bc320,0xb8abc9cd11929108,0x0243a2ba832a614b,0xc002a299b1abba1b, 
0xb2b03babca3ca3b9,0x9d1342cb4b23c33a,0x4cbc58ca293cb421,0xd2a0cbcc95bbb99c, 
0xcc4c2a1cc24cbba3,0x91ccba09bac938d4,0xb40abcb1cc033b40,0x3cc2bc9da94dc2bc, 
0x2b3ab482bb83431b,0x2b83352342abc92d,0x5a2aa8aa11cb0bc2,0x8830b2b9a0c23c33, 
0xa3320ac22ac2aca3,0x44a3b3ba35ccb24b,0x004832d33342cb3b,0x333c3c44c232b01a, 
0x00b2b389c0343a8d,0x2d1b4b3b24449ca9,0x0a93b31512b3b320,0x31844b3c99c339b1, 
0xc34ca3343b9cb483,0xb238c333411ab32a,0x5423ca38344a1aac,0x14d3aab3a2c512c3, 
0x33b1d8343cb34412,0x219344b934aa533d,0xdb21d0a043bca90a,0xab444412c94348ba, 
0x324c109bb43349b4,0x3a334219a3033b34,0x0aa444932c02342c,0x3d2c180a001a4935, 
0xc0bc244c0345b03b,0x3ad824c20ba44148,0x4c2b253d3942b0ba,0x28b2a1234cbca19b, 
0xd2214305953b2bc9,0x449a44b1333823c4,0x151343bbc143cac2,0x2433a1a2335c841a, 
0x3c3b3a2124934aab,0x62b44103c03b434c,0xcaa4bba398bbc9ba,0xaaca340331bba245, 
0x20033b444c4b1424,0x3a3b4c30cb4cb434,0xc230448344332104,0x43c3224ba428d3ab, 
0x0bd2012bcbbb4b8d,0x23a9aba94c42430c,0xbb9329b303941d23,0xbaac03ccbabba5ca, 
0xa3b9a1484b8c2912,0x2339aba4ab133231,0x0c1b330b331a9388,0xa4bbbbb32b198391, 
0x1b831b4c3abc9dc4,0xccb2bc3a9cab1cc0,0xbcac33a3b3dc3523,0xa38b19da032b0284, 
0xac91d4342b39b3bd,0x1098a429cbb2ab15,0x4230b09b41ba2bc9,0x832b4ba2a444b314, 
0x013923b244b42b94,0xbb3324ac4bb8aac0,0x043038c5a3a4281a,0x413c0033a1280484, 
0x3babcbc1b3bcc31c,0xc2cdbcbbcb3dcbc2,0x83bb2db349c04cb2,0x4bcc432b9aa2ca34, 
0xa9c32b102b3ad0ba,0x1bbac2cbb1c29432,0x0a8ba19c193cb9b3,0x84b4ac21a21bcdad, 
0xb933b5bcbcbac01c,0x44cca93bc8a34bc3,0x8b93041bb4a4bb2a,0x133cb1cba143a4cc, 
0xb42044443bb43432,0x22231b03b94d2b29,0xcc44c43254a2b23b,0x29d43caabb31b9a1, 
};

static int backbone_model3_conv2_quant1_threshold[64 * 14] =
{ // torch.Size([64, 14])
-1107, -779, -615, -492, -410, -328, -246, -164, -82, 0, 81, 204, 368, 695,
-782, -448, -280, -155, -71, 11, 95, 178, 262, 346, 429, 555, 722, 1056,
-878, -594, -452, -346, -275, -204, -133, -63, 7, 78, 149, 255, 397, 681,
-793, -452, -282, -155, -70, 14, 99, 184, 270, 355, 440, 567, 737, 1077,
-947, -624, -462, -341, -261, -180, -99, -18, 61, 142, 223, 344, 505, 828,
-801, -506, -358, -247, -173, -100, -26, 47, 121, 195, 269, 380, 527, 823,
-1054, -715, -546, -418, -334, -249, -164, -80, 4, 89, 174, 301, 470, 809,
-1234, -796, -577, -413, -303, -194, -84, 24, 134, 243, 353, 517, 736, 1174,
-682, -415, -281, -181, -114, -48, 18, 85, 152, 218, 285, 385, 519, 785,
-1008, -624, -432, -288, -192, -95, 0, 96, 192, 288, 384, 528, 720, 1105,
-894, -537, -359, -225, -136, -47, 41, 130, 219, 309, 398, 531, 710, 1066,
-993, -665, -500, -377, -295, -213, -131, -49, 32, 114, 197, 320, 484, 812,
-890, -522, -338, -200, -108, -17, 74, 166, 258, 350, 442, 580, 764, 1131,
-951, -566, -373, -229, -133, -37, 59, 155, 251, 347, 443, 588, 780, 1165,
-944, -605, -436, -309, -225, -140, -55, 28, 113, 197, 282, 409, 578, 916,
-772, -403, -218, -80, 12, 104, 196, 289, 381, 473, 566, 704, 889, 1258,
-728, -449, -310, -205, -136, -66, 3, 72, 142, 212, 281, 386, 525, 804,
-1010, -636, -449, -309, -216, -123, -29, 63, 157, 250, 343, 483, 670, 1044,
-813, -479, -313, -188, -104, -21, 61, 145, 228, 311, 395, 520, 687, 1020,
-1010, -664, -490, -361, -274, -187, -101, -14, 71, 158, 244, 374, 547, 894,
-977, -611, -428, -290, -199, -107, -16, 75, 166, 258, 350, 487, 670, 1036,
-953, -662, -516, -407, -334, -261, -188, -115, -42, 30, 103, 212, 358, 650,
-1094, -732, -550, -414, -324, -233, -142, -51, 38, 129, 220, 356, 537, 900,
-905, -559, -386, -256, -170, -83, 2, 89, 175, 262, 348, 478, 651, 997,
-1006, -647, -467, -332, -242, -152, -62, 27, 116, 206, 296, 431, 611, 970,
-747, -501, -378, -286, -225, -163, -102, -40, 20, 82, 143, 235, 358, 604,
-867, -508, -328, -193, -103, -13, 75, 165, 255, 345, 435, 570, 749, 1109,
-872, -481, -285, -139, -41, 56, 154, 251, 349, 447, 545, 691, 887, 1278,
-930, -604, -440, -318, -236, -154, -72, 8, 90, 172, 253, 376, 539, 866,
-1063, -707, -528, -394, -305, -216, -127, -38, 51, 140, 229, 363, 541, 898,
-1193, -696, -448, -262, -138, -14, 109, 234, 358, 482, 606, 792, 1040, 1537,
-916, -550, -366, -229, -137, -46, 45, 137, 228, 320, 412, 549, 732, 1099,
-846, -503, -332, -203, -117, -32, 53, 139, 224, 310, 395, 524, 695, 1038,
-1089, -660, -445, -284, -177, -70, 37, 144, 251, 359, 466, 627, 842, 1271,
-972, -601, -415, -276, -183, -91, 1, 94, 187, 279, 372, 511, 697, 1068,
-1031, -601, -386, -225, -118, -10, 96, 204, 311, 419, 526, 687, 902, 1332,
-983, -607, -418, -277, -183, -89, 4, 98, 192, 286, 380, 521, 709, 1086,
-891, -573, -414, -295, -215, -136, -57, 22, 101, 181, 260, 379, 538, 856,
-903, -573, -408, -285, -202, -120, -37, 44, 127, 209, 292, 416, 581, 911,
-802, -477, -314, -192, -110, -29, 52, 133, 214, 296, 377, 499, 662, 988,
-930, -570, -390, -255, -166, -76, 13, 103, 193, 283, 373, 508, 688, 1047,
-939, -611, -447, -325, -243, -161, -79, 2, 84, 166, 247, 370, 534, 862,
-888, -605, -463, -357, -286, -215, -144, -74, -3, 67, 138, 244, 386, 669,
-1182, -780, -579, -428, -328, -227, -127, -26, 73, 174, 274, 425, 626, 1028,
-1272, -874, -675, -526, -427, -327, -228, -128, -29, 70, 169, 318, 517, 915,
-1024, -667, -489, -355, -266, -177, -88, 0, 89, 179, 268, 402, 580, 937,
-945, -615, -450, -327, -245, -162, -80, 2, 84, 166, 249, 372, 537, 866,
-1043, -668, -481, -340, -246, -153, -59, 34, 127, 221, 314, 455, 642, 1017,
-1066, -667, -467, -318, -218, -118, -18, 81, 180, 280, 380, 530, 729, 1128,
-1012, -643, -459, -320, -228, -136, -43, 48, 140, 232, 325, 463, 647, 1016,
-779, -448, -282, -158, -75, 7, 89, 172, 255, 338, 420, 544, 710, 1041,
-1071, -660, -455, -301, -199, -96, 5, 108, 211, 313, 416, 570, 775, 1185,
-846, -483, -301, -165, -74, 16, 107, 197, 288, 379, 470, 606, 787, 1151,
-1040, -601, -381, -217, -107, 2, 111, 221, 331, 441, 550, 715, 934, 1373,
-655, -361, -213, -103, -29, 43, 117, 191, 264, 338, 412, 522, 670, 964,
-944, -629, -472, -354, -275, -196, -118, -39, 39, 117, 196, 314, 472, 786,
-902, -545, -367, -233, -144, -55, 33, 123, 212, 301, 390, 524, 703, 1059,
-1081, -742, -572, -445, -360, -275, -190, -105, -20, 64, 149, 276, 446, 786,
-889, -572, -414, -295, -216, -137, -57, 21, 100, 179, 258, 377, 536, 852,
-875, -524, -349, -218, -130, -42, 44, 132, 219, 307, 395, 526, 701, 1052,
-1283, -932, -757, -626, -538, -450, -363, -275, -188, -100, -12, 118, 293, 644,
-1180, -819, -639, -503, -413, -323, -232, -142, -52, 37, 128, 263, 444, 805,
-1050, -697, -520, -387, -299, -211, -122, -34, 53, 142, 230, 363, 539, 893,
-809, -478, -313, -189, -106, -24, 58, 140, 223, 306, 388, 512, 677, 1008,
};

static uint64_t backbone_model3_conv2_conv2_weight[64 * 9] =
{ // torch.Size([64, 3, 3, 1])
0xb, 0xa, 0xb, 0xb, 0x5, 0xa, 0x2, 0x6, 0x2, 
0xa, 0x9, 0x3, 0x3, 0xe, 0xb, 0x2, 0x3, 0xc, 
0x2, 0x3, 0x8, 0x3, 0x4, 0x3, 0xb, 0xd, 0x8, 
0xb, 0xc, 0xb, 0x3, 0xc, 0xc, 0x4, 0x3, 0xd, 
0x8, 0x5, 0x5, 0xc, 0x1, 0x4, 0xa, 0xa, 0x2, 
0x9, 0xd, 0xc, 0x0, 0x3, 0xa, 0x9, 0x4, 0x3, 
0xa, 0xb, 0xb, 0x5, 0xb, 0xb, 0x4, 0x1, 0x9, 
0xc, 0xc, 0xd, 0xc, 0xb, 0xb, 0x8, 0x8, 0xb, 
0xb, 0xc, 0x8, 0x0, 0x5, 0x2, 0xd, 0xa, 0xa, 
0xc, 0xe, 0x2, 0x1, 0xb, 0x4, 0x3, 0x3, 0x2, 
0xb, 0xe, 0x3, 0x4, 0x1, 0x3, 0x1, 0x0, 0x8, 
0x3, 0x2, 0x5, 0x0, 0xb, 0x2, 0x2, 0x4, 0x4, 
0x2, 0x4, 0x3, 0xb, 0x3, 0x2, 0xc, 0xd, 0xc, 
0xb, 0xd, 0xc, 0x4, 0x3, 0xc, 0xb, 0x4, 0x3, 
0x3, 0xa, 0x3, 0xc, 0xb, 0x3, 0xd, 0xd, 0x2, 
0x0, 0xb, 0x4, 0x2, 0xd, 0x0, 0xc, 0xc, 0x9, 
0x3, 0x2, 0xc, 0x4, 0xb, 0xc, 0x2, 0xa, 0xc, 
0x3, 0x9, 0xb, 0x5, 0xb, 0x2, 0x5, 0x2, 0x3, 
0x4, 0xc, 0xd, 0x3, 0xb, 0x9, 0x4, 0x8, 0x9, 
0xd, 0x3, 0x3, 0xd, 0x4, 0x4, 0xc, 0x9, 0x0, 
0xa, 0xa, 0xb, 0xc, 0xb, 0xa, 0xb, 0xc, 0xb, 
0x3, 0xd, 0x2, 0xa, 0xb, 0x5, 0x2, 0x4, 0xb, 
0xb, 0xb, 0xb, 0xb, 0xb, 0xc, 0xc, 0xc, 0xb, 
0x2, 0xc, 0x0, 0xc, 0x3, 0x4, 0x8, 0x5, 0xa, 
0x3, 0x4, 0x4, 0x3, 0x4, 0x4, 0xb, 0xc, 0xc, 
0x3, 0x3, 0x4, 0x3, 0x4, 0x3, 0x9, 0x5, 0x3, 
0xb, 0xc, 0x3, 0xb, 0xd, 0x0, 0x0, 0xb, 0xb, 
0x2, 0xc, 0xc, 0x2, 0xd, 0xc, 0x4, 0x0, 0xb, 
0xb, 0x2, 0xb, 0x1, 0x6, 0x0, 0x2, 0xc, 0x2, 
0x4, 0x5, 0x3, 0x5, 0x4, 0xb, 0x9, 0x9, 0x9, 
0x4, 0x4, 0x2, 0x3, 0x5, 0x4, 0x3, 0x4, 0x2, 
0xb, 0xd, 0x8, 0x2, 0xc, 0x3, 0xb, 0xc, 0x3, 
0xd, 0xd, 0x2, 0xb, 0xb, 0x2, 0x0, 0x3, 0x3, 
0x4, 0x4, 0x4, 0x2, 0x3, 0x3, 0x9, 0x3, 0x3, 
0x3, 0x3, 0x0, 0xc, 0xc, 0xa, 0xa, 0xb, 0xc, 
0xd, 0xc, 0xb, 0xc, 0x0, 0x9, 0xb, 0x9, 0x0, 
0xb, 0x0, 0x3, 0xc, 0xc, 0x3, 0xa, 0xd, 0xc, 
0x2, 0x4, 0x3, 0x3, 0x4, 0xc, 0x3, 0xa, 0xc, 
0xc, 0xd, 0xc, 0x0, 0x1, 0x9, 0x4, 0x4, 0x4, 
0xb, 0xd, 0xc, 0xc, 0x4, 0xc, 0xa, 0x4, 0x3, 
0xa, 0x0, 0x9, 0xc, 0xc, 0xb, 0xa, 0xc, 0xd, 
0x3, 0x4, 0xd, 0xa, 0x4, 0xc, 0xb, 0x2, 0x4, 
0xb, 0x5, 0xb, 0xd, 0x2, 0xb, 0x4, 0x3, 0x1, 
0xb, 0x3, 0x0, 0x4, 0x5, 0x4, 0x4, 0x3, 0x9, 
0x3, 0x3, 0x4, 0x3, 0x4, 0x3, 0x4, 0x5, 0x1, 
0xa, 0x0, 0xa, 0x4, 0x3, 0xc, 0x5, 0x1, 0xc, 
0xc, 0x3, 0x3, 0xd, 0x3, 0x4, 0xc, 0x2, 0x3, 
0x8, 0xb, 0xd, 0x5, 0x4, 0xc, 0x3, 0x3, 0xb, 
0xa, 0xb, 0xc, 0xc, 0xc, 0xb, 0xc, 0xc, 0x2, 
0xc, 0x2, 0x0, 0xd, 0xd, 0x1, 0xa, 0xc, 0xc, 
0x5, 0x2, 0xb, 0x2, 0xc, 0xc, 0xa, 0xd, 0xc, 
0x3, 0x4, 0x3, 0x3, 0x4, 0x3, 0x2, 0x3, 0x3, 
0x8, 0xb, 0xa, 0xb, 0xd, 0xc, 0xb, 0x3, 0xc, 
0x4, 0xc, 0xb, 0x8, 0x3, 0x4, 0x8, 0x4, 0x5, 
0x2, 0x4, 0xa, 0x1, 0xd, 0xc, 0xd, 0xc, 0xb, 
0xc, 0xc, 0xc, 0x3, 0x1, 0x1, 0x4, 0x5, 0x4, 
0x4, 0xb, 0xb, 0x3, 0x4, 0x0, 0xa, 0x3, 0x4, 
0x4, 0x4, 0x5, 0x3, 0x2, 0x4, 0x0, 0x0, 0xa, 
0xc, 0xc, 0xc, 0xb, 0x8, 0xb, 0x4, 0x4, 0x4, 
0xb, 0xc, 0x0, 0xb, 0xc, 0x4, 0xc, 0xb, 0x4, 
0xc, 0xc, 0xb, 0xc, 0xc, 0x2, 0xc, 0x9, 0x1, 
0xc, 0x3, 0x4, 0xd, 0x4, 0x3, 0x0, 0x5, 0x2, 
0x2, 0x2, 0x4, 0x2, 0x4, 0x4, 0x4, 0x4, 0xb, 
0xc, 0xd, 0xc, 0xb, 0xb, 0x9, 0xb, 0x1, 0xb, 
};

static int backbone_model3_conv2_relu2_threshold[64 * 7] =
{ // torch.Size([64, 7])
43, 111, 180, 248, 350, 486, 759,
0, 53, 106, 159, 239, 345, 557,
2, 45, 87, 130, 194, 279, 449,
-26, 27, 81, 134, 215, 323, 539,
71, 112, 153, 194, 256, 338, 502,
76, 110, 144, 179, 230, 298, 434,
59, 88, 116, 145, 188, 245, 359,
-29, 28, 86, 144, 232, 348, 581,
-61, -16, 28, 73, 140, 230, 409,
6, 55, 104, 153, 226, 324, 519,
32, 80, 128, 176, 248, 345, 537,
-24, 14, 54, 93, 153, 232, 390,
23, 60, 97, 134, 189, 262, 409,
18, 56, 94, 132, 189, 266, 418,
46, 80, 115, 149, 201, 270, 408,
26, 68, 110, 152, 215, 299, 467,
32, 64, 96, 129, 177, 242, 371,
48, 112, 175, 238, 333, 459, 712,
105, 141, 176, 212, 265, 336, 478,
-1, 34, 70, 106, 161, 233, 378,
44, 97, 150, 203, 283, 389, 601,
-12, 33, 80, 127, 197, 291, 478,
-16, 29, 74, 120, 189, 280, 464,
-3, 46, 95, 145, 219, 318, 516,
55, 85, 115, 145, 189, 249, 368,
137, 205, 273, 340, 442, 578, 850,
-144, -63, 16, 97, 218, 380, 703,
66, 106, 145, 185, 244, 323, 481,
-24, 36, 98, 159, 251, 374, 620,
32, 99, 167, 234, 336, 470, 740,
-128, -44, 39, 123, 249, 417, 752,
47, 90, 133, 177, 242, 328, 502,
14, 58, 103, 147, 214, 303, 481,
50, 99, 147, 196, 269, 367, 562,
2, 48, 93, 139, 208, 299, 482,
32, 87, 141, 196, 277, 386, 604,
-31, 25, 82, 138, 224, 337, 565,
-8, 26, 62, 98, 152, 224, 368,
65, 111, 158, 204, 274, 367, 553,
17, 55, 92, 129, 186, 260, 410,
-9, 34, 78, 122, 188, 276, 452,
19, 54, 89, 124, 177, 247, 387,
-44, 7, 59, 111, 190, 294, 503,
-4, 42, 89, 137, 207, 302, 491,
-1, 44, 91, 137, 207, 300, 486,
109, 148, 187, 225, 284, 361, 516,
55, 93, 131, 170, 227, 304, 457,
86, 124, 161, 199, 255, 330, 480,
6, 57, 109, 161, 238, 341, 548,
-32, 23, 79, 134, 217, 328, 551,
54, 106, 158, 209, 287, 390, 597,
12, 58, 104, 150, 219, 311, 495,
23, 73, 123, 173, 248, 347, 547,
25, 62, 98, 134, 189, 262, 407,
122, 172, 221, 271, 345, 444, 642,
65, 116, 166, 217, 293, 394, 597,
38, 73, 109, 145, 198, 270, 413,
28, 84, 140, 196, 280, 392, 616,
108, 146, 184, 223, 280, 356, 509,
11, 49, 86, 123, 178, 252, 401,
34, 94, 155, 216, 307, 428, 670,
51, 103, 154, 206, 283, 386, 592,
45, 94, 142, 191, 265, 362, 558,
40, 89, 139, 188, 262, 360, 557,
};

static uint64_t backbone_model4_conv1_conv1_weight[64 * 1*4] =
{ // torch.Size([64, 1, 1, 64])
0x2133c402324a3133,0xc321b28404134340,0x26088a03b483bb23,0xb3223b042a3832a3, 
0xb3dbc443034b0ca3,0x9a0cc2b4c2dc2b4a,0xb4224b923ab1cb3d,0xcc323332bb2ba239, 
0xa82313a32bb4a32c,0x1b34ba914c120422,0x0aa4124b20c29321,0xc43ccc34b32d44c2, 
0xcb4c2d303c4ba5c3,0xa38acb9438353ab3,0xbb38a240ba843442,0x4a4ba444444834ac, 
0xd80b459cc5c1a280,0x984a4bcc2c2c5b13,0xacd34c440bb3bbcc,0x1bc53339430acb10, 
0xc03bbb9cca2382d1,0x4bcda0bb343cccc8,0x2bc0b5aa8c0ccda5,0x8409b330ac0aa43a, 
0x34ccc3924042c2b4,0xbacab984c4ba9b3a,0xc3c0433b1435bb3b,0xc23ab0323132b92a, 
0x0c3ba508d55b21c4,0x34c3490413c39431,0x34224443adcc14cd,0x240223234a3ca3b1, 
0x4c0bbba2c5422cba,0x43a4c23c08232443,0xa3214a4b13bb32a0,0xc3ac2a8b214c33ab, 
0x2ca33b3331ab2aa2,0xc39c3ca30c243bc3,0xc90ba844c3b3b2b2,0x48aba8093039cbbc, 
0xcccc230a3a240ac5,0xcca3a10a40b02b3c,0xad2032ab2baa339a,0xc23b32329abbb3cb, 
0xc333b3144db1d52c,0xa0cb4b1a24104a4b,0xd4b9c3cb102cbb3c,0xa314cbb34b44148c, 
0xd43b33c21c2440b3,0x2babc9b3ac0a4bbc,0x3ca9b23494142449,0xa1422834014c3429, 
0x34c3dc432b542b04,0xbd3c2311033cc242,0x3cc1c3c24424c332,0x923cb0cb0bc92c2c, 
0xbacb2943293abb3b,0x4301da3b22232aa3,0xbc9044284bcb34cb,0xb5b22c413b52448b, 
0x328b83c93394c134,0xb9c4c222008adaac,0x2c0290bb122abcb3,0x89024bc8c0baca39, 
0x241329dd23a38420,0xcb4422b331434c44,0xbbb31b330093932a,0xc23a42bb1000d3a0, 
0xb04b48412cb1b4c6,0x14a5bb2b32c33148,0x2c32cccc3ba19333,0x28934230acb53bbc, 
0x91ccc233204a1b33,0xcbb1121424ac4b33,0xc4b34225ab11bc3c,0xba84c23a532bb34b, 
0x32c2a02a02c4c383,0xb2c4308c433b93bc,0xadbbc2cd2a3bab44,0xc12b49bbccc3abca, 
0x439124c45baa0ba2,0xbbb92236330600cc,0xca2223b9b4a481cb,0x3bb9babab3ab204a, 
0x903c2c4bbbacd42d,0xa8c85a4c94133ac3,0x2b8304bc401b4434,0x3344a333a9134342, 
0xa3b3b2cc03334da4,0xbb23c220acbcb04a,0x9c00bb42ca13bbbb,0xd9c82bb9ac22b9ac, 
0x3cb084c393d4cb4c,0x3a44b48cbb950323,0xa343431a82b0abb2,0x4ca24bb0b4483a43, 
0x5c043bd942410a45,0x14b2a232909a32cb,0x4a12aac1b53d2429,0x33490a10d28b99b9, 
0x93b52d44ba44bbcc,0x493b4910ccc2344b,0xa34acc3d3dad233b,0x9ccd229b11a5bbba, 
0xc43532325abb52c2,0x3b3b823444a0d34c,0x4acbcb938c9d343b,0xdc2043414ba0c2cc, 
0x3332283b954dc3b4,0x38bc2ab2ccbc32b4,0x45c3cb53b10ac022,0xb39b32422c2a3102, 
0xac4bbb1b9c2cb3bc,0xb4cb25cb82c453c3,0x39b9acdca04b21ca,0x5a31b632bacc3033, 
0xcbb2a2b8ccb538cc,0xcc3c3ac442404cc4,0x9403c23390a44aba,0x4922c2b0432cab43, 
0x4da0aca3cb434442,0xaa0c31a533433452,0x38aab321c22a02d4,0x2ab023a843a2ca3b, 
0xb34bc24aa3b42a35,0x2b5333ab4b4acc23,0x02c4b0354923abab,0x4c435b23abbc4a43, 
0x940bb3ccbccba05c,0x24c44a141a41b342,0xbdcabbc41103a2bb,0x3bb43c8aa4312948, 
0x42ddb35344bbdc34,0x3345a293a223292b,0xd1834b44a592bc34,0xbb13c29a4ac21a43, 
0xac2ab8920b49b44b,0xb034a4c10adb0b03,0xb9323db81c3944bc,0x983ab5a4c81a4812, 
0xbcbcadba334548cc,0xdbccc3a033ba3218,0x4ca0bb9bb53b98b4,0xa4bc4a92443cb93b, 
0x4424cccaa53cc1c4,0x8c4c02ac008c9c04,0x15c0ac2a93123443,0xcb1aa2a3bbb4c201, 
0x830235bba40bb334,0xb02c3bb21a9b23c4,0x34184c02bb4233cb,0xb3a44912ca34a324, 
0x2cddc9bcaac5cccc,0xdcd4d3133dad40c4,0x24542dcc8cb4cdac,0x3bc94bc22a39c345, 
0x4ac4c1b3a3aaa832,0xb90c4dda94bbca22,0xba9c9b23c3dabaab,0xbc092bbb8bbaccca, 
0x0324b4b323c3294a,0x2bb2a3bad8cd3a32,0x242331bbc2b3ac33,0x33dccbdba142bcc9, 
0xa2ad4bbc8943c2bb,0x12a15b4c3533a4a3,0x4c30340c4a303492,0xc4341c414b3295ab, 
0x44cbd4c9bb3bd4b0,0xdba32b140b484034,0xc4cbbb32ac32bc90,0xc0b8a3b13b44c3ba, 
0xacab852ad101bc25,0x32a2203c443c3342,0x93c8b2843aa1bccb,0xa3caa0a24ccd292b, 
0x343cca904a212402,0x8b25c0928813b343,0x49504a4b280142a3,0xc20242222544b0b8, 
0x4abcbc4c38341ac4,0xb1dc2220b3cb4bb4,0xbd0139cc2108bcab,0x3b3a0232338bbb3b, 
0xb4b049342b0a0bca,0x40bc432424b3ccbb,0xb432b4c9493c3bab,0x4c043b00cba95a53, 
0xcacbc330aac3c300,0x2b49aacac1bc2b4b,0xaa1abb91b1c4ba3b,0xc4cc9a8c492192bb, 
0xab1d3b5c4c3821bb,0x59c3489b2bbb05d3,0x3acbc3bbb9a03513,0x344c024359cb49cc, 
0x5cb3cdc3c5a4c235,0xc2aa12312313b091,0xba421cca8a9d8a40,0xb93c2b22c4a8a333, 
0x9542443b43bb4245,0x01bb3a848b19122b,0xbd8093b490b4a33b,0x8180b0423b81a2bb, 
0x23cbd132153aa4b3,0x3cbc09b1080aeca3,0x4420a2a29c241343,0xb22340a3bc34bb93, 
0xd53334432a3044dc,0x3b3a3cb2b332ccc4,0x55ba03540bb30402,0x212bbba121214b33, 
0x1bc5bbc3bb2b4c33,0xca32a833cd3232bb,0x9a3b3b24b29b34ca,0x8ccc83ab8ac4c928, 
0xcdc43954d0424c28,0x48bcb21aa2c4b42c,0x043b43caa3bb29ab,0x3a04ba32ba8b4291, 
0x25a822ec9a5b2ca3,0xb4c340c3a3204b33,0x24c81c1b2b3c44ab,0xc90230333b23cbb3, 
0xccc1c1cccd3c1b4c,0x5b4a22a5bc4420c4,0xb419c9440bb332d9,0xacb9a3204ba3342a, 
0xbb3c53b8cb2c3139,0x8c80aa21bb38b2d3,0x634b34bc1b03344a,0x42b11c90c44c0023, 
0xc8b4a2aaba314bb3,0xab9baa09b9bbca4a,0xbcbab832cbbbbbbc,0xb9aba9214acbc9bb, 
0x8b33c00cc250dbab,0xcbcbb4634342b54b,0xcda534ac5c5bbc0b,0x42544424bcd3945c, 
0xcc3414b2aa404abc,0x4404d229bac3cb4c,0x3022242ca209bc93,0xab931c32d0302202, 
0x44ccc3a24393b4bb,0xbc5aabb43514cca4,0xc3c394242b03cbca,0x2044aa92344ab343, 
0xcd333b33bb2540b4,0xa32cbbcb4bc4333c,0x8c5ac3bcc2bac00b,0x302ccccb443b20cd, 
0x4a1494bcdbb3cb43,0xba8d599b242dc123,0xa2c0b4c32cac3bab,0x1a91cba3bcb9b412, 
};

static int backbone_model4_conv1_quant1_threshold[64 * 14] =
{ // torch.Size([64, 14])
-884, -479, -276, -125, -23, 77, 178, 280, 381, 482, 583, 735, 938, 1343,
-1560, -1068, -823, -639, -516, -393, -270, -147, -25, 97, 220, 404, 650, 1141,
-849, -516, -349, -224, -141, -58, 25, 108, 191, 274, 358, 482, 649, 982,
-886, -460, -248, -88, 17, 124, 230, 337, 443, 549, 656, 815, 1028, 1453,
-1396, -930, -697, -522, -405, -289, -172, -56, 60, 177, 293, 468, 701, 1168,
-1266, -826, -607, -442, -332, -222, -113, -3, 106, 216, 326, 490, 710, 1149,
-1327, -791, -522, -321, -187, -53, 80, 215, 349, 483, 617, 818, 1087, 1623,
-1075, -661, -454, -299, -196, -92, 10, 114, 217, 321, 424, 579, 786, 1200,
-1047, -658, -463, -317, -220, -122, -25, 71, 169, 266, 363, 509, 704, 1093,
-1170, -794, -606, -464, -370, -276, -182, -88, 5, 99, 193, 334, 522, 898,
-1479, -1009, -775, -598, -481, -363, -246, -129, -11, 105, 223, 399, 634, 1104,
-1294, -848, -624, -457, -345, -233, -122, -10, 101, 212, 324, 492, 715, 1162,
-1055, -656, -456, -307, -207, -107, -7, 92, 192, 291, 391, 541, 741, 1140,
-1202, -773, -559, -398, -290, -183, -76, 30, 138, 245, 352, 513, 728, 1157,
-879, -538, -367, -239, -154, -68, 16, 102, 187, 272, 358, 486, 657, 998,
-1200, -802, -603, -454, -355, -255, -156, -56, 42, 142, 241, 390, 589, 987,
-1070, -683, -489, -344, -247, -150, -54, 42, 139, 236, 333, 478, 671, 1058,
-1072, -675, -477, -328, -229, -130, -30, 68, 167, 266, 365, 514, 713, 1109,
-1295, -806, -561, -378, -255, -133, -11, 111, 233, 355, 477, 661, 905, 1394,
-1355, -928, -715, -555, -448, -342, -235, -129, -22, 84, 190, 350, 563, 990,
-1136, -645, -400, -216, -93, 29, 152, 275, 397, 520, 643, 827, 1072, 1564,
-1227, -716, -460, -268, -141, -13, 114, 242, 370, 497, 625, 817, 1072, 1583,
-1448, -1005, -784, -618, -507, -397, -286, -176, -65, 45, 155, 321, 543, 985,
-1071, -630, -409, -244, -134, -24, 86, 196, 306, 416, 526, 692, 912, 1353,
-1088, -710, -520, -378, -284, -189, -94, 0, 94, 189, 283, 425, 615, 993,
-1332, -910, -699, -541, -435, -330, -224, -119, -13, 91, 197, 355, 566, 988,
-1334, -830, -578, -389, -263, -138, -12, 113, 239, 365, 491, 680, 932, 1436,
-1162, -714, -490, -322, -210, -98, 13, 125, 237, 349, 461, 629, 853, 1301,
-1212, -691, -431, -236, -106, 23, 153, 283, 413, 544, 674, 869, 1129, 1649,
-1266, -799, -566, -391, -274, -157, -41, 75, 192, 309, 425, 600, 834, 1301,
-845, -489, -311, -178, -89, 0, 88, 177, 266, 354, 443, 577, 755, 1110,
-1336, -763, -476, -261, -118, 24, 167, 311, 454, 597, 740, 955, 1242, 1815,
-919, -595, -433, -312, -231, -150, -69, 11, 92, 173, 254, 375, 537, 861,
-1375, -827, -553, -348, -211, -74, 62, 198, 335, 472, 609, 814, 1088, 1636,
-1105, -713, -516, -369, -271, -173, -75, 22, 121, 219, 317, 464, 660, 1053,
-1056, -657, -458, -309, -209, -110, -10, 88, 188, 287, 387, 536, 735, 1134,
-1180, -760, -550, -392, -287, -182, -77, 27, 132, 237, 342, 499, 709, 1129,
-984, -588, -390, -242, -143, -44, 54, 153, 252, 351, 450, 598, 796, 1192,
-1784, -1241, -969, -765, -629, -493, -357, -221, -85, 50, 185, 389, 661, 1205,
-1893, -1333, -1053, -844, -704, -564, -424, -284, -144, -4, 135, 345, 625, 1185,
-1564, -1104, -875, -702, -587, -472, -357, -242, -128, -13, 101, 274, 504, 963,
-1027, -551, -312, -134, -15, 103, 222, 342, 461, 580, 699, 877, 1116, 1592,
-1644, -1113, -848, -649, -517, -384, -251, -119, 13, 145, 278, 477, 742, 1273,
-1453, -943, -688, -497, -369, -242, -115, 12, 139, 267, 394, 586, 840, 1350,
-1034, -571, -339, -165, -49, 66, 182, 297, 413, 529, 645, 819, 1051, 1514,
-1047, -699, -525, -394, -307, -220, -133, -46, 40, 128, 215, 345, 519, 868,
-1099, -626, -390, -213, -95, 22, 140, 259, 377, 495, 613, 790, 1026, 1499,
-1706, -1231, -993, -815, -696, -577, -458, -339, -220, -101, 17, 195, 433, 909,
-1179, -601, -311, -94, 49, 194, 339, 483, 628, 773, 917, 1134, 1424, 2002,
-983, -628, -450, -317, -228, -139, -50, 38, 127, 216, 305, 438, 616, 971,
-852, -492, -312, -178, -88, 1, 91, 181, 271, 361, 451, 586, 765, 1125,
-1313, -870, -648, -482, -371, -261, -150, -39, 70, 181, 292, 458, 679, 1122,
-1441, -872, -587, -374, -232, -89, 52, 194, 336, 478, 621, 834, 1119, 1687,
-1234, -839, -641, -493, -394, -295, -196, -97, 1, 99, 198, 347, 544, 940,
-1120, -715, -513, -361, -260, -159, -57, 43, 144, 245, 347, 498, 701, 1106,
-1377, -900, -662, -483, -364, -245, -126, -7, 111, 230, 349, 528, 766, 1243,
-980, -621, -441, -307, -217, -127, -37, 52, 141, 231, 321, 456, 635, 994,
-1194, -713, -472, -292, -172, -51, 68, 188, 308, 429, 549, 729, 970, 1451,
-1379, -964, -757, -601, -497, -394, -290, -186, -82, 20, 124, 280, 487, 902,
-1498, -687, -282, 21, 224, 427, 629, 832, 1035, 1237, 1440, 1744, 2149, 2960,
-1156, -755, -555, -405, -305, -205, -105, -5, 94, 195, 295, 445, 645, 1045,
-1131, -689, -467, -301, -191, -80, 29, 140, 251, 361, 472, 638, 859, 1301,
-1642, -1129, -872, -680, -551, -423, -295, -167, -38, 89, 217, 410, 667, 1180,
-1074, -699, -511, -371, -277, -183, -89, 4, 97, 191, 285, 426, 613, 988,
};

static uint64_t backbone_model4_conv1_conv2_weight[64 * 9] =
{ // torch.Size([64, 3, 3, 1])
0xe, 0xd, 0x4, 0xc, 0xa, 0x4, 0xc, 0x3, 0x5, 
0x4, 0x5, 0xc, 0x4, 0x4, 0xc, 0x4, 0x3, 0xc, 
0x3, 0x5, 0xb, 0xc, 0xd, 0x3, 0x3, 0x3, 0x8, 
0x0, 0x4, 0x4, 0xc, 0x2, 0x6, 0xa, 0xc, 0xb, 
0x3, 0x4, 0xb, 0x5, 0x5, 0x8, 0x3, 0x3, 0xb, 
0x6, 0xc, 0xc, 0x5, 0xc, 0xc, 0x4, 0xa, 0xc, 
0xc, 0xb, 0xc, 0xb, 0x1, 0xb, 0x4, 0x5, 0x5, 
0x4, 0x0, 0xc, 0x2, 0xc, 0xd, 0xb, 0xd, 0xb, 
0x5, 0x3, 0xd, 0xa, 0xd, 0xc, 0xb, 0xa, 0x0, 
0xb, 0x4, 0xa, 0xb, 0x5, 0x2, 0xb, 0x3, 0x2, 
0xe, 0xc, 0x0, 0xc, 0x4, 0x3, 0xb, 0x4, 0x4, 
0x2, 0x2, 0x3, 0xa, 0xb, 0xc, 0xc, 0xd, 0xd, 
0x3, 0x3, 0x3, 0x2, 0x4, 0xa, 0xd, 0xe, 0xc, 
0x3, 0x3, 0x8, 0x4, 0xe, 0xc, 0x3, 0xb, 0x0, 
0x5, 0xd, 0xb, 0xb, 0x3, 0x4, 0xb, 0x4, 0x4, 
0x4, 0x5, 0x3, 0x4, 0x3, 0xc, 0x9, 0xc, 0xc, 
0xa, 0xd, 0xc, 0x4, 0xb, 0xb, 0x4, 0x4, 0xb, 
0x9, 0xd, 0x5, 0xc, 0xb, 0x4, 0x9, 0x4, 0x4, 
0xa, 0x4, 0x5, 0x2, 0x4, 0x4, 0xc, 0xb, 0x0, 
0xc, 0xb, 0x4, 0xc, 0xb, 0x5, 0x1, 0x4, 0x5, 
0xc, 0xb, 0xa, 0x4, 0xc, 0xc, 0x6, 0x4, 0x2, 
0xc, 0xd, 0xc, 0xb, 0x4, 0x6, 0xb, 0x4, 0x5, 
0x4, 0x4, 0x4, 0xc, 0x4, 0x5, 0xd, 0xd, 0x3, 
0xa, 0xb, 0xb, 0x4, 0x2, 0xb, 0x5, 0x5, 0x3, 
0xc, 0xd, 0xd, 0x3, 0x9, 0x4, 0x4, 0x2, 0x4, 
0x4, 0x4, 0x1, 0x4, 0x4, 0x3, 0x3, 0xa, 0x3, 
0x3, 0x4, 0x4, 0x3, 0x3, 0x4, 0x1, 0x3, 0x2, 
0xc, 0x4, 0x5, 0xc, 0xb, 0x5, 0xb, 0xb, 0x3, 
0x2, 0xb, 0x9, 0x3, 0x6, 0xb, 0x3, 0x8, 0x0, 
0xd, 0x1, 0x3, 0xb, 0x5, 0x5, 0x1, 0x4, 0x2, 
0xc, 0x4, 0x3, 0x2, 0xc, 0x4, 0x4, 0xd, 0xd, 
0xc, 0xb, 0x1, 0x3, 0x6, 0x4, 0x3, 0x1, 0x3, 
0xd, 0x5, 0x9, 0xd, 0xb, 0x5, 0x3, 0xb, 0x9, 
0x2, 0x5, 0x4, 0xa, 0x4, 0xc, 0x4, 0x4, 0xa, 
0x2, 0xa, 0x1, 0xc, 0x6, 0x3, 0xa, 0x9, 0x1, 
0xc, 0xd, 0xd, 0xa, 0x2, 0xb, 0xb, 0x1, 0xa, 
0xd, 0x5, 0x4, 0xc, 0x4, 0x4, 0xc, 0xc, 0xb, 
0x4, 0x2, 0xb, 0x5, 0xc, 0xb, 0x5, 0xc, 0xc, 
0x2, 0x0, 0x9, 0x4, 0x4, 0x4, 0x4, 0x4, 0x3, 
0x0, 0x3, 0x4, 0x3, 0x4, 0x4, 0x0, 0x3, 0x3, 
0x3, 0x9, 0x1, 0xe, 0x4, 0xc, 0x2, 0x2, 0x1, 
0xa, 0x3, 0x4, 0xa, 0x6, 0xb, 0x3, 0x3, 0x9, 
0x4, 0x4, 0x4, 0x3, 0x4, 0x4, 0x0, 0x1, 0xb, 
0xc, 0xd, 0xc, 0xc, 0x3, 0x2, 0x4, 0x4, 0x4, 
0x5, 0x3, 0xd, 0x4, 0x6, 0xc, 0xa, 0xc, 0xd, 
0x4, 0x5, 0x4, 0xa, 0x3, 0xb, 0xd, 0xd, 0xc, 
0x4, 0xc, 0xc, 0xb, 0x5, 0xc, 0xa, 0x4, 0x4, 
0x2, 0xd, 0xb, 0x5, 0x4, 0xc, 0x4, 0xb, 0xd, 
0x4, 0x6, 0x5, 0xb, 0xc, 0x2, 0x4, 0xc, 0x1, 
0xc, 0xa, 0xb, 0xd, 0xe, 0xb, 0x4, 0x5, 0x2, 
0x4, 0x4, 0x4, 0x4, 0xb, 0x3, 0xd, 0xc, 0xc, 
0xe, 0xd, 0x3, 0xc, 0x3, 0x3, 0xa, 0x4, 0x1, 
0xc, 0xa, 0xb, 0xc, 0x3, 0xb, 0xc, 0xb, 0xc, 
0xb, 0x5, 0x3, 0xd, 0xa, 0x2, 0xc, 0xa, 0x0, 
0xb, 0x4, 0x3, 0x3, 0x3, 0x9, 0xa, 0xd, 0xc, 
0x5, 0xc, 0xd, 0x0, 0x3, 0xd, 0xa, 0x2, 0xb, 
0xb, 0xc, 0x5, 0xc, 0x1, 0xa, 0x5, 0x4, 0xb, 
0x2, 0x5, 0x0, 0xb, 0x4, 0xb, 0x0, 0x5, 0xb, 
0x4, 0x5, 0x4, 0x5, 0x3, 0x8, 0xb, 0xc, 0xc, 
0x4, 0x3, 0x4, 0x5, 0x4, 0x4, 0x3, 0x3, 0x2, 
0xe, 0xd, 0x3, 0x2, 0x4, 0x4, 0x9, 0x1, 0xb, 
0xa, 0xc, 0x3, 0xb, 0xc, 0x9, 0xc, 0xd, 0x1, 
0x3, 0x2, 0x0, 0x9, 0xd, 0xb, 0x8, 0xd, 0xc, 
0x3, 0xc, 0xc, 0x4, 0xc, 0xb, 0x6, 0x4, 0x5, 
};

static int backbone_model4_conv1_relu2_threshold[64 * 7] =
{ // torch.Size([64, 7])
-3, 67, 138, 209, 316, 458, 742,
7, 63, 120, 176, 260, 372, 596,
46, 95, 143, 192, 266, 363, 559,
79, 143, 207, 271, 367, 495, 751,
-1, 54, 110, 166, 250, 362, 585,
86, 140, 193, 246, 325, 431, 644,
-27, 15, 57, 99, 163, 247, 417,
-31, 33, 99, 165, 263, 394, 657,
52, 95, 139, 183, 249, 337, 512,
-5, 36, 79, 122, 187, 272, 444,
-8, 57, 123, 188, 287, 418, 680,
-76, -3, 70, 144, 254, 401, 696,
-42, 52, 148, 244, 387, 579, 962,
67, 124, 181, 237, 322, 436, 663,
0, 55, 110, 165, 247, 357, 577,
-19, 33, 86, 140, 220, 326, 540,
28, 74, 120, 166, 235, 327, 512,
76, 120, 164, 208, 274, 362, 538,
9, 59, 110, 161, 237, 338, 541,
43, 102, 162, 221, 309, 427, 664,
36, 105, 174, 243, 346, 484, 760,
108, 160, 212, 264, 343, 447, 656,
71, 115, 159, 203, 269, 358, 535,
0, 55, 110, 165, 248, 359, 579,
-28, 27, 82, 138, 221, 332, 554,
13, 67, 122, 177, 259, 369, 588,
42, 84, 126, 168, 230, 314, 481,
41, 89, 138, 186, 259, 356, 549,
-54, 8, 71, 134, 229, 355, 608,
43, 103, 164, 224, 314, 435, 676,
45, 109, 173, 236, 332, 459, 713,
86, 138, 191, 243, 321, 425, 633,
37, 83, 129, 175, 244, 337, 521,
-28, 28, 85, 143, 229, 343, 572,
6, 66, 127, 187, 277, 398, 639,
71, 133, 195, 257, 350, 474, 722,
32, 73, 115, 156, 218, 300, 466,
2, 58, 113, 169, 252, 363, 586,
18, 78, 137, 197, 287, 406, 645,
-17, 15, 49, 83, 133, 201, 336,
26, 73, 119, 165, 235, 328, 513,
47, 102, 157, 212, 295, 405, 625,
51, 99, 146, 194, 265, 361, 551,
-5, 43, 93, 142, 216, 315, 513,
65, 128, 191, 254, 349, 475, 727,
-9, 56, 123, 189, 289, 422, 688,
16, 58, 100, 142, 204, 288, 455,
17, 75, 133, 191, 279, 395, 627,
-171, -123, -76, -29, 42, 136, 326,
70, 121, 172, 223, 300, 402, 607,
29, 74, 119, 165, 232, 323, 504,
36, 94, 151, 209, 295, 410, 640,
41, 78, 114, 150, 204, 276, 420,
3, 50, 97, 145, 216, 310, 499,
-1, 43, 88, 133, 200, 290, 469,
-57, 1, 59, 117, 204, 320, 553,
48, 84, 121, 158, 213, 287, 434,
12, 63, 113, 163, 239, 340, 541,
23, 71, 120, 168, 241, 339, 533,
-50, -17, 15, 47, 96, 161, 291,
-22, 42, 107, 173, 271, 402, 663,
43, 89, 135, 181, 250, 343, 527,
-15, 81, 178, 275, 421, 615, 1003,
65, 131, 198, 264, 364, 498, 764,
};

static uint64_t backbone_model4_conv2_conv1_weight[64 * 1*4] =
{ // torch.Size([64, 1, 1, 64])
0x43433a3304b2a345,0x2a80ab034ba02050,0x8ab039b32ba39024,0xac2b3a3c3300a148, 
0xaa034824ca1cb4c2,0x20acaa83903bba84,0xc5a1b9108b2bb24a,0xd3422bb9abbb909b, 
0x41b241bbbb4c8ab4,0xbbc39b452b32b2b0,0x3a349b2ac44c2bab,0x8b24cab3aa0a14b2, 
0xb349bcba48ca340a,0xbbcccc881b4a5b0c,0x3bcb1bb33bbb349b,0xcba3331bbb33b4ab, 
0xba01bc9a30bab23a,0xc2cccbabba2c3322,0x141bcbc391315b58,0xcb2bb3bbac42b03b, 
0x3cb8a3300b9a0039,0xc282993c295b23da,0xaa42b89b411a93b3,0x8a91b530c30320aa, 
0x13214b3348313349,0x32a23333414a4132,0x32a42a9243b3a0a2,0x9344b130433332a2, 
0xb30a04a3a2b310ca,0x00aaa24b43c2ca8a,0x1b0c9b2b0b4ac12b,0x2bbaab9c29a34bb3, 
0x1b321243b024c2b9,0x42233b3b3a4cc1aa,0xb3349b3b423b4b50,0x494ab3a143383b24, 
0xa2a03b4b2bbcbbb9,0x45b2cc2cacbbbbc0,0x0ba22bb3a12981a4,0xab2c3323ab3ba3b0, 
0x932a2bb109939ca1,0x9a9bb9cbb3baa6ca,0x2096aab8192a92aa,0xaa3b19b0b82904cb, 
0xbac3b12a42bcb233,0x192abb3b3b3cb23a,0x2ba8ab834b2223b3,0x9bbb4c0b4a34bc84, 
0x3ac5cbc0a3b89220,0x294a2ca4bcbdca2a,0xbb143ba4a4b4c2b1,0xc143ca2b21a0cad3, 
0x2cb0ab2cc9a3c344,0x0b0b4000bb99c9ab,0xcbcca3c3c8a20392,0xc28823c0c52ba34b, 
0xd0333b1334c3b234,0x3c001832b2481c2c,0x219023104a2191aa,0x82204abb08c32332, 
0xc4b40b03839394c8,0x213cb0bbc2933983,0xa328431c98aa3c3a,0xba3c32caacbbc0c1, 
0x131b43022032a280,0x3390b433b4893388,0x2123038a292a3901,0x4383bbb2bb1a343a, 
0x9c3b422c23343a3b,0x4a01332324c3bc0b,0x3c444442ca9333d3,0x29b3334232b3b344, 
0xba28bba2b1aa5902,0xb0b2b0bab0b4ba0b,0x0c205bb12824b3b8,0x8aa3229ad1cb0ac4, 
0xaba43b1a4bb30014,0x409191c22418993a,0x0bb3234239940993,0xc1ba42303010224a, 
0x228002ba81baa2a2,0xc233bb0308b11530,0x302591b9caa32b29,0x2c339bba29919c31, 
0x431a52313a33a922,0x3303234442180220,0x223211093b823a0b,0x23440b433cb044b9, 
0x3cb319abaca3ba12,0xa8a3b4b99b03b32b,0xbd482cb409aa3449,0x3ac104319b2c4aa3, 
0x202242c23a04124b,0xa3aca4b3a4cb8241,0x12b0133340c2a329,0xb23a3cac04332200, 
0x5acbb3aa0ca9a9a4,0x34ba3b2bbac88bbb,0xb1ba3cbbbb3b0a2c,0xa332ba11b24c31c2, 
0x2babc9b9bc4cb22a,0x182c2cc8cb081ba8,0x23c18aa0050abb12,0xa9bb1a1cc9b92c2a, 
0x24943ab5309bc4c8,0xba3b23aa9a24b12b,0xcb499b1b2212cba8,0x3221102b1aaba2c3, 
0x3400b0b0b3bb4203,0x82a444aaba944142,0xb9383b3910330302,0x4933b30442589005, 
0x33ca31291cab32a3,0xb3c34390c0aaa11a,0xbbb1aacb90bbabb8,0x23bbcaa52a9a25cc, 
0x9a4b9a3a42c3a934,0xcbb53b3baa2cb33b,0xba1a208b4ba830cb,0x24442b843b341212, 
0x9b1acb0b3a33238b,0xc3a43bc333329a10,0x3123b43922d931a2,0x8cb24b121b33dc2b, 
0x0b93a3433dc022ca,0x4329aaa4aa34a303,0x1c2a221a43b3c53b,0xb43a521abc4348d3, 
0x929d344cb144ccb9,0x49b33c2820b313ab,0xcb244b2a323a2ca3,0x304221402b4bbb84, 
0x2b2893a2ca923183,0x3333443b52a302ba,0xab39a332a3393b19,0x4a23ba34024b1924, 
0xb3bd134bcb93c95a,0x49c21bb333044921,0x3ab949d002b01c3a,0xb234333aa91c2120, 
0x2324a4224ab49220,0xcb23034853102049,0x3330b2130d4a2b1a,0x2192a04132323113, 
0x4b33cb82519b8c39,0x13a4b9bb1c2ac220,0x11313ca5aa013232,0xbac99333418a238b, 
0x32c208b852b4abb4,0x1a433b9ccca0d43a,0x12a0acb13b3baba1,0x32b4bb033b20420b, 
0x822cb232a94944bc,0x92330b3ccb3a3825,0x10c09cbc141dab91,0x43493c9abc20a23b, 
0xb40c30baa0002248,0xb2c2b2222a114a22,0x48932aa332290a3c,0xab44312b2b2b2412, 
0x2c23411c2814c2a3,0x9ac3b94bb2b4b823,0x2c09a943b93c4a23,0x02b044344c31201c, 
0x0391104320acbb23,0x40b31c323a33b1c1,0xaa3043220021bc8b,0xba392333522b2013, 
0x4b2334d33ac84bcc,0x0b3144b3b4b11b5a,0x43831414c2108b3a,0x0b99cba319d13228, 
0x4cbb4439bc4bc20b,0xc4c3444834a142c3,0x804bb451b39ba44d,0x33b2b328c4190389, 
0xa3b0ab2ab10b392b,0x21b90ca0bb43a0b2,0x31928ca9c24b4a4c,0xa02bb4833032a2b1, 
0xa5c393bab323ba40,0xbb2bc119413ab129,0x389b99d3bca0130d,0x39b32bb082c992ac, 
0x493b20b40338a3cb,0x320c920103059205,0xa4a49b442943b34a,0xc0a9b03a420d40ac, 
0xb4123a3282c43d8a,0x4c9193390c332301,0xc3c12b0abdb33133,0x22328310a34b3342, 
0xba23cbc433a343bb,0xab30baccc3b34baa,0x03aa3c3cc30aac98,0x403bbba2ccaab8c3, 
0x3932ca1802a3333a,0xb33bcaac44b3224a,0x4a3333b499a48323,0x1e43a33c8442bc43, 
0x2c093bc324429d33,0xdc0133a33b313931,0xd3ca4399a8d02333,0x141b9433b2c9432b, 
0xa4a3bc1023bc0bdb,0x23d323baba243384,0xc312422cb2353330,0xca8d3493b28cc93c, 
0x3223d292103cc333,0x21a4333e4ac20c3a,0x323b2443cc0b2983,0x114b9a023a222a43, 
0x10ad125aca3cc3a9,0x02c41022a3b249a3,0xba2c421b93093a32,0x224330a0c93bb103, 
0x2d31c341aa031b32,0x8c3341ac4323bbb0,0xc00c444c3bc434ab,0x201b3242a153bcc4, 
0x010bcc2b343ba230,0xa2812b9cc63cb308,0xab43b2a04ba8c392,0xaa324cc233849abb, 
0xbb32cc40c0b24a0b,0x3d280100c241d2bb,0x2b2233b1dbadc24c,0x1b20430223440304, 
0x5ac4cb3b33131015,0xb3a42aaaa20bc23a,0xbbb34cb82cba3bb3,0xcb54cb0b3c483b2a, 
0x93a2b303223cab43,0x332ab0220c2b4a09,0x4443b8b4b323bbb8,0x0211cb3a2293aa02, 
0x4c02bc9333109923,0x80a34aa24932b44a,0xbab438b192c39ab4,0xc8440b303843b2a8, 
0x0dad2cc23cb3b8bc,0xb4bbaac9c3c8b324,0xca13bb2b43a4b2c4,0x13aaab8ca40b2223, 
0xb34b1038ca3bc23c,0x423839d4244c08a4,0x233ab420132b08c1,0x28cc30b13941cc42, 
0x321b9b2b1b444c4b,0x342b3a0c02b3bbac,0x9b9a4130499a83c3,0x2810b94cb33b33a1, 
0xb3b8acbb05a2accb,0x30c2c9c3c4c4ba23,0x23a0339bc0055c4a,0x2bbbac8344bb2c32, 
};

static int backbone_model4_conv2_quant1_threshold[64 * 14] =
{ // torch.Size([64, 14])
-543, -299, -177, -85, -24, 36, 97, 158, 220, 281, 342, 433, 556, 800,
-729, -493, -375, -286, -227, -168, -109, -49, 9, 68, 127, 216, 334, 570,
-828, -510, -351, -232, -153, -73, 5, 84, 164, 243, 323, 442, 601, 918,
-852, -555, -406, -295, -220, -146, -72, 1, 76, 150, 224, 335, 484, 781,
-585, -404, -314, -246, -201, -156, -110, -65, -20, 24, 70, 137, 228, 409,
-872, -522, -347, -215, -128, -40, 47, 134, 222, 309, 397, 528, 704, 1054,
-625, -331, -184, -74, 0, 72, 146, 219, 292, 366, 439, 549, 696, 990,
-968, -645, -484, -363, -283, -202, -121, -41, 39, 120, 200, 321, 482, 805,
-657, -370, -226, -119, -47, 24, 96, 168, 240, 311, 383, 491, 635, 922,
-865, -576, -432, -324, -251, -179, -107, -35, 37, 109, 181, 289, 434, 723,
-1062, -641, -431, -274, -169, -64, 41, 146, 251, 356, 461, 618, 829, 1249,
-766, -477, -333, -225, -153, -81, -9, 62, 134, 206, 278, 386, 531, 819,
-1059, -665, -468, -320, -222, -123, -25, 72, 171, 269, 368, 515, 712, 1106,
-912, -607, -454, -340, -263, -187, -111, -34, 41, 117, 194, 308, 461, 766,
-648, -398, -272, -178, -116, -53, 9, 71, 134, 197, 259, 353, 479, 729,
-726, -491, -373, -285, -226, -167, -109, -50, 8, 67, 126, 214, 332, 567,
-718, -434, -292, -186, -115, -44, 26, 97, 168, 239, 310, 416, 558, 842,
-682, -394, -250, -142, -70, 1, 73, 145, 217, 289, 361, 469, 613, 901,
-878, -568, -414, -297, -220, -143, -65, 11, 88, 166, 243, 359, 514, 823,
-573, -328, -206, -115, -53, 7, 68, 129, 190, 251, 312, 404, 526, 770,
-706, -452, -326, -231, -168, -104, -41, 21, 84, 148, 211, 306, 433, 686,
-513, -271, -150, -59, 0, 61, 121, 181, 242, 302, 363, 453, 574, 816,
-673, -420, -293, -198, -135, -72, -9, 54, 117, 180, 244, 338, 465, 718,
-859, -551, -397, -282, -205, -128, -51, 25, 102, 179, 256, 372, 526, 834,
-886, -588, -439, -327, -253, -178, -104, -30, 44, 118, 193, 305, 454, 752,
-841, -574, -440, -339, -273, -206, -139, -72, -5, 61, 128, 228, 362, 629,
-656, -422, -305, -217, -158, -100, -41, 17, 75, 134, 192, 280, 397, 632,
-692, -379, -223, -106, -28, 50, 128, 206, 284, 362, 440, 558, 714, 1027,
-613, -421, -326, -254, -206, -158, -110, -62, -14, 33, 81, 153, 248, 440,
-717, -434, -293, -187, -116, -45, 25, 96, 166, 237, 308, 414, 556, 839,
-670, -426, -304, -212, -151, -90, -29, 32, 93, 154, 215, 307, 429, 673,
-1182, -754, -541, -380, -273, -166, -60, 46, 153, 260, 367, 527, 741, 1169,
-936, -569, -385, -247, -155, -63, 28, 120, 212, 304, 396, 533, 717, 1085,
-741, -415, -252, -129, -48, 33, 114, 196, 277, 359, 440, 562, 725, 1051,
-1069, -710, -530, -395, -306, -216, -126, -36, 53, 142, 232, 367, 546, 906,
-617, -350, -217, -116, -50, 16, 83, 150, 216, 283, 350, 450, 584, 851,
-692, -403, -258, -150, -77, -5, 66, 138, 211, 283, 355, 464, 608, 897,
-809, -495, -337, -220, -141, -62, 15, 94, 172, 251, 330, 448, 605, 919,
-1196, -800, -603, -455, -356, -257, -158, -59, 38, 137, 236, 384, 582, 977,
-720, -433, -289, -181, -109, -37, 34, 106, 178, 249, 321, 429, 573, 861,
-606, -368, -249, -160, -101, -41, 17, 77, 136, 196, 255, 344, 463, 701,
-800, -492, -338, -222, -145, -68, 8, 85, 162, 239, 316, 432, 586, 894,
-807, -502, -349, -234, -158, -81, -5, 70, 147, 223, 299, 414, 567, 872,
-888, -567, -406, -286, -206, -125, -45, 34, 114, 195, 275, 395, 556, 877,
-901, -601, -451, -339, -264, -189, -114, -39, 35, 110, 185, 298, 448, 748,
-1054, -694, -514, -379, -288, -198, -108, -18, 71, 161, 251, 386, 566, 926,
-926, -589, -421, -294, -210, -126, -42, 42, 126, 210, 294, 421, 589, 926,
-1039, -670, -485, -347, -254, -162, -70, 22, 114, 206, 299, 437, 622, 991,
-866, -580, -437, -330, -259, -188, -116, -45, 26, 97, 168, 275, 418, 704,
-834, -512, -351, -230, -150, -69, 10, 91, 171, 252, 332, 453, 614, 936,
-1090, -708, -517, -374, -279, -184, -88, 6, 101, 197, 292, 435, 626, 1007,
-1010, -659, -484, -352, -264, -177, -89, -1, 85, 173, 261, 392, 568, 918,
-996, -638, -460, -325, -236, -147, -57, 31, 121, 210, 299, 433, 612, 970,
-1095, -736, -556, -421, -332, -242, -152, -62, 27, 116, 206, 341, 520, 880,
-967, -619, -446, -315, -228, -142, -55, 31, 118, 205, 292, 422, 596, 944,
-905, -556, -382, -251, -164, -77, 10, 97, 184, 271, 359, 489, 664, 1013,
-1048, -674, -487, -347, -253, -160, -66, 27, 120, 214, 307, 447, 634, 1009,
-846, -533, -376, -259, -181, -102, -24, 53, 131, 210, 288, 405, 562, 875,
-719, -444, -307, -203, -135, -66, 2, 70, 139, 208, 276, 379, 517, 792,
-591, -357, -240, -152, -94, -35, 22, 81, 140, 198, 257, 344, 461, 696,
-1020, -676, -503, -374, -288, -202, -116, -30, 55, 141, 227, 356, 529, 873,
-840, -532, -379, -264, -187, -110, -33, 42, 119, 196, 273, 388, 542, 849,
-777, -467, -312, -196, -119, -41, 35, 112, 190, 267, 345, 461, 616, 925,
-890, -566, -403, -281, -200, -119, -38, 42, 124, 205, 286, 408, 570, 895,
};

static uint64_t backbone_model4_conv2_conv2_weight[64 * 9] =
{ // torch.Size([64, 3, 3, 1])
0x4, 0x4, 0xd, 0x5, 0xa, 0xc, 0xb, 0xc, 0xc, 
0x0, 0xc, 0xc, 0x3, 0x5, 0xa, 0x0, 0x4, 0x2, 
0x6, 0x4, 0x2, 0x4, 0xc, 0x9, 0xc, 0xb, 0xc, 
0x4, 0x5, 0x4, 0x1, 0xa, 0xb, 0xa, 0xb, 0xb, 
0x3, 0x1, 0x4, 0x0, 0x4, 0x4, 0x0, 0x5, 0x2, 
0xc, 0x1, 0x4, 0xb, 0xc, 0x4, 0xb, 0xb, 0x5, 
0xc, 0xc, 0xb, 0xc, 0xb, 0xa, 0xc, 0xa, 0x3, 
0xc, 0xb, 0x4, 0xc, 0xb, 0x5, 0xc, 0x3, 0x4, 
0xc, 0xc, 0x0, 0xd, 0x8, 0x9, 0xb, 0x4, 0x0, 
0x3, 0x1, 0xc, 0x5, 0xc, 0xc, 0x5, 0x4, 0xa, 
0xa, 0x0, 0x0, 0xa, 0x6, 0x0, 0x1, 0xa, 0x0, 
0xb, 0xb, 0xc, 0x3, 0x3, 0x4, 0x3, 0x4, 0x4, 
0x6, 0x4, 0xb, 0x4, 0x0, 0x1, 0x8, 0xb, 0x3, 
0xb, 0x3, 0x1, 0x4, 0x3, 0x0, 0x4, 0x4, 0x4, 
0x3, 0x4, 0xb, 0xc, 0x3, 0xb, 0xd, 0xa, 0xb, 
0xb, 0xc, 0xb, 0x3, 0x5, 0x5, 0x3, 0x4, 0x4, 
0xc, 0xb, 0xa, 0xb, 0x9, 0x9, 0xb, 0xa, 0x8, 
0xa, 0x2, 0x2, 0xd, 0xd, 0x8, 0xc, 0xb, 0xb, 
0x4, 0x5, 0x3, 0x3, 0x4, 0x3, 0x0, 0x3, 0x4, 
0xc, 0xc, 0xb, 0xc, 0x1, 0x1, 0x3, 0x4, 0x3, 
0x1, 0xb, 0x8, 0x0, 0x5, 0xc, 0xb, 0xc, 0xb, 
0xa, 0x9, 0xa, 0xb, 0xb, 0xb, 0xb, 0xc, 0xb, 
0x0, 0x4, 0x4, 0xc, 0x4, 0x5, 0xc, 0xc, 0x4, 
0xb, 0xd, 0xb, 0xc, 0xb, 0x2, 0xc, 0xb, 0x4, 
0x5, 0x4, 0xc, 0x3, 0x5, 0x2, 0x8, 0x2, 0x4, 
0x5, 0xc, 0xc, 0x4, 0x4, 0xc, 0x1, 0x4, 0x3, 
0xc, 0xa, 0xb, 0x4, 0x4, 0x3, 0x4, 0x2, 0xd, 
0x3, 0x5, 0x5, 0x0, 0x3, 0x4, 0xb, 0xc, 0xb, 
0x9, 0xb, 0xa, 0x9, 0xc, 0x3, 0x4, 0x5, 0x4, 
0x8, 0xb, 0xa, 0x4, 0xc, 0xb, 0x5, 0x4, 0x1, 
0x3, 0xb, 0xc, 0x1, 0x3, 0xd, 0x8, 0xa, 0xd, 
0xb, 0xa, 0xb, 0xb, 0xc, 0xb, 0xc, 0xc, 0xb, 
0xd, 0xb, 0xb, 0xc, 0x1, 0xa, 0xc, 0xa, 0x1, 
0x2, 0x3, 0x3, 0x0, 0x3, 0x3, 0x0, 0x4, 0x4, 
0xb, 0xa, 0x1, 0xc, 0xc, 0xb, 0xc, 0xa, 0xb, 
0x5, 0xc, 0xc, 0x5, 0x2, 0xc, 0x1, 0x9, 0xc, 
0x4, 0x4, 0x4, 0x4, 0x3, 0x2, 0xb, 0xc, 0xa, 
0x3, 0x4, 0x5, 0x0, 0x1, 0x4, 0xa, 0xc, 0x3, 
0xb, 0xb, 0xa, 0xd, 0xc, 0xb, 0xb, 0x0, 0xb, 
0xb, 0xc, 0xb, 0x1, 0xb, 0xb, 0x5, 0x4, 0x4, 
0x4, 0x3, 0xa, 0xa, 0xb, 0xc, 0xb, 0xc, 0xd, 
0xb, 0xb, 0xd, 0x8, 0x1, 0xb, 0x3, 0xb, 0xb, 
0x2, 0xd, 0xb, 0x3, 0xc, 0x8, 0x4, 0xc, 0x3, 
0xd, 0xe, 0x8, 0x8, 0xc, 0x0, 0x2, 0xb, 0x3, 
0xc, 0xb, 0xa, 0xb, 0xb, 0xb, 0xa, 0xc, 0xc, 
0xc, 0xc, 0xc, 0x9, 0xa, 0xb, 0x3, 0x1, 0xb, 
0xb, 0xd, 0xa, 0x2, 0x3, 0xb, 0x4, 0x4, 0xc, 
0xc, 0xc, 0xa, 0xc, 0xb, 0xc, 0x3, 0x2, 0xa, 
0x4, 0x5, 0x3, 0x4, 0x2, 0x2, 0x0, 0xa, 0x0, 
0x3, 0xc, 0xc, 0xc, 0xc, 0x2, 0xc, 0x4, 0xc, 
0xc, 0xa, 0xd, 0x3, 0xc, 0xd, 0x4, 0xb, 0xb, 
0x5, 0x4, 0x3, 0x3, 0x2, 0x4, 0x3, 0x1, 0x1, 
0xb, 0xc, 0xb, 0xd, 0x4, 0x1, 0xc, 0xb, 0xb, 
0x4, 0xd, 0xd, 0x4, 0x9, 0xa, 0x3, 0x0, 0x1, 
0x9, 0xa, 0xb, 0xa, 0xd, 0xd, 0x0, 0x0, 0xb, 
0x2, 0x0, 0x0, 0x4, 0x4, 0x4, 0x5, 0x3, 0x3, 
0x3, 0x3, 0x3, 0x3, 0x2, 0x4, 0x4, 0x4, 0x3, 
0xd, 0xc, 0xb, 0x3, 0x5, 0x3, 0x4, 0x3, 0x2, 
0xb, 0x3, 0x2, 0xb, 0xb, 0xb, 0xb, 0xc, 0xc, 
0x8, 0xd, 0x1, 0xd, 0x4, 0x4, 0xb, 0x4, 0x1, 
0x3, 0x2, 0x1, 0x4, 0x3, 0x0, 0x4, 0x4, 0x3, 
0x8, 0x4, 0xb, 0xe, 0x9, 0x2, 0xa, 0xa, 0xb, 
0x3, 0xb, 0x2, 0x5, 0xd, 0xc, 0x4, 0x3, 0xc, 
0xa, 0xc, 0x0, 0xa, 0x4, 0x3, 0x3, 0x5, 0x5, 
};

static int backbone_model4_conv2_relu2_threshold[64 * 7] =
{ // torch.Size([64, 7])
92, 141, 189, 238, 311, 409, 604,
72, 104, 136, 168, 215, 279, 406,
36, 94, 152, 210, 297, 412, 644,
23, 58, 93, 129, 182, 252, 393,
128, 194, 259, 325, 424, 556, 819,
40, 70, 99, 128, 172, 231, 348,
-38, 13, 65, 118, 196, 301, 510,
6, 47, 87, 128, 189, 270, 432,
67, 102, 136, 171, 222, 291, 429,
16, 64, 111, 159, 231, 327, 519,
-50, 9, 70, 130, 220, 341, 581,
33, 69, 104, 140, 193, 264, 406,
-26, 18, 64, 110, 178, 270, 453,
17, 65, 112, 160, 231, 326, 517,
30, 81, 132, 183, 260, 362, 566,
71, 122, 173, 224, 300, 402, 606,
-2, 20, 44, 68, 103, 150, 245,
36, 79, 122, 164, 229, 314, 485,
11, 56, 101, 146, 214, 304, 485,
41, 80, 120, 159, 217, 295, 451,
4, 49, 94, 139, 206, 297, 477,
38, 62, 86, 111, 147, 196, 293,
73, 118, 164, 209, 277, 367, 549,
-47, -5, 36, 78, 141, 225, 393,
32, 80, 128, 176, 248, 344, 536,
-44, 6, 58, 109, 186, 289, 494,
80, 118, 156, 194, 251, 327, 479,
38, 88, 137, 187, 261, 359, 557,
-6, 70, 147, 224, 339, 493, 801,
49, 89, 129, 168, 227, 307, 465,
31, 86, 142, 197, 279, 390, 610,
0, 37, 75, 113, 171, 247, 400,
46, 95, 143, 192, 265, 362, 556,
-7, 27, 62, 96, 148, 217, 356,
-26, 10, 46, 82, 136, 208, 353,
72, 114, 157, 199, 262, 347, 516,
25, 62, 99, 136, 191, 265, 414,
20, 62, 104, 145, 208, 292, 459,
-29, 2, 33, 65, 112, 176, 302,
45, 97, 148, 199, 276, 379, 584,
41, 98, 155, 211, 296, 409, 635,
20, 56, 92, 128, 183, 255, 400,
36, 73, 110, 147, 203, 278, 427,
9, 71, 133, 195, 288, 412, 660,
-10, 29, 70, 110, 170, 251, 412,
19, 46, 74, 102, 144, 200, 311,
50, 77, 105, 132, 173, 228, 338,
-3, 26, 56, 85, 130, 190, 310,
38, 93, 148, 203, 285, 395, 615,
23, 65, 107, 149, 213, 297, 466,
39, 87, 136, 185, 259, 356, 552,
67, 111, 156, 201, 268, 358, 537,
-36, 9, 55, 101, 170, 262, 445,
46, 82, 118, 153, 207, 278, 421,
-28, 27, 84, 141, 226, 339, 566,
58, 108, 159, 209, 285, 386, 587,
-14, 26, 67, 108, 169, 251, 414,
88, 131, 173, 215, 279, 364, 533,
6, 48, 90, 132, 194, 278, 445,
53, 94, 135, 175, 236, 317, 480,
-4, 37, 79, 122, 185, 270, 439,
36, 82, 127, 173, 242, 333, 516,
86, 132, 178, 224, 292, 384, 568,
93, 142, 192, 242, 317, 417, 616,
};

static uint64_t backbone_model5_conv1_conv1_weight[64 * 1*4] =
{ // torch.Size([64, 1, 1, 64])
0xb338b0b1b8c3a0b3,0xba534ba14c3b3d3b,0x40a1122ab933d504,0x4493d8234c41ac31, 
0xd203c3bbc8433bbc,0x8ab5914433a92c04,0xd04b130b33310334,0xc3524b32cb3ba39c, 
0xb98243234314c09c,0x5a1da22b430c443c,0x08b0ab422b032bc4,0x82c0044c3abac52a, 
0xb9ab3102339abb4b,0x34c302340aab333a,0x24344bb24a230bc0,0xb3c334b3bb4db2c3, 
0x54b3320222099428,0x148022ab3c280cbb,0xa322134a0a323b3a,0x3b3a884334b43330, 
0xabb3223b3130b09c,0x081904c02248422c,0xc4333c244c49c9b4,0xb284431b84ac94b3, 
0x429bbca004b13bbc,0x3a1b0cba944425b2,0x2aa392b0c9034bb1,0x0a4340c8cacc200c, 
0xb185c4c32ca9881a,0xb0aab1acb3c8cbb9,0xdbbaa928b3c9bbab,0x12bab1b0b12230ab, 
0x323b833430b3cba2,0x3bca3c203244c332,0x324020dcaabaa4c3,0x39b4b2dccc1a30bc, 
0x3322b298b4bb3b1d,0xaa22a93cb3240ab5,0x4ba3320a3c8ab3c2,0x8b433ba3ac35b0c2, 
0x245b4b5ba314a253,0x34aa0043204bbb4c,0xb55540441b242b04,0x04a133a242ca3304, 
0x4bad2c9a842b33a2,0x1aab98304c492ac4,0x5ca01c8bc4310d59,0x334bb44b4c23144b, 
0xa93ca25c39c0ca43,0x34cb333cacb23bca,0x2b44b9534d4b4aac,0xb4324bb434a42c95, 
0x242cabccc0c2b203,0x23ab9bbcbbab3c32,0xcbb115a352b0c444,0x42c3c9353340445a, 
0x43b3c9485c3d33c3,0x42330ab42333c245,0x534c540332bc431c,0x84d83dd20c310cb5, 
0xbb8c42531b1c2a90,0xc2cb3182cb415aa9,0xc3434cb4004b0b10,0xc3224baab40c00c3, 
0x54bbac0923aa2b33,0x03a13ac54b3133a0,0x4b12d2cb4da1bd10,0x9a39b2b9480c3a03, 
0x223c04333123433d,0x2b33b94c0329a132,0x4b31bd924d00aba0,0x42233a333ab34ab1, 
0x3485c39da3b0bb19,0x33435bbcc254389c,0x1b48d20a00bbbbb2,0xb1da40a2a13b2cb8, 
0x32c493b44a2d24ca,0xb32410b224a33414,0x24cb32bb01ba23cb,0x28bc11a3b4aa0dbc, 
0x94b302b93a3ba592,0xcbab94c3cb1cbc2c,0x9baa4234a1081b1c,0x233c0930c534392b, 
0xb03c4c19c5aaa234,0x8ab2abb33a18bbc9,0xc6232101b333022c,0x3b4ab3b0a8ab1340, 
0xa382932a03a2c31c,0x43d4420c3442b09a,0xc324e181a922b2a0,0xb148132234baa9b9, 
0x23143a3b144315b3,0x4932110a3143329a,0x02914ba3b1499204,0x34b4c33b9ba33b2b, 
0x8a09aaaaabcc3924,0xc15253db3a4238c2,0x3cab22ca42a239b2,0x3cc248c38b5b0b04, 
0x432b4339a4b13214,0xbab44a293452ab3c,0x308140bac8b3b184,0x4aca23b99c321b31, 
0xc3ccb4c524b3c4bc,0x3b14a43c3a9a2c42,0x03abbbccb802cc23,0x3c2bb132233aba3c, 
0xb204ca1d9a2a4cbb,0x3848b053b4c34aa3,0xab3bba43a43b2a42,0x8333294c3ac30833, 
0xac933342a0b04b43,0x1c2ba2b3c4c44acc,0x33a34a3b342349ba,0xbc59c3cc2b2bc2c4, 
0xb45c8342dca4cd33,0xcabb2b443b42c3db,0xc454c3490314b443,0x2cc3c4db4cd4802c, 
0x932c1c3bb3384ba2,0xa398433021049b32,0x2b323139a4013342,0x2023812a1c342a23, 
0xa39c3c3cb4ccb934,0x5bdcbdb04223143a,0x33c333823b005a3b,0x44c481c3a39334a3, 
0x380c9d9214ab429c,0xacdbb2ac82acbc03,0x3bbbd3cc3c22100b,0xa133b9b3ac2413bb, 
0xb030a4b30bb9cb1b,0x3a9ba2b404b4a090,0xcaa3b28926992329,0x403b89aaa33c3232, 
0xbb2c2b3c84b0833d,0x38d403bb43444b22,0x03b3c83cb1323c3b,0x324c0bb202aaa492, 
0x4adac2c8000344c3,0x1bccbb9434b4c133,0x4cdc33dc43cb29aa,0x3a00c8313c403abb, 
0xa49d3c4bb14cbb93,0xb4cc41132a43a134,0x4919a4b384aa3c51,0x94c29a00a1043a34, 
0xa2a9a0b32b99283c,0x933c84dc21a338ba,0xcb2abab95a2a0b33,0xc93330a3a25b32ba, 
0xb0812bca4589b6ba,0x4a9210caa03b4aab,0xb08bbbb3aab9c094,0x29a2b33bbb1c211b, 
0x2bb303aba339bda4,0x92c01d541a23bb33,0x4391430bd4002402,0xb04a30da8bb4bcb4, 
0x0bc09bc144c5a123,0x0a2043334dbc1cdb,0xb8c3bcccac33db2b,0xb9abc449ac2b8cbb, 
0x3c332c0a4399b4c3,0xa3b12ab64bcb2b83,0xc0a949a8b229332b,0x2b433ac3cb1c3a3b, 
0x33143b2c5439bb04,0x4153cc31024c3443,0x48834128cbb0b2bb,0x09daaa2339b3a3b4, 
0x40ad9b23bb2b4123,0xbbbc38c3a4ca0b4a,0x221313c05c98b432,0xb2b20109234119b3, 
0x300a44b4dc59a394,0xab41449cba92434c,0x443b4233444234b4,0xb0bc3b4c4553c3a4, 
0xca9bbbab29c23b24,0xbc311ba31d1c031c,0x3b283b4ab4b3ca3c,0x2cccd9ca4a8cb133, 
0xbb399baac2944240,0xbc9c84b9babb2cbc,0x0412cb4223a49c2b,0xaa3cb44c3c2bb2a8, 
0x2b22c3a52b423cba,0xab0b2b48d054b4c3,0xbca3ccb0bb2ac2c3,0x4344b223c1ac03aa, 
0xbcca22bbcc0b9bb4,0x1b4c2294baa433c2,0xdb2ac33ca3d92b4c,0x49d11b49c4ba4bb8, 
0x030abb3cc30b43bb,0xc04b34c3b384ac39,0x4a2a318042bab834,0x33b4b08b1d903482, 
0x334a1842c4c33c40,0xcb54ccb2c33cd3b3,0x4433a2b0db03ab08,0x992bb2c0c0d8c23c, 
0x4c24c32354c293a1,0x52354dac0333b384,0x5bc3aabbc20ab2cc,0xa04a3bd1cb1bacb0, 
0xaab12c330b3cd2bc,0x99bcbcc2b439a442,0x3b18b0a331b04dc0,0x83b3b8a9ca18c40c, 
0x403b33352c4c992b,0xb149b23ac3cca444,0x203240ca4b3a4ac3,0x32389cc1a33804a4, 
0x53bbd8a34c4b4c3a,0xd23b4224c4c4db34,0x4b4354bcc4da234d,0x3acb0cc4cd334c33, 
0xcc3b3c9403aab030,0xba4c9b4b304345b4,0xbb3caacc43324cb3,0x3cb049a2bc8cc3b9, 
0xb03b340aa9b3cca4,0x31c2aba4a2b5cc3b,0xb3acb3cbc3c8a24b,0x4bbba9c9ca3a2c11, 
0x831abcc19b2a3b2c,0x333922c4c3290321,0xc38451b3434229b2,0xc4342b32ba5d14ba, 
0x4cc4b3bb4b84439a,0x2344033c334cc21b,0x21b33b2134a0a33a,0x00c931c1b40c094c, 
0x434b424a24a31243,0xa3aba2412b229132,0xc55323402b122ab9,0x3ba1000343b213a3, 
0xb04ca48ac4bac4ba,0x3a9ca2bb25b53d3c,0x2b0b23a3a5cb4491,0x3ab1c9ac3b048423, 
0x44aa93354c23c0ab,0xb3b944c343c3bda8,0xb13ac43bc4b8c40b,0x0c3b33919c243d11, 
0x533690bd3b2331a1,0x3ac0bb23b4ccabcb,0xb2a2cb23b0bab5a2,0x149aa24c23c42bab, 
0x94484a52b9b4a052,0x1322c20b21310b0b,0xa5553245ba44abba,0xa03b42cb13c19494, 
};

static int backbone_model5_conv1_quant1_threshold[64 * 14] =
{ // torch.Size([64, 14])
-1315, -848, -614, -439, -323, -206, -89, 26, 143, 260, 376, 551, 785, 1252,
-1083, -672, -466, -312, -209, -106, -4, 98, 201, 304, 407, 561, 766, 1177,
-1127, -637, -392, -208, -86, 35, 158, 280, 403, 525, 648, 832, 1077, 1567,
-1249, -764, -522, -340, -219, -97, 23, 144, 266, 387, 508, 690, 933, 1418,
-1142, -673, -439, -263, -146, -29, 87, 204, 321, 439, 556, 731, 966, 1434,
-1198, -646, -371, -164, -26, 111, 248, 386, 524, 662, 800, 1006, 1282, 1833,
-1168, -747, -537, -380, -274, -169, -64, 40, 145, 250, 355, 513, 723, 1143,
-1514, -1018, -770, -584, -460, -336, -212, -88, 35, 159, 283, 468, 716, 1212,
-1487, -1006, -766, -585, -465, -345, -225, -105, 15, 135, 255, 435, 676, 1157,
-1158, -734, -522, -363, -257, -151, -45, 61, 167, 273, 379, 538, 750, 1174,
-1656, -949, -596, -331, -155, 21, 197, 374, 551, 727, 904, 1169, 1522, 2228,
-1278, -809, -574, -399, -281, -164, -47, 69, 186, 304, 421, 597, 831, 1300,
-981, -574, -370, -218, -116, -15, 86, 188, 289, 391, 493, 645, 849, 1255,
-1495, -933, -652, -441, -301, -160, -20, 119, 260, 400, 541, 751, 1032, 1594,
-1724, -1089, -772, -534, -375, -216, -57, 101, 259, 418, 577, 815, 1133, 1768,
-1248, -788, -558, -385, -270, -155, -40, 74, 189, 304, 419, 592, 822, 1282,
-1153, -739, -532, -376, -273, -170, -66, 36, 140, 243, 347, 502, 709, 1123,
-792, -460, -293, -169, -86, -2, 80, 163, 246, 329, 412, 537, 703, 1036,
-1361, -858, -607, -418, -293, -167, -41, 83, 209, 335, 461, 649, 900, 1403,
-1255, -803, -577, -407, -294, -181, -68, 44, 157, 270, 383, 552, 778, 1230,
-1135, -719, -512, -356, -252, -148, -44, 59, 163, 267, 371, 527, 734, 1150,
-1096, -698, -499, -349, -250, -150, -51, 48, 147, 247, 346, 495, 694, 1092,
-1670, -1009, -678, -431, -265, -100, 64, 229, 394, 560, 725, 973, 1303, 1964,
-1033, -585, -360, -192, -80, 32, 144, 256, 368, 480, 593, 761, 985, 1434,
-1501, -943, -663, -454, -314, -174, -35, 104, 244, 383, 523, 732, 1012, 1571,
-1139, -689, -464, -295, -182, -70, 42, 155, 267, 380, 492, 661, 886, 1337,
-1465, -935, -670, -471, -339, -206, -73, 58, 191, 323, 456, 654, 920, 1450,
-1029, -625, -423, -272, -171, -70, 30, 131, 232, 333, 434, 586, 788, 1192,
-1423, -889, -622, -422, -289, -156, -22, 110, 243, 377, 510, 710, 977, 1510,
-1646, -981, -648, -398, -232, -66, 100, 266, 433, 599, 765, 1015, 1348, 2013,
-1248, -736, -481, -289, -161, -33, 94, 222, 350, 478, 606, 797, 1053, 1565,
-1595, -1043, -767, -560, -422, -284, -146, -8, 129, 267, 405, 612, 889, 1441,
-1654, -1158, -910, -724, -600, -476, -352, -228, -104, 19, 143, 329, 577, 1073,
-1020, -617, -415, -263, -162, -62, 38, 139, 240, 341, 442, 593, 795, 1199,
-1286, -784, -533, -345, -219, -94, 31, 156, 282, 407, 533, 721, 972, 1474,
-1323, -898, -686, -526, -420, -314, -208, -101, 4, 110, 216, 376, 588, 1013,
-1550, -980, -695, -482, -339, -197, -54, 87, 230, 372, 515, 728, 1013, 1583,
-1309, -789, -529, -334, -204, -74, 55, 185, 315, 445, 575, 770, 1030, 1550,
-1150, -729, -518, -360, -255, -149, -44, 60, 166, 271, 377, 535, 745, 1167,
-2391, -1606, -1214, -920, -724, -527, -331, -135, 60, 256, 452, 747, 1139, 1923,
-2091, -1441, -1116, -873, -710, -548, -386, -223, -61, 101, 263, 507, 832, 1481,
-1279, -833, -610, -443, -332, -220, -109, 2, 113, 225, 336, 503, 726, 1172,
-1394, -867, -604, -406, -275, -143, -11, 119, 251, 383, 514, 712, 975, 1502,
-1187, -760, -547, -387, -280, -173, -67, 39, 146, 253, 359, 519, 733, 1160,
-1433, -835, -535, -311, -161, -12, 137, 287, 436, 586, 736, 960, 1259, 1858,
-1471, -1010, -779, -606, -491, -376, -260, -145, -30, 85, 200, 373, 604, 1065,
-1655, -1096, -817, -608, -468, -329, -189, -49, 89, 229, 368, 578, 857, 1415,
-1231, -775, -547, -376, -261, -147, -33, 80, 194, 308, 422, 593, 822, 1278,
-1355, -931, -719, -560, -455, -349, -243, -137, -31, 74, 180, 339, 550, 974,
-1352, -838, -581, -389, -260, -132, -3, 124, 253, 381, 509, 702, 959, 1473,
-1478, -998, -759, -579, -459, -339, -219, -99, 20, 140, 260, 440, 680, 1160,
-1800, -1160, -840, -600, -440, -280, -120, 39, 199, 359, 518, 758, 1078, 1718,
-1489, -993, -745, -559, -435, -311, -187, -63, 60, 184, 308, 494, 742, 1238,
-1289, -759, -494, -295, -163, -30, 101, 234, 366, 499, 631, 830, 1095, 1625,
-2465, -1681, -1289, -995, -800, -604, -408, -212, -16, 179, 375, 669, 1061, 1844,
-1357, -898, -669, -497, -382, -268, -153, -39, 75, 190, 304, 476, 705, 1164,
-1460, -1015, -792, -625, -513, -402, -291, -179, -68, 43, 154, 321, 544, 989,
-1253, -756, -507, -321, -196, -72, 51, 176, 300, 424, 549, 735, 984, 1481,
-998, -596, -395, -245, -144, -44, 56, 156, 257, 357, 457, 608, 809, 1211,
-1466, -851, -544, -313, -159, -5, 148, 302, 455, 609, 763, 994, 1301, 1917,
-1190, -770, -559, -402, -297, -192, -87, 17, 123, 228, 333, 490, 700, 1121,
-1236, -813, -601, -442, -336, -231, -125, -19, 86, 192, 298, 456, 668, 1091,
-1327, -838, -593, -409, -287, -164, -42, 80, 202, 325, 447, 631, 875, 1365,
-1605, -930, -593, -340, -171, -2, 165, 334, 503, 671, 840, 1093, 1431, 2105,
};

static uint64_t backbone_model5_conv1_conv2_weight[64 * 9] =
{ // torch.Size([64, 3, 3, 1])
0xc, 0xd, 0x9, 0xc, 0x3, 0x4, 0xa, 0x4, 0x2, 
0x8, 0x2, 0x0, 0x3, 0x3, 0xa, 0x2, 0xb, 0xe, 
0x5, 0x3, 0xb, 0x5, 0xc, 0xb, 0x1, 0xb, 0xb, 
0xa, 0xc, 0x3, 0xc, 0xc, 0x4, 0xb, 0x3, 0x3, 
0x4, 0x4, 0xa, 0xa, 0xb, 0xc, 0xb, 0xb, 0xd, 
0x2, 0x4, 0x5, 0xc, 0xb, 0x9, 0xb, 0xc, 0x2, 
0x3, 0x3, 0x4, 0xc, 0x2, 0x4, 0xc, 0x8, 0x4, 
0x1, 0x4, 0x5, 0xc, 0x3, 0x5, 0xc, 0xc, 0x1, 
0x4, 0x8, 0xc, 0x5, 0x4, 0xa, 0x4, 0x4, 0x3, 
0x5, 0x4, 0xb, 0x3, 0x0, 0xc, 0xc, 0xc, 0x2, 
0xb, 0xb, 0xd, 0xa, 0xb, 0xc, 0x4, 0x0, 0xb, 
0x4, 0xb, 0xb, 0x5, 0xb, 0x9, 0x4, 0x4, 0x2, 
0x5, 0x3, 0x1, 0x5, 0x3, 0x9, 0xb, 0xb, 0xb, 
0xb, 0xb, 0xb, 0x2, 0x4, 0xb, 0x4, 0x5, 0x3, 
0x4, 0x3, 0x4, 0xb, 0xc, 0x1, 0xc, 0xd, 0xc, 
0xc, 0xa, 0x4, 0xc, 0xa, 0x4, 0x4, 0x2, 0x3, 
0x4, 0xc, 0xc, 0x4, 0xb, 0xc, 0x3, 0x4, 0xb, 
0x3, 0x0, 0xc, 0x3, 0xc, 0x3, 0xc, 0xb, 0x4, 
0xc, 0x4, 0x5, 0xb, 0x1, 0x4, 0x9, 0xb, 0x2, 
0x2, 0x3, 0x3, 0xe, 0x3, 0x3, 0xc, 0x3, 0x4, 
0x5, 0xa, 0xc, 0x4, 0x4, 0x9, 0xb, 0x2, 0xa, 
0xc, 0xb, 0x2, 0xb, 0xb, 0x6, 0xc, 0xb, 0x5, 
0xa, 0xc, 0xd, 0x3, 0x3, 0x9, 0x3, 0x2, 0x8, 
0xc, 0xc, 0xc, 0xc, 0xb, 0x3, 0x2, 0x4, 0x4, 
0x5, 0x5, 0xa, 0xb, 0x4, 0x9, 0x2, 0x3, 0xb, 
0x4, 0xa, 0xc, 0x3, 0xb, 0xc, 0x4, 0xa, 0xc, 
0x3, 0xa, 0x0, 0xa, 0xb, 0xb, 0xc, 0xc, 0xb, 
0x5, 0x8, 0xd, 0x3, 0x2, 0xb, 0x2, 0x8, 0xa, 
0x4, 0x3, 0x1, 0x3, 0xc, 0xc, 0x2, 0xb, 0xb, 
0x5, 0x2, 0x2, 0x4, 0x3, 0x4, 0x3, 0x0, 0x3, 
0x4, 0x4, 0xc, 0x4, 0x9, 0xd, 0x1, 0xb, 0xc, 
0xa, 0xc, 0xb, 0xa, 0xb, 0xa, 0xb, 0xb, 0xb, 
0xa, 0xa, 0x9, 0xb, 0x3, 0x5, 0xd, 0x3, 0x4, 
0x3, 0x3, 0x5, 0x2, 0xc, 0xb, 0x8, 0x1, 0xb, 
0xe, 0xa, 0x2, 0xb, 0x3, 0x0, 0x2, 0x8, 0x0, 
0x2, 0x2, 0x3, 0x4, 0xa, 0xd, 0x9, 0x9, 0xd, 
0xc, 0x4, 0x4, 0xc, 0x3, 0x4, 0xa, 0xa, 0x3, 
0xc, 0xa, 0x5, 0xc, 0x8, 0x4, 0xa, 0x0, 0x4, 
0xc, 0x1, 0x4, 0x1, 0x3, 0x5, 0xc, 0xc, 0x3, 
0x5, 0x3, 0x4, 0x3, 0xa, 0x9, 0x3, 0x3, 0x4, 
0x5, 0x4, 0x3, 0x3, 0x3, 0x2, 0xa, 0xb, 0xc, 
0xc, 0x9, 0x3, 0x0, 0x9, 0x4, 0x1, 0x3, 0x5, 
0x4, 0x4, 0x3, 0xb, 0xa, 0xb, 0xd, 0xc, 0xc, 
0x1, 0x4, 0x4, 0x1, 0x3, 0x3, 0xb, 0xc, 0xd, 
0x0, 0xa, 0x2, 0xb, 0xb, 0x8, 0xc, 0xc, 0xc, 
0x4, 0xb, 0xd, 0x3, 0xa, 0xc, 0xb, 0x3, 0x5, 
0x4, 0x4, 0x4, 0x0, 0xa, 0x8, 0xc, 0xc, 0xc, 
0x4, 0x4, 0x4, 0x3, 0x4, 0x3, 0xb, 0xc, 0xc, 
0xc, 0xa, 0xb, 0x9, 0xa, 0x3, 0x4, 0x4, 0x5, 
0xd, 0xb, 0xc, 0x1, 0x4, 0x0, 0xb, 0x3, 0x2, 
0xd, 0x3, 0xa, 0xd, 0xb, 0xb, 0xc, 0x1, 0x8, 
0x3, 0xd, 0xb, 0x3, 0xc, 0x2, 0x0, 0xd, 0xb, 
0x4, 0x4, 0x0, 0x5, 0xb, 0xc, 0x4, 0xa, 0xb, 
0x0, 0x3, 0x4, 0x1, 0x3, 0x3, 0x3, 0x3, 0x3, 
0xb, 0x1, 0xa, 0xd, 0xc, 0xc, 0xb, 0x2, 0xa, 
0xb, 0xd, 0xc, 0x4, 0x4, 0xb, 0x3, 0x4, 0x3, 
0x3, 0x8, 0x8, 0x0, 0xb, 0x3, 0x5, 0x3, 0x3, 
0x2, 0x3, 0xa, 0x2, 0x2, 0xb, 0x9, 0xb, 0xd, 
0xb, 0xd, 0x3, 0x4, 0xc, 0x2, 0x4, 0x2, 0xb, 
0xb, 0xb, 0x4, 0xc, 0xb, 0xb, 0xc, 0xb, 0x9, 
0xc, 0xc, 0xb, 0x5, 0x4, 0x4, 0x3, 0x1, 0x4, 
0x4, 0x3, 0x3, 0x8, 0x2, 0xa, 0xd, 0xc, 0xc, 
0xb, 0x0, 0x0, 0xb, 0xb, 0x0, 0x6, 0x1, 0xb, 
0x9, 0xb, 0xc, 0x9, 0xa, 0xb, 0x9, 0xb, 0xc, 
};

static int backbone_model5_conv1_relu2_threshold[64 * 7] =
{ // torch.Size([64, 7])
22, 64, 106, 148, 211, 296, 464,
40, 90, 140, 190, 265, 365, 566,
-30, 21, 74, 126, 205, 310, 520,
25, 58, 90, 123, 171, 236, 367,
-2, 48, 99, 150, 226, 328, 532,
7, 41, 75, 109, 160, 228, 364,
19, 58, 97, 137, 195, 274, 430,
36, 86, 136, 186, 261, 361, 562,
15, 76, 137, 198, 290, 412, 656,
55, 91, 126, 162, 215, 286, 429,
25, 56, 88, 119, 166, 229, 355,
49, 102, 154, 207, 285, 390, 599,
61, 120, 179, 238, 327, 445, 681,
57, 91, 125, 158, 209, 277, 412,
25, 74, 122, 171, 244, 341, 535,
16, 56, 95, 134, 194, 272, 430,
33, 74, 115, 156, 218, 301, 465,
34, 67, 99, 131, 180, 245, 374,
-11, 34, 81, 127, 197, 289, 475,
45, 106, 166, 227, 318, 439, 681,
6, 55, 105, 155, 230, 329, 528,
58, 152, 247, 341, 483, 671, 1049,
-2, 79, 161, 243, 365, 529, 856,
24, 63, 101, 140, 197, 274, 428,
3, 48, 94, 139, 207, 298, 479,
24, 59, 94, 129, 181, 251, 390,
23, 79, 134, 189, 272, 382, 603,
6, 48, 90, 132, 196, 280, 449,
15, 39, 62, 85, 120, 166, 259,
-84, -37, 10, 58, 130, 226, 417,
35, 87, 140, 192, 270, 374, 583,
-13, 22, 58, 94, 147, 219, 362,
37, 76, 116, 155, 214, 292, 449,
31, 59, 87, 115, 157, 214, 326,
36, 100, 164, 228, 324, 452, 709,
54, 112, 171, 229, 317, 433, 667,
47, 90, 132, 175, 239, 324, 495,
3, 36, 68, 101, 151, 217, 348,
6, 72, 138, 204, 304, 436, 702,
128, 165, 201, 238, 293, 367, 514,
32, 79, 126, 173, 244, 338, 526,
27, 72, 118, 163, 231, 321, 502,
15, 57, 100, 142, 206, 291, 461,
-25, 29, 84, 139, 222, 331, 551,
-30, 10, 51, 92, 154, 236, 401,
50, 86, 122, 158, 212, 284, 428,
7, 55, 103, 151, 224, 320, 513,
26, 69, 112, 154, 219, 304, 476,
-5, 47, 101, 154, 234, 341, 555,
20, 62, 104, 145, 208, 292, 459,
-106, -33, 39, 112, 221, 366, 657,
0, 63, 127, 190, 285, 411, 664,
-17, 44, 107, 169, 263, 388, 637,
19, 53, 86, 120, 170, 238, 373,
-25, 14, 55, 96, 157, 238, 400,
9, 53, 98, 142, 209, 298, 475,
42, 76, 110, 144, 195, 263, 398,
19, 83, 147, 211, 308, 436, 693,
37, 74, 112, 149, 204, 279, 427,
18, 41, 64, 87, 121, 167, 259,
61, 109, 157, 205, 276, 372, 563,
-30, 33, 97, 161, 258, 386, 643,
26, 77, 128, 178, 254, 356, 559,
44, 65, 87, 109, 141, 185, 272,
};

static uint64_t backbone_model5_conv2_conv1_weight[64 * 1*4] =
{ // torch.Size([64, 1, 1, 64])
0x522443a4c3a3b442,0x4a30ba8cc2b3ad4c,0xcb51a2bd4e403b2c,0x9b5025c01ab032b0, 
0x0018bc384a32bc40,0x33434b43100dc8dc,0x343242934b0c24c4,0x324341cb2c244932, 
0xb22bdbbc8a443c3c,0x2cb03b3304bc3291,0x9c0bc3bc3c4aca0c,0xb63b32bc43ccbcc2, 
0x308b13c454314b40,0x89da984b33133cc4,0xb1b2311a3442202d,0x42a2a243c3203ab2, 
0x24c4b335bc28dd9c,0x91a421442bcaac94,0xabaac31c2b2cd323,0xa3d32c454492ac4b, 
0x4d035213c44a391d,0x4a0934492b3939b0,0x535329243b403b31,0x441444003c134ad3, 
0xcbdc3bddcc1b5d23,0xbddccabbbcbc5aca,0xbc4caa12d31b42bd,0x34bbbbcd0bcdb12b, 
0xc24343340453c02c,0xaa342c342bb3333b,0x3443b4bb3b384a18,0xa9453c843bc12b28, 
0xb3c25384c44d220c,0x9320c4c342c54391,0x33240c39a28b39c3,0x3245220433b23d3d, 
0x0c3402892493c3a4,0x395900bc024203cd,0x841b391a9a8a24a5,0x3344a8493d24b3bb, 
0xa3cbbbac333cbb4b,0xb2d42c8aadbbb4c4,0x0aca31baa1ca1bbc,0x9bb8a9dcb1a01c3c, 
0x192ab8b03cacc3c2,0xc1c24a294333b314,0x85c42444a21bc343,0xc34b4b4c4ba31c3b, 
0xd2acdb332c4badab,0xc413399440b2c2aa,0x3a53c2c3c8c9c408,0xc39b9d34c2243a80, 
0xdc35c323b4233ba0,0x3dbcbac434ac4a38,0xbb3c2c1a2c424b10,0xc5acbc2330aa8b9b, 
0x5cc2b0baa5094a1b,0xc1c2bc1335aa5c32,0xc940c4bb285b595a,0x494854cb4bbacacb, 
0x134343044ac5cc31,0x4b4d4ccd52b3443b,0xb433b594aac38343,0x0c24ca22b0243c24, 
0x5b203b301a01b2bb,0xabb109bb9ba89a0a,0xb213bbb9aaba919a,0x0b1a94a09094838b, 
0x2c3b4bba54b34349,0xc34b834cc4a5aa28,0x19b420bb41449800,0x3a44b2bcc84a2004, 
0xb5c33344a43a28c2,0x20cbc13ca2b43c45,0x2211b41219323c1a,0xc2334bb0943c9243, 
0xbb5abacb43a3ab42,0xb230bd983cc3588c,0xdb03c5ba443b0403,0x3b303cb3a1c2bb34, 
0x53ba84bd94bc4caa,0xc4cb21bb8244ca23,0xa3424439a39a5a2c,0x39c425cc3c33041b, 
0xa32542b5b4bb2ab4,0xdbadc4c38443a012,0x9b4c2292bb334332,0x343c428b2a4a43bb, 
0x3ec33c2254233ba4,0xa413b4a2348b3ccc,0xcb95c9c430baa5b2,0x325454434c42cc34, 
0xcccccba92c40ccc2,0xb3c33cb8c44c3bbc,0x5a020ca4b3bcb3c3,0xb2cbbc03c2309cc1, 
0x24c112b2ca03bc9b,0x2ba3d10c444abcb4,0x2c500bc5b32bc318,0x20483034aa4a32c3, 
0x5244444435333344,0x493123a2434443a3,0x44341c545b103401,0x404335343a353488, 
0xb4334ab5440cdb3c,0xc322bb235aaa3bb0,0x2b4b24323b3c34a3,0xa4a950853b38acba, 
0xb452a3ab139bbbb0,0xb23443bb2110bbaa,0x3bac4aacc0b03bba,0xb4c00b3ccb3abb3c, 
0x3c9032a338b25343,0x503bcb33b33a13aa,0xb4223a233b332224,0x3b58403a3a4383d3, 
0xc0304dc44b34a133,0x3c544414944cb2c9,0x3bdb3b244b48dbb3,0x343c1c44b33b30a4, 
0x2c8c10cc3bb3ac32,0xba333bbbcbaa1c8b,0xb0d0aa444bb3bcaa,0xaba1a11a3bbcacca, 
0x4c33400b24aaac54,0xa3bda4b324bc2c42,0x1aacc82b2b4b518b,0x33b5b4ba33c2b3b9, 
0x3134c4ab82433a12,0xb3942431b6bba223,0xb2820a929043bb9b,0xbacac932b1b39ab2, 
0x40cb23a31b2531b4,0x3c400c3d34322524,0x24b33bb44a54da31,0xcd84c00319332dba, 
0x4311d49a33ab0924,0x32cba01ba0bbaaa2,0xa3392313b0ab3bc9,0xda25b4443bc30898, 
0xb0c43062bcb2cc1b,0x493310a84cda2b38,0x422ba8cb3aba8424,0xc1ba3b2123ab0c4c, 
0xbcd4c2a3ccbacac4,0x5cbbb9ccb33ab28a,0x333bacc3cccc264c,0xbbbc1ca4c04c292b, 
0x30c0c13a9082b432,0x4b24ca3c51c112a2,0x4b2a3adba34915a2,0x8bc4a23c04bac444, 
0xa2282d3342c4a20c,0x2bb0b38dbbdc2ab3,0xab24bcaccb9434bb,0xcc4bcb25c4b3a435, 
0x0bac38baca94c0c0,0x22b4210bc3ccccbb,0x39c4cb42a9cba2cc,0xa32ba3a429219131, 
0x921dbccd9a23cc3b,0x5bc8cab3333cb3b3,0x2922b32bcbcaa5cb,0xbbc9cbb3c81aa482, 
0x30c3b241b24a4430,0x3ca4ac5c4ba3c333,0xbbb33b2b3bb104bb,0x23c3132c34abab43, 
0x3cbc4c923c823c1a,0x242b31abcb0b5ccb,0x34a4a3453bc3b8bb,0x4cc5c4924b53bbb3, 
0xcd322b0ca22231c8,0x93b3b1cb333a3c49,0xb32b23a3baab0a33,0xba245b2b4c33bb3a, 
0xb00c395a8233d23c,0x2c2381c939c30cac,0x15b15bcbbbbb0adb,0x33c25aab4cc82c5b, 
0x4c0adb1cb11a3b2c,0x024c1934b3283080,0x3a14acc8a13b3b32,0x38baaa4b10d5abb4, 
0xb12cdca94bbc333b,0xc34b323cbbb9cbbc,0xb134c0c41bbabc9a,0xab452b9094a39db4, 
0x3cb3335223430bc1,0x4433a14322cc3314,0x3c32c2d3a44dac42,0xc32ad2320abbd00a, 
0x1c292b4444434245,0x443454414acc449c,0x1a43c04523333bc4,0x2444033b9483d4c4, 
0x493bbc2bbb3b152d,0x1ba31512831bc8b9,0x2bb2cda82cb3cacc,0xa4a2b39abbb31baa, 
0x83a4b4343ccb24c1,0xdb4bb49c3c35c543,0x942b2b04c5b3ca34,0xb034cb2ab00313a0, 
0x0bc33c40324b9ca3,0xa53332c0c4bb4ccc,0x4234acbc3ac380b4,0x93b2533b44354b40, 
0x4a41cd2a4a248333,0x4c3413b4a40bd0c2,0x33b43b44a3d234c3,0xd24c240a44c302c4, 
0x01c313b1ccbbdc4b,0x1aa9b4c35b23b4b3,0x3ba20198b42d843b,0xca0a3c24c2c0bd9b, 
0x12b0120aa323443c,0x30401a3834423522,0x2440342343144442,0x24080a33a1cb4433, 
0xb32bb38b8cbbb0bb,0x92bacbdb21abb0bd,0x930b42abcbc524db,0x8cdb5c1044304c33, 
0x392c3b438a414bdc,0xb4c4212ba4402021,0x51434c95c43a32bc,0xb33d30d3c144a480, 
0x20a819b23303a4c3,0xbd933b1ddc45bd20,0x34c43b35a3cc342b,0x3c329213044a3a34, 
0x3c424343db4939b9,0x34a09b3348338433,0x43b453b3c4452a2b,0x4250048d2e33b80d, 
0x4b4a323a25ba524a,0xb14cb3d2c45249ca,0xc38349452c1b04ad,0x424114c3ab49ab51, 
0xb493a993bd29c4aa,0x40bc232c639c4403,0x335b343bbc8ca412,0x4bbb9a2823304323, 
0x93bc8d2b1334933c,0x03484b38a33c9a44,0x2a8bb4933b038253,0xa23a23dc4341b830, 
0x4b1cb1423c3944b4,0x4b30924a0ba4ca90,0x02c4ab4934ea4ca4,0x3ca3a24233b4c5b2, 
0xc33b9aa02840ab4a,0x909b3a030a4224a3,0x33c1320b44212c20,0x43acc31832b4593a, 
};

static int backbone_model5_conv2_quant1_threshold[64 * 14] =
{ // torch.Size([64, 14])
-1263, -792, -556, -379, -262, -144, -26, 91, 208, 326, 444, 621, 856, 1327,
-745, -447, -299, -187, -113, -38, 35, 110, 184, 258, 333, 444, 593, 891,
-1098, -722, -534, -393, -299, -205, -111, -17, 77, 171, 265, 406, 594, 970,
-919, -565, -389, -256, -168, -79, 8, 97, 185, 273, 362, 494, 671, 1025,
-1252, -841, -636, -482, -379, -276, -173, -71, 31, 134, 236, 391, 596, 1007,
-863, -517, -343, -214, -127, -40, 45, 132, 218, 305, 391, 521, 694, 1040,
-1536, -1092, -870, -703, -592, -481, -370, -259, -148, -37, 73, 239, 461, 906,
-776, -463, -306, -189, -111, -32, 45, 123, 202, 280, 358, 476, 632, 946,
-929, -616, -459, -341, -263, -184, -106, -27, 50, 128, 207, 324, 481, 795,
-737, -435, -284, -171, -96, -20, 54, 130, 205, 281, 356, 470, 621, 923,
-1099, -766, -600, -475, -392, -309, -226, -143, -59, 23, 106, 231, 397, 729,
-1026, -665, -485, -349, -259, -169, -79, 11, 101, 191, 281, 417, 597, 958,
-1062, -701, -521, -385, -295, -205, -115, -25, 65, 155, 245, 380, 561, 922,
-1039, -670, -486, -348, -256, -164, -72, 19, 111, 203, 295, 434, 618, 986,
-1132, -733, -534, -385, -285, -185, -86, 13, 112, 212, 312, 461, 660, 1058,
-983, -593, -398, -251, -154, -56, 40, 138, 235, 333, 431, 577, 772, 1162,
-972, -616, -438, -305, -216, -127, -38, 50, 139, 228, 317, 451, 629, 985,
-967, -576, -380, -233, -136, -38, 59, 157, 255, 352, 450, 597, 793, 1184,
-994, -642, -466, -334, -246, -157, -69, 18, 106, 194, 282, 414, 590, 942,
-1057, -673, -480, -336, -240, -144, -48, 47, 144, 240, 336, 480, 672, 1057,
-901, -547, -370, -237, -149, -60, 27, 116, 204, 293, 381, 514, 691, 1045,
-830, -515, -357, -239, -160, -81, -2, 76, 155, 234, 312, 431, 588, 904,
-1193, -771, -561, -403, -298, -192, -87, 17, 122, 228, 333, 491, 701, 1123,
-1216, -792, -580, -421, -315, -209, -103, 2, 108, 214, 320, 479, 691, 1115,
-1054, -692, -510, -374, -284, -193, -102, -12, 78, 169, 260, 396, 577, 940,
-915, -450, -218, -44, 72, 188, 304, 420, 536, 652, 769, 943, 1175, 1640,
-1185, -772, -566, -411, -308, -204, -101, 1, 104, 208, 311, 466, 672, 1085,
-984, -647, -479, -352, -268, -184, -100, -16, 68, 152, 236, 362, 531, 868,
-770, -436, -269, -144, -60, 22, 105, 189, 272, 356, 439, 565, 732, 1065,
-1018, -635, -444, -301, -205, -110, -14, 81, 176, 272, 367, 511, 702, 1084,
-1058, -729, -564, -440, -358, -276, -193, -111, -28, 53, 135, 259, 424, 753,
-1005, -620, -427, -282, -186, -89, 6, 103, 199, 295, 392, 536, 729, 1115,
-784, -472, -316, -199, -121, -43, 34, 113, 191, 269, 347, 464, 620, 932,
-979, -609, -424, -286, -193, -101, -9, 83, 175, 267, 360, 498, 683, 1052,
-878, -568, -413, -296, -219, -141, -64, 13, 90, 168, 245, 362, 517, 827,
-1104, -722, -530, -387, -291, -196, -100, -5, 90, 185, 281, 424, 615, 998,
-1377, -893, -650, -469, -347, -226, -105, 15, 136, 257, 379, 560, 803, 1287,
-851, -543, -388, -273, -195, -118, -41, 35, 112, 189, 266, 382, 536, 845,
-1070, -681, -486, -340, -243, -145, -48, 48, 146, 243, 340, 486, 681, 1070,
-1297, -787, -532, -340, -213, -85, 42, 169, 297, 424, 552, 743, 999, 1509,
-994, -671, -510, -389, -308, -227, -147, -66, 14, 94, 175, 296, 457, 780,
-905, -585, -426, -306, -226, -146, -67, 12, 92, 172, 252, 371, 531, 850,
-979, -617, -436, -300, -209, -118, -28, 62, 153, 243, 334, 470, 651, 1014,
-1001, -639, -457, -321, -231, -140, -50, 40, 131, 221, 312, 448, 629, 991,
-1185, -775, -570, -416, -313, -210, -108, -5, 97, 199, 302, 456, 661, 1072,
-903, -588, -430, -311, -232, -153, -74, 4, 83, 161, 240, 359, 517, 832,
-1110, -728, -538, -394, -299, -204, -108, -13, 82, 177, 272, 416, 606, 988,
-1019, -653, -470, -333, -242, -150, -59, 32, 123, 214, 306, 443, 626, 992,
-853, -463, -268, -121, -24, 73, 170, 268, 365, 463, 560, 706, 901, 1292,
-1247, -809, -590, -425, -316, -206, -97, 12, 121, 231, 341, 505, 724, 1162,
-911, -560, -384, -253, -165, -77, 9, 97, 185, 272, 360, 492, 667, 1018,
-817, -505, -349, -232, -153, -75, 2, 80, 158, 236, 314, 431, 587, 900,
-842, -512, -347, -223, -140, -58, 24, 106, 189, 271, 354, 478, 643, 973,
-1286, -868, -659, -502, -398, -293, -189, -84, 20, 124, 229, 386, 595, 1013,
-847, -473, -286, -146, -52, 40, 134, 228, 321, 415, 508, 648, 836, 1210,
-937, -622, -465, -347, -268, -190, -111, -32, 45, 124, 202, 320, 478, 792,
-833, -487, -315, -185, -99, -13, 73, 159, 245, 331, 418, 547, 720, 1065,
-1027, -620, -417, -264, -162, -61, 40, 142, 243, 345, 447, 599, 803, 1210,
-903, -573, -408, -284, -202, -119, -37, 45, 127, 210, 293, 416, 581, 911,
-783, -442, -271, -143, -57, 27, 112, 198, 283, 369, 454, 582, 753, 1094,
-928, -585, -414, -286, -201, -115, -30, 55, 140, 226, 311, 440, 611, 953,
-722, -434, -290, -182, -110, -38, 33, 105, 177, 249, 320, 428, 572, 860,
-1047, -659, -465, -320, -223, -126, -29, 67, 164, 260, 357, 503, 697, 1084,
-861, -522, -353, -226, -142, -57, 27, 111, 196, 280, 365, 492, 661, 999,
};

static uint64_t backbone_model5_conv2_conv2_weight[64 * 9] =
{ // torch.Size([64, 3, 3, 1])
0xd, 0x8, 0xd, 0x8, 0x3, 0x0, 0xa, 0x3, 0xa, 
0x9, 0x1, 0x0, 0xc, 0x3, 0x2, 0xd, 0xc, 0x4, 
0xc, 0xc, 0xb, 0x0, 0x3, 0x5, 0x4, 0x5, 0x5, 
0x9, 0xb, 0xd, 0x3, 0xb, 0xc, 0x3, 0xb, 0xc, 
0x4, 0xb, 0x1, 0x4, 0xc, 0x8, 0x5, 0x3, 0x2, 
0xa, 0x8, 0x3, 0xa, 0x3, 0x3, 0xd, 0xc, 0xd, 
0xb, 0x9, 0x0, 0x5, 0x2, 0x3, 0x5, 0x4, 0x5, 
0x3, 0x3, 0x4, 0xc, 0xb, 0xc, 0xc, 0xc, 0xc, 
0xc, 0x8, 0x4, 0xc, 0xb, 0x3, 0xd, 0xc, 0x2, 
0x5, 0x4, 0x4, 0xb, 0xa, 0x3, 0xc, 0xc, 0x1, 
0x4, 0x4, 0x4, 0x1, 0xb, 0x2, 0xd, 0xc, 0xd, 
0x5, 0x3, 0x3, 0x4, 0xb, 0xc, 0x4, 0xb, 0xb, 
0xb, 0xc, 0xb, 0x8, 0x2, 0xb, 0xc, 0xb, 0xd, 
0xb, 0xc, 0xc, 0xc, 0xa, 0xb, 0xa, 0xb, 0x8, 
0xb, 0xb, 0xb, 0xc, 0xc, 0xc, 0xb, 0xb, 0x0, 
0xd, 0xc, 0xb, 0x9, 0x9, 0x9, 0xc, 0xc, 0xb, 
0x4, 0x3, 0xa, 0x4, 0x3, 0x0, 0x4, 0x3, 0xb, 
0x1, 0x4, 0x5, 0xa, 0x1, 0x4, 0x0, 0x2, 0x4, 
0x4, 0x4, 0x4, 0xa, 0xb, 0xa, 0xc, 0xc, 0xd, 
0x1, 0x3, 0xc, 0x3, 0x9, 0xb, 0xb, 0xc, 0xd, 
0x5, 0x4, 0x4, 0x4, 0x3, 0x8, 0x8, 0xb, 0x9, 
0xc, 0xc, 0xd, 0xc, 0x8, 0x3, 0x4, 0x5, 0x5, 
0xc, 0x2, 0x2, 0xc, 0xa, 0xb, 0xd, 0xc, 0xc, 
0x4, 0x3, 0x2, 0x2, 0x8, 0x2, 0x3, 0x4, 0x5, 
0x4, 0x4, 0xc, 0x3, 0x5, 0xd, 0xb, 0xb, 0xc, 
0x4, 0x9, 0x0, 0x5, 0x3, 0x9, 0x4, 0x4, 0x1, 
0xd, 0xb, 0xa, 0xc, 0x4, 0x4, 0xd, 0x3, 0x4, 
0x3, 0x3, 0x4, 0x0, 0x2, 0x2, 0xd, 0xc, 0xc, 
0x4, 0x8, 0x3, 0x3, 0xa, 0xd, 0xc, 0xc, 0xd, 
0xb, 0x3, 0x2, 0xe, 0x2, 0x2, 0xd, 0xb, 0xa, 
0x3, 0xb, 0xc, 0x3, 0xa, 0xb, 0x5, 0x4, 0x4, 
0x6, 0x4, 0x4, 0x0, 0xb, 0xb, 0xb, 0x8, 0x3, 
0xa, 0xc, 0x0, 0x2, 0x4, 0x5, 0xc, 0xb, 0x4, 
0xc, 0x0, 0x2, 0xe, 0xb, 0x4, 0xc, 0x0, 0xb, 
0xa, 0xb, 0x1, 0x4, 0xa, 0xc, 0x5, 0x2, 0xc, 
0x2, 0xa, 0x4, 0xa, 0xc, 0x3, 0x2, 0x3, 0x6, 
0x2, 0x4, 0x6, 0x1, 0x8, 0x4, 0xa, 0x0, 0xa, 
0x3, 0x4, 0xc, 0x1, 0x4, 0xc, 0xa, 0xb, 0xd, 
0x9, 0x5, 0x4, 0x4, 0x4, 0xb, 0x3, 0xb, 0xc, 
0x5, 0x4, 0x4, 0xb, 0xc, 0xc, 0xc, 0xd, 0xc, 
0x4, 0x4, 0x5, 0x4, 0x4, 0x5, 0xc, 0xc, 0xc, 
0xa, 0x4, 0x4, 0xc, 0x2, 0x0, 0xd, 0xb, 0xc, 
0xb, 0xd, 0xd, 0x3, 0xa, 0x1, 0x4, 0x3, 0xa, 
0xc, 0x0, 0x4, 0xb, 0x0, 0x0, 0xd, 0xc, 0xa, 
0xb, 0x1, 0x2, 0x0, 0x4, 0x4, 0x3, 0x4, 0x5, 
0x4, 0x2, 0xb, 0x2, 0xc, 0xd, 0x4, 0x9, 0x3, 
0x4, 0x4, 0x0, 0x5, 0x2, 0xb, 0x4, 0x9, 0x3, 
0xa, 0xd, 0xc, 0xd, 0xd, 0x2, 0x8, 0x3, 0x3, 
0x8, 0x4, 0xa, 0x3, 0xa, 0xc, 0xa, 0xd, 0xd, 
0xa, 0x3, 0x4, 0x2, 0x1, 0x4, 0x3, 0x3, 0x4, 
0x5, 0x5, 0x5, 0xb, 0xb, 0xc, 0x9, 0xb, 0x0, 
0xb, 0xb, 0xc, 0x3, 0xa, 0xd, 0xa, 0xa, 0xc, 
0xb, 0xc, 0xe, 0x4, 0x3, 0xc, 0x8, 0x2, 0xc, 
0x5, 0x5, 0x9, 0x1, 0xa, 0xb, 0x3, 0xa, 0xb, 
0xd, 0xc, 0xc, 0xb, 0x9, 0x9, 0x3, 0x3, 0x3, 
0x0, 0x4, 0x4, 0x4, 0x4, 0x0, 0x4, 0x3, 0x4, 
0xd, 0xb, 0xd, 0xc, 0x1, 0xb, 0xb, 0x1, 0xa, 
0xb, 0xc, 0xe, 0x4, 0x4, 0x9, 0x3, 0x1, 0xc, 
0xd, 0xd, 0xc, 0x4, 0xb, 0x3, 0x4, 0x4, 0xb, 
0xb, 0x2, 0xd, 0x3, 0x3, 0xb, 0x9, 0xb, 0xd, 
0xd, 0x3, 0x4, 0xc, 0x3, 0x4, 0xd, 0xb, 0x1, 
0xd, 0xa, 0x3, 0xc, 0x3, 0x4, 0x3, 0x3, 0x3, 
0x9, 0x2, 0x9, 0x9, 0xb, 0xe, 0xb, 0x3, 0x0, 
0x9, 0x4, 0x5, 0x8, 0x4, 0x3, 0xc, 0xb, 0xb, 
};

static int backbone_model5_conv2_relu2_threshold[64 * 7] =
{ // torch.Size([64, 7])
39, 85, 131, 177, 246, 338, 522,
57, 97, 137, 178, 238, 319, 480,
27, 99, 172, 244, 353, 497, 787,
49, 92, 135, 178, 243, 330, 503,
37, 99, 162, 224, 318, 442, 692,
7, 61, 115, 169, 250, 358, 574,
42, 110, 179, 247, 350, 487, 762,
39, 74, 110, 146, 200, 272, 415,
24, 72, 120, 168, 240, 336, 527,
51, 93, 136, 178, 242, 327, 498,
31, 83, 135, 187, 265, 369, 577,
12, 64, 117, 170, 250, 356, 568,
25, 78, 131, 184, 264, 370, 582,
55, 98, 141, 184, 249, 335, 507,
42, 71, 100, 130, 174, 232, 349,
-19, 67, 154, 240, 370, 544, 891,
-7, 23, 54, 85, 132, 195, 320,
41, 92, 144, 195, 271, 373, 578,
-10, 39, 88, 137, 211, 310, 507,
-24, 29, 82, 136, 217, 325, 540,
-17, 36, 90, 144, 225, 333, 549,
73, 147, 222, 296, 407, 556, 853,
-29, 17, 64, 111, 181, 275, 463,
-57, -10, 37, 85, 156, 251, 442,
58, 96, 135, 174, 232, 309, 464,
65, 105, 145, 186, 246, 327, 489,
-16, 36, 90, 143, 222, 328, 541,
-9, 34, 77, 121, 187, 275, 450,
28, 86, 144, 202, 288, 404, 636,
4, 75, 147, 218, 326, 469, 755,
7, 54, 101, 148, 219, 313, 501,
-16, 46, 110, 173, 268, 395, 649,
4, 51, 97, 143, 213, 306, 491,
46, 113, 180, 247, 348, 482, 750,
28, 71, 113, 156, 220, 305, 475,
48, 115, 182, 249, 349, 482, 749,
-7, 61, 129, 198, 301, 438, 713,
17, 60, 104, 148, 214, 301, 476,
15, 61, 108, 154, 224, 318, 504,
74, 118, 162, 205, 270, 358, 532,
126, 181, 237, 293, 376, 488, 710,
-8, 40, 89, 139, 213, 312, 510,
25, 84, 143, 202, 291, 409, 644,
33, 80, 127, 173, 243, 337, 523,
59, 109, 158, 208, 283, 383, 582,
30, 63, 95, 128, 176, 241, 371,
5, 62, 118, 175, 260, 373, 599,
80, 136, 191, 247, 330, 442, 664,
52, 118, 184, 250, 349, 481, 745,
-8, 22, 54, 85, 133, 196, 322,
-48, 29, 106, 184, 301, 456, 767,
45, 96, 148, 199, 275, 378, 582,
-2, 73, 148, 224, 337, 488, 790,
31, 84, 138, 191, 271, 378, 591,
-27, 23, 74, 125, 201, 303, 507,
42, 93, 145, 197, 275, 379, 586,
73, 134, 195, 255, 347, 468, 711,
37, 96, 155, 213, 301, 418, 652,
-8, 45, 99, 153, 233, 341, 555,
14, 80, 147, 214, 314, 447, 713,
-11, 37, 87, 136, 210, 309, 507,
56, 94, 132, 170, 228, 304, 456,
-25, 35, 96, 156, 248, 369, 612,
13, 57, 101, 145, 211, 298, 474,
};

static uint64_t neck_lateral_convs_0_conv1_weight[64 * 1*4] =
{ // torch.Size([64, 1, 1, 64])
0x94b2b4085aac39a5,0x4a4a2bb04442bc4b,0xbca44554934bc939,0xb49a3b444423ab3d, 
0x1abb33b9a04aca2a,0xacb0ba30404bcbcb,0x33bcb8b342c9b110,0x1a223bbb4bbb3c2a, 
0xac93c11b809bbb31,0x021ab3b9abcaa9c9,0x08a43b08bb4a34da,0x31201333bbaca133, 
0xba9120b021c03a20,0x1b3a08103b2094bb,0x8a4394b2a2134b3a,0x428402a3acb30901, 
0x9b3a8a033c2bc41c,0xc0ba0032bbb30cbb,0x213a28a23d43bbba,0x4c933433c393a343, 
0xb3cca8332bcb432b,0x0d023c3bb33c4c54,0xd19b238220aacd33,0xc9c129cbc321d339, 
0x94baa22ab3052033,0x3b2242da43218533,0x3ba42b3923c0a203,0x821b8c8c393c35ba, 
0xaa1a3b4032b4a3a9,0x20bbb33133333402,0xa3a49cb1a233134a,0x334a242420323542, 
0x3a3143b9b82431c2,0x34519323239204a5,0x29b3133023939cbb,0xa2c0293b3441b92b, 
0x1a3120232c8b240c,0xcb2332212c350234,0x204b143a1a423943,0x0d318345c3983933, 
0xa8b902b3b1b4aca2,0x2431b14944404bbc,0x3395baa0252b53c2,0xb48b1a424bbc2233, 
0x210b12211a399aa2,0x1aa80c80322a1230,0x12a0a90a39b1b2b0,0xa4a190ac0bd09bba, 
0x03932143b913292a,0xad41a32b33002c4c,0x0a4152b1298334ab,0x2322a2ca84a3323b, 
0x1434a3cbbb343429,0xb2884110443ba343,0x3b4bb2a4424bcd42,0x0bb1acc203233b2a, 
0x22313391bb021b0a,0xccca333232b1b9bb,0x33c4cb833b8b5940,0x4b149b9b4b292a49, 
0x9c8a28a89b4d1c99,0x0ca22b5ac04bc3cb,0x202cb3b839443c4b,0xb3b4ac8941c3a132, 
0x239a0023c9895033,0x3bb21033113ba4cc,0x93c9b3b8a3a2a859,0x3322acab3bb3400b, 
0x3c3c39a4ba4433ab,0x3b3234b213c232b1,0xa110accb4b421991,0x2b30c8a9ba829aa5, 
0x24b41b12b9b54312,0x03c24c33b590c35a,0xcc3ac3b4b3a9bb0b,0x35c02cbcac9530b2, 
0x844a23b93032b943,0xb381a29219a499cc,0x4240c1ca244b54b4,0x2a3cb3ba0bb302c0, 
0xbbcb01039bca13cb,0xc30acca3b9bc4819,0xcbc04241c0a2c9c3,0x3bd2a3483b4bc01a, 
0x2342a22a33b44402,0x313323dab0b04223,0xa1339129a33a02ca,0xa439b4a3b3a322ba, 
0xaa1bb3bb0a38baab,0x03aa8541c13ba3b3,0x3301baa229cbaa00,0x402292ca32b83aba, 
0xa83030ab8b2da8a9,0xbbaa1232c20ca0ab,0x4b3ba2ca8b23ab40,0x21a223d934b9bb09, 
0x82b4cc93a4c44a2c,0x24abcb50b23833b3,0xcbbabb33b29d844a,0x34ab4bcc43033b9c, 
0x11b3b3231223ac39,0xa21a113b33a40c49,0xa3391bb93bab34c3,0x2aa21ba93da2a332, 
0x3bb34ba340b0b482,0xc4b19da0bc320a2a,0xa25b03a9aca23ab2,0x1bda34b13933dcc8, 
0xb4b4c22c30cbc0cb,0x3b29ba8b0b08329b,0xabb3a122c2bb0a9b,0x8c33b22940aba32c, 
0x908ba2c0bb2abcab,0x90012ba2922aabaa,0xa12c312030cbb9c1,0x38c2acbc908a2cc9, 
0x03924b29223ad0b2,0xc2bbc0a9b3bccb3b,0x99abbbbbacbaabd4,0xc8bb83c3100cbba3, 
0xb3b32233b3239b42,0x3d30243a342cc2ab,0x3b435ac03113433b,0x32131acb95b2330b, 
0xcca9a039a2bb2bb3,0x3339aab99c9c33ab,0x2ac33930b0b314b1,0xa23a224d33ab84a0, 
0xa09aba2443bbaa1b,0xc210b8b8bba33c42,0x0a4a4b4a93a234cb,0xb3ca22333232b59b, 
0x32431180b032bb39,0xbc510149322d8b93,0x3a5b30cb34403109,0x3a98299a35c3b231, 
0x2451339bcb43b228,0xbba833a3228cbbba,0x3ab0b3b3315a21cb,0x3204a2b892c3833a, 
0x2c3442343b3ba33c,0x53303b1a24b44342,0x332b3ba3433b453a,0xca43225bb3342233, 
0xbac9a83a3ab0422a,0x944449ab2aa10c32,0xc144339abbc91b8b,0xbab23c40b303b90b, 
0xbcad2b24dab3a42c,0xb4c9b3a924cc4342,0xa40aaebb0cb2a90a,0xb038a33ccbab3225, 
0xcb90abbbaaccb832,0x030ab0b0ccab13ca,0x32b40baabbc430b2,0xac2b333da8bcc4ca, 
0x12a21192ba9211b0,0x81329ba001b20020,0x3902ba9923b02110,0x801080cb392a2403, 
0x143431a2ab448929,0x21a3c39122bb32ba,0x2200bbca3ba481b3,0x2b2222202b922a34, 
0x0b4203ab0b24bb8b,0xb3cb1843839b9cc0,0xb3ab23b3a15b9ba9,0x2313523c9ab4ac42, 
0xb424bbbd43ba0c94,0xa0abba19aa4aca8c,0xbcc926a0b41b98ba,0xa3a0ab3240cbab0d, 
0x2b3bb198103abc19,0xaca134bbd3bc2bc2,0xbacc13993aac2bb8,0x3bbb3c3d12ab3bcb, 
0xbac33c9bb3b38b21,0x03904c4c4234cb42,0xb2a2ab32993b2102,0xb4ba42b9c4303031, 
0x1c4bb4043b3b33c2,0x9bc314919b810812,0x30ab33c3444442b9,0x9133ba34bd241b22, 
0x334a33282b531bb1,0x0a3ba43243043bac,0x33c384903243a14a,0xb244c3584ba33b3b, 
0x33b4113203aa4302,0x20233239b3099a13,0x2c4d039a03819ba1,0xa41933ba2334acab, 
0xbbacb19b22b93a93,0x121b9b318038a9aa,0xbbb99391b30a002a,0x13a019a8a1b310ab, 
0x3ac13ab2133a39b1,0xc4ca4b2b83834c24,0xa2cc04980b184bc3,0xbc89cb43ac4cc242, 
0x9bb2a322b0ac0ba9,0x3b30baba2c9ca093,0xba93493b9cb933cc,0xb4330438b921b2bb, 
0x02a21102b99002a9,0x9022aaa009b02102,0x2022aa9a20a22000,0x0a20a1b83a291322, 
0x023b1b31a92cb43a,0xa8cbbb29a9aa2cbb,0xb1c9c801bcb3a331,0x4b5bc2a018bc484a, 
0x8b01c0bb28b2aba1,0xc1b123c94a90bbb1,0xaa242ab2324b2bcb,0x1080c4c4b9c30b43, 
0x9bb12c3894cb313b,0xa3318cba992c92c4,0x9a3c2a3cbaaa39aa,0xbccb33a3044bb00b, 
0x200a00a2c322ab30,0x8b3234aaa3a1b1a3,0x09b3028b32bb3a32,0xac3b2a43944c35aa, 
0xb30b014b3bbb4340,0x2cc11cb0a99b3b0c,0xbbabc4b29ba3b242,0x43331899adc233a1, 
0x245a34b05c53bab3,0x33cbc23403a3abbd,0x20b4b2c23344343b,0x3443c3322bc41c22, 
0x24232b32a8442990,0xb1b20318a3b13b33,0x2239ac2a2ba3a2a2,0xc19b012a383c9c24, 
0xbb3c9cbcbac58cb9,0xbcbc24cc4b4abd14,0xc2c4cbaab24d3cca,0x4ca34dc0329c2d53, 
0xc341b3bcbb43bbb2,0x30b9c30213ac9bcc,0x3ac213c43a3430b8,0x2334c2503b3a3313, 
0xab329a9a2b9cb02b,0xb3b0a03a2ba11cb0,0xb03933c8aa3331a0,0x9a380345bb19ab34, 
0xb3a4bc3da3caac2c,0x33ba2ba29433ab1a,0xba03bcb1b3ccc92a,0x05ccaacc341232a2, 
0x4c2334b184421bc0,0x248aa48423a4b4ba,0x32b0144331084b20,0x8203b23b2d321a49, 
};

static int neck_lateral_convs_0_quant1_threshold[64 * 14] =
{ // torch.Size([64, 14])
-365, -101, 30, 129, 195, 261, 326, 392, 458, 524, 590, 689, 821, 1085,
-933, -622, -466, -350, -272, -194, -116, -38, 38, 116, 194, 311, 466, 778,
-881, -599, -458, -352, -282, -211, -141, -70, 0, 70, 140, 246, 387, 669,
-895, -543, -367, -235, -147, -59, 28, 116, 204, 292, 380, 512, 689, 1041,
-999, -635, -452, -315, -224, -133, -42, 48, 140, 231, 322, 459, 641, 1006,
-1422, -967, -740, -569, -455, -342, -228, -114, 0, 112, 226, 397, 624, 1079,
-981, -602, -412, -269, -174, -80, 14, 109, 204, 299, 394, 536, 726, 1106,
-580, -262, -102, 16, 96, 176, 255, 335, 415, 494, 574, 694, 853, 1172,
-662, -367, -219, -108, -34, 39, 113, 187, 260, 334, 408, 519, 667, 963,
-991, -507, -265, -83, 37, 158, 279, 400, 521, 642, 763, 945, 1187, 1671,
-865, -475, -280, -134, -37, 60, 157, 255, 352, 450, 547, 693, 888, 1278,
-748, -510, -391, -302, -243, -184, -124, -65, -5, 53, 112, 201, 320, 558,
-900, -554, -381, -251, -164, -78, 8, 94, 181, 267, 354, 484, 657, 1003,
-786, -467, -308, -188, -108, -28, 50, 130, 210, 290, 369, 489, 649, 968,
-976, -625, -450, -318, -231, -143, -55, 31, 119, 206, 294, 426, 601, 951,
-864, -524, -354, -227, -142, -57, 27, 112, 197, 282, 367, 494, 664, 1004,
-367, -213, -137, -79, -40, -2, 35, 74, 112, 151, 189, 247, 324, 478,
-2526, -1715, -1310, -1006, -804, -601, -398, -196, 6, 208, 411, 715, 1120, 1931,
-1598, -1074, -812, -615, -484, -353, -222, -91, 40, 171, 302, 498, 761, 1285,
-942, -567, -379, -239, -145, -51, 42, 135, 229, 323, 417, 558, 745, 1120,
-1188, -821, -638, -501, -409, -318, -226, -135, -43, 48, 139, 277, 460, 826,
-644, -363, -222, -117, -46, 23, 93, 164, 234, 304, 374, 480, 620, 902,
-634, -358, -220, -116, -47, 21, 90, 159, 228, 297, 366, 469, 607, 883,
-899, -594, -441, -327, -250, -174, -98, -22, 54, 130, 206, 321, 473, 778,
-1174, -771, -570, -419, -318, -217, -116, -16, 84, 185, 286, 437, 638, 1041,
-879, -564, -406, -288, -209, -131, -52, 26, 105, 184, 262, 381, 538, 853,
-1264, -858, -655, -503, -401, -299, -198, -96, 4, 106, 207, 360, 563, 969,
-1512, -1000, -744, -552, -423, -295, -167, -39, 88, 216, 344, 536, 793, 1305,
-1084, -762, -601, -480, -399, -319, -238, -158, -77, 2, 83, 204, 365, 687,
-1631, -1129, -878, -690, -564, -439, -313, -188, -62, 62, 188, 376, 627, 1129,
-898, -537, -357, -222, -131, -41, 48, 138, 228, 319, 409, 544, 724, 1085,
-931, -623, -469, -353, -276, -199, -122, -45, 31, 108, 185, 300, 454, 762,
-1002, -619, -428, -284, -188, -92, 2, 98, 194, 290, 386, 529, 721, 1104,
-745, -433, -277, -160, -82, -4, 73, 151, 229, 307, 385, 502, 658, 970,
-930, -554, -366, -224, -130, -36, 57, 151, 245, 340, 434, 575, 763, 1140,
-1112, -603, -349, -158, -31, 95, 222, 349, 477, 604, 731, 921, 1176, 1684,
-1190, -775, -568, -413, -309, -205, -102, 1, 105, 208, 312, 468, 675, 1090,
-1691, -1176, -919, -727, -598, -469, -341, -212, -84, 44, 172, 365, 622, 1136,
-1239, -878, -698, -563, -472, -382, -292, -202, -112, -22, 68, 203, 383, 744,
-1073, -697, -509, -368, -274, -180, -86, 7, 101, 195, 289, 430, 618, 994,
-1375, -847, -583, -385, -253, -121, 10, 142, 273, 405, 537, 735, 999, 1527,
-777, -448, -284, -160, -78, 3, 85, 168, 250, 332, 414, 538, 702, 1031,
-355, -175, -84, -17, 28, 73, 118, 163, 208, 253, 298, 366, 456, 637,
-1101, -778, -616, -495, -414, -334, -253, -172, -91, -11, 69, 190, 352, 675,
-1066, -664, -463, -312, -212, -111, -10, 89, 190, 290, 391, 542, 743, 1145,
-938, -515, -304, -146, -40, 65, 170, 276, 382, 487, 593, 752, 963, 1386,
-691, -328, -146, -10, 80, 171, 262, 353, 444, 534, 625, 762, 943, 1307,
-679, -407, -270, -168, -100, -32, 35, 103, 171, 239, 307, 410, 546, 818,
-1027, -666, -485, -349, -258, -168, -77, 12, 102, 193, 283, 419, 600, 962,
-1139, -734, -531, -379, -278, -177, -76, 25, 126, 227, 328, 480, 683, 1088,
-882, -601, -461, -356, -286, -215, -145, -75, -5, 64, 134, 239, 380, 660,
-853, -556, -407, -296, -221, -147, -72, 1, 75, 150, 224, 336, 484, 782,
-968, -661, -508, -394, -317, -240, -164, -87, -11, 65, 141, 256, 409, 715,
-739, -478, -348, -250, -185, -120, -55, 9, 74, 139, 204, 302, 432, 693,
-989, -668, -507, -387, -307, -226, -146, -66, 13, 93, 174, 294, 454, 775,
-694, -402, -257, -147, -74, -1, 71, 144, 217, 290, 363, 472, 618, 910,
-959, -638, -478, -358, -277, -197, -117, -37, 42, 123, 203, 323, 484, 804,
-635, -324, -168, -51, 26, 104, 181, 259, 337, 415, 493, 610, 765, 1077,
-1250, -789, -558, -385, -270, -154, -39, 75, 191, 306, 422, 595, 825, 1287,
-1362, -922, -702, -537, -427, -317, -207, -97, 12, 122, 232, 397, 617, 1057,
-960, -586, -399, -258, -165, -71, 21, 115, 208, 302, 395, 536, 723, 1097,
-878, -532, -358, -229, -142, -56, 30, 116, 203, 290, 376, 506, 679, 1025,
-2016, -1416, -1116, -891, -742, -592, -442, -292, -142, 7, 157, 381, 681, 1281,
-677, -344, -177, -52, 30, 114, 197, 280, 364, 447, 530, 656, 822, 1156,
};

static uint64_t neck_lateral_convs_0_conv2_weight[64 * 9] =
{ // torch.Size([64, 3, 3, 1])
0x2, 0xd, 0x3, 0x0, 0xd, 0x3, 0xc, 0xc, 0x2, 
0xc, 0x5, 0x3, 0xa, 0x5, 0xb, 0x4, 0xa, 0xb, 
0xc, 0x1, 0x3, 0xb, 0x6, 0xa, 0x2, 0xa, 0x2, 
0x2, 0x2, 0xb, 0x3, 0x9, 0x9, 0x4, 0x4, 0x3, 
0x8, 0xc, 0xb, 0xc, 0xb, 0x3, 0x8, 0x5, 0x5, 
0xb, 0x4, 0x5, 0x1, 0x3, 0x4, 0xb, 0x4, 0x2, 
0xd, 0xd, 0xb, 0x0, 0xb, 0xa, 0x3, 0x3, 0x1, 
0xa, 0xc, 0x9, 0xc, 0xd, 0xa, 0x3, 0x2, 0x9, 
0x2, 0xc, 0xb, 0xb, 0xc, 0xa, 0xb, 0x8, 0x2, 
0x4, 0x5, 0x4, 0x3, 0x9, 0x9, 0x3, 0x2, 0x0, 
0xd, 0xc, 0x0, 0xc, 0x9, 0x4, 0xa, 0xa, 0x3, 
0x0, 0x3, 0x0, 0x4, 0x4, 0x3, 0xb, 0xc, 0xb, 
0xb, 0xb, 0x2, 0xd, 0xb, 0x3, 0x3, 0xb, 0xb, 
0xe, 0xd, 0x0, 0xb, 0x4, 0x2, 0x1, 0x2, 0xb, 
0x1, 0xc, 0x1, 0x2, 0xd, 0x0, 0x3, 0xd, 0x1, 
0x4, 0xc, 0x3, 0x6, 0xb, 0xa, 0x3, 0x4, 0x2, 
0x3, 0x4, 0x0, 0xc, 0x3, 0x3, 0xd, 0xd, 0x4, 
0xb, 0xa, 0xb, 0xb, 0xa, 0xa, 0xb, 0xa, 0xb, 
0xc, 0x3, 0x1, 0xc, 0xd, 0x9, 0xa, 0x4, 0xb, 
0xc, 0xc, 0x3, 0xc, 0xc, 0x4, 0xc, 0x2, 0x3, 
0x6, 0x4, 0xc, 0x2, 0x3, 0x0, 0xb, 0x2, 0x0, 
0xa, 0x3, 0xc, 0xc, 0x5, 0xd, 0xa, 0xa, 0xc, 
0x4, 0x2, 0x9, 0xc, 0x5, 0xb, 0x1, 0x4, 0x8, 
0xd, 0x5, 0x3, 0xa, 0x4, 0x0, 0x0, 0x3, 0xb, 
0x2, 0xb, 0x8, 0x4, 0x2, 0xb, 0x5, 0x4, 0x3, 
0xc, 0xa, 0x3, 0xc, 0x2, 0x2, 0xc, 0xb, 0x2, 
0x4, 0x5, 0x4, 0x9, 0xb, 0x4, 0xb, 0x1, 0x0, 
0x2, 0x2, 0x2, 0x3, 0x3, 0x2, 0x2, 0x2, 0x2, 
0x5, 0x5, 0x3, 0xc, 0xa, 0x4, 0xb, 0x4, 0x3, 
0xb, 0x2, 0x1, 0xd, 0xb, 0xb, 0xd, 0xc, 0xc, 
0xc, 0xc, 0x3, 0xa, 0xd, 0x2, 0x1, 0xa, 0xa, 
0xa, 0x8, 0xa, 0x3, 0x2, 0x2, 0x4, 0x5, 0x3, 
0xc, 0x3, 0x5, 0xb, 0x1, 0x3, 0xa, 0x0, 0x3, 
0x2, 0xc, 0xb, 0xa, 0xb, 0x1, 0xd, 0x2, 0x4, 
0x2, 0x1, 0xa, 0x2, 0x2, 0xd, 0x8, 0xc, 0xc, 
0xb, 0xc, 0x8, 0xb, 0xc, 0x9, 0x8, 0xc, 0x1, 
0x0, 0xb, 0x5, 0x2, 0xb, 0x5, 0x1, 0x3, 0x4, 
0x3, 0x2, 0x4, 0x3, 0x2, 0x3, 0x3, 0x0, 0x3, 
0xb, 0xb, 0xa, 0x5, 0x5, 0x3, 0x1, 0x2, 0x3, 
0xb, 0xa, 0x9, 0xa, 0xa, 0x9, 0x9, 0x9, 0x9, 
0xb, 0xb, 0xb, 0xb, 0x9, 0xb, 0x9, 0xb, 0xb, 
0xb, 0x8, 0x3, 0x6, 0x4, 0xa, 0xb, 0xb, 0x0, 
0x0, 0xa, 0xa, 0xa, 0xc, 0xb, 0xa, 0xc, 0xb, 
0x8, 0xb, 0x3, 0x5, 0x4, 0x3, 0xa, 0x8, 0x2, 
0x2, 0x4, 0x3, 0x4, 0x5, 0x8, 0x2, 0x2, 0xa, 
0xd, 0xd, 0xb, 0xb, 0x0, 0x3, 0x1, 0x4, 0x4, 
0xc, 0xb, 0x0, 0xd, 0xc, 0x9, 0x2, 0x2, 0x1, 
0x4, 0x4, 0x1, 0xb, 0xe, 0x2, 0x0, 0x1, 0x3, 
0x2, 0x0, 0x1, 0x3, 0x2, 0x2, 0x2, 0x2, 0x2, 
0x3, 0x4, 0x3, 0x2, 0x4, 0x2, 0x3, 0x4, 0x3, 
0x3, 0x5, 0xb, 0x9, 0x5, 0xc, 0x1, 0x1, 0xb, 
0xa, 0xa, 0xa, 0xa, 0x9, 0x9, 0x9, 0xa, 0x9, 
0xb, 0x4, 0x3, 0xc, 0x4, 0x3, 0xc, 0x3, 0x3, 
0x4, 0x4, 0xa, 0xb, 0x5, 0xb, 0x9, 0x3, 0xb, 
0x3, 0x5, 0x5, 0xa, 0xb, 0x2, 0x9, 0x0, 0x9, 
0x4, 0x4, 0x3, 0xd, 0xb, 0xb, 0xa, 0xb, 0x1, 
0x4, 0x2, 0x0, 0x5, 0x2, 0x9, 0xb, 0x4, 0x8, 
0x2, 0x1, 0x1, 0xb, 0xb, 0xb, 0xc, 0xe, 0x2, 
0xb, 0xa, 0xa, 0xa, 0xa, 0xa, 0xb, 0xb, 0xb, 
0x1, 0x1, 0x1, 0x4, 0x6, 0x9, 0xb, 0xa, 0x3, 
0xd, 0xc, 0xb, 0xc, 0x3, 0xa, 0x8, 0x3, 0x0, 
0x5, 0x5, 0xa, 0x3, 0xa, 0x8, 0xa, 0x9, 0x9, 
0x4, 0x4, 0x5, 0x1, 0xa, 0x2, 0xa, 0x9, 0x4, 
0x9, 0x2, 0xa, 0xc, 0x1, 0xa, 0xd, 0xa, 0x2, 
};

static int neck_lateral_convs_0_relu2_threshold[64 * 7] =
{ // torch.Size([64, 7])
99, 231, 362, 493, 690, 953, 1479,
-22, 29, 80, 131, 207, 309, 514,
60, 118, 177, 235, 322, 439, 671,
24, 47, 69, 92, 126, 172, 262,
77, 139, 200, 261, 353, 476, 721,
28, 67, 106, 145, 204, 282, 438,
1, 46, 90, 135, 202, 292, 471,
-17, 24, 66, 109, 172, 256, 425,
11, 36, 61, 86, 124, 174, 274,
52, 104, 156, 208, 286, 389, 597,
-11, 29, 70, 111, 173, 255, 420,
37, 71, 106, 141, 193, 262, 400,
36, 63, 90, 118, 158, 212, 321,
56, 126, 196, 265, 370, 509, 787,
-13, 38, 90, 142, 221, 325, 535,
-12, 51, 116, 180, 277, 406, 664,
90, 202, 314, 427, 595, 820, 1269,
-70, -51, -31, -11, 17, 57, 136,
-20, 23, 66, 110, 175, 261, 435,
64, 97, 129, 162, 211, 276, 407,
71, 118, 165, 212, 283, 378, 567,
19, 86, 153, 220, 320, 454, 721,
-13, 30, 75, 119, 186, 275, 452,
71, 105, 140, 175, 227, 297, 437,
-55, 15, 86, 157, 264, 406, 690,
21, 45, 69, 93, 129, 178, 274,
28, 76, 124, 171, 243, 338, 529,
-20, 0, 20, 40, 71, 111, 193,
-36, 4, 44, 85, 146, 228, 391,
126, 180, 235, 289, 370, 479, 696,
27, 64, 102, 139, 195, 270, 419,
15, 46, 78, 109, 155, 217, 342,
48, 74, 100, 125, 164, 216, 319,
55, 95, 135, 174, 234, 313, 472,
20, 55, 89, 124, 176, 245, 383,
-93, -30, 33, 97, 192, 319, 574,
36, 66, 96, 127, 172, 233, 355,
-68, -3, 60, 125, 222, 351, 609,
27, 61, 96, 131, 183, 252, 391,
5, 13, 22, 30, 43, 59, 93,
11, 31, 52, 73, 104, 146, 229,
-18, 41, 100, 160, 249, 368, 607,
-211, 39, 290, 541, 918, 1420, 2425,
-10, 30, 71, 111, 173, 254, 418,
26, 71, 116, 161, 229, 319, 500,
-21, 32, 86, 140, 220, 328, 543,
26, 64, 101, 139, 195, 270, 419,
-11, 44, 101, 157, 242, 355, 580,
11, 22, 34, 45, 62, 85, 131,
-1, 54, 109, 164, 247, 358, 579,
48, 99, 149, 199, 275, 375, 577,
8, 16, 25, 34, 47, 64, 99,
97, 133, 168, 204, 258, 330, 473,
-28, 42, 113, 183, 290, 432, 716,
60, 100, 140, 181, 241, 321, 482,
35, 75, 114, 154, 214, 294, 453,
34, 65, 96, 128, 175, 237, 363,
109, 179, 249, 319, 424, 564, 843,
10, 26, 42, 59, 83, 116, 182,
-8, 43, 95, 147, 225, 329, 537,
40, 72, 105, 138, 188, 253, 385,
37, 73, 109, 145, 200, 272, 417,
27, 84, 141, 198, 283, 397, 624,
40, 71, 102, 133, 179, 241, 365,
};

static uint64_t neck_lateral_convs_1_conv1_weight[64 * 1*4] =
{ // torch.Size([64, 1, 1, 64])
0x33b2a43524ac51a0,0x0445334234b33459,0x333c335a333499b3,0xc30ab1c244923c13, 
0x38423009ca413013,0xbabbab4a4b9b2caa,0xd312bb923baac81b,0xb19939ca0caba4c2, 
0x2240321419e35333,0x4c2bc19a308330a0,0xa2bb22322aab1212,0x4b430b1830a8b33b, 
0x2b9c483b234aaba9,0xc3483aa3b24213b2,0xb042c2bc3343ac22,0xbaa222bb023bb3a4, 
0xdc3b023b229a323a,0x3c13180834240922,0x32243c344223abca,0xa1383aba33bcb3c0, 
0x143cbac3bbb389c3,0xb0ab33bac1ccabcb,0xcac093ad1a0394c3,0x22b42215cc4a2c23, 
0x42b4b3b382282b13,0x883a91b4c2caa22a,0x990044a4bbba33ab,0x2291b8132a044d3c, 
0xa1303b2224a42332,0xa22801a84a2821b8,0xb523ba81b023a92a,0x0a30b121ab1aa38a, 
0xa1b8b999220b2bb3,0x20b220b1c9a920bb,0x8cab09abc33280aa,0x09b12abab0811c9b, 
0x0bb2b4a2ba1b8aa3,0x12329cb2d1a9939a,0x29ba122bc2290abb,0xb90abaa204030cac, 
0xcb3cb2bc88ac2dbb,0xdb8ab3a0cb3a9bcc,0xb1393ba12b48ab91,0xbbc23bc0bbccc4a0, 
0x1284a303aa022133,0x9b30b921dbd382b2,0x21ba2399b2bb1241,0x3213c0914233404b, 
0x354908ab021c1a90,0x2b20a029a3b91aac,0x91c08abc82a000a8,0x8238204091102412, 
0x10302aaa02238383,0x9a8ba08b3b9b2ca3,0xc420b3ac28a0bc38,0xab293a2b9b2bb4b4, 
0xa323ad3db332b3a1,0xc49332495c334c33,0x24b00c524c4bc333,0x4ca45c4c34b90b31, 
0xb54a2bba2bbca332,0xa31ab22041ca0a2b,0x03bb143349a2b5c3,0x9b0422b4b904c342, 
0x49a221a1200bbbb2,0x2021ab00190a180a,0x82258aaba1952311,0xa09a9c4a2992121b, 
0x4419c2bba1432cc3,0xb4a32d0bca4bc322,0xb1aab2cdba0c9481,0xa2a3bb1211b33aab, 
0xca2103424c13205b,0x2b43843a3890332b,0x59383c10411392cc,0xcb22343c138cb4c3, 
0xbba23332ba4b904b,0xcc11b313323323a3,0xa329aaa3323a1a29,0x209ac38ba2bbbaab, 
0x43a3b3b3354b44b3,0x3333413233a3b434,0x3bac311bb1c4a2cb,0x4304253920433bbb, 
0x0ba391b82b34934c,0x203b43425042222a,0x24043ca94ba9111b,0xb33994300bbb13c4, 
0x5234b89032232bb8,0x2a939d23a133db04,0x3b3a2ab0cbcb4338,0x42b0cba14ac4342d, 
0xc2a4bc299496c343,0x3bbc88bcbcb22bcb,0xc0bcb2a1bcb4c03b,0xbaaab0ab2b3bc92c, 
0x59ac23aa22104392,0x21983228443b20ac,0x10343db34439a2c8,0xc403411a2bc233d3, 
0xbb394a21232a3233,0x1b11223353a32222,0x22432c3543142ab1,0xc8324b2a32bbc3b3, 
0x23404a3a1404054b,0x23392810512ab221,0x05149aa23ba2a20a,0x3041b3382a2a052b, 
0x1300299939000322,0xacaba221592b2c91,0x29132a9049a28a31,0xa1b2382a2b3a0234, 
0x3214c1ac02b1aa0c,0xa3393c1bbc13bc95,0x3ab292b2a1908d40,0x13cbbb9429133b3b, 
0xb44b2a323cc33338,0x3339c24133cd332a,0x03ab343a392222b0,0x1c3430341bb4c342, 
0x4ba3b3cad2303ac3,0x9b130cb3c2b2c222,0x12a2921bc20b2133,0xa93bbbb2b33123ba, 
0x34424a5a2402a02b,0x93b3ba3aa23b304b,0x23832ba4b8224332,0x2b03334bb9b49a1b, 
0xb982caabc982ccb8,0xac0a4c2330943a13,0x3bca2bbcaa08b2b1,0xb3b4a3bc3a1bb9aa, 
0x4303c0a1a2402bbc,0xc49c4da1ab33bab8,0xb9c31abc9119c333,0xa2c4cb819bb32b92, 
0x332323c23382904b,0x2022db201039a320,0x323b1893211ba882,0x2c2d923a29c0b01c, 
0x9aa340a232a83144,0x3333cb4a23d8231c,0xb329313098ba42b3,0x0a3c391241c9340c, 
0x332bb9c3b31bc0b8,0x05ba3c0bcc4ccb24,0xbbbab4990891ca3a,0x42b0abb5cb34904b, 
0x1bcab3c29cc0cbca,0xab9bcababb2cd3aa,0xcbc2cbadc23babc2,0xc8bbbcb3c1c0bbba, 
0x3a9aa492423a1392,0x4c832bc44411ca31,0xa0204438c1cc4a0a,0x4014c934dc392c1b, 
0x953b2390229a32a1,0x1c13a48332a9281b,0xb22932242b20b5c0,0xaa39331aa48cb9b1, 
0x01382a0aa20c00c2,0x201043aa21019aa4,0x2a2020a2b0b4311a,0xa1001b30a3319b33, 
0x0b30b4b9ac22cbaa,0xa2134bcb9903b028,0xa10cc12cb83bcba3,0x2c21bcb093c4a9ba, 
0x04433353bc4a3ca3,0xb813433383413122,0x215212a234023244,0x3242a3a38b212545, 
0x233c234a40d3431c,0x3b04d832a333332b,0x0014b42041484338,0x5148399b82b1533b, 
0xa113ba21ac1b3923,0x0c8ab12190238884,0x29303331b1bc2332,0x238a0e2b400aa93a, 
0xbbc432323b01a38c,0x2b9b04a221c9209b,0xb9223b3314290b2a,0x0343845c33c084a8, 
0x2b34b231abbbb9c8,0x9c0340a3b9db18ab,0x82dbbcb3993b4480,0x3005b3b02ba8a221, 
0x4a2d40aa03c943b2,0x21b9c0cbcab1b49a,0xd2b583a8a2428b3a,0x323c3b282ca14203, 
0x8bccacd2bcb23aa4,0xcabb033abb32b44a,0x83bb3a424a4cd0b3,0x4a024c3c43bc32b3, 
0x04a88baa3332123a,0x25c23a4b44ab338b,0xab04ac233813bbbb,0xb3904243b9b933c3, 
0xbb335b499ab05344,0x4da2c83393022334,0x422a343380c2429a,0x4c4c32aa33bbb23c, 
0x442aa8b0aa0830c9,0xb0bb3ca2b9209bbc,0xc0c5a8abcc93143a,0x94c3bc4b4aa44b9c, 
0x1bbaccc26ccb8280,0x4b0a23db2aa4c2a4,0xab80a34bbbb2a9ab,0x3b4bc433b0920c20, 
0xbb2a33d3c3d2323b,0x3c2cdcd33c1b33bc,0xc3cb1bbcb20bbb99,0x4c89204a2abba40c, 
0x32c22a223a532cbb,0x0b33a3342aaac92d,0xcb821883339924b3,0x8082243abaa043aa, 
0xb33038998434c43c,0xb42b31ab5b091ca9,0xb5b311aca3a0bb39,0x3c1312330ca93443, 
0x30d434c4cc024aa0,0xb145bc25a300c43b,0x4b0c433523cb94a0,0x31308b8024a1a0cb, 
0x24c231100b3b0a2b,0xd3aac42cbb00cbad,0xbbc4382bba98bc40,0xbbab212cb8944108, 
0x032a3131a3b333b2,0x35133a494b2a1244,0x209b0a902925cbba,0x2b10343033821029, 
0x3bc23ac2b403b243,0x1a38cd3240812224,0x38ac842b1aaa3bb2,0x3c1013322132b94c, 
0xb24a3b2235043542,0xa31120a8592821ba,0xa524bb93b003923b,0x3a40b339ab20b40b, 
0x34a20352b34c3a32,0xc343443332b3a334,0x0b45233410333443,0x13222cb902223c34, 
0xb24a4b3235253553,0xa22282b05a3a40b9,0xb534bb03c233b23b,0x2b40933abc1ab48b, 
0xbbbb29b2cab2213b,0xa11aa33831382b0b,0x293a2914031dbbb0,0x09103dab2b0bb4a3, 
};

static int neck_lateral_convs_1_quant1_threshold[64 * 14] =
{ // torch.Size([64, 14])
-869, -385, -143, 37, 158, 279, 399, 520, 641, 762, 883, 1064, 1306, 1789,
-1519, -1023, -775, -589, -465, -341, -217, -93, 30, 154, 278, 464, 712, 1208,
-891, -499, -304, -157, -59, 38, 136, 234, 332, 429, 527, 674, 870, 1261,
-1324, -862, -632, -458, -343, -227, -112, 3, 118, 233, 349, 522, 753, 1215,
-1075, -665, -460, -307, -204, -102, 0, 102, 205, 307, 410, 563, 768, 1178,
-1332, -889, -667, -501, -390, -280, -169, -58, 52, 162, 273, 439, 661, 1104,
-1148, -713, -495, -332, -223, -114, -5, 103, 211, 320, 429, 592, 810, 1245,
-1072, -675, -477, -328, -229, -130, -30, 68, 167, 266, 366, 515, 713, 1110,
-1154, -782, -595, -455, -362, -269, -176, -83, 9, 103, 196, 335, 522, 894,
-1342, -883, -653, -481, -367, -252, -137, -23, 91, 206, 321, 493, 722, 1181,
-1524, -1079, -856, -689, -577, -466, -354, -243, -132, -20, 90, 257, 480, 926,
-1030, -631, -432, -283, -183, -84, 15, 114, 214, 314, 413, 562, 762, 1160,
-627, -388, -269, -179, -119, -60, 0, 59, 119, 178, 238, 328, 447, 686,
-1379, -927, -700, -531, -418, -304, -191, -78, 34, 147, 260, 430, 657, 1109,
-1395, -796, -497, -272, -123, 26, 176, 325, 475, 625, 775, 999, 1298, 1897,
-898, -557, -387, -259, -174, -89, -4, 80, 165, 251, 336, 464, 634, 974,
-529, -310, -200, -118, -63, -8, 46, 101, 156, 211, 266, 348, 458, 677,
-1576, -1074, -823, -635, -510, -384, -259, -133, -8, 117, 242, 430, 681, 1183,
-1205, -736, -502, -326, -209, -92, 25, 142, 259, 376, 493, 669, 904, 1372,
-972, -625, -451, -321, -234, -147, -61, 25, 112, 199, 286, 416, 589, 937,
-975, -512, -280, -106, 8, 124, 240, 356, 471, 587, 703, 876, 1108, 1571,
-1184, -703, -463, -283, -163, -43, 76, 197, 317, 437, 557, 737, 977, 1458,
-1402, -906, -659, -473, -349, -225, -101, 21, 145, 269, 393, 579, 826, 1321,
-1614, -1109, -856, -667, -541, -415, -288, -162, -36, 89, 216, 405, 658, 1163,
-841, -484, -306, -172, -83, 5, 95, 184, 273, 362, 451, 585, 764, 1121,
-835, -454, -264, -121, -26, 68, 163, 258, 353, 449, 544, 686, 877, 1257,
-812, -455, -277, -143, -54, 34, 123, 212, 301, 391, 480, 613, 792, 1148,
-1339, -826, -569, -377, -248, -120, 7, 136, 264, 392, 520, 713, 969, 1483,
-1200, -781, -571, -414, -310, -205, -100, 4, 109, 213, 318, 475, 685, 1104,
-908, -532, -344, -203, -109, -15, 78, 172, 266, 360, 454, 595, 783, 1159,
-1694, -1132, -850, -640, -499, -359, -218, -77, 62, 203, 343, 554, 835, 1397,
-954, -530, -318, -159, -53, 52, 159, 265, 371, 477, 583, 742, 954, 1378,
-1158, -761, -562, -413, -314, -215, -116, -16, 82, 181, 281, 430, 628, 1026,
-1197, -800, -602, -454, -355, -256, -157, -58, 40, 139, 238, 387, 585, 981,
-824, -533, -387, -278, -205, -132, -59, 12, 85, 158, 231, 340, 486, 777,
-959, -555, -353, -202, -101, 0, 101, 202, 303, 404, 505, 656, 858, 1263,
-1393, -917, -678, -500, -381, -262, -143, -24, 94, 213, 332, 511, 749, 1225,
-1731, -1274, -1045, -874, -759, -645, -531, -417, -302, -188, -74, 96, 325, 782,
-1524, -986, -717, -515, -380, -245, -111, 23, 157, 292, 427, 629, 898, 1436,
-694, -409, -266, -159, -88, -17, 54, 125, 196, 268, 339, 446, 589, 874,
-704, -441, -310, -211, -145, -79, -13, 51, 117, 183, 249, 348, 479, 742,
-1548, -1066, -825, -644, -523, -403, -282, -161, -41, 79, 199, 380, 621, 1104,
-1431, -828, -526, -300, -149, 1, 152, 303, 454, 604, 755, 981, 1283, 1887,
-867, -454, -248, -93, 10, 113, 216, 320, 423, 526, 629, 784, 991, 1404,
-1136, -773, -592, -456, -365, -274, -183, -93, -2, 88, 179, 315, 496, 859,
-1057, -624, -408, -245, -137, -29, 79, 187, 295, 404, 512, 674, 891, 1324,
-1150, -767, -576, -432, -337, -241, -145, -49, 45, 141, 237, 380, 572, 955,
-1282, -839, -617, -451, -340, -229, -118, -7, 103, 214, 324, 491, 712, 1156,
-1328, -855, -619, -441, -323, -205, -87, 31, 149, 267, 385, 563, 799, 1272,
-998, -615, -423, -279, -184, -88, 7, 103, 198, 294, 390, 534, 725, 1108,
-1171, -701, -466, -290, -172, -55, 62, 179, 297, 414, 532, 708, 943, 1412,
-1173, -735, -516, -352, -242, -133, -23, 85, 194, 304, 413, 578, 796, 1234,
-1432, -939, -693, -508, -385, -262, -139, -16, 106, 230, 353, 538, 784, 1277,
-1672, -1113, -833, -624, -484, -344, -204, -64, 74, 214, 354, 564, 843, 1402,
-950, -589, -409, -274, -183, -93, -3, 86, 176, 267, 357, 492, 672, 1033,
-774, -519, -391, -295, -232, -168, -104, -40, 22, 86, 150, 246, 373, 628,
-564, -292, -156, -53, 14, 82, 150, 218, 286, 354, 422, 524, 660, 932,
-1098, -746, -570, -438, -351, -263, -175, -87, 0, 88, 176, 308, 483, 835,
-816, -434, -243, -100, -4, 90, 185, 281, 376, 472, 567, 710, 901, 1283,
-1150, -746, -543, -392, -291, -189, -88, 12, 113, 214, 315, 467, 669, 1074,
-604, -354, -228, -134, -72, -9, 52, 115, 178, 240, 303, 397, 522, 773,
-885, -435, -210, -42, 70, 182, 294, 407, 519, 632, 744, 913, 1138, 1588,
-681, -395, -252, -145, -73, -1, 69, 141, 212, 284, 355, 463, 606, 892,
-809, -534, -397, -294, -226, -157, -89, -20, 47, 116, 184, 287, 424, 699,
};

static uint64_t neck_lateral_convs_1_conv2_weight[64 * 9] =
{ // torch.Size([64, 3, 3, 1])
0xb, 0x9, 0x3, 0xc, 0x9, 0x2, 0xd, 0xc, 0xb, 
0xb, 0x8, 0xb, 0xa, 0x9, 0xa, 0xb, 0xb, 0xb, 
0x8, 0x9, 0x2, 0x2, 0xc, 0xb, 0x9, 0xc, 0xd, 
0xb, 0xc, 0x3, 0xa, 0xc, 0xb, 0xa, 0xa, 0xc, 
0x8, 0xb, 0x2, 0x9, 0x2, 0x2, 0xe, 0xd, 0xb, 
0x0, 0xa, 0x3, 0x9, 0x5, 0x5, 0xb, 0x3, 0x4, 
0x5, 0x5, 0x3, 0x3, 0x3, 0x0, 0x2, 0xa, 0xa, 
0xa, 0xb, 0xb, 0x9, 0x9, 0xa, 0xa, 0xa, 0xb, 
0x3, 0x2, 0x2, 0x2, 0x2, 0x0, 0x3, 0x3, 0x2, 
0x2, 0x1, 0x3, 0x2, 0x0, 0x3, 0x3, 0x1, 0x3, 
0xb, 0xa, 0x2, 0x3, 0x3, 0x3, 0x5, 0x5, 0x3, 
0x4, 0x4, 0x5, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 
0xb, 0xb, 0x0, 0x4, 0xc, 0x2, 0x5, 0xa, 0x9, 
0xb, 0xb, 0xb, 0x9, 0xa, 0xb, 0x1, 0xa, 0xc, 
0x0, 0x2, 0xc, 0xb, 0xb, 0xc, 0xc, 0xb, 0xd, 
0xb, 0xc, 0x2, 0xc, 0xc, 0x3, 0xc, 0x9, 0x2, 
0x8, 0xb, 0xb, 0x9, 0x5, 0xa, 0x0, 0xc, 0x2, 
0x1, 0x8, 0xa, 0x6, 0x4, 0xa, 0x4, 0x8, 0xb, 
0x2, 0x3, 0xb, 0x3, 0x3, 0xc, 0x3, 0xc, 0xe, 
0xc, 0xb, 0x3, 0xd, 0x3, 0x3, 0xb, 0x4, 0x3, 
0xb, 0xc, 0xb, 0xd, 0xb, 0xb, 0xc, 0x2, 0xa, 
0xc, 0xd, 0xb, 0xc, 0xb, 0xb, 0xa, 0xb, 0x2, 
0xb, 0xb, 0x4, 0x0, 0x9, 0x5, 0xb, 0x3, 0x5, 
0x5, 0x1, 0x4, 0x4, 0xc, 0x4, 0x0, 0x1, 0xb, 
0x0, 0x1, 0x0, 0xb, 0xb, 0xc, 0xb, 0xd, 0xd, 
0xa, 0x9, 0xa, 0xc, 0xd, 0xc, 0x2, 0xb, 0x3, 
0xc, 0xb, 0xb, 0xa, 0xa, 0x9, 0xb, 0xb, 0xa, 
0xb, 0x9, 0xa, 0x9, 0x8, 0xc, 0xb, 0x0, 0xb, 
0x6, 0x0, 0x0, 0x4, 0xb, 0xa, 0x8, 0x9, 0x2, 
0x3, 0x0, 0xd, 0x3, 0xc, 0xd, 0x1, 0xb, 0xb, 
0x2, 0x3, 0x3, 0x3, 0x3, 0x4, 0x2, 0x3, 0x1, 
0x0, 0xc, 0x2, 0xb, 0x0, 0x4, 0x3, 0x5, 0x3, 
0x4, 0x4, 0x9, 0x5, 0x3, 0xb, 0x1, 0xc, 0xb, 
0xb, 0x6, 0x3, 0xb, 0x4, 0x0, 0x8, 0x0, 0x3, 
0xb, 0x9, 0x3, 0xc, 0xb, 0x4, 0xc, 0xd, 0x2, 
0x3, 0x3, 0xb, 0xc, 0xc, 0xd, 0x3, 0x8, 0xa, 
0xc, 0x4, 0x6, 0xc, 0x3, 0x4, 0x9, 0xc, 0xb, 
0x0, 0x3, 0x4, 0x2, 0x4, 0x3, 0x1, 0x3, 0x2, 
0x4, 0x4, 0x4, 0x4, 0xb, 0x1, 0x4, 0x3, 0x0, 
0x2, 0x0, 0x8, 0xc, 0x3, 0x0, 0xe, 0xb, 0x0, 
0xa, 0x3, 0xc, 0x3, 0x4, 0xc, 0xb, 0xc, 0x2, 
0x3, 0x1, 0x1, 0x3, 0x3, 0x2, 0x4, 0x4, 0x3, 
0xa, 0xc, 0xc, 0x2, 0xc, 0xc, 0x1, 0x8, 0xb, 
0xc, 0xd, 0xd, 0x2, 0x4, 0x8, 0x0, 0x1, 0xa, 
0x0, 0x0, 0x2, 0x0, 0xe, 0x3, 0xa, 0x0, 0x2, 
0xd, 0x8, 0xa, 0xc, 0x9, 0x8, 0xd, 0xa, 0x1, 
0x1, 0x0, 0x2, 0xa, 0x4, 0x3, 0x3, 0x5, 0x4, 
0x3, 0x3, 0xa, 0xb, 0xb, 0xc, 0xc, 0xc, 0xc, 
0x4, 0x5, 0x2, 0x3, 0x4, 0x3, 0xb, 0xb, 0xa, 
0xd, 0xb, 0x0, 0xd, 0xb, 0x0, 0xc, 0xa, 0x0, 
0x4, 0xa, 0xa, 0xb, 0xe, 0x0, 0x0, 0xa, 0x9, 
0xa, 0xb, 0x8, 0x4, 0x9, 0xb, 0x5, 0x6, 0xb, 
0x3, 0x2, 0x4, 0x4, 0x9, 0x3, 0x4, 0x1, 0x4, 
0x2, 0x0, 0x3, 0x2, 0x4, 0x4, 0x4, 0x5, 0x3, 
0xb, 0x3, 0x4, 0xc, 0x4, 0x4, 0xc, 0x3, 0x3, 
0xc, 0xb, 0xc, 0xc, 0xa, 0xb, 0x0, 0x0, 0xb, 
0xb, 0xb, 0xe, 0x3, 0x4, 0xc, 0x8, 0x1, 0xb, 
0x5, 0xb, 0xb, 0x5, 0xa, 0xb, 0x4, 0x3, 0x0, 
0x3, 0x2, 0x1, 0x5, 0xc, 0x4, 0x3, 0x4, 0x2, 
0xa, 0xd, 0xc, 0xb, 0xc, 0x3, 0x3, 0x3, 0x0, 
0xb, 0xb, 0xb, 0xa, 0xa, 0xa, 0xb, 0xa, 0xb, 
0xb, 0xb, 0xa, 0xc, 0xd, 0xa, 0xb, 0x3, 0x2, 
0xb, 0xb, 0xb, 0xa, 0xa, 0xb, 0xb, 0xb, 0xb, 
0x2, 0xb, 0x1, 0xa, 0x6, 0x9, 0x0, 0x9, 0x0, 
};

static int neck_lateral_convs_1_relu2_threshold[64 * 7] =
{ // torch.Size([64, 7])
22, 129, 236, 343, 503, 717, 1145,
10, 38, 66, 94, 136, 191, 303,
11, 61, 111, 161, 236, 336, 536,
-52, 6, 66, 125, 214, 332, 569,
68, 135, 202, 269, 369, 503, 771,
90, 146, 202, 258, 342, 454, 678,
-25, 75, 175, 276, 428, 629, 1033,
29, 45, 61, 76, 100, 132, 195,
0, 17, 35, 53, 79, 114, 184,
16, 31, 46, 61, 84, 114, 174,
-133, -23, 87, 198, 364, 585, 1028,
10, 77, 143, 209, 309, 442, 708,
-26, 35, 96, 157, 249, 372, 618,
29, 53, 78, 102, 138, 187, 283,
10, 80, 150, 220, 325, 465, 744,
49, 80, 110, 141, 187, 248, 370,
-59, 16, 93, 169, 283, 436, 741,
61, 113, 165, 216, 294, 397, 604,
104, 164, 223, 282, 371, 489, 726,
27, 68, 110, 151, 213, 296, 461,
-1, 66, 133, 201, 302, 437, 706,
63, 102, 141, 181, 239, 318, 475,
27, 84, 141, 197, 282, 396, 623,
25, 103, 180, 258, 374, 529, 840,
11, 76, 140, 204, 300, 428, 684,
-26, 30, 88, 145, 232, 347, 577,
64, 90, 116, 141, 180, 232, 336,
0, 26, 53, 79, 118, 170, 275,
70, 125, 181, 237, 321, 432, 655,
86, 133, 180, 228, 299, 394, 584,
55, 86, 117, 148, 195, 257, 382,
-39, 24, 89, 153, 250, 378, 636,
18, 55, 92, 130, 185, 260, 408,
35, 95, 156, 216, 307, 428, 670,
82, 137, 192, 246, 328, 438, 657,
75, 115, 154, 193, 252, 330, 487,
149, 205, 261, 317, 401, 513, 737,
-39, 28, 96, 164, 266, 402, 675,
36, 102, 168, 234, 332, 464, 727,
64, 117, 170, 223, 303, 409, 622,
-6, 31, 69, 107, 164, 240, 393,
-21, 47, 116, 185, 289, 427, 703,
-99, -44, 9, 64, 146, 256, 475,
65, 108, 150, 193, 257, 342, 512,
-34, 35, 105, 176, 281, 422, 704,
35, 93, 150, 208, 294, 408, 638,
-18, 49, 118, 187, 290, 428, 703,
8, 44, 79, 114, 167, 238, 380,
-1, 40, 83, 125, 188, 273, 442,
-10, 45, 101, 157, 241, 354, 578,
69, 119, 168, 218, 293, 392, 591,
96, 159, 222, 285, 380, 506, 759,
12, 61, 110, 159, 232, 330, 525,
-96, -21, 53, 128, 240, 390, 689,
-37, 16, 69, 123, 203, 310, 524,
-173, -79, 13, 106, 246, 433, 806,
97, 273, 448, 624, 887, 1238, 1940,
15, 72, 130, 187, 274, 389, 619,
7, 62, 117, 172, 254, 364, 583,
41, 83, 126, 168, 232, 316, 486,
61, 90, 119, 148, 191, 249, 365,
-37, 25, 89, 152, 247, 374, 628,
101, 135, 168, 202, 252, 320, 454,
-48, 39, 128, 216, 349, 526, 881,
};

static uint64_t neck_lateral_convs_2_conv1_weight[64 * 1*4] =
{ // torch.Size([64, 1, 1, 64])
0x4933b235bb4cacb8,0x4c83844144222d43,0x34cb8b43334d2b20,0x32c293404424343a, 
0x42d3534a5aa3ca0b,0x4313b334a3ca4022,0x4aa4344c2c413333,0x930332a43338c2c2, 
0x8b43b4c0a449345a,0x2244430214222bc2,0x24c29353043d3334,0xac2354434c242493, 
0xb3833239ba324a34,0xc32032194233bc29,0x434c2a8300224332,0xb303013b04db2343, 
0xc34400432b9443b2,0x48333423482343a2,0x4a318132b043aaaa,0xb92334433b8b404c, 
0x343c313a204bab29,0x3b134cc239cb32b1,0x2c3b33a449224c40,0x43430a4b1482ba33, 
0x3031c93442aac2b1,0x3bb3c9cb120032a2,0xb04ca49a314b3bcc,0xbc94293b9b13305a, 
0x393b21a323c43482,0x3204180e3bbcc303,0xb2323cc9a3c9a203,0x03bb332222b23b42, 
0x4b933b0bc10a4302,0x3333a3333aa932aa,0x23c4cccbd3a2a234,0xac0cab333323a1b4, 
0xba22b4cb380bb22b,0x9aa82b2343201a5d,0x40babaa1da5a9cac,0x33b2c1aabbc4c429, 
0x4a3ab0a33030b414,0x30a48ba0c83a39a2,0x1204abb143c222b3,0xa19a40333a83aba3, 
0x943433133a3223a3,0x33c3aba3b3b229b1,0xd9c3a281391dcbbb,0xb09a32cad23483a4, 
0x3922b4393303c33c,0x4c1a84130ca33240,0x2900bb3c2b0394aa,0x4433a88c28a429c3, 
0x3ac44b5029cc412c,0x24314b2ba3cc42cc,0x34c42520141ba243,0xcc08bab33c3bbab2, 
0xbab4b3cb2cbbb40c,0x42bcb24ba390cbca,0xb0c8bbc43bbbc33a,0x2ccc3bc4bd5c9cba, 
0xa3135243b3b9824c,0xcbaa3244a2dc491a,0xa2b3b3ac344b8b24,0x1b03c3399bab2431, 
0x40148b542c5c243b,0x32a0a539ca3ab932,0xb99b9a113b3c2c14,0x31394190baaaa2b5, 
0xc2b9d3034c34bbb2,0x3cbacab3ab24aaba,0x1a9cd2d0cabcc2cb,0xdbcbcabb314bbcac, 
0x8442cc4253bcdcbb,0x43243c23bbc080a2,0x994b334abb3b2b3b,0x3349431ca2923158, 
0xaa3ca414b414b9bc,0x132c82a3284cb433,0x59a92b42ba34254c,0x1534b4ba4bb3bbca, 
0x3b4c4aa4a33a1920,0xaaba4cdbb3cb32ba,0x2bc4bd91941c3dc4,0xa922ad0c8b44a9c4, 
0xb23344bb3b3da443,0x0323343335445a53,0x8b0491242334a202,0x33bc3402bcb433b4, 
0x02b3c8cc43a3b4b9,0x4b32811b9b30b2a2,0x32b2c813b1148433,0xbb220b234220b09b, 
0x9a2b34ab4c4cc33b,0x34d93b41bb13ac23,0x92c23bb444bc2a8b,0xb2bc220cbb35a4b3, 
0x98841b33222b4423,0x4023440bb4433ab9,0xb4239bb324c2a584,0xba3a92b48c8421bc, 
0xb9392a3a3cc0b42b,0x34c4832ccb2ccc99,0x43a43d8ba5e3a43b,0x023cad5ab3a243aa, 
0x01951c44b4caba29,0x05391a1ab2cb2121,0x342b4331bca0bb53,0x4434b4b043ac2328, 
0x409241989ca3b2ac,0x433ccb2133abda20,0x818b30383b82c54b,0xc41ba32344cb38a2, 
0x2394330ca3392243,0x0ca3344303433c48,0xb4c9a24445315434,0x4ac43bc29cb1b9ab, 
0x889bb4a3444ac023,0x40203abbb3409bba,0x3a0223323a83a1c3,0xb210a20d3294cb9a, 
0xa41cab4ccc144acb,0xbcac492a4b12c02c,0xcc4c0cdcc820dccc,0xc52ccbbcc4bbc3aa, 
0x2a904a3aababb9cd,0x403cba84222c83b2,0x3bbc2324bc32343c,0x132204c333db14d3, 
0xc393cccb3ac98b45,0x9834a2bb43a5cb1b,0xb444b4cc43ab30c1,0xbccb8cbbacbcba4b, 
0x394d8393a3a0bbab,0xb183b0c44bb343c3,0x13c85dc94dccabdc,0x9ba3442acac43bc0, 
0xa2330c342a443533,0x3b34341ccc232493,0x3342b22a24c45804,0x89a3924353b23943, 
0x46a3bb43c3b489a2,0xaab32b2b234aacb3,0x02b1024b313ba3ab,0x342a3b98921a932c, 
0xb11bd0c8093b8923,0xbc2a2bc31c44ea82,0xb92abbb8b18b408a,0x80bc9a22cc03cc1a, 
0x01a204a0142a9aa3,0xa039b118591b18bb,0x3cbc0222833c3b0b,0xb8b91223ab10292a, 
0x3c5a4c432c923581,0x3cc442bccc9c309b,0xaa9202ca83ba32b3,0x11aa9c4a33024334, 
0x114b43b4435935c5,0x41444cb4344453cc,0x3242344425b38534,0xdb02c3443d545ca3, 
0xb94ab22401b4cb30,0xb3a2a242a2bc3021,0x42a099bbb033b83b,0xb334942c0ba1220d, 
0x3b02308083bb3939,0x33382c9b343bb4cc,0xb41032248babb342,0xa24942c4ab4c0cb2, 
0x1a9cbca4a3b4022b,0xa092bdc22bc094bc,0xab3b89bc9caa3109,0x93a1b022a491bbba, 
0x32ab2d0c3ba24213,0x393002803ba3a244,0xbb423b5b4344a13b,0x4a5b3a1c02a12434, 
0x14b1dbac3b239344,0x4345cb4cba4bab93,0x4334da94ab252233,0x9b4b4cc242acc283, 
0x2ba5b92dabca11bc,0x382bb9141bbba910,0xb9a8b424aa123aab,0x10bbb9b30aae29a0, 
0xa34022a29ca44baa,0x432a311b2b3bb422,0x1c4bb3a3aa44ab3b,0x4c3034030b0a2b4a, 
0x333bc2c4313132c3,0x424242c148a325d3,0x393b3b48c034ca34,0xcb3a43444454323b, 
0x49003c238a3183cb,0x2ac1aaa21ddb4a19,0xba01bb25a3c4cb9b,0x33c2830bba423413, 
0x3caaacb8443bb3bc,0x41bb9cb3ccb0b349,0x33ba3c341ac23044,0xc3a4b212aba2bca4, 
0xb4bcc320cbbc0b4b,0xc9b1b33c001a0bc5,0xbc1189cb2b3c3c1d,0x83ab83c333cab4bb, 
0x9cbc133b333ccc31,0xba2b922319ba2ac8,0x32b83839221933d3,0x42a283bbacc89caa, 
0x2b23a3a33cbcc2b9,0xbb84c23b20223a5c,0x8b3cb2dbcc1b1ccb,0xbbac333a23bb334a, 
0x2cb295cc32babbb2,0xa39dac3cc44cacac,0x0abc33c42b3bdb4b,0xdd1c08cbac2ccca3, 
0x3c3338b2943b0383,0x1cc12cca03c9aca9,0xb4d34c3b3bac1394,0xabb29b0bbca4c3a4, 
0x32c83c2b49392cbc,0x323b204432ba93b1,0x31b49039ac44a330,0xc12a03c344aabbd0, 
0xac004203a3cb41b2,0xa34b042131c1333b,0x2143221a021382c3,0x3892299aa0cc3ab8, 
0x9b03393333b423bb,0xd2a4aba2abd23bcc,0xb3a294bc34cb93b3,0xd31bbba2bca20ba4, 
0x39bb2cbccbbbc2c1,0xc29caacbbbabbcbb,0xc1d3c0cc32c9319b,0x3c9c4d2a343ac3b5, 
0x33a0bb2d333bcbcc,0x4bcbc40b2cabca3b,0x032cbc24b004b42d,0x423b4cbd359db44a, 
0x2bacbc24a240babc,0xa8923bab2cac9323,0x4cc14c44c9c49b3c,0x342533333435a4a4, 
0xbc3253a83b133480,0x43404411bb01aac3,0xcbbb1323b33b5031,0x3c4342403cbb4c42, 
0x203b8b2a4ca203a0,0x33314420bbb2c013,0x2c3c41303b420a8a,0x3241422c1ac21a42, 
0xa10bbabc3bbcc538,0x43b9ac88abb9c0cb,0xcbbbb02303aa32cb,0xbb1b4c3b00a20224, 
};

static int neck_lateral_convs_2_quant1_threshold[64 * 14] =
{ // torch.Size([64, 14])
-914, -566, -392, -261, -174, -87, 0, 85, 172, 259, 346, 477, 651, 999,
-629, -346, -204, -98, -27, 43, 114, 185, 256, 327, 398, 504, 646, 929,
-840, -464, -276, -135, -41, 52, 147, 241, 335, 429, 523, 664, 852, 1229,
-743, -442, -292, -179, -104, -29, 45, 120, 195, 270, 345, 458, 608, 908,
-661, -380, -239, -134, -64, 6, 76, 146, 216, 287, 357, 462, 603, 884,
-691, -425, -292, -193, -126, -60, 6, 72, 138, 205, 271, 371, 504, 770,
-689, -438, -313, -218, -156, -93, -30, 31, 94, 157, 220, 314, 439, 690,
-832, -512, -352, -233, -153, -73, 6, 86, 166, 246, 326, 446, 606, 925,
-728, -463, -330, -231, -165, -98, -32, 33, 100, 166, 232, 332, 464, 729,
-892, -593, -444, -332, -258, -183, -109, -34, 39, 114, 188, 300, 449, 748,
-873, -525, -351, -220, -133, -46, 40, 127, 214, 301, 388, 518, 692, 1040,
-1155, -757, -558, -408, -309, -209, -110, -10, 89, 188, 288, 437, 636, 1034,
-539, -320, -211, -129, -74, -19, 34, 89, 144, 199, 253, 335, 445, 664,
-951, -582, -397, -259, -167, -74, 17, 109, 202, 294, 386, 525, 709, 1078,
-985, -654, -489, -364, -281, -199, -116, -33, 49, 132, 214, 339, 504, 836,
-1131, -709, -498, -340, -235, -129, -24, 81, 186, 292, 397, 555, 766, 1188,
-940, -587, -410, -278, -190, -102, -13, 74, 162, 250, 338, 471, 647, 1000,
-1049, -737, -580, -463, -385, -307, -229, -151, -73, 4, 82, 200, 356, 668,
-856, -550, -397, -282, -206, -129, -53, 23, 99, 176, 252, 367, 520, 826,
-739, -437, -286, -172, -97, -21, 54, 129, 205, 281, 356, 470, 621, 923,
-1379, -903, -665, -486, -367, -248, -129, -10, 108, 227, 346, 525, 763, 1239,
-628, -342, -199, -92, -20, 50, 122, 193, 265, 336, 408, 515, 658, 944,
-735, -456, -316, -211, -142, -72, -2, 67, 136, 206, 276, 380, 520, 799,
-986, -619, -436, -299, -208, -116, -24, 66, 158, 249, 341, 478, 661, 1027,
-898, -536, -355, -219, -129, -38, 51, 142, 232, 323, 413, 549, 730, 1091,
-1092, -725, -541, -404, -312, -220, -129, -37, 54, 145, 237, 375, 558, 925,
-850, -511, -341, -213, -128, -43, 41, 126, 211, 296, 381, 508, 678, 1018,
-709, -425, -283, -176, -105, -34, 36, 107, 178, 249, 320, 427, 569, 853,
-697, -376, -216, -95, -15, 64, 144, 225, 305, 385, 465, 586, 746, 1067,
-845, -523, -362, -241, -160, -79, 0, 81, 162, 242, 323, 444, 605, 928,
-1239, -850, -655, -509, -411, -314, -216, -119, -21, 75, 173, 319, 514, 903,
-953, -607, -435, -305, -219, -132, -46, 40, 126, 212, 299, 428, 601, 947,
-1050, -696, -519, -386, -298, -209, -121, -32, 55, 144, 232, 365, 542, 896,
-985, -645, -475, -348, -263, -178, -93, -8, 76, 161, 246, 373, 543, 883,
-886, -482, -279, -128, -27, 73, 174, 275, 376, 477, 578, 730, 932, 1336,
-891, -510, -320, -178, -83, 11, 106, 201, 296, 391, 486, 629, 819, 1199,
-976, -674, -523, -410, -335, -259, -184, -109, -33, 41, 117, 230, 381, 682,
-1716, -1184, -918, -718, -585, -452, -319, -186, -53, 79, 212, 411, 677, 1209,
-890, -567, -405, -283, -203, -122, -41, 39, 120, 201, 282, 403, 565, 889,
-1046, -602, -379, -213, -101, 9, 120, 231, 342, 453, 565, 731, 954, 1398,
-735, -459, -321, -217, -148, -79, -10, 58, 127, 196, 265, 369, 507, 783,
-892, -556, -388, -262, -178, -94, -10, 73, 157, 241, 325, 451, 619, 955,
-881, -578, -427, -314, -238, -163, -87, -11, 63, 139, 215, 328, 479, 782,
-745, -455, -310, -201, -129, -56, 15, 88, 160, 233, 305, 414, 559, 849,
-1012, -637, -450, -309, -216, -122, -28, 64, 158, 252, 345, 486, 673, 1048,
-1145, -757, -563, -418, -321, -224, -127, -30, 66, 163, 260, 406, 600, 988,
-1084, -676, -472, -319, -217, -115, -14, 87, 189, 291, 393, 546, 750, 1158,
-836, -501, -334, -208, -124, -41, 42, 126, 210, 293, 377, 503, 670, 1005,
-1097, -706, -511, -364, -266, -168, -71, 26, 124, 222, 319, 466, 662, 1053,
-998, -654, -482, -353, -267, -181, -95, -9, 76, 162, 248, 377, 549, 893,
-1091, -734, -556, -422, -333, -244, -155, -66, 22, 112, 201, 334, 513, 869,
-902, -594, -439, -324, -246, -169, -92, -15, 61, 138, 215, 331, 485, 794,
-973, -651, -490, -369, -289, -208, -128, -48, 32, 112, 193, 313, 474, 796,
-986, -679, -526, -411, -334, -257, -181, -104, -27, 49, 125, 241, 394, 701,
-1223, -784, -565, -400, -290, -181, -71, 38, 147, 257, 367, 531, 750, 1189,
-793, -501, -356, -247, -174, -101, -28, 43, 116, 189, 262, 371, 517, 808,
-669, -413, -284, -188, -124, -59, 4, 68, 132, 197, 261, 357, 486, 742,
-1212, -796, -588, -432, -328, -225, -121, -17, 86, 190, 294, 450, 658, 1073,
-1161, -795, -612, -475, -383, -292, -200, -109, -17, 73, 165, 302, 485, 851,
-1059, -688, -502, -363, -270, -178, -85, 7, 100, 193, 285, 425, 610, 982,
-845, -506, -337, -210, -125, -40, 43, 128, 213, 297, 382, 509, 678, 1017,
-1008, -612, -414, -266, -167, -68, 30, 129, 228, 326, 425, 574, 772, 1167,
-804, -511, -364, -254, -181, -107, -34, 38, 112, 185, 258, 368, 515, 808,
-1018, -654, -472, -336, -245, -154, -63, 27, 118, 209, 300, 436, 618, 982,
};

static uint64_t neck_lateral_convs_2_conv2_weight[64 * 9] =
{ // torch.Size([64, 3, 3, 1])
0xd, 0xc, 0xd, 0xb, 0x0, 0x8, 0xc, 0x2, 0x9, 
0x3, 0x3, 0xc, 0x3, 0xd, 0xd, 0x2, 0xd, 0x3, 
0xe, 0xb, 0xc, 0xc, 0x3, 0x0, 0xd, 0x2, 0xa, 
0x2, 0x4, 0x3, 0xa, 0x9, 0x9, 0xd, 0xd, 0xc, 
0xb, 0xc, 0xd, 0x0, 0xa, 0xc, 0x3, 0xb, 0xc, 
0x0, 0x2, 0xc, 0xc, 0x4, 0x2, 0xe, 0x2, 0xb, 
0x3, 0xb, 0xa, 0x5, 0x1, 0xa, 0x6, 0x5, 0x0, 
0xc, 0xd, 0xd, 0xa, 0xb, 0xc, 0x3, 0x4, 0x3, 
0x3, 0x4, 0x5, 0xb, 0x2, 0x4, 0xd, 0xc, 0x3, 
0x3, 0xb, 0xc, 0x3, 0x3, 0xa, 0x6, 0x5, 0x3, 
0x3, 0x4, 0x4, 0x3, 0x3, 0x1, 0x4, 0x0, 0x1, 
0xb, 0x3, 0x4, 0xd, 0xa, 0xc, 0xd, 0xb, 0xc, 
0x2, 0x3, 0xb, 0x1, 0xb, 0x0, 0xd, 0xd, 0xc, 
0xb, 0xc, 0xc, 0xb, 0x8, 0xb, 0xd, 0xc, 0xc, 
0x3, 0x2, 0xb, 0x4, 0x5, 0x4, 0x3, 0x4, 0x2, 
0x3, 0xb, 0x4, 0x3, 0xd, 0x3, 0x3, 0x4, 0x5, 
0xe, 0xd, 0xd, 0x2, 0x3, 0x4, 0x3, 0x8, 0x3, 
0x3, 0x1, 0x4, 0xc, 0x2, 0x5, 0x2, 0x4, 0x5, 
0xb, 0xc, 0x3, 0x1, 0xc, 0xd, 0x9, 0xb, 0xd, 
0xd, 0xc, 0xd, 0xc, 0xa, 0xb, 0x2, 0x3, 0xb, 
0x4, 0x2, 0x8, 0x4, 0xb, 0xa, 0x6, 0x4, 0x2, 
0xc, 0xb, 0xd, 0x3, 0x4, 0xd, 0xb, 0xb, 0xd, 
0x6, 0x4, 0x4, 0x4, 0x2, 0xb, 0xa, 0xb, 0xc, 
0x8, 0x9, 0xc, 0x9, 0xd, 0xd, 0xb, 0xc, 0xb, 
0x4, 0x6, 0x5, 0xb, 0x0, 0x5, 0xb, 0xc, 0xc, 
0xb, 0x4, 0x1, 0xc, 0xa, 0xc, 0xd, 0xd, 0xd, 
0xd, 0xb, 0x8, 0xc, 0xb, 0x3, 0xd, 0xb, 0xb, 
0x4, 0x4, 0x2, 0x2, 0x3, 0x2, 0xc, 0xd, 0xe, 
0xc, 0x3, 0xb, 0xc, 0x2, 0x1, 0xd, 0xc, 0xc, 
0x4, 0x2, 0x9, 0x4, 0x5, 0xa, 0x3, 0x4, 0x2, 
0xa, 0x0, 0x4, 0x4, 0x3, 0x3, 0x4, 0x4, 0x5, 
0x8, 0x4, 0x3, 0x3, 0xd, 0xe, 0x9, 0xc, 0xa, 
0x0, 0x9, 0x0, 0x6, 0x5, 0x3, 0x2, 0x3, 0xc, 
0x4, 0x3, 0x3, 0x4, 0xa, 0x2, 0x6, 0x3, 0x2, 
0x5, 0x4, 0x5, 0x4, 0xb, 0x9, 0x3, 0x9, 0x4, 
0x3, 0x1, 0x3, 0xc, 0x1, 0x6, 0xb, 0xb, 0x1, 
0xb, 0xb, 0x5, 0xb, 0xb, 0x5, 0xb, 0xb, 0x5, 
0xc, 0xd, 0xd, 0x4, 0x4, 0x5, 0xb, 0xc, 0x9, 
0x5, 0x3, 0x6, 0x1, 0xb, 0x3, 0x3, 0xa, 0x4, 
0xc, 0xc, 0xc, 0xb, 0xc, 0xc, 0xc, 0xc, 0xd, 
0xb, 0xc, 0xe, 0x0, 0x4, 0xa, 0xb, 0x3, 0xb, 
0x4, 0x2, 0x4, 0x3, 0x2, 0x3, 0x4, 0x3, 0x4, 
0x3, 0xa, 0x5, 0x3, 0x3, 0x4, 0x3, 0x4, 0x4, 
0xc, 0xd, 0xc, 0xb, 0xc, 0xc, 0x8, 0x1, 0x2, 
0x2, 0x2, 0xc, 0x3, 0x0, 0xb, 0xd, 0xc, 0xe, 
0x5, 0x3, 0xb, 0x4, 0xb, 0xc, 0x5, 0xb, 0xd, 
0xa, 0xa, 0xc, 0xc, 0xb, 0xc, 0xb, 0xa, 0xc, 
0xb, 0xb, 0x2, 0xc, 0xb, 0x2, 0xd, 0xc, 0xc, 
0xd, 0xd, 0x3, 0xc, 0x2, 0x2, 0xb, 0x4, 0x2, 
0xa, 0xa, 0xd, 0x4, 0xb, 0xd, 0x9, 0xb, 0x9, 
0x3, 0x8, 0x5, 0xc, 0x3, 0x6, 0xc, 0x4, 0x4, 
0x2, 0xa, 0xa, 0x3, 0x5, 0x2, 0x3, 0x4, 0x2, 
0x4, 0xb, 0x0, 0x5, 0x2, 0x8, 0x5, 0x4, 0x3, 
0x3, 0x5, 0x4, 0x2, 0x4, 0x5, 0x3, 0x9, 0x5, 
0x4, 0x4, 0x0, 0x5, 0x3, 0x3, 0x4, 0x2, 0x0, 
0x4, 0x2, 0x2, 0x9, 0x4, 0x4, 0xd, 0xd, 0x1, 
0xc, 0xb, 0x4, 0xd, 0x1, 0x5, 0xb, 0x0, 0x3, 
0x1, 0x3, 0x3, 0x3, 0x3, 0x4, 0x4, 0x3, 0x5, 
0x5, 0x3, 0x4, 0x4, 0xb, 0x3, 0x4, 0x3, 0x4, 
0xb, 0x4, 0x4, 0xa, 0x5, 0x1, 0x4, 0x5, 0x8, 
0x4, 0xc, 0xd, 0x3, 0xd, 0xb, 0x4, 0xc, 0xb, 
0x0, 0xb, 0xc, 0xc, 0xc, 0xb, 0xc, 0xb, 0x3, 
0xc, 0xa, 0x2, 0xc, 0xc, 0x1, 0xc, 0xc, 0xa, 
0x5, 0x5, 0x1, 0x1, 0x2, 0xc, 0x4, 0x3, 0xb, 
};

static int neck_lateral_convs_2_relu2_threshold[64 * 7] =
{ // torch.Size([64, 7])
-17, 42, 102, 163, 253, 374, 616,
74, 128, 182, 235, 316, 423, 637,
46, 107, 168, 230, 322, 445, 690,
-116, 13, 143, 274, 469, 730, 1251,
-34, 68, 172, 276, 432, 639, 1054,
62, 130, 198, 266, 368, 504, 776,
42, 148, 253, 359, 518, 729, 1152,
58, 133, 209, 285, 399, 551, 854,
-17, 73, 164, 255, 391, 572, 935,
40, 116, 191, 267, 380, 531, 833,
43, 91, 140, 188, 261, 357, 551,
8, 68, 129, 189, 280, 401, 643,
-36, 97, 231, 365, 567, 835, 1372,
55, 105, 154, 204, 279, 378, 577,
-72, -3, 65, 135, 239, 377, 654,
18, 63, 108, 153, 221, 311, 491,
-74, 0, 72, 145, 255, 402, 695,
19, 94, 169, 244, 356, 506, 806,
10, 66, 122, 178, 262, 374, 599,
-10, 70, 152, 233, 356, 519, 845,
65, 120, 174, 229, 311, 421, 639,
-45, 38, 121, 205, 330, 497, 830,
5, 70, 135, 200, 298, 428, 689,
26, 100, 173, 247, 357, 504, 798,
109, 196, 282, 369, 499, 672, 1018,
9, 74, 139, 204, 302, 432, 692,
9, 83, 157, 231, 342, 489, 785,
-15, 77, 170, 263, 403, 589, 960,
16, 96, 175, 255, 374, 533, 851,
29, 103, 178, 252, 363, 512, 809,
28, 72, 115, 159, 225, 313, 489,
143, 205, 267, 330, 423, 548, 797,
138, 207, 277, 346, 450, 589, 867,
24, 100, 176, 252, 367, 519, 824,
78, 133, 187, 242, 324, 434, 653,
-35, 18, 72, 126, 207, 315, 531,
39, 94, 148, 203, 286, 395, 615,
-37, -17, 1, 21, 51, 91, 170,
70, 157, 243, 330, 460, 634, 981,
17, 81, 145, 210, 306, 434, 691,
30, 105, 180, 255, 367, 517, 816,
36, 78, 121, 164, 228, 313, 484,
-90, 11, 113, 215, 368, 572, 979,
-2, 93, 190, 287, 432, 625, 1012,
-9, 61, 133, 204, 311, 454, 740,
60, 115, 169, 223, 304, 413, 630,
31, 73, 116, 158, 221, 305, 474,
-44, 35, 115, 196, 316, 476, 797,
45, 88, 132, 175, 240, 327, 501,
49, 102, 156, 209, 289, 395, 608,
74, 156, 237, 318, 439, 602, 926,
-5, 51, 108, 165, 251, 365, 593,
48, 115, 181, 248, 348, 481, 747,
-67, 39, 146, 253, 414, 628, 1056,
57, 96, 136, 175, 234, 313, 471,
62, 107, 152, 197, 265, 355, 535,
-21, 45, 112, 179, 280, 414, 682,
25, 88, 151, 214, 309, 435, 687,
33, 100, 168, 236, 338, 474, 746,
-46, 36, 119, 202, 327, 493, 826,
104, 155, 207, 259, 336, 439, 645,
-6, 67, 141, 214, 325, 472, 767,
-11, 59, 129, 200, 306, 447, 730,
-42, 33, 109, 185, 299, 450, 754,
};

static uint64_t bbox_head_multi_level_share_convs_0_0_conv1_weight[64 * 1*4] =
{ // torch.Size([64, 1, 1, 64])
0x9155a3ba55023a02,0xd5a15a423da239b3,0x32ab239000121229,0x1a20c332859b0222, 
0xbc19ccb0ba3abbba,0xacaa39cccbac93cb,0x3bbcb2accbbbb0b1,0xb2bbc43b4bbbbc3b, 
0x33434be14b8a3aa1,0x3b3a5a523a32acbb,0x0392a3cbbaa32a2b,0x1b2b2120a533ab1b, 
0x832a0aa0a91a3119,0xba900a8b4aa81b80,0xb182c982a20101ba,0x99a0b9a8baac82ab, 
0xbc3c434b333b1482,0x331b34318352b33a,0x0abbcb2bb834c4c4,0x32503bdb03349825, 
0x2434445994c03343,0xc4433c45342a433d,0xc40333c535c11b3a,0x4382c3a4c82c84c3, 
0x210293102002c9a2,0x12292334c221a308,0x311a401b20198232,0x3220012121231093, 
0xcb2d5ddacc4bca3b,0xbdb4433dbab34cdc,0x9c01dbc3b1bdccdc,0xcdea303038d88434, 
0xb4aacaad3b3ba9cc,0xb444cc4c09dc3b9d,0xcac94bd3a343ac43,0xb2aaccd2cb2d22dd, 
0x3342c33341b43333,0x043abb343530c434,0x4483444b4b231b44,0x44444324353394b3, 
0xc3a2434b1c330322,0x3438c84904b9ab0c,0xc1b40cbb2234b302,0x43a314c3cb0343a0, 
0xb24c4ac2a2333b41,0x32904b4a430142b5,0x2bb3b449b43cdbcc,0x430b2a94a3b92354, 
0x4b2bc2c5badca2aa,0xc8a3b329b83c32c4,0xbb3b9031a4bbbb9c,0xbcb9b3b93aca3c03, 
0x6b33cb042b8291ca,0x03b0b9229214abdc,0xad23b23bba2228a3,0xcbac2a930b1cabcb, 
0x43a90d50ad141bbc,0x3c2bba09331c9433,0x2cc041b342895325,0xbb93a3141ac8cb38, 
0x3bb3cc3238b392bb,0xb3aacb9cbb30c23c,0xc02dcbc2bc3541d1,0x9c41bbc3bb5aacdc, 
0xba0bccb42ab12a3b,0xbbca2bcc9b3a30a2,0xccbbc0a0c8cbc1cb,0xbcbb83ab43bbac42, 
0xcbbdab3ca43b05ba,0xb4dbcbca14c3dc4a,0xc3b82bbbd843b333,0x34582ddabc4223c1, 
0x2442b134240baa49,0xcc015a3bba3b4bb5,0x5b4c444bccbcac21,0xcb1c344c340b9b43, 
0x22c041302131a928,0x4330ba11a3b22433,0x2a043b0120a93234,0x2a1003a8ab230232, 
0x34c3cbbbccbdcbab,0xac42bccbb3d230cb,0xcc2b54b4bbad9d4b,0xbbdb23abc3bc9ccc, 
0x232b411b15292111,0xa311a9223088b092,0xc1041a2802002023,0x3011ab4bcba202b9, 
0x0babc083ccb3aba8,0x8bb031bab01a321a,0x4a3ba392b8bb99aa,0xa9bb80b943989b21, 
0x29cc9932cc3ab208,0x4293c2b2b43bb11a,0x92a32c0839089b2a,0x380050b1ad30a180, 
0x3233b32931230932,0xa3322b341331b433,0x332b441233122142,0x53429aa3c324293b, 
0xbaa92bb8203d8c4b,0x343bb3bb9123b4a3,0xa2cca0c2dc2cc3ab,0x1b1c22bca3202b2a, 
0xabc3d45c33bcc4b1,0x3b22c4d3cbb5b400,0x3b8d5ac3cc935344,0x8bba3bbacc43bbcc, 
0x833acba0901b51aa,0xa3398c2b50c98b80,0xba8ac2291201abc0,0x2098bab9c98982bc, 
0x2bcac1a91bb03a12,0xbcc133b02a30ac90,0x3a8cc23abb2a9c2c,0xb0ba0a0943aba291, 
0x813abba8a08a4299,0xb8881a2b4aa99b81,0xb090c002920201b9,0x9991b0b0a9ab929c, 
0x4a35a4b421b44c94,0x12b43a15330b38c3,0x4b44c3aa483343bb,0xcd24325443b2ccb2, 
0xa4bd30281b8b21da,0x333b249b3b3cb1ad,0x4bb3bdb4b3b4a4b2,0x02334dc01c90b1a3, 
0x0a3a3ab1894334c3,0xac813b483aac3c2c,0x02b43a34354452aa,0xbaa4243421a0ca48, 
0xba43024333542420,0x23221b3328b0b93c,0x8412488333553834,0x44432393a14a3291, 
0xc33d6dd3bc439b1c,0x4db34c4dbd3b4dcd,0xd323dec3303cb2dc,0x4b2bbc33ccdc13bb, 
0x13848ddb2a1298bb,0xb349a40cacbc0ac4,0x3bcc34c93b3c4ab3,0x3cba42b8a3cbc030, 
0x2b244ab343042834,0x2ac33533325ab38a,0x29c2983b3a3202c4,0x094b44bab4b4b135, 
0x41ab03340d2415ba,0xab1993aba93d3cb5,0xbcc84113803b54b2,0x3ab4b3b243c24334, 
0x24dcabb8391dacbc,0xaa33cdbc00d3521c,0xcb5b5bb5ca9cbc5d,0x91cab2db3c2da3ac, 
0xbc133322a4343324,0x03c1a5941a52b312,0x28c1db3d333223b3,0x8a3893a2b1a3c235, 
0x19318a80a00a4190,0x80800b2a40a09a00,0x8188ba19910000a0,0x008099a0a10a908b, 
0x40cb41c4abb32a19,0x0c2932092b2323b3,0x89ab314b3cc33329,0x034d01031143144b, 
0xc3bb4320b4423352,0xb3a42bb333b83c43,0xa31a213343309b2b,0x3244330b39a12423, 
0xc222284a914a05b9,0x323139199b02aa4c,0x353c81cab244cbb1,0x45203c8a215a25cb, 
0x15bbb2bb2a1bcacb,0xc24ccd8ba1cb33a8,0xabba4ab2808b1a41,0xbbccbcd1cbbdbb8c, 
0xa34459da55ab0b32,0x3b4b5b5a2ab933b3,0xc3b4b43a32aac32b,0x43aba33005b32a1b, 
0xc284433c343c2b33,0x349d493393c3c333,0xd4d301bdcd14d434,0x5433bcbadb4132bb, 
0x3222b48842138802,0xa23142249322b433,0x932b43202c001b43,0x33432943b4242a4a, 
0x0440b23d129384a1,0xa542b34ba3008b4b,0xc4d13bb1462480c5,0x5434cca4bb4144b0, 
0xd3b104bc442225b4,0xc44223431cb2bc8c,0xb4c1cbcd342424b4,0x5044bb44cb5044b2, 
0xa32d52123d312303,0x5c3c5b2c353a533b,0x51353b03b1232333,0x82336c234413a24b, 
0xcba2baac9acd9c4a,0x2b31b3aaab3cb44b,0x952caaa0a2d8b2aa,0x2c14a0ada283a0ba, 
0x4bb23d4b3224bbdb,0x3a2bc4bdc4bcb3bb,0xa9c2cca3432c01d3,0xab142bc32cc4c322, 
0x1a12cb32892393ba,0xa4b3ab0a99abb2da,0xad2bb2bad10bca93,0xaa9c2bb52a0212a3, 
0xac344330333330b4,0x43cab5343351c331,0x93c2db2c493323c4,0x2b423142c434c3b5, 
0x2ab2a340a2a9ba11,0xaa113393b2a2a423,0x491b383b0aa93132,0xb2ba332b42348b3b, 
0x0234cbc1a9814989,0xc482b08a4b09bc9a,0xc1abc3a2a939bcab,0x22a3c0c3b98c00b4, 
0x2cb3db0502c2cbab,0xbbac3dcbc3c34ca1,0x3b533b4b883b4cbc,0xccc1854043cccd8c, 
0x3dca235cccab93b3,0x4cddcc30a5c43344,0x2cb34c3c339a85b4,0x3a3a309cbc34133b, 
0x033592cb141c9c32,0x2a248b909ab24382,0x42cb251aabadac13,0xa0cc345834823b2b, 
0xcb222b3b134304c8,0x2343224a82b9cd4b,0xb5d3acb21452b2ab,0x33348cb3c02234cc, 
0x99459bcc66193900,0xc230a3304c93bab0,0xd4abc01212a202b0,0x2138cc22b2b903b2, 
0x43b3bbd440b3b1bc,0x023b029cabbdccc5,0x0cc03c4352025bbb,0xcc9203b41bdcbb49, 
0xbcaccdcc4b05b9cc,0xbb2d433dcabaccba,0xb3bbc4bc443ac3d9,0x3c341cb3b3c4a384, 
};

static int bbox_head_multi_level_share_convs_0_0_quant1_threshold[64 * 14] =
{ // torch.Size([64, 14])
-234, -93, -23, 29, 64, 99, 134, 169, 204, 239, 275, 327, 397, 538,
-1018, -708, -553, -437, -359, -282, -204, -127, -49, 28, 105, 221, 376, 687,
-384, -212, -126, -61, -18, 24, 67, 110, 153, 196, 240, 304, 390, 563,
-896, -593, -442, -329, -253, -178, -102, -27, 48, 124, 199, 313, 464, 766,
-1991, -1334, -1005, -759, -595, -431, -266, -102, 61, 225, 389, 636, 964, 1621,
-963, -576, -383, -238, -141, -44, 51, 148, 245, 341, 438, 583, 776, 1163,
-1042, -632, -427, -273, -170, -67, 34, 137, 240, 342, 445, 599, 804, 1214,
-1605, -1065, -795, -592, -457, -322, -187, -52, 82, 217, 352, 554, 824, 1365,
-1389, -948, -727, -562, -452, -342, -231, -121, -11, 98, 209, 374, 594, 1035,
-1245, -746, -497, -309, -185, -60, 64, 188, 313, 438, 563, 750, 999, 1498,
-617, -379, -259, -170, -110, -51, 8, 67, 127, 187, 246, 336, 455, 693,
-248, -92, -14, 43, 82, 121, 160, 199, 238, 277, 316, 374, 452, 608,
-618, -408, -303, -224, -171, -119, -66, -14, 38, 90, 143, 221, 327, 537,
-1029, -715, -558, -440, -362, -283, -205, -126, -48, 30, 108, 226, 383, 697,
-760, -479, -338, -233, -162, -92, -22, 48, 118, 188, 259, 364, 505, 786,
-794, -609, -517, -447, -401, -355, -308, -262, -216, -169, -123, -54, 38, 223,
-1088, -741, -568, -438, -351, -265, -178, -91, -5, 81, 168, 297, 471, 817,
-1171, -820, -644, -512, -425, -337, -249, -161, -74, 13, 101, 233, 408, 759,
-763, -459, -308, -194, -118, -42, 33, 109, 185, 261, 337, 451, 603, 907,
-629, -362, -229, -129, -63, 3, 70, 136, 203, 269, 336, 436, 569, 835,
-1988, -1399, -1104, -883, -736, -589, -442, -294, -147, 0, 147, 368, 662, 1251,
-530, -339, -243, -171, -123, -75, -27, 20, 68, 116, 163, 235, 331, 523,
-429, -285, -213, -159, -123, -87, -52, -16, 19, 55, 91, 145, 217, 360,
-372, -249, -188, -141, -111, -80, -49, -18, 12, 42, 73, 119, 181, 304,
-900, -516, -323, -179, -83, 12, 109, 205, 301, 397, 493, 638, 830, 1215,
-675, -424, -298, -204, -141, -78, -15, 46, 109, 172, 235, 329, 455, 706,
-1731, -1157, -870, -655, -511, -368, -224, -81, 62, 205, 349, 564, 851, 1425,
-1511, -985, -722, -525, -393, -261, -130, 1, 132, 264, 395, 593, 856, 1382,
-693, -472, -362, -279, -223, -168, -113, -57, -2, 52, 107, 190, 301, 522,
-1237, -813, -601, -441, -335, -229, -123, -17, 88, 194, 300, 459, 671, 1095,
-843, -501, -330, -202, -117, -31, 53, 138, 224, 309, 394, 522, 693, 1035,
-1133, -734, -535, -385, -286, -186, -86, 13, 112, 212, 312, 461, 661, 1060,
-1090, -688, -486, -335, -235, -134, -33, 66, 167, 268, 368, 519, 721, 1123,
-353, -177, -89, -23, 21, 65, 109, 153, 197, 241, 285, 352, 440, 616,
-1665, -1103, -822, -611, -470, -330, -189, -49, 91, 231, 372, 582, 863, 1425,
-1173, -765, -561, -407, -305, -203, -101, 0, 102, 204, 306, 459, 663, 1071,
-1502, -962, -692, -490, -355, -220, -85, 49, 184, 319, 454, 656, 926, 1466,
-991, -585, -382, -230, -128, -27, 74, 175, 277, 379, 480, 632, 836, 1242,
-1845, -1256, -961, -740, -592, -445, -298, -150, -3, 144, 291, 512, 807, 1396,
-1253, -782, -547, -370, -253, -135, -17, 100, 217, 335, 453, 629, 865, 1336,
-870, -568, -417, -304, -229, -153, -78, -2, 72, 148, 223, 336, 487, 789,
-573, -342, -226, -139, -81, -23, 34, 92, 150, 208, 266, 353, 469, 701,
-653, -359, -212, -101, -28, 45, 118, 192, 265, 339, 413, 523, 670, 964,
-229, -140, -95, -62, -39, -17, 4, 27, 49, 71, 94, 127, 172, 261,
-1490, -1006, -764, -582, -461, -340, -219, -97, 23, 144, 265, 447, 689, 1173,
-212, -67, 5, 59, 96, 132, 168, 205, 241, 277, 313, 368, 440, 586,
-804, -506, -357, -245, -170, -96, -21, 53, 127, 202, 276, 388, 538, 836,
-908, -534, -346, -206, -112, -19, 74, 167, 261, 355, 448, 589, 776, 1150,
-606, -332, -194, -91, -22, 45, 114, 183, 251, 320, 389, 492, 629, 904,
-681, -434, -310, -218, -156, -94, -32, 29, 90, 152, 214, 307, 430, 677,
-376, -122, 3, 98, 161, 225, 288, 351, 415, 478, 541, 636, 763, 1016,
-510, -365, -292, -237, -201, -165, -128, -92, -56, -19, 16, 71, 143, 289,
-1542, -996, -722, -517, -380, -243, -107, 29, 166, 302, 439, 644, 918, 1465,
-836, -564, -428, -326, -258, -191, -123, -55, 12, 80, 148, 250, 386, 657,
-763, -472, -327, -218, -145, -72, 0, 72, 145, 218, 290, 399, 545, 836,
-797, -488, -334, -218, -141, -63, 13, 90, 167, 245, 322, 438, 592, 901,
-924, -619, -466, -352, -275, -199, -123, -47, 29, 105, 181, 296, 448, 753,
-1265, -880, -687, -543, -447, -350, -254, -158, -62, 34, 130, 274, 467, 852,
-1106, -714, -517, -370, -272, -174, -76, 21, 120, 218, 316, 463, 659, 1052,
-361, -189, -103, -39, 3, 46, 89, 132, 175, 218, 261, 325, 411, 583,
-906, -611, -464, -354, -281, -207, -133, -60, 13, 86, 160, 270, 417, 711,
-629, -415, -308, -227, -174, -120, -67, -13, 39, 93, 146, 226, 333, 547,
-1284, -870, -663, -508, -405, -301, -198, -94, 8, 112, 215, 370, 577, 991,
-1798, -1207, -912, -691, -543, -395, -248, -100, 46, 194, 342, 563, 858, 1449,
};

static uint64_t bbox_head_multi_level_share_convs_0_0_conv2_weight[64 * 9] =
{ // torch.Size([64, 3, 3, 1])
0x9, 0x4, 0x2, 0xa, 0xd, 0xb, 0x2, 0xb, 0x2, 
0xb, 0x5, 0x3, 0x3, 0x3, 0x9, 0x2, 0xc, 0xa, 
0x1, 0x0, 0x2, 0xb, 0xc, 0xa, 0xa, 0xc, 0xb, 
0x3, 0x2, 0x1, 0x2, 0x0, 0x0, 0x1, 0x0, 0x8, 
0xb, 0xc, 0xb, 0xb, 0xb, 0x9, 0xb, 0xa, 0xa, 
0xb, 0xb, 0xc, 0xb, 0x5, 0xa, 0xa, 0xb, 0xb, 
0xa, 0x0, 0x1, 0xa, 0x9, 0x8, 0xa, 0xb, 0xa, 
0x3, 0x5, 0x1, 0x1, 0x4, 0x0, 0x9, 0x4, 0xa, 
0x8, 0x4, 0x9, 0x3, 0x4, 0x0, 0x2, 0x2, 0x3, 
0xa, 0x9, 0xa, 0xa, 0xc, 0xa, 0x1, 0xb, 0x0, 
0x0, 0xd, 0x1, 0x4, 0x4, 0xb, 0xa, 0x3, 0xa, 
0xa, 0xb, 0x1, 0xc, 0xc, 0x9, 0xb, 0xb, 0x3, 
0xb, 0x5, 0x9, 0xc, 0x5, 0xa, 0xa, 0x2, 0x3, 
0x5, 0x1, 0xb, 0x3, 0x1, 0x9, 0x3, 0x2, 0xa, 
0x8, 0xb, 0xc, 0x4, 0xa, 0xc, 0x4, 0x2, 0x9, 
0x3, 0x5, 0x0, 0x3, 0x4, 0x9, 0xa, 0xa, 0x1, 
0xa, 0x9, 0x2, 0x0, 0x5, 0xa, 0x2, 0x8, 0x1, 
0x5, 0x3, 0xb, 0x3, 0xc, 0xa, 0x0, 0xa, 0x3, 
0x1, 0xe, 0x9, 0x4, 0x4, 0x2, 0xa, 0x4, 0xa, 
0xa, 0x2, 0x9, 0xb, 0xc, 0xa, 0x0, 0x1, 0x3, 
0x4, 0x3, 0x3, 0x3, 0xb, 0x3, 0x3, 0x2, 0x2, 
0x3, 0x4, 0x0, 0x0, 0xc, 0xb, 0x0, 0xa, 0x2, 
0x2, 0xd, 0x9, 0x3, 0x4, 0x3, 0x8, 0x2, 0x0, 
0x0, 0xc, 0x9, 0x8, 0x5, 0xa, 0x1, 0x3, 0x1, 
0xb, 0x2, 0x1, 0xb, 0xb, 0x2, 0x9, 0xc, 0x9, 
0x9, 0x0, 0x5, 0x2, 0x2, 0x4, 0x2, 0x9, 0x3, 
0xb, 0x2, 0x4, 0xa, 0x3, 0x4, 0x8, 0x3, 0x4, 
0x2, 0x1, 0x2, 0x2, 0x9, 0x1, 0x1, 0x9, 0x2, 
0x3, 0xb, 0xa, 0x0, 0x5, 0x9, 0xa, 0xa, 0x1, 
0x2, 0x2, 0x2, 0x2, 0x1, 0x0, 0x1, 0x8, 0x9, 
0x5, 0x3, 0x8, 0x4, 0x0, 0xc, 0x2, 0xa, 0xb, 
0xb, 0xd, 0x8, 0x9, 0xa, 0x9, 0x3, 0x0, 0x0, 
0x2, 0x1, 0xb, 0x8, 0x1, 0xd, 0x1, 0xb, 0xc, 
0xb, 0xb, 0xc, 0xc, 0x4, 0xd, 0xa, 0x3, 0x1, 
0x3, 0xb, 0x1, 0x3, 0x6, 0x8, 0x0, 0x9, 0xa, 
0x0, 0x2, 0x0, 0x3, 0x3, 0xb, 0xb, 0xb, 0xd, 
0xb, 0xa, 0xb, 0x9, 0x9, 0x9, 0xb, 0xb, 0xb, 
0xb, 0x2, 0xd, 0x3, 0x3, 0xc, 0x8, 0x0, 0xb, 
0x9, 0xa, 0xa, 0x4, 0x2, 0x3, 0x4, 0x1, 0x3, 
0xa, 0xb, 0xb, 0xa, 0x0, 0x1, 0xb, 0xb, 0xa, 
0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 
0x0, 0xc, 0xb, 0x3, 0xc, 0x1, 0x8, 0xa, 0x9, 
0xa, 0xb, 0xb, 0xa, 0x1, 0xb, 0x8, 0xa, 0x0, 
0x3, 0x5, 0xb, 0x4, 0x5, 0xb, 0x9, 0x1, 0xb, 
0x9, 0x9, 0x3, 0x2, 0x2, 0x4, 0x2, 0x0, 0x3, 
0x3, 0xb, 0x2, 0xb, 0xd, 0xb, 0xb, 0xa, 0xa, 
0xa, 0xc, 0xb, 0x5, 0x3, 0xc, 0x3, 0xb, 0xb, 
0x2, 0xb, 0xa, 0xc, 0x3, 0x1, 0xb, 0xc, 0xa, 
0x3, 0x8, 0x3, 0x8, 0xe, 0x3, 0x3, 0x2, 0x3, 
0x0, 0xd, 0x8, 0xb, 0x0, 0xb, 0x3, 0x5, 0x3, 
0xb, 0xd, 0xb, 0xa, 0xb, 0xa, 0xa, 0x2, 0x9, 
0x4, 0x2, 0x3, 0x3, 0x1, 0x0, 0x3, 0x3, 0x2, 
0x4, 0x4, 0x3, 0x1, 0x4, 0x2, 0xb, 0xb, 0x3, 
0x2, 0x3, 0x1, 0x3, 0x2, 0x0, 0x3, 0x2, 0x2, 
0xa, 0xb, 0xb, 0xb, 0xc, 0xa, 0x2, 0x8, 0x9, 
0x2, 0xc, 0x9, 0xa, 0xa, 0x2, 0x8, 0x1, 0xa, 
0x3, 0x3, 0x3, 0x2, 0x2, 0x0, 0xa, 0x8, 0x8, 
0x4, 0x4, 0xb, 0x4, 0x5, 0xb, 0x0, 0xa, 0xb, 
0x4, 0x9, 0x2, 0x4, 0x5, 0x3, 0xb, 0xc, 0xb, 
0xb, 0xd, 0xc, 0x4, 0x4, 0x2, 0x3, 0x4, 0x0, 
0xc, 0x1, 0x3, 0xc, 0x5, 0x3, 0xc, 0x0, 0x3, 
0x2, 0x5, 0x2, 0x2, 0x4, 0x3, 0xa, 0xc, 0xa, 
0x8, 0x2, 0xa, 0x3, 0x9, 0xd, 0x2, 0xb, 0xc, 
0xa, 0x2, 0x1, 0x1, 0x4, 0x1, 0x3, 0x4, 0x1, 
};

static int bbox_head_multi_level_share_convs_0_0_relu2_threshold[64 * 7] =
{ // torch.Size([64, 7])
-113, -44, 24, 93, 197, 335, 612,
-28, -3, 22, 47, 85, 135, 237,
-26, 39, 104, 169, 267, 397, 658,
0, 11, 23, 34, 52, 75, 121,
-115, -99, -82, -66, -41, -8, 57,
-31, 7, 47, 86, 144, 223, 379,
-4, 7, 19, 31, 49, 72, 120,
-107, -58, -9, 39, 112, 209, 404,
-122, -75, -28, 17, 87, 181, 367,
-26, -11, 3, 18, 41, 71, 131,
15, 46, 77, 108, 154, 215, 339,
-18, 68, 155, 242, 373, 548, 897,
-76, -39, -2, 34, 89, 163, 311,
-16, 19, 55, 91, 145, 217, 361,
24, 44, 65, 85, 116, 157, 239,
71, 140, 209, 278, 382, 520, 796,
-30, -6, 16, 39, 75, 122, 216,
48, 84, 119, 155, 208, 279, 421,
49, 109, 168, 228, 317, 436, 674,
-4, 14, 33, 51, 79, 117, 191,
-36, -2, 30, 63, 113, 179, 312,
-6, 13, 33, 53, 83, 122, 202,
0, 27, 54, 81, 121, 174, 281,
-15, 23, 63, 102, 160, 239, 395,
-15, 3, 22, 41, 70, 108, 184,
-56, -21, 14, 49, 102, 173, 315,
-21, 3, 29, 54, 92, 143, 244,
-3, 1, 6, 10, 18, 28, 47,
-2, 17, 37, 57, 87, 126, 206,
0, 6, 13, 20, 30, 44, 71,
36, 59, 83, 107, 142, 190, 285,
31, 55, 80, 104, 141, 190, 289,
-63, -29, 5, 40, 91, 161, 299,
-34, 19, 73, 127, 208, 316, 533,
-100, -49, 2, 53, 131, 234, 441,
25, 42, 60, 78, 105, 141, 213,
-97, -80, -63, -46, -20, 13, 82,
27, 46, 65, 83, 111, 148, 223,
-97, -55, -14, 26, 88, 170, 335,
-90, -65, -40, -16, 20, 70, 169,
2, 8, 14, 20, 30, 43, 68,
13, 38, 62, 86, 122, 170, 267,
1, 23, 46, 68, 101, 146, 235,
-116, 41, 199, 357, 594, 910, 1542,
-93, -54, -15, 23, 81, 159, 314,
-7, 65, 138, 211, 320, 466, 759,
42, 103, 164, 225, 317, 439, 683,
-27, -3, 21, 45, 81, 129, 226,
-56, -13, 29, 73, 138, 225, 398,
34, 96, 157, 219, 312, 436, 683,
-27, 26, 81, 135, 217, 326, 543,
-75, -1, 72, 146, 258, 406, 703,
-80, -30, 19, 69, 144, 244, 444,
0, 19, 39, 58, 88, 128, 208,
-299, -227, -156, -84, 22, 165, 451,
-2, 11, 25, 39, 59, 87, 141,
0, 15, 29, 43, 65, 93, 151,
-96, -48, 0, 48, 121, 219, 413,
-23, 20, 64, 108, 174, 262, 438,
95, 178, 260, 343, 466, 631, 960,
30, 80, 130, 180, 254, 354, 554,
-105, -57, -9, 39, 111, 208, 402,
60, 84, 108, 132, 168, 216, 312,
-25, 9, 43, 77, 129, 198, 335,
};

static uint64_t bbox_head_multi_level_share_convs_1_0_conv1_weight[64 * 1*4] =
{ // torch.Size([64, 1, 1, 64])
0xa343c1bac024ccc0,0xa2b2c4bac93cacda,0x2bccc1db31291cd8,0xb328d0ba3cdcbc21, 
0x43a3343223232a39,0x2c3baac13bc4a99b,0x4a443829b0223233,0xba22334230222a4b, 
0x9ab8423b30913338,0x1a2d3a2421182439,0xb2343a434a089243,0x012b4922a234839a, 
0x8baa19ba92a98392,0xa08a8893990bb4bb,0xcbb0b330bc2a2c1c,0x8300baa0ba333ab0, 
0x303049a332403203,0xba02a3ba10a299ab,0x2423228da9328cb3,0x33a12422a23b9cba, 
0xca432cbaa435bc2b,0xa4b4c341b44aa31b,0xa2ba2330b2bab2ba,0x34bb4b3ac4423b39, 
0xcaabcab2ba25023b,0x419633313434bb52,0xc4383c433a8bb431,0x25bb202a3331cb43, 
0xcacacbbbadcaaaa0,0x0b1bac2d0ab34c44,0x33a931a236cbc4ba,0xdaa30b329abb2010, 
0x3cbcb4b33213cd0b,0x323d30a03393c138,0x12232c90429b144c,0x022a431aa4b2a233, 
0x2292a49a331003b3,0x4a823220322b3aa4,0x3a9ca302a9c29138,0xbaa2da312b0a131b, 
0x41a2139b28b2bbc3,0x222db3023223123b,0x1ac3a2b1349b03c9,0x1b9a3a9904a83b90, 
0x2828b2a11393a902,0x43b8a22bc8a2ab02,0x4bbcaab312aab2cb,0xca10292a0023203a, 
0xc0cac889bada2a32,0xb099aa1b293a3bb2,0x3c2a2335982ab4cd,0xbba3ad33ac36a913, 
0x3c344a33baba245a,0x3c5380bb494d6db3,0x4234b4b5bb412233,0x3ba3c4a4bc25c440, 
0x300093a81b323390,0x2a213301a3343b1a,0x39c401c9ba22a342,0xb033b22b99ca129a, 
0xabcb303a4bbc4431,0x3a334b3249a40458,0xa4344953a2a2a453,0x3aa25032b4441480, 
0x2bbac3ab0a493c12,0x3b29293323b1a3bb,0x08b4b818410b184b,0x20112bbaa1c30132, 
0xa1024292c3a3352b,0xc3340223433102b2,0x9b383ba3189b253a,0x3b3222123a341933, 
0x4334333534512542,0x8b0543c442b48433,0x8923d1b23b4a34b3,0x3bd123c9304428b3, 
0xa090c3a981a18ca2,0xb3cb938bb1322d30,0x4c0c0bb193c3b5a3,0xc830812000110a12, 
0xc2c2bb3bb03c431b,0xcab381c2d8a1a133,0x423c124c24a18435,0xcaabb0201b4b82aa, 
0x9c9a333332bbc333,0x33435b412b34ca4a,0xc4244b353933933c,0xa331524423244b4b, 
0xbacabadb1cca9b31,0xca5b3ab932ab30c2,0xba05aaa3bb3a9a3a,0x32941babbcc8b8b8, 
0xa11843b339a93b31,0x324bcaabb23ba40c,0x442400dcb1430333,0x42b344bb93ab021a, 
0xcbababbbb039baa3,0x43ba024ba03baa20,0x3bba2320b3b99b19,0xb201bba1b2812b93, 
0x5231480234494083,0xca3222a3a1a323b2,0x1333b2bc023a33b9,0x43a22422822380b8, 
0x29291b32943a31d3,0x2412b292ca002138,0x2abcb20211c3203a,0xcba210300a333bb2, 
0x3333203a0342b9ca,0x32a4b384689cb32c,0x0b5322aba0344c93,0x500224b81ac30a29, 
0x19aa192a28912ba8,0xbac089a13bac9a19,0xc303902aa2aabc9b,0x519028a90abc8a92, 
0x2322b3040919103b,0x30a42b2233851132,0x84382db338923382,0x2a0b303b32220339, 
0xb2b0bc341bcb8a5b,0xbaab4b3b1cb50c2b,0xba324044444cc3ca,0xb20abb33393cac3a, 
0xbc3c33b9b315ba49,0xb2242453445c24ba,0xa3314220ac434a03,0x4430a233a3a22453, 
0x3911a334b92323b3,0x02b35830942bc3b2,0x1aa030db3b3010bb,0xa98253222310a4a1, 
0x3a0240a4c432a323,0x4b1352b343cb3413,0xc109242a3b3434bb,0x3bb9d8330c10b9c3, 
0xbcac9b1c20b1c2c4,0x42ccb04cb94bca9b,0x0bdb3b03c1b2acab,0x82593b1ac3ca3a4c, 
0x8a2a92a04aa9bcb1,0x3aaaca0b289d9033,0x120ba8e29bb8b18d,0x10b0a291a2c0a1ab, 
0x53a534cb58b2ccb4,0x519cb23b2a3c32ab,0x13bb342bb9a1accb,0x934c8b4332cab239, 
0xaaba3b1aa2cb2b32,0xa2203bb3b2b1a304,0xc90baa332b9c3a1a,0x3a0b2ba1924932c2, 
0xa0ab432a3a222510,0xc8c1c328aaa34124,0xabbd2cb494dbb6d3,0xbb4aaa3a2b432a4a, 
0xbc22b89c4b0ab1b3,0xbabcc849c24cccab,0xa2bc3532b919bb89,0xb302bbb4131ab3bb, 
0x30aac1a0b3013801,0x422bb18a39aa3231,0x2b0b184202c89225,0x03b0d9300b03a313, 
0xc8ba39100a1c93a9,0xa2aaa8a2bb22aa3b,0x3c8bbabb41b302c4,0xba0d20bba22a92a8, 
0x41312043138323c9,0x19c2332c39192b38,0x1135a1aac4a99abb,0x99a3881119cb123a, 
0x39401ac38433b02a,0x124333a4c901a4b3,0x88cb12bb2c223442,0xc13b13332031a340, 
0x303949133011bb8a,0x39a1b23bcb23212b,0xb382a1aca3308cac,0x280a5918a41c0caa, 
0x33b343cc4bbabc33,0x433ab349b13ca0bb,0xa4c3333b9b322d2b,0x333b324234cc104b, 
0x4a39a20812a24121,0x4a98923a403bb0a8,0x2cb320a4908214bd,0x3a1408389b94243b, 
0x30224132a34140a8,0x0223b289e2a3b82b,0x321118189090a439,0xc082340123413a3b, 
0x13332a22bb02d2ca,0xbaaa8bc2c3bb5042,0xdb83c1bdbcbb1dac,0x238c04cb2a9d3cca, 
0xc2422cacb834c3b1,0xb884b432c0291bc0,0xcc09c2cbb23a2bc9,0xbb31dbbb0cbb3cab, 
0xaa0a23a213389b30,0x22293a2b20b11338,0x24334043332b3349,0x921b3b432392a332, 
0xb0a820a39baa0931,0xa39b9ab2d9c02892,0x938ca90a20ba932a,0xc19e8ab8903caba1, 
0x31b1d4ccb25b4bc3,0x3aa8433903b39b0a,0x2cac325243ccb34b,0xc3c1cc333ca4c3d3, 
0xc0b11b23bcc90b31,0xb4ab5c2a2bbbdb23,0xb283a9135a3baba9,0xb2b25a42a3a03baa, 
0x498aa0b2402b9bb2,0x2c1d992baa29a312,0xbaacbb8b11b2bcb3,0x9c332aaba2ca3bb8, 
0xa302bc3ac92b33bc,0xab933c25caa23212,0xcc3c114a1cb0ac32,0xbb22da212b2bb32a, 
0xcc1cacbbb81bbcab,0x3193a9b22ab0bbb0,0x81b99cbbaa029aa2,0x3a00a229aaba9b11, 
0xc9b2d2ababb35c42,0x3b9491b213a0b2ab,0x319222333a011333,0x03a308218bc1b329, 
0xbc22abb82a9babb0,0xc1cbca2dc0182c3c,0xa0bb2432b1a2a1bb,0xc2bbb2b2a130a1ca, 
0xddadcb00ca2a034b,0xcb3433c039c3a922,0x9b42cdb201aa1332,0x8bb3abaaca332ac3, 
0xb1a24b49bc2c34cb,0x92ca2a14cabaa241,0x291c113b3b0310b4,0xa30c329223429202, 
0x48324243333943d3,0x43c4330a8c3aba32,0x3a2c92bb22b1a0a0,0xbc3343431330592a, 
0x202332342a3a53b4,0xab3433c1cad33333,0x8a4ba4aa3b433023,0x9cb2b2320b4281c3, 
0x80a89a3a0b1922ba,0xbcbbaa24419b891c,0x9944803a30293c13,0x21a328a88ac3a900, 
};

static int bbox_head_multi_level_share_convs_1_0_quant1_threshold[64 * 14] =
{ // torch.Size([64, 14])
-1230, -813, -604, -447, -343, -238, -134, -30, 74, 178, 283, 439, 648, 1066,
-713, -436, -297, -192, -123, -54, 15, 84, 154, 223, 293, 397, 536, 814,
-672, -402, -268, -166, -99, -31, 35, 102, 170, 237, 305, 406, 541, 811,
-822, -553, -419, -318, -251, -184, -116, -49, 17, 84, 152, 252, 387, 656,
-1016, -626, -431, -285, -188, -90, 6, 104, 201, 299, 396, 542, 737, 1127,
-970, -569, -369, -219, -119, -18, 81, 181, 281, 381, 481, 632, 832, 1233,
-749, -431, -272, -153, -73, 6, 85, 165, 244, 324, 404, 523, 682, 1000,
-601, -442, -362, -302, -263, -223, -183, -143, -103, -64, -24, 35, 114, 274,
-946, -603, -432, -303, -218, -132, -47, 38, 124, 209, 295, 424, 595, 937,
-729, -436, -290, -181, -108, -35, 38, 111, 184, 257, 330, 439, 585, 878,
-492, -310, -218, -150, -104, -59, -13, 32, 77, 123, 169, 237, 329, 511,
-669, -417, -292, -197, -134, -71, -8, 54, 117, 180, 242, 337, 463, 715,
-534, -404, -339, -290, -257, -225, -192, -159, -127, -94, -62, -13, 51, 182,
-998, -611, -417, -272, -175, -78, 17, 114, 211, 308, 405, 550, 744, 1131,
-619, -377, -256, -165, -105, -44, 15, 76, 136, 197, 257, 348, 469, 711,
-1125, -688, -470, -306, -197, -88, 20, 129, 238, 347, 456, 620, 838, 1274,
-811, -529, -389, -283, -213, -142, -72, -1, 68, 138, 209, 314, 455, 736,
-474, -275, -176, -101, -51, -2, 47, 97, 146, 196, 246, 320, 419, 618,
-1067, -600, -366, -191, -74, 42, 159, 275, 392, 509, 626, 801, 1035, 1503,
-604, -379, -266, -182, -126, -69, -13, 42, 99, 155, 211, 296, 408, 633,
-452, -301, -226, -170, -132, -95, -57, -20, 17, 54, 92, 148, 223, 374,
-1214, -733, -492, -312, -191, -71, 48, 169, 289, 409, 530, 710, 951, 1432,
-433, -336, -288, -251, -227, -203, -179, -155, -130, -106, -82, -46, 2, 99,
-646, -378, -244, -143, -76, -9, 57, 124, 192, 259, 326, 426, 561, 829,
-643, -404, -284, -194, -134, -74, -14, 45, 105, 165, 225, 315, 435, 675,
-796, -458, -289, -163, -78, 5, 90, 174, 259, 343, 428, 554, 723, 1061,
-812, -496, -338, -219, -140, -61, 17, 96, 175, 254, 333, 451, 609, 925,
-216, -93, -32, 13, 44, 74, 105, 136, 166, 197, 228, 274, 335, 458,
-513, -353, -273, -213, -173, -134, -94, -54, -14, 25, 65, 125, 205, 364,
-740, -447, -300, -190, -117, -44, 29, 102, 175, 248, 322, 432, 578, 871,
-507, -357, -282, -226, -188, -151, -114, -76, -39, -1, 35, 91, 166, 316,
-766, -404, -222, -86, 3, 94, 184, 275, 366, 456, 547, 683, 864, 1226,
-1084, -717, -533, -396, -304, -212, -120, -28, 62, 154, 246, 384, 567, 935,
-1066, -678, -483, -338, -241, -143, -46, 50, 147, 244, 341, 487, 681, 1070,
-924, -586, -417, -291, -206, -122, -37, 46, 131, 215, 300, 426, 595, 933,
-383, -281, -230, -192, -167, -141, -116, -91, -65, -40, -14, 23, 74, 175,
-398, -217, -126, -58, -13, 32, 77, 122, 168, 213, 258, 326, 417, 599,
-999, -662, -494, -368, -283, -199, -115, -31, 52, 136, 220, 347, 515, 852,
-1039, -656, -464, -321, -225, -129, -34, 61, 157, 252, 348, 492, 683, 1066,
-912, -581, -416, -292, -209, -126, -44, 38, 121, 203, 286, 410, 575, 906,
-582, -362, -252, -169, -114, -59, -4, 50, 105, 160, 215, 297, 407, 628,
-727, -494, -377, -290, -231, -173, -115, -57, 1, 59, 117, 205, 321, 554,
-542, -330, -225, -146, -93, -40, 12, 64, 117, 170, 223, 302, 407, 619,
-830, -495, -327, -202, -118, -34, 49, 133, 216, 300, 384, 510, 677, 1013,
-253, -150, -98, -59, -34, -8, 17, 43, 69, 95, 121, 159, 211, 314,
-596, -338, -209, -112, -48, 16, 80, 145, 209, 274, 338, 435, 564, 822,
-591, -354, -236, -147, -88, -28, 30, 89, 148, 208, 267, 356, 474, 711,
-668, -391, -253, -150, -81, -12, 56, 125, 194, 264, 333, 436, 574, 850,
-1283, -885, -686, -536, -437, -337, -238, -138, -39, 60, 159, 308, 507, 905,
-1447, -932, -675, -482, -353, -225, -96, 32, 160, 289, 418, 611, 868, 1382,
-1439, -910, -645, -447, -315, -182, -50, 81, 213, 346, 478, 676, 941, 1470,
-932, -653, -514, -410, -340, -270, -201, -131, -62, 7, 77, 181, 320, 599,
-935, -604, -438, -314, -231, -148, -66, 16, 99, 182, 264, 389, 554, 885,
-456, -316, -246, -193, -158, -123, -88, -53, -18, 16, 52, 104, 174, 315,
-703, -465, -346, -257, -197, -138, -78, -19, 40, 99, 159, 248, 367, 605,
-815, -571, -448, -357, -296, -235, -174, -112, -51, 9, 70, 161, 284, 528,
-757, -512, -389, -297, -236, -175, -113, -52, 8, 70, 131, 223, 345, 591,
-729, -459, -323, -222, -154, -86, -19, 48, 116, 184, 251, 353, 488, 759,
-892, -606, -463, -356, -284, -213, -141, -70, 1, 72, 144, 251, 394, 680,
-1217, -824, -627, -480, -381, -283, -185, -86, 11, 109, 208, 355, 552, 945,
-612, -398, -291, -211, -158, -104, -51, 2, 55, 109, 162, 242, 349, 563,
-684, -368, -211, -92, -13, 65, 143, 222, 301, 380, 459, 577, 735, 1051,
-966, -611, -433, -299, -210, -122, -33, 55, 144, 233, 322, 455, 633, 989,
-251, -171, -131, -102, -82, -62, -42, -22, -2, 16, 36, 66, 106, 185,
};

static uint64_t bbox_head_multi_level_share_convs_1_0_conv2_weight[64 * 9] =
{ // torch.Size([64, 3, 3, 1])
0x2, 0x3, 0x9, 0x2, 0x5, 0x3, 0x0, 0x4, 0x1, 
0xc, 0xb, 0xa, 0x2, 0x2, 0xc, 0x2, 0xb, 0xb, 
0x0, 0xb, 0xb, 0x3, 0xd, 0x2, 0x3, 0xc, 0xa, 
0x2, 0x4, 0xc, 0x1, 0x3, 0xb, 0x2, 0x3, 0xb, 
0x9, 0x0, 0x0, 0x3, 0x0, 0xb, 0xb, 0xc, 0xd, 
0x2, 0xc, 0xd, 0xa, 0x4, 0xc, 0x3, 0xb, 0x0, 
0x8, 0xa, 0x3, 0x8, 0xe, 0x1, 0x1, 0xc, 0x1, 
0xa, 0x3, 0x4, 0x3, 0x4, 0x4, 0x3, 0x4, 0x3, 
0xb, 0x3, 0xa, 0xd, 0x4, 0xb, 0xb, 0xc, 0xc, 
0xc, 0xd, 0xd, 0xa, 0x0, 0x8, 0x1, 0x3, 0x2, 
0xb, 0xb, 0x4, 0x8, 0xd, 0x3, 0xb, 0x3, 0x1, 
0xd, 0xb, 0x8, 0xc, 0x2, 0x2, 0x2, 0x3, 0x0, 
0xb, 0xa, 0xb, 0x2, 0x4, 0x4, 0x3, 0x5, 0x4, 
0x3, 0xc, 0xc, 0x5, 0x2, 0xa, 0x6, 0x5, 0x2, 
0xb, 0xb, 0xa, 0xb, 0xa, 0xa, 0xa, 0xb, 0x9, 
0xa, 0xb, 0x9, 0xb, 0xc, 0xb, 0xa, 0xc, 0x0, 
0xb, 0x1, 0xc, 0x9, 0x3, 0xd, 0xc, 0x3, 0x8, 
0x2, 0x9, 0xb, 0xc, 0xd, 0x2, 0x3, 0x4, 0x5, 
0xb, 0xc, 0xc, 0x0, 0x3, 0xc, 0xb, 0xb, 0xb, 
0x9, 0xd, 0x3, 0xb, 0x1, 0x4, 0xb, 0x3, 0x5, 
0x1, 0x5, 0x3, 0xb, 0x2, 0x9, 0xb, 0xc, 0x0, 
0xb, 0xc, 0xb, 0xd, 0xd, 0xa, 0x3, 0x8, 0x8, 
0x4, 0x2, 0xb, 0x4, 0x4, 0x8, 0x4, 0x4, 0x2, 
0xc, 0xd, 0x2, 0xc, 0x4, 0x4, 0x0, 0x4, 0x8, 
0xb, 0xa, 0x8, 0x2, 0xb, 0x4, 0x4, 0x4, 0x4, 
0x3, 0x0, 0xa, 0x9, 0xc, 0xa, 0xa, 0xc, 0xa, 
0xd, 0xa, 0x1, 0xc, 0x3, 0x3, 0xc, 0xa, 0x0, 
0x3, 0xa, 0xc, 0x2, 0xd, 0xa, 0xa, 0xc, 0xa, 
0x8, 0x4, 0x2, 0x4, 0x2, 0x9, 0x3, 0x9, 0x0, 
0xa, 0x2, 0x3, 0xb, 0xc, 0x1, 0xb, 0xc, 0x1, 
0x3, 0x4, 0x5, 0xc, 0x3, 0x3, 0xc, 0xa, 0xa, 
0xc, 0xb, 0x2, 0xd, 0x3, 0x4, 0xc, 0xc, 0xb, 
0xc, 0xa, 0xc, 0xa, 0x0, 0xb, 0xa, 0x8, 0x9, 
0xc, 0xd, 0xc, 0x0, 0x2, 0x0, 0xb, 0xa, 0x9, 
0xb, 0x3, 0x4, 0xb, 0x3, 0x5, 0x0, 0x3, 0x3, 
0x9, 0xe, 0xa, 0x3, 0x3, 0x2, 0x2, 0x2, 0x3, 
0x2, 0x2, 0xa, 0x3, 0xe, 0xb, 0x8, 0x3, 0xb, 
0x3, 0x0, 0x2, 0x3, 0xa, 0x1, 0x4, 0x2, 0x1, 
0xb, 0xd, 0x2, 0xc, 0xb, 0x5, 0xb, 0x2, 0x6, 
0x4, 0x4, 0xb, 0x3, 0x4, 0x1, 0x2, 0x3, 0x0, 
0xc, 0xd, 0xb, 0x3, 0x4, 0x3, 0x3, 0xb, 0x3, 
0xa, 0x2, 0x5, 0x3, 0xc, 0x5, 0xb, 0x4, 0x3, 
0x0, 0xb, 0x2, 0xd, 0x3, 0xa, 0x0, 0xb, 0x8, 
0x9, 0xc, 0xa, 0x1, 0xb, 0xb, 0x8, 0xc, 0xc, 
0x1, 0x5, 0x2, 0xb, 0xc, 0xc, 0xa, 0xc, 0xb, 
0xa, 0xb, 0xb, 0xb, 0xd, 0x9, 0xa, 0xa, 0x4, 
0x0, 0xd, 0x0, 0x0, 0x9, 0x0, 0xa, 0xa, 0x8, 
0xc, 0x2, 0x3, 0xc, 0xb, 0x2, 0x0, 0xd, 0x9, 
0x0, 0xb, 0x3, 0x5, 0x5, 0x4, 0x2, 0x3, 0x2, 
0x3, 0x3, 0x2, 0x4, 0xb, 0x3, 0x2, 0x4, 0x1, 
0xa, 0xa, 0xc, 0x0, 0x3, 0xc, 0xa, 0x1, 0xb, 
0x8, 0x4, 0xb, 0x9, 0x5, 0x3, 0x9, 0x1, 0x4, 
0xb, 0xe, 0xd, 0xc, 0xb, 0x3, 0x2, 0x2, 0x3, 
0x4, 0x4, 0x3, 0x3, 0x3, 0x3, 0xa, 0xb, 0x9, 
0x3, 0x0, 0xa, 0x9, 0x5, 0x4, 0xc, 0xc, 0x2, 
0x2, 0xc, 0x9, 0xc, 0x4, 0x3, 0x9, 0x5, 0x2, 
0x2, 0x1, 0x3, 0xb, 0x5, 0x0, 0x0, 0x9, 0x2, 
0xb, 0xa, 0xd, 0x1, 0xc, 0xc, 0x3, 0x4, 0x0, 
0x4, 0x4, 0x2, 0x4, 0x8, 0xa, 0x4, 0xa, 0xb, 
0x2, 0x1, 0x3, 0xa, 0x5, 0x3, 0x8, 0xa, 0x2, 
0xc, 0x4, 0x1, 0xc, 0x5, 0xb, 0xb, 0x3, 0x3, 
0xc, 0x2, 0x9, 0xc, 0x2, 0xa, 0xd, 0xb, 0x3, 
0xc, 0xa, 0xc, 0xb, 0x4, 0xb, 0xb, 0xc, 0xc, 
0x3, 0x2, 0xa, 0x5, 0xb, 0x1, 0x3, 0xb, 0x9, 
};

static int bbox_head_multi_level_share_convs_1_0_relu2_threshold[64 * 7] =
{ // torch.Size([64, 7])
-52, -22, 6, 35, 79, 138, 255,
-56, -8, 40, 88, 161, 257, 451,
0, 29, 59, 89, 134, 195, 315,
-9, 20, 49, 79, 123, 182, 299,
-3, 32, 67, 103, 157, 229, 373,
23, 91, 160, 228, 330, 467, 740,
-33, 24, 83, 141, 229, 346, 581,
-8, 139, 287, 436, 659, 955, 1549,
-47, -7, 32, 73, 133, 214, 376,
12, 62, 112, 163, 239, 339, 541,
61, 128, 195, 262, 363, 498, 766,
-4, 33, 71, 108, 165, 240, 391,
-22, 112, 247, 383, 586, 856, 1398,
132, 193, 254, 315, 406, 528, 772,
10, 33, 55, 78, 113, 158, 250,
-58, -30, -1, 26, 69, 126, 240,
-3, 25, 53, 81, 124, 181, 295,
-10, 23, 57, 91, 142, 209, 345,
-33, 11, 56, 102, 170, 260, 442,
-30, 24, 78, 133, 215, 324, 542,
37, 112, 187, 261, 373, 522, 821,
-126, -61, 3, 67, 164, 294, 553,
37, 174, 311, 447, 652, 925, 1471,
64, 108, 151, 194, 258, 345, 517,
-57, -3, 51, 105, 187, 296, 514,
-15, 13, 42, 71, 115, 173, 290,
35, 72, 109, 147, 203, 278, 427,
15, 126, 236, 346, 512, 733, 1174,
-1, 36, 74, 112, 169, 244, 395,
-23, 6, 37, 68, 114, 175, 298,
44, 147, 249, 352, 506, 712, 1123,
0, 84, 168, 252, 378, 547, 883,
-64, -46, -28, -11, 15, 50, 121,
-2, 47, 98, 148, 223, 324, 525,
-156, -78, -1, 75, 191, 346, 655,
-113, 32, 177, 323, 541, 832, 1414,
-6, 181, 370, 559, 842, 1220, 1976,
22, 53, 84, 115, 161, 223, 346,
70, 111, 153, 195, 257, 341, 508,
-77, -19, 37, 94, 180, 295, 525,
-29, 6, 42, 79, 133, 205, 350,
-54, 6, 67, 129, 221, 344, 590,
-2, 30, 62, 94, 142, 207, 336,
45, 95, 145, 194, 269, 368, 567,
-70, 11, 93, 174, 297, 461, 788,
-19, 108, 236, 365, 557, 814, 1328,
6, 34, 61, 89, 131, 186, 298,
-4, 19, 43, 67, 103, 151, 246,
-76, 2, 81, 159, 277, 435, 749,
-65, -48, -31, -13, 11, 46, 115,
-50, -26, -2, 20, 56, 103, 198,
-26, 20, 66, 113, 183, 276, 462,
107, 163, 218, 274, 358, 469, 692,
12, 128, 245, 361, 535, 768, 1233,
-12, 21, 56, 91, 143, 212, 350,
41, 94, 148, 201, 281, 387, 601,
18, 47, 76, 105, 149, 207, 322,
-3, 35, 73, 111, 169, 245, 398,
-39, 13, 65, 118, 197, 302, 513,
-11, 53, 118, 184, 281, 411, 672,
-2, 55, 112, 170, 257, 373, 604,
8, 45, 82, 120, 175, 249, 398,
-41, 33, 107, 182, 294, 443, 741,
-80, 30, 142, 253, 420, 643, 1088,
};

static uint64_t bbox_head_multi_level_share_convs_2_0_conv1_weight[64 * 1*4] =
{ // torch.Size([64, 1, 1, 64])
0x911bbb28383322b1,0xa304033ab5ca244c,0xb02453230ba4aaab,0x4233232933c2a8b2, 
0x13244828cb5b3133,0x4b3aa93a594a04a4,0x4bab325043424446,0x4423330b4a33a093, 
0x91ca09ca8a2aa2a3,0x89cc80292a0b80a9,0xb811c31229abb2b1,0xb102220b023a9a1a, 
0x3aa3c9290bc4128b,0xc32c839abb9c3900,0xbcb33bba0bcb3d8b,0xbbc2bb1904a93ab9, 
0x2a2211a8381428b0,0x23a333102b901241,0xa202203b820a1dba,0xa204118a3421b039, 
0xb8bc034b310933b4,0xa3c2ba8239cb9324,0x421332cabaa54a33,0x0b294a2ab33ab112, 
0x8280b8a9ca2a8aa8,0x9ab80ba3ac829bbb,0xb3bb322b99bc033a,0x1a9399003c9ac8ba, 
0xba23aa33b301233b,0xca83b202910a0aa1,0x12b23bc020349381,0x3bb83c229c348301, 
0x3bbc43b23b101baa,0x38acba893a312144,0x3a39b880b9b4acab,0xd23211b9b34b9853, 
0x2201803a9322ab23,0x03980a2223a12232,0x3b22a3b2b2c3910a,0xa02aa1c14a912a30, 
0x823b2ba09a3a290b,0xbb9a1a1a1b502bb8,0x221b202b88aba88d,0x8a932a20b221a9b2, 
0x988a1a02a091020a,0x9a9aa8994a0909aa,0x0090aa1820198aa9,0x881930190a990a90, 
0x29215123bb4a0a13,0x3203a241433c03ca,0xaa4bd413454b08b8,0x844933ba2ab483a3, 
0x099da2ba112b9a2a,0xb0dcaa11c339ba42,0x0bb3a4b2c0b4ac33,0xad32b1a8a0bbabaa, 
0xb2a3aaabaa30a02a,0x9b2a0baa2c301cdb,0x23bb3b2b2aaca222,0xaab31a0b2c2ab02b, 
0x82035c011b4298a2,0x4b10223142362204,0x233ba23933401323,0xa529320a21028293, 
0xa1a2aa2bc9b3b9b0,0xb9bb1ba31aa998ba,0xc3bac3b2b3ac223a,0xc8aa8aabbbbb2930, 
0xa112ca303ac29a0c,0x1111998bb32da9cc,0x29b32cb08cbb3a20,0x3bb1baa3a199b039, 
0x5aa31cc388aba83b,0xcb3823bccbab29bc,0xb2bbb30ba13caac2,0x04b22b22b032a2a2, 
0x2a02ab4421b11b1b,0x294308903432a33a,0x302ba34ba2023a13,0x2948b2b033a38a02, 
0xaaa34b433a3b1913,0xab34092b430c02c2,0x483a33c324a3843a,0x44b143922b4b9a93, 
0x822c0ba89a49002a,0xbba2230b2b5a0b91,0x0909302b22aaba03,0x9ba21aa8c102abb2, 
0x209309a9b99a2238,0x0aab0bb28bb11bb3,0x308aca1b012baa22,0x91bb39499b29a908, 
0xaaab831c43a2b2ba,0x21bcaab44bb43145,0x41b3b3cba3050c22,0xcb3b332b2b1b2233, 
0x00993ab0ba1a0a91,0xaabbab090baa30aa,0xb83893aa3aa919a8,0x31ba3a29c9a1a9b0, 
0x412b94bac2a93299,0x4333b333b92a2c9b,0xc8921dbb343c9cb2,0xbbb09bb3bcc3a0c3, 
0x13283301db0b103a,0x329c902b382023c0,0x480b2383343334a1,0x239c3390ab3232a2, 
0xa33ac009b9bb33b3,0x380b1221bc829b82,0xbb3a0bb9a83ab1a1,0x8ab929099ca412c0, 
0x220ab202a2191b20,0x21249010a9931a4b,0x319342223b93a4a9,0x4092020390a3b120, 
0xa9a921a91a2a9a12,0xab9c8baabd3bacc3,0xa98caa2c90bb9c2b,0xb2a31aba982ab2aa, 
0x923b4333384b3294,0x54b3103b4b2a3259,0xbb33c853143b98a9,0xa45b34139acb1403, 
0x322c01ab39219032,0x11cc2228b033a052,0x0c329339b0a81c33,0xbb4bb4ba23d239aa, 
0xb2ba9a1acaacb980,0x992d0b0bb83320cb,0xcb18d2c3a3bb2b22,0xb19c01b8bb1c3ac2, 
0x921a20a1ba2b9a01,0x9abb2ba29c230bba,0x18abb09a289ca201,0xa1813aa8ac0b902a, 
0x3020a3a232b318a0,0x3233039bab49913c,0x81142abb142aabb5,0xa01babb9c2c30930, 
0x3ab33b333b329833,0xbb242b3b38a0033b,0x3321444323b39434,0x3422412c243c2a2b, 
0xaabbc139c2bbab8a,0xb0bc9a0ab2abac91,0xb29a33b9a0b33183,0x1b9ba110cc0b3bd9, 
0x4a2c332b22813aa2,0x8332122a8aa9a943,0xa324153aa83408b9,0x2b22a2223441a018, 
0x3121c3aac9aa00bb,0x123323a8bd83ac3b,0xbba94b3c922bab23,0x8bbaac39cac222c2, 
0x8a8b0aa2a8a81819,0x0a9abb082a1a899a,0x19099a8a201a8aa9,0xa88a39910ba11aa0, 
0x002bc33ad2bb298b,0xb4431bb4cd1aaa0b,0xb329ba30ccba1b0b,0x3c0bcb912bb811db, 
0x319b1acbba0a0bc4,0x0bbb832bbb9b9993,0xb292aa0232aaa8ba,0xb1c28038b02aa288, 
0x0102904332ba083b,0x2243298a3203120a,0x4189943b02294a33,0x3a49229032b9ab94, 
0xcabbccba41baabb9,0x222c22cabd44ad44,0x8bc49304cac31c43,0xcc391cd352bd134b, 
0x1aad9aba190b01c1,0xbabb821abb329139,0x1120a42ab224ab23,0xc942903bb1a9aa39, 
0xb0c2cd3b2b94daab,0xcc5c2bc9bd24adc0,0x38b249acacbaa944,0xb0c3cccc334bbc3c, 
0x312b831002a1a9bb,0x0cbcba14b4d304aa,0x492242cbc323232d,0x933284aac3230022, 
0x32a821cacb3a2aa4,0xb8140233bc3bab49,0xdb22385421b993b4,0xb4cb2b3ab39129ba, 
0x1a92823022b20111,0x2333a2012421034a,0x0914a1a391233914,0x311ba29231a13200, 
0xa1319339b109841c,0x33110a249125aa39,0x212349293292b130,0xa12cb2b13bca3209, 
0x38304b293c144300,0x250c03304b0a032a,0x0c1a920234ab4c31,0x239a221a959311c0, 
0x99938a992a0201a1,0xaaac89aa2b9a0ac3,0xa98bab1b932b0c29,0xc1aa2a9b82bb0ab9, 
0xb222422c3233b193,0x485ba8204235a4a3,0x5abc998a31321236,0x143223cc4244c842, 
0x39ab49ba1993a3b0,0x12cc20a34bc61044,0x2a9233432434ba4a,0xc24c332c24184a32, 
0xa22033b35a3b3209,0x31b423824c4b893a,0x391ab252292cb9a3,0x920a3a9352b49212, 
0x32928111030b0b91,0xa032828183a08aa3,0x824841ca24a033aa,0xbba3890cbcb132b2, 
0x18babb22a1c2b9a9,0xa380101ca249ac32,0x2a2922d8a3b821b5,0x1b9b0b9bd0ab3b1a, 
0x09004bc2113b3114,0x928002223c440b48,0xb923914921221aa6,0x00ba3a33433ba9a9, 
0x3bba8b3b0c0320c8,0xa30da109c2a19a32,0xaca202a0c3ba3d30,0xb99aa0ac930b19d0, 
0xab0ba42c43b329bb,0xa23432b023ba9a4c,0x24a4494cca93ab8b,0x3b33c11333099aa2, 
0x2b2db9bab38caba9,0xcbb400a3cba2a92a,0x949b348bcbc4c3a2,0xaca9ab2bbcc3ba3a, 
0x1123822930210802,0x90232a12b2132232,0x8a1923baa2a20229,0x21902a0029829022, 
0xa40a3304a33b0228,0x333430224c2b3b8c,0xbb2ac042423cbbb0,0x503a33242cd3a0ca, 
0x90911aa8a9188902,0xabbb1a9a2c0a0abb,0x89abb898911b0a10,0xb2982a9a2b0a9a88, 
};

static int bbox_head_multi_level_share_convs_2_0_quant1_threshold[64 * 14] =
{ // torch.Size([64, 14])
-999, -590, -385, -232, -129, -27, 74, 176, 279, 381, 483, 637, 841, 1250,
-973, -512, -281, -108, 6, 122, 237, 352, 468, 583, 698, 872, 1102, 1564,
-1060, -713, -540, -410, -323, -236, -150, -63, 23, 109, 196, 326, 499, 846,
-1081, -729, -552, -420, -332, -244, -156, -68, 19, 107, 195, 328, 504, 856,
-266, -146, -85, -40, -10, 19, 49, 79, 109, 139, 169, 214, 274, 394,
-710, -444, -311, -211, -145, -78, -12, 54, 120, 187, 253, 353, 486, 752,
-725, -494, -379, -292, -234, -177, -119, -61, -3, 53, 111, 198, 313, 544,
-685, -427, -298, -201, -136, -72, -7, 57, 121, 186, 250, 347, 476, 735,
-1252, -836, -628, -472, -368, -264, -160, -56, 47, 151, 255, 411, 619, 1035,
-959, -608, -432, -300, -212, -124, -36, 51, 139, 227, 315, 447, 623, 974,
-1078, -698, -508, -366, -271, -176, -81, 13, 108, 203, 298, 440, 630, 1009,
-821, -530, -385, -276, -204, -131, -58, 13, 86, 159, 231, 340, 485, 776,
-950, -544, -342, -190, -88, 12, 113, 215, 316, 417, 519, 671, 873, 1279,
-1182, -805, -616, -475, -380, -286, -192, -98, -3, 90, 184, 326, 515, 892,
-1097, -746, -571, -440, -352, -264, -177, -89, -1, 85, 173, 304, 480, 830,
-1017, -561, -333, -162, -48, 65, 179, 293, 407, 521, 635, 806, 1034, 1490,
-835, -576, -447, -349, -285, -220, -155, -90, -25, 38, 103, 200, 330, 589,
-1155, -774, -584, -441, -345, -250, -155, -60, 35, 130, 225, 368, 559, 940,
-997, -611, -418, -273, -176, -80, 16, 112, 209, 305, 402, 547, 740, 1126,
-747, -442, -290, -176, -100, -23, 52, 128, 204, 280, 356, 471, 623, 928,
-882, -526, -348, -214, -125, -36, 52, 141, 230, 319, 409, 542, 720, 1077,
-1117, -692, -479, -320, -214, -108, -2, 104, 210, 316, 422, 582, 794, 1219,
-734, -489, -366, -275, -213, -152, -91, -30, 31, 92, 153, 245, 368, 613,
-1190, -773, -564, -408, -304, -199, -95, 8, 112, 217, 321, 477, 686, 1103,
-612, -408, -306, -229, -178, -127, -76, -25, 25, 77, 128, 204, 307, 511,
-827, -522, -370, -256, -180, -103, -27, 48, 124, 200, 276, 391, 543, 848,
-179, -81, -32, 3, 28, 52, 76, 101, 125, 150, 174, 211, 260, 357,
-794, -520, -383, -280, -211, -143, -74, -5, 62, 131, 199, 302, 439, 714,
-722, -426, -278, -167, -93, -19, 54, 128, 202, 276, 350, 461, 609, 905,
-1217, -840, -652, -510, -416, -322, -227, -133, -39, 55, 149, 290, 479, 856,
-906, -528, -338, -196, -102, -7, 86, 181, 276, 370, 465, 607, 796, 1174,
-815, -521, -374, -264, -190, -117, -43, 29, 103, 176, 250, 360, 507, 801,
-1111, -769, -598, -470, -385, -300, -214, -129, -43, 41, 126, 254, 425, 767,
-920, -612, -458, -343, -266, -189, -112, -35, 41, 118, 195, 310, 464, 772,
-1034, -605, -391, -230, -123, -16, 90, 197, 305, 412, 519, 680, 894, 1323,
-836, -493, -321, -193, -107, -21, 64, 150, 235, 321, 407, 536, 707, 1050,
-979, -662, -504, -385, -305, -226, -147, -68, 11, 90, 169, 288, 447, 764,
-690, -393, -245, -134, -59, 14, 88, 162, 236, 311, 385, 496, 645, 942,
-1095, -702, -505, -358, -260, -161, -63, 34, 132, 231, 329, 476, 673, 1066,
-641, -424, -315, -234, -180, -125, -71, -17, 36, 91, 145, 226, 335, 552,
-1128, -774, -597, -464, -375, -287, -198, -110, -21, 66, 155, 287, 464, 818,
-884, -591, -445, -335, -262, -189, -115, -42, 30, 103, 176, 286, 433, 725,
-777, -466, -311, -195, -117, -40, 37, 114, 192, 270, 347, 464, 619, 929,
-1263, -843, -633, -476, -371, -266, -161, -56, 48, 152, 257, 415, 625, 1044,
-1054, -693, -513, -378, -287, -197, -107, -17, 72, 162, 253, 388, 568, 929,
-1380, -949, -733, -571, -463, -356, -248, -140, -32, 74, 182, 344, 559, 991,
-1015, -638, -450, -309, -215, -121, -26, 67, 161, 255, 349, 490, 678, 1055,
-1102, -684, -474, -318, -213, -108, -4, 100, 204, 309, 413, 570, 780, 1198,
-888, -527, -346, -210, -120, -30, 59, 150, 240, 330, 421, 556, 737, 1098,
-757, -450, -296, -181, -104, -28, 48, 125, 202, 278, 355, 470, 624, 930,
-647, -372, -234, -130, -62, 6, 75, 144, 213, 282, 351, 454, 592, 867,
-1054, -709, -536, -407, -320, -234, -148, -62, 24, 110, 196, 326, 498, 843,
-887, -518, -334, -196, -103, -11, 80, 172, 264, 356, 448, 587, 771, 1140,
-1101, -680, -469, -311, -206, -101, 4, 109, 214, 320, 425, 583, 794, 1215,
-802, -466, -298, -171, -87, -3, 80, 164, 248, 333, 417, 543, 711, 1048,
-647, -398, -273, -180, -118, -56, 5, 67, 130, 192, 254, 347, 472, 720,
-933, -589, -417, -288, -202, -116, -30, 55, 141, 227, 313, 442, 614, 958,
-1121, -662, -433, -261, -146, -31, 82, 197, 312, 426, 541, 713, 943, 1402,
-981, -667, -509, -391, -312, -233, -155, -76, 2, 80, 159, 277, 435, 750,
-950, -600, -426, -294, -207, -120, -32, 54, 142, 229, 316, 448, 622, 972,
-1250, -853, -655, -507, -408, -309, -209, -110, -11, 87, 186, 334, 532, 929,
-745, -454, -309, -200, -127, -54, 18, 90, 163, 236, 309, 418, 563, 854,
-288, -143, -71, -16, 19, 55, 92, 128, 164, 201, 237, 291, 364, 509,
-1002, -670, -505, -381, -298, -215, -132, -50, 32, 115, 198, 322, 488, 819,
};

static uint64_t bbox_head_multi_level_share_convs_2_0_conv2_weight[64 * 9] =
{ // torch.Size([64, 3, 3, 1])
0x4, 0xa, 0x3, 0xc, 0xd, 0xc, 0x2, 0xb, 0xa, 
0xd, 0xc, 0xc, 0xb, 0xa, 0x9, 0xb, 0xa, 0xb, 
0x2, 0x4, 0x1, 0x3, 0x3, 0x0, 0x3, 0x2, 0xb, 
0x4, 0x3, 0x2, 0x0, 0xa, 0xa, 0x3, 0x4, 0x4, 
0xb, 0xc, 0xc, 0xa, 0xb, 0xc, 0x4, 0x3, 0xa, 
0x4, 0x3, 0x8, 0x4, 0x3, 0xc, 0xb, 0xc, 0xd, 
0xa, 0x2, 0x4, 0x2, 0x4, 0x3, 0x3, 0x2, 0xb, 
0x0, 0x9, 0x4, 0xb, 0xb, 0x3, 0xd, 0xb, 0x4, 
0xc, 0xc, 0x9, 0xa, 0x3, 0x5, 0xc, 0x0, 0x4, 
0xb, 0x2, 0x0, 0xb, 0xb, 0xc, 0x3, 0x0, 0xb, 
0x4, 0x3, 0x4, 0x3, 0x2, 0x3, 0xa, 0xa, 0xa, 
0x2, 0x2, 0x1, 0x2, 0x2, 0x2, 0x0, 0x2, 0x0, 
0xa, 0x9, 0xb, 0x4, 0x4, 0xc, 0x3, 0xc, 0xe, 
0x5, 0x2, 0x9, 0x3, 0x3, 0x1, 0x5, 0x3, 0x2, 
0xb, 0x3, 0x4, 0xb, 0x4, 0x3, 0x9, 0x3, 0x1, 
0xa, 0x8, 0xc, 0x8, 0x0, 0xb, 0xb, 0xb, 0xc, 
0x3, 0x3, 0x2, 0x3, 0x4, 0x2, 0xa, 0x2, 0x0, 
0x3, 0x4, 0x3, 0x0, 0x3, 0x2, 0x2, 0x4, 0x3, 
0xc, 0x9, 0x4, 0xa, 0x3, 0x5, 0xc, 0x3, 0x5, 
0x2, 0x3, 0xa, 0xc, 0xb, 0xc, 0xa, 0x2, 0x1, 
0x9, 0x3, 0x0, 0xb, 0x0, 0x0, 0xb, 0xc, 0xd, 
0x5, 0x4, 0x5, 0x2, 0x8, 0x2, 0x8, 0xb, 0xb, 
0xa, 0x3, 0x3, 0xb, 0x1, 0xb, 0x2, 0x4, 0x3, 
0x3, 0xb, 0x0, 0x4, 0xb, 0xb, 0xb, 0xc, 0xd, 
0x4, 0x3, 0x2, 0xb, 0xb, 0x2, 0x9, 0x3, 0x5, 
0x5, 0x0, 0x4, 0x4, 0xc, 0x8, 0x4, 0x2, 0x3, 
0x3, 0x1, 0x3, 0xb, 0xc, 0xb, 0xc, 0xc, 0xc, 
0x9, 0x2, 0x3, 0x3, 0x2, 0x4, 0xb, 0xb, 0x4, 
0x3, 0xb, 0xa, 0xa, 0xc, 0x2, 0xa, 0xb, 0x3, 
0x2, 0x9, 0xb, 0x4, 0x3, 0x1, 0x2, 0x4, 0x3, 
0xa, 0x4, 0x0, 0xc, 0x3, 0x3, 0xe, 0xd, 0x2, 
0x4, 0xb, 0x1, 0x3, 0xb, 0x2, 0x6, 0x3, 0x1, 
0x2, 0x2, 0x3, 0x5, 0x5, 0x4, 0x8, 0x3, 0xa, 
0x2, 0x2, 0xa, 0x3, 0x2, 0x1, 0x1, 0x2, 0x3, 
0x4, 0x2, 0x4, 0x2, 0x9, 0x3, 0x3, 0x2, 0x2, 
0x9, 0xa, 0xb, 0x2, 0x2, 0xa, 0xc, 0xb, 0xd, 
0x4, 0x3, 0x4, 0x2, 0x0, 0x3, 0x2, 0x8, 0x1, 
0x3, 0xd, 0x3, 0x3, 0xc, 0xa, 0x4, 0xc, 0xa, 
0x4, 0x2, 0x9, 0x4, 0x3, 0x4, 0xb, 0x0, 0x3, 
0x1, 0x2, 0x8, 0x2, 0x3, 0x2, 0x0, 0x2, 0x2, 
0x0, 0x2, 0x8, 0x4, 0x2, 0x3, 0xa, 0x4, 0x5, 
0x1, 0x2, 0xa, 0x4, 0x3, 0x9, 0x3, 0x3, 0x8, 
0x0, 0x2, 0xb, 0xb, 0xa, 0xb, 0xb, 0x9, 0xa, 
0x9, 0x3, 0x6, 0xb, 0xa, 0x4, 0xc, 0xc, 0x3, 
0x4, 0x3, 0x9, 0x3, 0x3, 0x2, 0x3, 0x4, 0xa, 
0x5, 0x3, 0x3, 0x5, 0x4, 0x5, 0x3, 0xc, 0x0, 
0x4, 0x3, 0x5, 0x4, 0xb, 0x3, 0x3, 0xb, 0xc, 
0x2, 0x2, 0xa, 0x4, 0x4, 0x3, 0x4, 0x4, 0x2, 
0xb, 0xb, 0xb, 0xb, 0xb, 0xb, 0xa, 0x1, 0x9, 
0x2, 0x3, 0xd, 0xa, 0x3, 0xb, 0x2, 0x3, 0xc, 
0x2, 0x0, 0xc, 0x2, 0x9, 0xc, 0xa, 0xb, 0xc, 
0x3, 0x3, 0x9, 0x2, 0x3, 0x0, 0x2, 0x3, 0x0, 
0xc, 0x0, 0xc, 0xa, 0x2, 0x9, 0xc, 0x0, 0xc, 
0xb, 0xb, 0xc, 0xb, 0x3, 0x0, 0xb, 0xb, 0xd, 
0xc, 0xc, 0xd, 0xb, 0xa, 0x9, 0x2, 0x9, 0x3, 
0x4, 0x2, 0xb, 0x3, 0x9, 0xb, 0x4, 0xa, 0xc, 
0x5, 0x4, 0x5, 0x0, 0xa, 0x2, 0x1, 0x1, 0x2, 
0xd, 0xb, 0xb, 0x2, 0x0, 0xb, 0x2, 0x2, 0xc, 
0x4, 0x3, 0x0, 0x4, 0x2, 0xa, 0x4, 0x2, 0x0, 
0xc, 0xc, 0xc, 0x8, 0xc, 0xb, 0x4, 0x4, 0x3, 
0x3, 0x8, 0x1, 0x2, 0x9, 0xa, 0x5, 0x3, 0x3, 
0xb, 0xa, 0x9, 0xa, 0x9, 0x9, 0xa, 0xa, 0xa, 
0x4, 0x1, 0x3, 0x2, 0xc, 0xb, 0x2, 0xd, 0xd, 
0x2, 0x2, 0x9, 0x2, 0x3, 0x1, 0x8, 0x2, 0x2, 
};

static int bbox_head_multi_level_share_convs_2_0_relu2_threshold[64 * 7] =
{ // torch.Size([64, 7])
18, 63, 108, 153, 220, 310, 490,
27, 68, 110, 151, 213, 296, 461,
9, 39, 69, 99, 143, 203, 323,
30, 59, 88, 117, 160, 218, 333,
7, 85, 163, 241, 359, 515, 828,
0, 38, 77, 116, 175, 253, 409,
8, 35, 63, 91, 133, 189, 300,
-2, 31, 66, 101, 153, 223, 363,
43, 95, 146, 197, 274, 377, 582,
-3, 20, 44, 68, 104, 152, 247,
-4, 29, 62, 95, 145, 212, 345,
1, 15, 29, 43, 64, 92, 148,
-9, 44, 98, 152, 233, 341, 556,
17, 72, 128, 183, 267, 378, 600,
-2, 30, 63, 96, 146, 212, 344,
38, 66, 94, 122, 164, 220, 333,
2, 26, 50, 74, 110, 159, 255,
-9, 37, 84, 131, 202, 296, 485,
-87, -51, -15, 20, 75, 147, 291,
-3, 22, 48, 74, 113, 165, 268,
-13, 28, 70, 112, 175, 259, 427,
-51, 1, 54, 107, 187, 293, 506,
12, 34, 56, 79, 112, 157, 247,
4, 32, 60, 87, 129, 184, 295,
20, 58, 96, 134, 191, 267, 419,
-57, 12, 83, 154, 260, 401, 684,
41, 171, 301, 430, 625, 885, 1404,
-27, 27, 81, 136, 218, 327, 545,
-4, 21, 48, 74, 114, 166, 272,
8, 38, 68, 98, 143, 203, 324,
39, 123, 207, 291, 416, 584, 919,
24, 79, 133, 188, 269, 378, 595,
-8, 49, 108, 167, 256, 374, 609,
0, 21, 42, 63, 95, 138, 223,
-31, -9, 12, 34, 66, 110, 198,
-45, 16, 78, 141, 234, 358, 606,
15, 37, 58, 80, 112, 155, 241,
12, 39, 67, 95, 137, 192, 303,
-21, 13, 48, 83, 135, 205, 344,
0, 14, 28, 43, 64, 92, 148,
20, 60, 99, 139, 198, 277, 435,
0, 24, 50, 75, 113, 163, 264,
0, 19, 38, 58, 87, 127, 205,
80, 163, 246, 329, 454, 621, 954,
-6, 37, 80, 124, 189, 275, 449,
81, 180, 279, 379, 528, 727, 1124,
-5, 36, 79, 121, 185, 271, 441,
23, 59, 95, 132, 186, 259, 404,
-7, 22, 53, 83, 129, 190, 312,
20, 67, 114, 161, 232, 326, 514,
-1, 35, 72, 109, 165, 239, 388,
-3, 19, 42, 65, 99, 145, 237,
35, 59, 84, 108, 144, 193, 290,
-40, -1, 36, 75, 133, 210, 365,
6, 49, 91, 133, 197, 282, 451,
5, 32, 58, 85, 125, 178, 284,
-22, 24, 70, 117, 187, 280, 466,
4, 39, 73, 107, 158, 227, 364,
3, 39, 74, 110, 164, 236, 379,
-5, 30, 67, 104, 160, 233, 381,
24, 60, 95, 131, 184, 255, 398,
6, 23, 40, 57, 82, 116, 184,
184, 398, 611, 825, 1146, 1573, 2429,
0, 17, 34, 51, 77, 111, 179,
};

static uint64_t bbox_head_multi_level_cls_0_conv1_weight[1 * 1*4] =
{ // torch.Size([1, 1, 1, 64])
0xcd2dccbc424c4bdb,0x5c42b44c38c3c430,0xddcbdb55ccc4bdc1,0xbc2ccc6339b3baba, 
};

static int bbox_head_multi_level_cls_0_quant1_threshold[1 * 14] =
{ // torch.Size([1, 14])
-2611, -1705, -1251, -912, -685, -458, -232, -5, 221, 447, 674, 1014, 1467, 2374,
};

static uint64_t bbox_head_multi_level_cls_0_conv2_weight[1 * 9] =
{ // torch.Size([1, 3, 3, 1])
0xc, 0xd, 0xc, 0xd, 0xe, 0xc, 0xc, 0xd, 0xc, 
};

static int bbox_head_multi_level_cls_0_quant2_threshold[1 * 14] =
{ // torch.Size([1, 14])
-9928, -6368, -4588, -3253, -2363, -1473, -583, 306, 1196, 2086, 2976, 4311, 6091, 9651,
};

static uint64_t bbox_head_multi_level_cls_1_conv1_weight[1 * 1*4] =
{ // torch.Size([1, 1, 1, 64])
0x2b2b399ccc9c9b42,0xabba23ba4c3cb3c0,0xcb2aba34cb3ccbba,0x43d81d2bbcda3264, 
};

static int bbox_head_multi_level_cls_1_quant1_threshold[1 * 14] =
{ // torch.Size([1, 14])
-2396, -1506, -1061, -727, -504, -281, -59, 163, 385, 608, 831, 1165, 1610, 2500,
};

static uint64_t bbox_head_multi_level_cls_1_conv2_weight[1 * 9] =
{ // torch.Size([1, 3, 3, 1])
0xb, 0xd, 0xc, 0xc, 0xe, 0xc, 0xd, 0xd, 0xb, 
};

static int bbox_head_multi_level_cls_1_quant2_threshold[1 * 14] =
{ // torch.Size([1, 14])
-7145, -4545, -3245, -2271, -1621, -971, -321, 328, 978, 1628, 2278, 3253, 4553, 7152,
};

static uint64_t bbox_head_multi_level_cls_2_conv1_weight[1 * 1*4] =
{ // torch.Size([1, 1, 1, 64])
0xb3c82010a213c902,0x323033a2ea19b1b2,0x3392b3ba310b900b,0x1990e0933a219192, 
};

static int bbox_head_multi_level_cls_2_quant1_threshold[1 * 14] =
{ // torch.Size([1, 14])
-1042, -691, -516, -384, -296, -208, -121, -33, 54, 142, 230, 361, 537, 888,
};

static uint64_t bbox_head_multi_level_cls_2_conv2_weight[1 * 9] =
{ // torch.Size([1, 3, 3, 1])
0x5, 0x5, 0x5, 0x5, 0x6, 0x6, 0x5, 0x6, 0x6, 
};

static int bbox_head_multi_level_cls_2_quant2_threshold[1 * 14] =
{ // torch.Size([1, 14])
-13693, -8703, -6207, -4336, -3088, -1841, -593, 654, 1901, 3149, 4397, 6268, 8763, 13754,
};

static uint64_t bbox_head_multi_level_bbox_0_conv1_weight[4 * 1*4] =
{ // torch.Size([4, 1, 1, 64])
0x298810b22a332a32,0x9332534032a2834c,0x81091ac91200321b,0x48bc42a4a9928b11, 
0x094030b53c0a95b9,0x3acb1804a21ab0ab,0x31445a03c44b4324,0x3099aa93840b4ccd, 
0xb09b2a2ac2ab232a,0xc23233bb32311dc3,0x12b8c42c9a14aa9b,0x43204bd2eb93b0a8, 
0xb9893222b23ba4aa,0xca422b3aa3222ec3,0x22abb4bc9b14ba3c,0x32204ad2dbb4b4bb, 
};

static int bbox_head_multi_level_bbox_0_quant1_threshold[4 * 14] =
{ // torch.Size([4, 14])
-649, -385, -253, -154, -88, -23, 42, 108, 174, 240, 306, 405, 537, 800,
-1057, -665, -469, -322, -224, -125, -27, 70, 168, 266, 364, 511, 707, 1099,
-1347, -895, -669, -500, -387, -274, -161, -48, 64, 177, 290, 459, 685, 1137,
-1330, -871, -641, -469, -355, -240, -125, -10, 103, 218, 333, 505, 734, 1193,
};

static uint64_t bbox_head_multi_level_bbox_0_conv2_weight[4 * 9] =
{ // torch.Size([4, 3, 3, 1])
0xc, 0x1, 0x2, 0xd, 0x3, 0x4, 0xc, 0x2, 0x2, 
0x9, 0xa, 0x8, 0xd, 0xe, 0x9, 0xa, 0xa, 0xa, 
0x2, 0x3, 0x2, 0x3, 0x3, 0x3, 0x2, 0x3, 0x2, 
0x3, 0x3, 0x2, 0x3, 0x4, 0x2, 0x3, 0x2, 0x2, 
};

static int bbox_head_multi_level_bbox_0_quant2_threshold[4 * 14] =
{ // torch.Size([4, 14])
-543, -228, -70, 47, 126, 205, 283, 362, 441, 520, 599, 717, 875, 1190,
-596, -268, -104, 19, 101, 183, 265, 347, 429, 511, 593, 716, 880, 1208,
-675, -459, -351, -270, -216, -162, -108, -54, 0, 53, 107, 188, 296, 512,
-831, -610, -499, -416, -360, -305, -249, -194, -138, -83, -28, 55, 166, 387,
};

static uint64_t bbox_head_multi_level_bbox_1_conv1_weight[4 * 1*4] =
{ // torch.Size([4, 1, 1, 64])
0x3b4c0c02b1a8b200,0x3b98c448b12b92b0,0xac31c3b9842b2b88,0x1b1a3218d1a93438, 
0x02b1ab28bb421a03,0xb4ac8a1ca820422d,0xa323a2b21ab42aa9,0x03ac3140a82c91a0, 
0x923c29bca9399cdb,0x19a902b8a09b8b33,0x3389223aa4c9a58b,0xea801b1a4b80bcbd, 
0x821929bbba499cdd,0x2baa089a210a023c,0xa310123920db0490,0xd304aa3b0a031cae, 
};

static int bbox_head_multi_level_bbox_1_quant1_threshold[4 * 14] =
{ // torch.Size([4, 14])
-554, -338, -229, -148, -94, -40, 13, 67, 122, 176, 230, 311, 419, 636,
-622, -400, -289, -205, -150, -94, -39, 16, 71, 127, 183, 266, 377, 599,
-1212, -819, -622, -474, -376, -278, -179, -81, 17, 115, 213, 361, 558, 951,
-1311, -899, -693, -539, -436, -333, -230, -127, -24, 78, 181, 335, 541, 952,
};

static uint64_t bbox_head_multi_level_bbox_1_conv2_weight[4 * 9] =
{ // torch.Size([4, 3, 3, 1])
0x2, 0xb, 0xe, 0x3, 0xa, 0xe, 0x2, 0xb, 0xd, 
0xb, 0xb, 0xb, 0xb, 0xe, 0xd, 0xb, 0x3, 0xa, 
0x1, 0x4, 0x3, 0x2, 0x4, 0x4, 0x2, 0x3, 0x4, 
0x2, 0x4, 0x3, 0x3, 0x4, 0x4, 0x3, 0x3, 0x4, 
};

static int bbox_head_multi_level_bbox_1_quant2_threshold[4 * 14] =
{ // torch.Size([4, 14])
-1422, -748, -411, -158, 10, 178, 347, 515, 684, 852, 1021, 1273, 1610, 2284,
-900, -405, -157, 28, 152, 276, 400, 524, 648, 772, 896, 1082, 1330, 1826,
-1110, -756, -578, -445, -356, -268, -179, -90, -1, 86, 175, 308, 485, 840,
-1374, -974, -773, -623, -523, -423, -323, -222, -122, -22, 77, 227, 428, 828,
};

static uint64_t bbox_head_multi_level_bbox_2_conv1_weight[4 * 1*4] =
{ // torch.Size([4, 1, 1, 64])
0x3b36b4b011db4842,0x0336a93bbad2bab9,0x4343a3c3ab04b5e0,0xdd6ba13b3c3cc44b, 
0xa323cad53c2c2204,0x0c04b02435a3350d,0x344b35421054899d,0x23344439149c2adb, 
0x524d5bbc9cce5954,0xac9bb44d335db943,0xdb553934040c55c4,0xe4eb4943342bb5c4, 
0xc4c4d15c2505b32c,0x03ba0bc5caa33ccd,0x33dcb43b2cd5c02b,0x4c34cdc02bac4c6d, 
};

static int bbox_head_multi_level_bbox_2_quant1_threshold[4 * 14] =
{ // torch.Size([4, 14])
-1262, -803, -573, -401, -286, -171, -56, 57, 172, 287, 402, 574, 804, 1263,
-1071, -626, -404, -237, -126, -15, 95, 206, 317, 428, 539, 706, 928, 1372,
-1728, -1078, -753, -509, -346, -183, -21, 141, 303, 466, 629, 873, 1198, 1848,
-1577, -1005, -719, -504, -361, -218, -75, 67, 210, 353, 496, 711, 997, 1569,
};

static uint64_t bbox_head_multi_level_bbox_2_conv2_weight[4 * 9] =
{ // torch.Size([4, 3, 3, 1])
0xc, 0xe, 0xd, 0xc, 0xe, 0xd, 0xc, 0xe, 0xc, 
0x5, 0x4, 0x5, 0x6, 0x6, 0x6, 0x5, 0x5, 0x5, 
0xc, 0xc, 0xc, 0xd, 0xd, 0xc, 0xc, 0xc, 0xc, 
0x4, 0x5, 0x4, 0x4, 0x5, 0x5, 0x4, 0x4, 0x4, 
};

static int bbox_head_multi_level_bbox_2_quant2_threshold[4 * 14] =
{ // torch.Size([4, 14])
-1650, -844, -441, -139, 61, 262, 464, 665, 867, 1068, 1269, 1571, 1974, 2779,
-1335, -671, -339, -90, 75, 241, 407, 573, 739, 905, 1071, 1320, 1652, 2316,
-3102, -2143, -1663, -1304, -1064, -824, -584, -344, -105, 134, 374, 734, 1213, 2172,
-3675, -2656, -2147, -1764, -1510, -1255, -1000, -746, -491, -236, 17, 400, 909, 1928,
};

static uint64_t bbox_head_multi_level_obj_0_conv1_weight[1 * 1*4] =
{ // torch.Size([1, 1, 1, 64])
0x5e8555d90d34215d,0xa50d122bddddd00b,0xddabb28b800e055b,0x4db2342d0a4da9b1, 
};

static int bbox_head_multi_level_obj_0_quant1_threshold[1 * 14] =
{ // torch.Size([1, 14])
-2178, -1305, -869, -541, -323, -105, 112, 331, 549, 767, 986, 1313, 1750, 2623,
};

static uint64_t bbox_head_multi_level_obj_0_conv2_weight[1 * 9] =
{ // torch.Size([1, 3, 3, 1])
0x9, 0xb, 0xa, 0x9, 0xe, 0xa, 0xa, 0xb, 0xa, 
};

static int bbox_head_multi_level_obj_0_quant2_threshold[1 * 14] =
{ // torch.Size([1, 14])
-2246, -1211, -694, -306, -47, 210, 469, 728, 987, 1245, 1504, 1892, 2409, 3444,
};

static uint64_t bbox_head_multi_level_obj_1_conv1_weight[1 * 1*4] =
{ // torch.Size([1, 1, 1, 64])
0x254bd54dc4b6a34a,0x2adac94266cd055b,0xdc42c445dbbc4545,0x0b6b4c35b5d43b4b, 
};

static int bbox_head_multi_level_obj_1_quant1_threshold[1 * 14] =
{ // torch.Size([1, 14])
-1305, -831, -594, -416, -298, -179, -61, 57, 175, 294, 412, 590, 827, 1301,
};

static uint64_t bbox_head_multi_level_obj_1_conv2_weight[1 * 9] =
{ // torch.Size([1, 3, 3, 1])
0x0, 0x9, 0x0, 0xa, 0xe, 0x8, 0x0, 0xa, 0x1, 
};

static int bbox_head_multi_level_obj_1_quant2_threshold[1 * 14] =
{ // torch.Size([1, 14])
-2981, -2053, -1590, -1242, -1010, -778, -546, -314, -82, 149, 380, 728, 1192, 2120,
};

static uint64_t bbox_head_multi_level_obj_2_conv1_weight[1 * 1*4] =
{ // torch.Size([1, 1, 1, 64])
0x9d3c524c946cacba,0x55e3e444a52264b3,0x5da85a6c5ca44329,0xba1c2b4e5b53c3cd, 
};

static int bbox_head_multi_level_obj_2_quant1_threshold[1 * 14] =
{ // torch.Size([1, 14])
-1032, -531, -281, -93, 31, 157, 282, 407, 533, 658, 783, 971, 1221, 1723,
};

static uint64_t bbox_head_multi_level_obj_2_conv2_weight[1 * 9] =
{ // torch.Size([1, 3, 3, 1])
0xd, 0xe, 0xb, 0xb, 0xd, 0xa, 0x8, 0xb, 0xa, 
};

static int bbox_head_multi_level_obj_2_quant2_threshold[1 * 14] =
{ // torch.Size([1, 14])
-4653, -3008, -2185, -1568, -1156, -745, -334, 77, 488, 900, 1311, 1928, 2751, 4397,
};

static uint64_t bbox_head_multi_level_kps_0_conv1_weight[10 * 1*4] =
{ // torch.Size([10, 1, 1, 64])
0x8a0b193a12aad499,0xb020a4d8ab8c9bc2,0x009b10489a12ab03,0x21544a0a081219a0, 
0x08c1b20ba2a9ad12,0xaa49ab01aaa2323a,0xb01b29085cdab929,0x9000b221302a0245, 
0xb214320cabdb5222,0x109b4cb222ba2a3c,0x4a1324c983a2a2ac,0x31dc3ab2c1931920, 
0x09c1b29ba282ad02,0x9a42bca13aa2323a,0x909ba9115ccab98a,0xb802b22a39291245, 
0x1aac82a30252e0b9,0xa231b5d2aa2a89b4,0x912b2a401a129904,0x2854b02a2a221b08, 
0xa1d1912aabab9c11,0xa95b0ca0a11a4081,0x910c019a5cc3b02a,0x2082922a90920335, 
0x12139ac189025b38,0x20aa3c501384134a,0x080380b1038a220b,0xa8dcb28388ab0199, 
0x305809a343a302b8,0x31d382903aa4b30b,0x10049b12c54a4294,0xb8a9b812302a9dbc, 
0xa824211ca9da5231,0x01aa4c1029ba1b4c,0x3a2224c8a392810c,0x32cc48a2b2832198, 
0xa8d9102aca2a1a21,0xb85a1a00bb2b3b83,0x100c139a5cc2ca0c,0x2821309ab0a31534, 
};

static int bbox_head_multi_level_kps_0_quant1_threshold[10 * 14] =
{ // torch.Size([10, 14])
-1169, -726, -505, -339, -229, -118, -8, 102, 212, 323, 433, 599, 820, 1263,
-1486, -968, -709, -515, -386, -256, -127, 2, 131, 261, 390, 585, 844, 1362,
-1242, -792, -567, -399, -286, -174, -62, 50, 162, 274, 387, 555, 780, 1230,
-1401, -895, -642, -453, -326, -200, -73, 52, 178, 305, 431, 621, 874, 1380,
-1228, -774, -548, -378, -265, -151, -38, 74, 188, 301, 414, 584, 811, 1264,
-1495, -965, -700, -502, -369, -237, -105, 27, 159, 292, 424, 623, 888, 1417,
-1272, -818, -592, -421, -308, -195, -81, 31, 145, 258, 371, 541, 768, 1222,
-1540, -957, -665, -446, -301, -155, -9, 136, 282, 427, 573, 792, 1083, 1667,
-1195, -749, -525, -358, -247, -135, -23, 87, 199, 310, 422, 589, 812, 1259,
-1625, -1053, -767, -553, -410, -267, -124, 18, 161, 304, 447, 661, 947, 1519,
};

static uint64_t bbox_head_multi_level_kps_0_conv2_weight[10 * 9] =
{ // torch.Size([10, 3, 3, 1])
0x3, 0xd, 0xc, 0x4, 0xc, 0xd, 0x3, 0xc, 0xc, 
0x3, 0x3, 0x2, 0x6, 0x6, 0x2, 0x2, 0x3, 0x2, 
0xb, 0x4, 0x4, 0xb, 0x5, 0x4, 0xb, 0x5, 0x3, 
0x3, 0x3, 0x2, 0x5, 0x6, 0x3, 0x2, 0x2, 0x2, 
0x2, 0xc, 0xc, 0x3, 0xd, 0xc, 0x2, 0xd, 0xc, 
0x3, 0x3, 0x2, 0x6, 0x6, 0x2, 0x3, 0x2, 0x2, 
0xc, 0x4, 0x4, 0xc, 0x5, 0x5, 0xb, 0x4, 0x5, 
0xa, 0xb, 0xa, 0xd, 0xe, 0xc, 0xa, 0xb, 0xa, 
0xb, 0x4, 0x3, 0xc, 0x5, 0x4, 0xb, 0x4, 0x4, 
0x3, 0x3, 0x2, 0x5, 0x6, 0x4, 0x3, 0x2, 0x2, 
};

static int bbox_head_multi_level_kps_0_quant2_threshold[10 * 14] =
{ // torch.Size([10, 14])
-1879, -1088, -693, -397, -199, -1, 195, 393, 591, 788, 986, 1282, 1678, 2468,
-2465, -1413, -887, -492, -229, 33, 297, 560, 823, 1086, 1349, 1744, 2270, 3322,
-2294, -1554, -1184, -906, -721, -536, -351, -166, 18, 203, 389, 666, 1036, 1777,
-2403, -1380, -868, -484, -228, 27, 283, 539, 795, 1051, 1307, 1690, 2202, 3226,
-2060, -1298, -917, -631, -440, -250, -59, 130, 321, 511, 702, 987, 1368, 2130,
-2640, -1698, -1227, -874, -639, -403, -168, 67, 302, 537, 773, 1126, 1597, 2538,
-2332, -1383, -908, -552, -315, -77, 159, 396, 634, 871, 1109, 1465, 1939, 2889,
-2838, -1951, -1508, -1175, -953, -732, -510, -288, -66, 154, 376, 709, 1152, 2039,
-1961, -1310, -985, -741, -578, -415, -253, -90, 72, 234, 397, 641, 966, 1617,
-2910, -2003, -1549, -1209, -982, -755, -529, -302, -75, 151, 377, 717, 1171, 2078,
};

static uint64_t bbox_head_multi_level_kps_1_conv1_weight[10 * 1*4] =
{ // torch.Size([10, 1, 1, 64])
0xcca3231131a95121,0xc4a094b14142892b,0xb0bc5b22bc331028,0x25aab89092222b22, 
0xbaa2198324cba21a,0x2c261a143919e2ad,0xacab1102a83aaa40,0x2c01b9c891231233, 
0x52a99c13a0b9c020,0x4b214241aa0bb2ab,0xbc35d0aaaa4b089a,0x340b32b8c28b1442, 
0xaa11238334cbb228,0x3c2590142929d29d,0xbc9b181ab93a0b48,0x2b80b9c88133a242, 
0x64a0ab819918e800,0x4b315d39b9c8a8a0,0x2015e29a000a1290,0x920929a8392ab321, 
0x3a2a822babb24003,0xb4ad012901b25223,0x2224bba12c13a2b9,0x048c314091bc21c0, 
0xdcb3882921b9591a,0xc3a933b03142122b,0xaa0b5b12ac33aa80,0x2493a88091b83a21, 
0x2810922999b22235,0xb59cb93a18aa5023,0x2024bbc2ac2312ab,0x32ad3239a22ca3b3, 
0x510a8a0398a8d223,0x4b1243302a3ab1bb,0xbb85e099aa3b228b,0x349c31b0c228a443, 
0xa20922a11139b9bd,0x4d2423b20032da9b,0xa2ab304a03ab2a32,0xb025bab12a140b3a, 
};

static int bbox_head_multi_level_kps_1_quant1_threshold[10 * 14] =
{ // torch.Size([10, 14])
-782, -475, -322, -207, -130, -53, 22, 99, 176, 252, 329, 444, 598, 904,
-1353, -859, -612, -427, -304, -181, -57, 65, 188, 312, 435, 620, 867, 1360,
-1158, -734, -522, -363, -257, -151, -45, 60, 166, 272, 378, 537, 749, 1173,
-1078, -681, -483, -334, -235, -136, -37, 62, 161, 260, 359, 508, 706, 1103,
-1120, -712, -508, -355, -253, -151, -50, 51, 153, 255, 357, 510, 714, 1122,
-987, -616, -431, -292, -199, -106, -14, 78, 171, 264, 356, 495, 681, 1052,
-779, -496, -355, -248, -178, -107, -36, 33, 104, 175, 246, 352, 493, 776,
-1319, -823, -575, -389, -265, -140, -16, 107, 231, 355, 479, 665, 913, 1410,
-1198, -745, -518, -348, -234, -121, -7, 105, 218, 332, 445, 615, 842, 1296,
-1270, -815, -587, -417, -303, -189, -75, 37, 151, 265, 379, 549, 777, 1232,
};

static uint64_t bbox_head_multi_level_kps_1_conv2_weight[10 * 9] =
{ // torch.Size([10, 3, 3, 1])
0xa, 0x4, 0x6, 0xa, 0x3, 0x5, 0x0, 0x3, 0x5, 
0x3, 0x4, 0x4, 0x5, 0x6, 0x5, 0x4, 0x1, 0x1, 
0xa, 0xc, 0xe, 0x1, 0xd, 0xe, 0xa, 0xb, 0xd, 
0x3, 0x4, 0x3, 0x4, 0x6, 0x6, 0x3, 0x2, 0x2, 
0x1, 0xc, 0xe, 0x2, 0xc, 0xd, 0xa, 0xc, 0xd, 
0xb, 0xc, 0xc, 0xc, 0xe, 0xd, 0xb, 0x1, 0xa, 
0xa, 0x2, 0x5, 0x9, 0x3, 0x5, 0xb, 0x4, 0x5, 
0xb, 0xc, 0xb, 0xd, 0xe, 0xd, 0xb, 0xa, 0xb, 
0xa, 0xb, 0xd, 0x0, 0xc, 0xd, 0x2, 0xc, 0xd, 
0x3, 0x4, 0x4, 0x4, 0x6, 0x5, 0x3, 0x2, 0x3, 
};

static int bbox_head_multi_level_kps_1_quant2_threshold[10 * 14] =
{ // torch.Size([10, 14])
-3829, -2270, -1490, -906, -516, -126, 263, 653, 1042, 1432, 1822, 2406, 3186, 4745,
-3360, -1957, -1255, -729, -378, -27, 322, 673, 1024, 1375, 1726, 2252, 2953, 4356,
-4915, -3275, -2455, -1839, -1429, -1019, -609, -199, 210, 620, 1030, 1645, 2465, 4106,
-3586, -2082, -1330, -766, -390, -14, 360, 736, 1112, 1488, 1864, 2428, 3180, 4683,
-3733, -2357, -1669, -1153, -809, -465, -121, 222, 566, 910, 1254, 1770, 2458, 3834,
-3686, -2356, -1691, -1193, -860, -528, -195, 136, 468, 801, 1133, 1632, 2297, 3626,
-3883, -2335, -1562, -981, -594, -208, 178, 565, 952, 1339, 1726, 2306, 3079, 4627,
-4218, -2865, -2189, -1681, -1343, -1005, -666, -328, 9, 347, 686, 1193, 1870, 3223,
-3209, -2119, -1574, -1165, -893, -620, -348, -75, 196, 469, 741, 1150, 1695, 2785,
-3713, -2514, -1914, -1464, -1165, -865, -565, -265, 33, 333, 633, 1083, 1682, 2881,
};

static uint64_t bbox_head_multi_level_kps_2_conv1_weight[10 * 1*4] =
{ // torch.Size([10, 1, 1, 64])
0x1b231d3b4b3d0520,0xaaa20199203c3a39,0xcb989b0a112b2814,0xc4ca1823949402c1, 
0x21209acdcd0a2a82,0x1212aa9424ad3b0b,0x804b24a2213a988a,0xb1a12332140baac2, 
0x023a95bbcbbd5d28,0x02129a2b22ac3888,0x22342912ba1193a4,0xcbab2229308c50c0, 
0x2a2abbad4d0b19a3,0x1b021a9424ad2b0a,0x20412531923b9a9a,0xb3992233240aa2c2, 
0x030ca681a0024eb9,0x100a191a090ba0b2,0x33348308a002993a,0x4ba8091b3c0c5b88, 
0x00bbbb8c1c14a0b9,0x3a0089a4a2adb91c,0x214bb62222020aab,0x2933a192140cb04a, 
0xaaab942343a50db1,0x1a1a2091aab4b0b3,0x5323a288a19491bc,0x4c40aaa12c2c203a, 
0x3b4c4032449d9b08,0xb099201b3b044984,0x19b42e18a2ac02a4,0xb1ab39319b14b2c0, 
0x2a2a852a5bbc4da1,0x0a830a1b22bc2900,0x41352339b12202a4,0xc8ac2931322c53b1, 
0xb2b3ca394ca513a2,0x2b0289a4c29cc00c,0x323ab6a90814192b,0x3033b9b2139c304a, 
};

static int bbox_head_multi_level_kps_2_quant1_threshold[10 * 14] =
{ // torch.Size([10, 14])
-921, -588, -421, -296, -213, -130, -46, 36, 119, 203, 286, 411, 577, 911,
-864, -561, -409, -295, -219, -143, -68, 7, 83, 159, 235, 349, 501, 804,
-1041, -667, -480, -339, -246, -152, -59, 34, 127, 221, 314, 454, 641, 1015,
-883, -557, -394, -271, -190, -108, -27, 54, 135, 217, 298, 420, 584, 910,
-942, -597, -424, -295, -208, -122, -36, 50, 136, 222, 309, 438, 611, 956,
-984, -627, -448, -314, -225, -136, -46, 42, 131, 220, 310, 444, 622, 979,
-837, -526, -371, -254, -177, -99, -21, 55, 133, 211, 289, 405, 560, 871,
-926, -579, -405, -275, -189, -102, -15, 71, 157, 244, 331, 461, 634, 981,
-967, -598, -414, -276, -183, -91, 0, 92, 185, 277, 369, 508, 692, 1061,
-933, -594, -425, -298, -213, -128, -44, 40, 125, 209, 294, 421, 591, 929,
};

static uint64_t bbox_head_multi_level_kps_2_conv2_weight[10 * 9] =
{ // torch.Size([10, 3, 3, 1])
0x4, 0x5, 0x5, 0x4, 0x5, 0x6, 0x4, 0x5, 0x5, 
0x5, 0x6, 0x5, 0x5, 0x5, 0x5, 0x5, 0x4, 0x4, 
0xd, 0xd, 0xd, 0xd, 0xd, 0xc, 0xd, 0xd, 0xc, 
0x5, 0x6, 0x6, 0x5, 0x5, 0x6, 0x4, 0x4, 0x5, 
0xc, 0xd, 0xc, 0xd, 0xe, 0xd, 0xc, 0xe, 0xd, 
0x4, 0x5, 0x5, 0x5, 0x6, 0x6, 0x4, 0x4, 0x4, 
0xc, 0xc, 0xc, 0xd, 0xd, 0xd, 0xc, 0xe, 0xd, 
0xc, 0xd, 0xc, 0xe, 0xd, 0xd, 0xc, 0xd, 0xd, 
0xc, 0xd, 0xc, 0xc, 0xe, 0xc, 0xd, 0xe, 0xd, 
0x5, 0x4, 0x5, 0x6, 0x6, 0x5, 0x4, 0x5, 0x5, 
};

static int bbox_head_multi_level_kps_2_quant2_threshold[10 * 14] =
{ // torch.Size([10, 14])
-4405, -2599, -1696, -1019, -568, -117, 334, 785, 1236, 1688, 2139, 2816, 3719, 5524,
-4619, -2743, -1805, -1101, -632, -163, 305, 774, 1243, 1712, 2181, 2885, 3823, 5699,
-5021, -3358, -2526, -1903, -1487, -1071, -656, -240, 175, 590, 1006, 1630, 2461, 4124,
-5912, -3521, -2325, -1428, -830, -232, 364, 962, 1560, 2158, 2756, 3653, 4848, 7240,
-5794, -3669, -2607, -1811, -1280, -748, -217, 313, 844, 1375, 1906, 2702, 3765, 5889,
-5907, -3805, -2754, -1965, -1440, -914, -389, 136, 662, 1187, 1713, 2501, 3552, 5654,
-4584, -2728, -1800, -1104, -640, -176, 287, 751, 1215, 1679, 2143, 2839, 3767, 5623,
-5795, -3907, -2963, -2255, -1783, -1311, -839, -366, 105, 577, 1049, 1757, 2701, 4589,
-5854, -3871, -2880, -2137, -1641, -1146, -650, -154, 340, 836, 1332, 2075, 3066, 5049,
-5505, -3712, -2815, -2142, -1694, -1246, -797, -349, 98, 547, 995, 1667, 2564, 4358,
};
