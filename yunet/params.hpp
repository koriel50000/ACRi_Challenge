static uint64_t backbone_model0_conv1_weight[16 * 9] =
{ // torch.Size([16, 3, 3, 3])
0x15d, 0xc6d, 0x05e, 0x06d, 0xd6d, 0xd6d, 0xc5e, 0xd6d, 0xc6a, 
0x55b, 0xc5c, 0x49d, 0xd3c, 0xe3b, 0xa53, 0xe44, 0xe33, 0xc44, 
0xd34, 0xd45, 0xd25, 0xd45, 0xe55, 0xe55, 0xc45, 0xd55, 0xd45, 
0x31b, 0x443, 0xa43, 0x54a, 0xdcc, 0xfdd, 0x542, 0x343, 0xc09, 
0x243, 0x9cb, 0xded, 0x555, 0x441, 0xddd, 0x454, 0x244, 0xacb, 
0x4c4, 0x4db, 0x4c1, 0x5c2, 0x5c3, 0x5cb, 0x5c0, 0x4c3, 0x4c3, 
0x344, 0x345, 0x454, 0xc3b, 0xc1b, 0xc3a, 0xcbb, 0xcbc, 0xd9b, 
0x2c5, 0xae4, 0x3eb, 0x5d5, 0x1e4, 0xce1, 0xbd5, 0x5d5, 0x5d5, 
0xc33, 0x2b4, 0x4b1, 0x410, 0x4cc, 0x4dd, 0x4bb, 0x5dd, 0x4de, 
0x3c9, 0x544, 0x544, 0x334, 0x0b3, 0x334, 0xa33, 0xeed, 0xedd, 
0xccc, 0xeed, 0xddd, 0x440, 0xc9b, 0x933, 0x544, 0x555, 0x554, 
0x512, 0x555, 0x554, 0xb90, 0x144, 0xb43, 0x332, 0xedd, 0xdcd, 
0xddd, 0xbdc, 0x454, 0xdde, 0xccc, 0x555, 0x393, 0x435, 0x454, 
0x344, 0x334, 0x434, 0xdee, 0xcdc, 0x454, 0xcdd, 0xbac, 0x534, 
0x454, 0x556, 0x456, 0x42a, 0x14c, 0x422, 0xced, 0xdfd, 0x9dd, 
0x455, 0x555, 0x444, 0x555, 0xa33, 0xbdd, 0x013, 0xddd, 0xeee, 
};

static int backbone_model0_relu1_threshold[16 * 7] =
{ // torch.Size([16, 7])
-126, 106, 339, 572, 922, 1389, 2322,
-860, -640, -419, -199, 130, 571, 1452,
-626, -189, 247, 685, 1341, 2215, 3965,
-901, -702, -502, -302, -3, 395, 1194,
-529, -356, -183, -10, 248, 593, 1284,
889, 1253, 1617, 1981, 2527, 3255, 4711,
234, 409, 585, 761, 1025, 1377, 2080,
-843, -573, -303, -33, 372, 912, 1992,
-1106, -767, -427, -87, 421, 1101, 2459,
-802, -593, -384, -174, 138, 557, 1394,
-662, -473, -284, -95, 188, 566, 1321,
-130, 169, 469, 770, 1220, 1820, 3021,
-597, -413, -229, -45, 230, 598, 1334,
-674, -501, -327, -154, 105, 452, 1146,
-496, -327, -159, 9, 262, 599, 1274,
-633, -462, -291, -120, 136, 478, 1162,
};

static uint64_t backbone_model0_conv2_conv1_weight[16 * 1] =
{ // torch.Size([16, 1, 1, 16])
0xb2c30ad12562e2d4, 
0x9b4bbb97416b0ed0, 
0xc4544d43cccdd040, 
0xcd95c5dc55443344, 
0xbccb10cdf1ca4cc9, 
0xc9a9b9c6c45bddd5, 
0x1410bacd535bddde, 
0x44cc4c54cdb450b3, 
0xccdac4da533543b9, 
0x22c13acc3363a666, 
0x54dd3d549bc4401b, 
0xdcdcd5c035254bcb, 
0xc356c3ccc11cd232, 
0xc5565c5ac1acc31b, 
0x54dd5b42a44553c1, 
0x663d5c5ad04cc4b3, 
};

static int backbone_model0_conv2_quant1_threshold[16 * 14] =
{ // torch.Size([16, 14])
-729, -504, -392, -308, -252, -196, -140, -84, -28, 28, 84, 168, 280, 504,
-676, -426, -301, -207, -144, -82, -19, 42, 105, 168, 230, 324, 449, 699,
-272, -173, -124, -87, -62, -37, -13, 11, 36, 60, 85, 122, 171, 270,
-522, -345, -256, -190, -145, -101, -57, -13, 31, 75, 119, 186, 274, 451,
-949, -729, -620, -537, -482, -427, -372, -318, -263, -208, -153, -71, 38, 258,
-580, -388, -292, -220, -172, -124, -76, -28, 19, 67, 115, 187, 284, 476,
-667, -475, -379, -308, -260, -212, -164, -116, -68, -20, 27, 99, 195, 386,
-342, -192, -117, -61, -23, 13, 51, 88, 126, 163, 201, 257, 332, 482,
-600, -419, -329, -261, -216, -171, -126, -81, -36, 9, 54, 121, 212, 392,
-355, -154, -53, 21, 71, 122, 172, 222, 273, 323, 373, 449, 549, 750,
-462, -270, -173, -101, -53, -5, 42, 91, 139, 187, 235, 307, 404, 596,
-575, -388, -295, -225, -178, -131, -84, -37, 8, 55, 102, 172, 266, 453,
-499, -324, -236, -171, -127, -83, -40, 3, 47, 90, 134, 200, 287, 462,
-494, -286, -182, -104, -52, 0, 51, 103, 155, 207, 259, 337, 441, 649,
-283, -153, -89, -40, -8, 24, 56, 88, 121, 153, 185, 234, 299, 428,
-566, -335, -220, -134, -77, -19, 37, 95, 152, 210, 267, 354, 469, 699,
};

static uint64_t backbone_model0_conv2_conv2_weight[16 * 9] =
{ // torch.Size([16, 3, 3, 1])
0x4, 0x3, 0x5, 0x3, 0xc, 0xd, 0x4, 0xd, 0xf, 
0x5, 0x5, 0x5, 0x5, 0xd, 0xd, 0x5, 0xd, 0xf, 
0xb, 0x6, 0x9, 0xd, 0x4, 0x6, 0xd, 0xd, 0x6, 
0x4, 0x5, 0x4, 0xc, 0xf, 0xf, 0x9, 0x1, 0x5, 
0x4, 0xa, 0x4, 0x3, 0xd, 0xd, 0xa, 0xd, 0xe, 
0xc, 0xd, 0xd, 0xc, 0x4, 0x5, 0x1, 0x6, 0x6, 
0xb, 0xc, 0xb, 0xb, 0x5, 0x5, 0x0, 0x6, 0x6, 
0x9, 0x3, 0x5, 0x4, 0x6, 0xe, 0x3, 0xe, 0xf, 
0x4, 0x5, 0x3, 0xc, 0x3, 0x6, 0xc, 0xf, 0xf, 
0x4, 0x2, 0x9, 0x4, 0xd, 0xe, 0x4, 0xe, 0xf, 
0xc, 0xd, 0xc, 0xc, 0xd, 0x5, 0xc, 0x6, 0x7, 
0x3, 0xc, 0xa, 0x5, 0x5, 0xe, 0x1, 0x7, 0x6, 
0x3, 0xc, 0xc, 0x5, 0xe, 0xc, 0x6, 0xe, 0x3, 
0x3, 0xd, 0xb, 0x4, 0x9, 0xf, 0x4, 0x5, 0xe, 
0x4, 0x0, 0xd, 0x5, 0xd, 0xd, 0x5, 0xf, 0x4, 
0x4, 0x4, 0x0, 0xd, 0xf, 0xe, 0xc, 0xb, 0xb, 
};

static int backbone_model0_conv2_relu2_threshold[16 * 7] =
{ // torch.Size([16, 7])
-210, -126, -42, 41, 167, 336, 672,
-123, -63, -3, 56, 146, 266, 506,
0, 108, 218, 327, 492, 711, 1150,
-70, 41, 153, 265, 433, 657, 1105,
-82, -27, 26, 81, 162, 271, 488,
-99, -42, 14, 71, 157, 271, 498,
-163, -89, -16, 57, 168, 316, 612,
54, 145, 236, 327, 464, 646, 1010,
15, 125, 235, 345, 510, 730, 1169,
-38, 76, 192, 307, 480, 711, 1173,
24, 103, 182, 260, 378, 536, 850,
17, 123, 228, 334, 493, 704, 1128,
90, 162, 233, 305, 413, 557, 844,
10, 80, 149, 218, 322, 461, 738,
2, 103, 205, 306, 457, 660, 1064,
-212, -102, 7, 117, 282, 501, 941,
};

static uint64_t backbone_model1_conv1_conv1_weight[16 * 1] =
{ // torch.Size([16, 1, 1, 16])
0xce5545abd2bb4cb4, 
0xcb02aa6dc24322eb, 
0x7bbc44b5c04baa4b, 
0xd954bd1de334f51b, 
0x0babccb0b55d2d3e, 
0xd2d34c4adac346c5, 
0xba732d06d443a34a, 
0x34b13453265a4aec, 
0x23431ccba3eda353, 
0x9a3ab0bc05599a4e, 
0xcac2b4c34cd44b96, 
0x35a3b42f6031cdab, 
0xc4c3f63b444a0d42, 
0xb667c4ac4aa1b5ba, 
0x192a24b435d7a16c, 
0xab3b997c17d5b92c, 
};

static int backbone_model1_conv1_quant1_threshold[16 * 14] =
{ // torch.Size([16, 14])
-502, -331, -245, -181, -138, -96, -53, -10, 32, 74, 117, 181, 267, 437,
-715, -493, -382, -298, -243, -187, -132, -76, -21, 34, 89, 172, 283, 505,
-415, -203, -97, -17, 35, 89, 142, 195, 248, 301, 354, 434, 540, 753,
-1079, -764, -606, -488, -410, -331, -252, -174, -95, -16, 61, 179, 337, 651,
-691, -481, -376, -297, -244, -192, -139, -87, -34, 17, 70, 149, 254, 464,
-436, -270, -187, -125, -83, -41, 0, 41, 82, 124, 165, 228, 311, 477,
-522, -258, -126, -27, 38, 104, 170, 236, 302, 368, 434, 534, 666, 930,
-485, -253, -136, -49, 8, 66, 124, 183, 241, 299, 357, 444, 561, 793,
-644, -439, -337, -260, -209, -158, -107, -56, -5, 45, 96, 173, 275, 479,
-587, -387, -287, -212, -162, -112, -62, -12, 37, 87, 137, 212, 312, 512,
-501, -289, -183, -103, -50, 2, 56, 109, 162, 215, 268, 348, 454, 667,
-550, -359, -264, -192, -144, -97, -49, -1, 45, 93, 141, 212, 308, 499,
-588, -385, -283, -207, -156, -105, -54, -4, 46, 97, 148, 224, 326, 529,
-601, -303, -154, -42, 32, 106, 181, 255, 330, 404, 479, 591, 740, 1038,
-363, -132, -16, 70, 128, 185, 243, 301, 359, 417, 474, 561, 677, 908,
-572, -293, -153, -48, 20, 90, 160, 230, 300, 370, 440, 544, 684, 963,
};

static uint64_t backbone_model1_conv1_conv2_weight[16 * 9] =
{ // torch.Size([16, 3, 3, 1])
0xb, 0x3, 0xb, 0x4, 0xe, 0xb, 0xc, 0xe, 0x5, 
0xc, 0x3, 0x2, 0x0, 0xf, 0xa, 0x1, 0xc, 0x4, 
0x2, 0x1, 0x2, 0x3, 0x3, 0xa, 0x4, 0xd, 0xf, 
0x0, 0xc, 0x1, 0x2, 0xd, 0x2, 0x3, 0xf, 0xd, 
0xc, 0x1, 0x4, 0xd, 0x4, 0x6, 0xd, 0xb, 0x2, 
0x3, 0x9, 0x3, 0x4, 0x1, 0xb, 0xb, 0x7, 0x0, 
0x0, 0x9, 0xb, 0xc, 0x4, 0x1, 0xa, 0x3, 0x7, 
0x4, 0x3, 0xc, 0xc, 0x7, 0xb, 0xb, 0x0, 0xb, 
0x4, 0x5, 0x5, 0x4, 0xa, 0xb, 0xb, 0xd, 0xd, 
0x4, 0x6, 0x4, 0x4, 0xc, 0x1, 0xc, 0xd, 0xc, 
0x1, 0x2, 0x3, 0xb, 0x6, 0x4, 0x0, 0xc, 0xd, 
0x3, 0x9, 0x2, 0xc, 0x6, 0x6, 0xb, 0x4, 0x1, 
0xb, 0x1, 0xb, 0x3, 0xd, 0xf, 0xb, 0xb, 0xa, 
0x0, 0x9, 0xa, 0x9, 0x4, 0x7, 0xb, 0x1, 0x4, 
0xa, 0xa, 0xb, 0xb, 0x5, 0xa, 0xb, 0x6, 0x4, 
0x3, 0x3, 0x3, 0x0, 0xc, 0x3, 0x3, 0xf, 0xc, 
};

static int backbone_model1_conv1_relu2_threshold[16 * 7] =
{ // torch.Size([16, 7])
-192, -123, -53, 15, 119, 258, 535,
-233, -141, -48, 43, 181, 366, 735,
-220, -140, -61, 18, 138, 298, 618,
-191, -107, -23, 60, 187, 355, 691,
-99, -49, 1, 51, 127, 228, 431,
-240, -160, -79, 0, 121, 282, 604,
-138, -67, 3, 74, 181, 323, 608,
-157, -90, -24, 42, 143, 277, 544,
51, 73, 95, 117, 151, 195, 284,
-46, -10, 26, 63, 118, 191, 337,
-39, -8, 23, 54, 101, 164, 290,
-254, -179, -104, -29, 82, 232, 532,
-294, -199, -104, -10, 131, 320, 698,
-157, -77, 2, 82, 202, 363, 683,
-111, -62, -13, 35, 109, 207, 403,
-201, -120, -39, 41, 162, 323, 646,
};

static uint64_t backbone_model1_conv2_conv1_weight[64 * 1] =
{ // torch.Size([64, 1, 1, 16])
0x303236a3dcac3d93, 
0xccc1cc944a239cec, 
0x10f2c1cc4cc43343, 
0xab5d44cdcc30dcca, 
0x1b9d54ab9eec5abc, 
0x0b40a442bbdcde24, 
0x251142a45b2111e9, 
0x1329035a143b6dbb, 
0x56443d42a5314c5b, 
0xd0c5c4ad4d4d5cdc, 
0x6d9aa2aae223bcbb, 
0xa045c4c4c642d554, 
0x414b24bcecaa0369, 
0x544ace594451252d, 
0x30a66543c49c5c53, 
0x3254522199edbd13, 
0x6d42a23243b3cac9, 
0xb42d51355cdc54b4, 
0xcb0254d5c3a42eb5, 
0x925d4dc302cc1335, 
0xd55acac45c412ad9, 
0xce445ddd4b40a5d2, 
0x444226c4ec43535c, 
0xdc9bbd4c6445c3c4, 
0xd1a45acc43b4fcc3, 
0xccc541d0c4eddb4c, 
0xc2499b5c75ab33c0, 
0xcc3dc565a99d444d, 
0xccd1edba455ac5cd, 
0x4025b334012e432e, 
0x42503ab4b466a247, 
0x64dc50c4da91e542, 
0x327c54cbcbb0c334, 
0xa9a1b03ca44b23de, 
0xbad954db1ec3dbcc, 
0x44ec4a53d42dccc2, 
0x432d325b3c563945, 
0xa2adec9a9b2c32cb, 
0xdc5443cc4a4dbbcd, 
0x566bbc4145554b5c, 
0x20cd405c4303443c, 
0xbc0ceb3abbcbaf39, 
0x3da5d05235a46d42, 
0x41c4cc3dc355f3c3, 
0x65e3c3421ac44954, 
0x442c2034c33bf2bb, 
0x246d2e2c241cc9b4, 
0xdcb343dc44ecdeb5, 
0xddbaca4c66d33333, 
0xc605d4bcd44cccc4, 
0x3a556ce04b1c43b2, 
0x33999eb463bbc3e4, 
0x404e54043cd23643, 
0xdec333cb3c54bbd4, 
0xee44b54c54005e34, 
0xab3b333cbbdd132e, 
0xb130332532c46d55, 
0x9337ccccb61c1c33, 
0xabcdd365cc652c24, 
0x65425c5526dbd454, 
0x35b3b9454542d543, 
0x49e62bd545334b44, 
0x934dcd534d2e359d, 
0x13d35bc43de15c24, 
};

static int backbone_model1_conv2_quant1_threshold[64 * 14] =
{ // torch.Size([64, 14])
-656, -414, -293, -202, -142, -81, -21, 39, 99, 160, 221, 311, 432, 674,
-923, -675, -550, -457, -395, -333, -271, -209, -147, -85, -22, 70, 194, 442,
-1178, -804, -617, -477, -383, -290, -196, -103, -9, 83, 177, 317, 504, 878,
-671, -468, -366, -290, -239, -189, -138, -87, -36, 13, 64, 140, 242, 445,
-954, -684, -549, -448, -380, -313, -245, -178, -110, -43, 23, 125, 260, 529,
-741, -532, -427, -349, -296, -244, -192, -140, -87, -35, 16, 95, 199, 408,
-562, -344, -235, -153, -99, -44, 10, 64, 119, 173, 228, 309, 419, 637,
-590, -351, -232, -142, -82, -22, 36, 96, 156, 216, 276, 365, 485, 724,
-562, -276, -134, -26, 44, 115, 187, 258, 330, 401, 472, 580, 722, 1008,
-1063, -734, -569, -445, -363, -281, -198, -116, -33, 48, 130, 254, 419, 748,
-864, -575, -430, -322, -250, -178, -105, -33, 38, 110, 183, 291, 435, 724,
-505, -254, -129, -35, 26, 89, 152, 214, 277, 340, 402, 496, 621, 872,
-724, -446, -307, -202, -133, -63, 5, 75, 144, 214, 283, 387, 526, 804,
-1135, -747, -553, -407, -310, -213, -116, -19, 77, 174, 271, 417, 611, 999,
-388, -149, -29, 60, 120, 180, 240, 300, 360, 420, 480, 570, 689, 929,
-741, -497, -376, -284, -223, -162, -102, -41, 19, 80, 141, 232, 354, 598,
-533, -321, -215, -135, -82, -29, 24, 77, 130, 183, 236, 316, 422, 635,
-612, -381, -265, -178, -120, -63, -5, 52, 110, 168, 225, 312, 428, 659,
-646, -413, -297, -210, -152, -94, -35, 22, 80, 138, 196, 283, 400, 632,
-529, -327, -227, -151, -101, -51, 0, 49, 100, 150, 200, 276, 376, 578,
-780, -512, -378, -278, -211, -144, -77, -10, 56, 123, 190, 290, 424, 692,
-727, -459, -324, -224, -156, -89, -22, 44, 111, 179, 246, 346, 481, 750,
-723, -399, -237, -116, -35, 45, 126, 207, 288, 368, 449, 571, 732, 1056,
-882, -558, -397, -275, -194, -114, -33, 47, 128, 209, 290, 411, 573, 897,
-870, -572, -423, -312, -237, -163, -88, -14, 59, 134, 208, 320, 469, 767,
-913, -635, -496, -392, -322, -253, -183, -114, -45, 24, 93, 198, 337, 615,
-607, -352, -224, -129, -65, -1, 62, 126, 190, 253, 317, 413, 541, 796,
-667, -438, -324, -238, -181, -124, -66, -9, 47, 104, 161, 247, 362, 590,
-846, -582, -450, -351, -285, -219, -153, -87, -21, 44, 110, 209, 341, 605,
-843, -571, -435, -333, -265, -197, -129, -61, 6, 74, 142, 244, 380, 652,
-350, -90, 38, 136, 201, 265, 330, 395, 460, 525, 590, 687, 817, 1076,
-616, -340, -202, -98, -29, 39, 108, 176, 245, 314, 383, 487, 625, 901,
-636, -357, -218, -114, -44, 25, 94, 164, 234, 304, 373, 478, 617, 896,
-699, -486, -379, -299, -246, -192, -139, -85, -32, 20, 74, 154, 260, 474,
-805, -559, -437, -344, -283, -222, -160, -99, -38, 23, 84, 176, 299, 544,
-768, -522, -399, -307, -246, -184, -123, -61, 0, 60, 122, 214, 337, 582,
-506, -236, -101, 0, 67, 134, 202, 269, 336, 404, 471, 573, 708, 977,
-682, -510, -423, -359, -315, -272, -229, -186, -143, -99, -56, 8, 94, 267,
-718, -487, -371, -285, -227, -169, -112, -54, 3, 61, 118, 205, 320, 551,
-598, -269, -105, 17, 100, 182, 264, 346, 428, 510, 592, 716, 880, 1209,
-463, -274, -180, -109, -61, -14, 32, 79, 126, 174, 221, 292, 386, 575,
-1060, -804, -676, -580, -516, -452, -388, -324, -260, -196, -132, -35, 92, 348,
-842, -499, -328, -199, -114, -28, 57, 142, 228, 314, 399, 528, 699, 1042,
-811, -507, -355, -240, -164, -88, -12, 63, 139, 215, 291, 405, 558, 862,
-578, -309, -174, -73, -6, 60, 128, 195, 262, 330, 397, 498, 632, 902,
-1257, -849, -645, -492, -389, -287, -185, -83, 18, 120, 222, 375, 580, 988,
-740, -487, -360, -265, -202, -139, -75, -12, 50, 114, 177, 272, 399, 652,
-960, -683, -545, -441, -372, -303, -234, -165, -96, -27, 41, 145, 283, 560,
-1083, -671, -465, -310, -207, -104, -1, 101, 204, 307, 410, 565, 771, 1183,
-788, -498, -353, -244, -171, -99, -26, 45, 118, 191, 263, 372, 517, 807,
-716, -417, -268, -156, -81, -6, 67, 142, 217, 291, 366, 478, 627, 926,
-986, -660, -498, -376, -295, -213, -132, -51, 30, 111, 192, 314, 477, 802,
-584, -338, -215, -123, -61, 0, 61, 122, 184, 245, 307, 399, 522, 768,
-1051, -732, -572, -452, -372, -292, -212, -132, -52, 27, 107, 226, 386, 706,
-987, -629, -450, -316, -226, -136, -47, 42, 131, 221, 310, 445, 624, 982,
-735, -535, -435, -360, -310, -260, -210, -160, -110, -60, -10, 65, 165, 365,
-649, -386, -254, -155, -89, -23, 42, 107, 173, 239, 305, 404, 536, 799,
-754, -411, -240, -111, -25, 60, 145, 231, 317, 403, 488, 617, 789, 1132,
-855, -521, -355, -229, -146, -63, 20, 103, 186, 270, 353, 478, 645, 978,
-524, -240, -98, 8, 79, 150, 221, 292, 363, 434, 505, 611, 753, 1037,
-362, -151, -46, 32, 84, 137, 190, 242, 295, 347, 400, 479, 584, 794,
-486, -242, -119, -28, 32, 93, 154, 215, 276, 337, 398, 490, 612, 856,
-801, -545, -417, -322, -258, -194, -130, -66, -2, 61, 125, 220, 348, 604,
-666, -437, -323, -237, -180, -122, -65, -8, 48, 106, 163, 249, 363, 592,
};

static uint64_t backbone_model1_conv2_conv2_weight[64 * 9] =
{ // torch.Size([64, 3, 3, 1])
0xc, 0xa, 0x4, 0xd, 0xd, 0x6, 0xc, 0x4, 0x4, 
0x6, 0x5, 0x5, 0x5, 0xb, 0x9, 0xd, 0xd, 0xd, 
0x4, 0xd, 0x9, 0x4, 0xd, 0x2, 0x9, 0xe, 0x3, 
0x5, 0xb, 0xd, 0x6, 0xb, 0xd, 0x5, 0x1, 0xa, 
0xd, 0x4, 0x4, 0x9, 0xe, 0x5, 0x4, 0x0, 0xd, 
0x5, 0x6, 0x5, 0xd, 0xe, 0xd, 0x4, 0x4, 0x3, 
0xd, 0xb, 0x5, 0xe, 0x2, 0x5, 0xd, 0x3, 0x5, 
0xc, 0x0, 0xd, 0xc, 0x3, 0x5, 0xb, 0x5, 0x6, 
0x4, 0x2, 0xc, 0x5, 0x6, 0xc, 0xc, 0xb, 0xc, 
0x3, 0xc, 0xb, 0x1, 0xc, 0xa, 0xd, 0xd, 0xc, 
0xd, 0xe, 0xe, 0xc, 0xd, 0xc, 0x5, 0x6, 0x5, 
0xd, 0xc, 0xa, 0xb, 0xe, 0x4, 0x1, 0xd, 0xa, 
0x0, 0x5, 0x6, 0x9, 0xc, 0x5, 0xd, 0xe, 0xd, 
0xc, 0xe, 0x1, 0xc, 0x3, 0xc, 0xa, 0x5, 0x2, 
0x3, 0x4, 0x2, 0x2, 0x4, 0x3, 0xc, 0xf, 0x9, 
0xa, 0xa, 0x1, 0xa, 0xc, 0xe, 0x2, 0x5, 0x5, 
0x5, 0x6, 0x5, 0x1, 0x3, 0x2, 0xd, 0xd, 0xc, 
0x3, 0x2, 0x3, 0x9, 0xb, 0xd, 0x4, 0xd, 0xe, 
0x9, 0xa, 0x3, 0xb, 0xa, 0x5, 0x4, 0x7, 0xc, 
0xd, 0xc, 0x3, 0xd, 0x5, 0xb, 0x2, 0x6, 0xd, 
0x5, 0x6, 0x3, 0x4, 0x5, 0x1, 0xd, 0xc, 0xd, 
0x4, 0xc, 0x5, 0x4, 0x6, 0x3, 0xc, 0x3, 0xd, 
0x3, 0x3, 0x9, 0xa, 0x5, 0xc, 0x9, 0x6, 0x9, 
0xb, 0x4, 0x6, 0xd, 0x4, 0x6, 0xe, 0xd, 0x9, 
0xa, 0x5, 0x4, 0x9, 0x7, 0x4, 0x3, 0xc, 0xd, 
0x3, 0xb, 0xa, 0x4, 0x6, 0x5, 0xc, 0xb, 0x5, 
0xe, 0xd, 0xc, 0xd, 0xd, 0xc, 0xb, 0x6, 0x6, 
0xb, 0xc, 0x1, 0xc, 0xc, 0x5, 0x5, 0x6, 0xa, 
0xc, 0x2, 0x0, 0xc, 0xc, 0x5, 0xa, 0x5, 0x6, 
0xc, 0xd, 0x2, 0xc, 0xe, 0x4, 0xa, 0xc, 0x4, 
0x3, 0xa, 0xc, 0x9, 0xc, 0xf, 0xb, 0x3, 0xc, 
0xd, 0xc, 0x6, 0xd, 0xc, 0x5, 0xd, 0xc, 0x5, 
0xa, 0xb, 0x3, 0xc, 0xb, 0x3, 0xe, 0xe, 0x4, 
0xb, 0xb, 0x5, 0xd, 0x6, 0x1, 0xb, 0x5, 0xd, 
0xa, 0xc, 0xb, 0x1, 0x4, 0xc, 0x4, 0x7, 0x5, 
0xd, 0xc, 0xc, 0xd, 0xb, 0x4, 0xb, 0x5, 0x5, 
0xd, 0x2, 0x4, 0xd, 0xd, 0x5, 0x4, 0xd, 0xb, 
0xd, 0xc, 0x2, 0x6, 0x6, 0x3, 0xc, 0xd, 0x0, 
0x4, 0xc, 0x4, 0x3, 0x5, 0x5, 0xd, 0xc, 0x5, 
0x5, 0x6, 0x1, 0x3, 0xc, 0x5, 0xd, 0xe, 0xb, 
0xd, 0xc, 0xd, 0x4, 0x2, 0xa, 0x5, 0x4, 0x3, 
0xa, 0xd, 0x2, 0x5, 0x6, 0x2, 0xc, 0xc, 0xb, 
0xd, 0xd, 0xc, 0x4, 0xc, 0xc, 0x6, 0x5, 0x0, 
0x4, 0xb, 0xd, 0x5, 0x5, 0xd, 0x5, 0x6, 0xd, 
0x4, 0x5, 0x3, 0x2, 0x2, 0xc, 0xc, 0xe, 0xd, 
0x4, 0xe, 0xe, 0x3, 0xc, 0xb, 0x4, 0x3, 0xd, 
0xb, 0xc, 0xb, 0xd, 0xd, 0xa, 0x9, 0xd, 0x4, 
0xa, 0x4, 0xb, 0xa, 0xc, 0xb, 0x5, 0x7, 0x4, 
0xb, 0x5, 0x5, 0x3, 0x4, 0x3, 0x3, 0x4, 0x5, 
0x3, 0x9, 0xc, 0x4, 0x9, 0xd, 0x4, 0xd, 0xe, 
0xc, 0xd, 0xb, 0xd, 0xd, 0xc, 0x5, 0x5, 0x0, 
0x4, 0x3, 0xd, 0x5, 0xc, 0xd, 0x6, 0xa, 0xd, 
0x4, 0xa, 0xc, 0x4, 0xc, 0xc, 0xd, 0xe, 0x4, 
0xd, 0xa, 0x4, 0xc, 0x6, 0x5, 0xe, 0x6, 0x6, 
0x3, 0x4, 0xa, 0xa, 0x6, 0x3, 0x9, 0x5, 0x3, 
0x4, 0x4, 0xc, 0xb, 0x6, 0xe, 0x3, 0x5, 0xd, 
0x4, 0xc, 0xe, 0x3, 0xb, 0xe, 0x4, 0x5, 0xc, 
0x4, 0xa, 0x3, 0xd, 0x4, 0x5, 0xf, 0xd, 0x5, 
0x4, 0x3, 0x1, 0x4, 0x4, 0xb, 0xc, 0x5, 0x6, 
0xc, 0x3, 0xc, 0x2, 0xc, 0xc, 0x2, 0xe, 0x1, 
0xd, 0xe, 0xc, 0x9, 0x4, 0x4, 0x2, 0x5, 0x5, 
0xb, 0xc, 0xb, 0x4, 0xc, 0xc, 0x4, 0x6, 0x4, 
0x3, 0x6, 0x4, 0x6, 0x9, 0xc, 0x3, 0xd, 0xa, 
0xb, 0xa, 0x9, 0x6, 0x6, 0xd, 0x9, 0xb, 0x3, 
};

static int backbone_model1_conv2_relu2_threshold[64 * 7] =
{ // torch.Size([64, 7])
8, 39, 71, 102, 148, 210, 335,
32, 77, 122, 167, 234, 324, 504,
-36, 6, 49, 92, 156, 242, 413,
21, 61, 101, 141, 201, 281, 442,
14, 46, 78, 109, 157, 221, 348,
25, 80, 135, 190, 272, 382, 602,
41, 68, 94, 120, 159, 212, 316,
3, 51, 99, 147, 219, 315, 507,
19, 59, 99, 139, 199, 279, 438,
0, 33, 65, 98, 147, 213, 343,
11, 82, 153, 224, 331, 473, 757,
-25, 23, 72, 122, 195, 294, 490,
31, 71, 112, 153, 214, 295, 458,
-75, -47, -19, 8, 50, 106, 218,
-44, 17, 78, 140, 232, 355, 601,
-23, 14, 52, 90, 147, 222, 374,
68, 105, 143, 181, 237, 313, 464,
-39, 12, 64, 116, 193, 297, 505,
1, 59, 116, 174, 260, 375, 605,
42, 76, 110, 143, 194, 261, 395,
59, 93, 127, 161, 211, 279, 415,
-50, 0, 49, 99, 173, 272, 471,
-21, 18, 59, 99, 160, 241, 403,
42, 99, 156, 213, 299, 413, 641,
-128, -55, 17, 89, 198, 344, 635,
-5, 31, 67, 104, 159, 233, 379,
-81, -5, 71, 148, 263, 416, 723,
48, 92, 137, 181, 248, 337, 515,
0, 56, 112, 169, 253, 366, 592,
-11, 30, 71, 113, 176, 259, 426,
-75, -3, 68, 140, 248, 392, 680,
6, 49, 92, 135, 199, 285, 457,
-83, -20, 41, 103, 196, 321, 570,
7, 47, 86, 126, 185, 264, 422,
-21, 44, 109, 174, 272, 403, 664,
-1, 42, 87, 132, 198, 287, 466,
22, 57, 93, 128, 181, 251, 392,
39, 89, 140, 190, 266, 367, 568,
11, 48, 86, 124, 180, 255, 406,
57, 88, 120, 151, 197, 259, 383,
25, 55, 86, 116, 162, 224, 346,
20, 55, 91, 126, 179, 250, 392,
20, 51, 82, 113, 160, 223, 348,
-14, 31, 76, 122, 191, 282, 465,
-9, 38, 85, 133, 204, 299, 489,
38, 91, 144, 197, 276, 382, 594,
-2, 32, 68, 104, 158, 230, 374,
-68, 7, 84, 160, 274, 427, 732,
41, 84, 126, 169, 233, 319, 490,
-48, 9, 66, 123, 209, 323, 552,
58, 98, 138, 179, 240, 320, 482,
36, 62, 88, 114, 153, 205, 309,
-87, -27, 31, 91, 180, 299, 538,
127, 185, 243, 300, 387, 503, 734,
27, 70, 113, 157, 222, 308, 482,
33, 83, 132, 182, 256, 354, 552,
-42, 2, 47, 93, 161, 251, 432,
-51, 11, 75, 138, 234, 361, 615,
-15, 17, 50, 83, 132, 198, 330,
-28, 17, 63, 109, 178, 271, 455,
38, 81, 123, 166, 230, 315, 485,
4, 39, 75, 110, 163, 234, 376,
31, 73, 114, 155, 217, 300, 465,
5, 43, 81, 119, 176, 252, 404,
};

static uint64_t backbone_model2_conv1_conv1_weight[64 * 1*4] =
{ // torch.Size([64, 1, 1, 64])
0x4b43451bd2dcc53c,0x3330da55545143d4,0xbbdba94eec1ce5b5,0xa545bccbbd4cedbb, 
0x4a54dcb094dd34ad,0x35cbca2a5dc4c5cd,0x3d1c453c35d46454,0x6ce22d56aab4c59c, 
0xbc505c5dbd2ca444,0xedc22311344b4cc3,0xcdd5c9c5b40292c4,0xc5dac913c9b3dbac, 
0x5552c4b5c402a94d,0x620db5459cc425cc,0x2441446451cb5634,0x5b5331559c433a54, 
0xb5c341432ab2c3d3,0xc5491bcd9b44444b,0xdb9b4e1c053c4c5d,0x4caf54cccdd4045b, 
0xdc45442245daaedd,0xbc0ddbacda2d434c,0x6c5dcecedb53444c,0x4c5dc44e4ac4c535, 
0x42bd5cbad443c466,0xb25cc45c4a4e0c05,0xb43543aa4c949cc4,0xdbbc4455bc43bc4d, 
0x4c5beb493e9d2ccd,0xb0bd42211bbcdcb5,0xc02c454ac6e43494,0xc0dcbc544b2ac2b3, 
0xddead1a66c4c4442,0xccc5acdcdcaccc6e,0x4a5c4cd94a1d6cbc,0xc5cbb9c0c4c60693, 
0xb455d35ccd1d4c54,0xcdbe29a4eb4c0db4,0x2b540d1c63463c44,0x05cd265415533c59, 
0x4533aa4b215d4d51,0xdb5dbb3ac44c5abe,0x3b2c14dd1a44c9c2,0xd53351ba644d232a, 
0x6545cd4edd1bb595,0xb0c9cca53b549cb4,0xc5d5335512bbb140,0x4555d4ccdc5cbe5d, 
0x54bb3ca6bb4edc54,0xe4c5ecc443c34d23,0x44b45c90c434c9a4,0xc53c93b4c2bcddb5, 
0xc455c549b54c55c2,0xcdb45cbc53949d1c,0x45b4b55c3d4cbc21,0x1465d43b33344c3c, 
0xd3dc4eddd4531c29,0xdc543d6bc4cbc439,0xb444d3cdccccde90,0xd450ccc4cccd5dcd, 
0xdb214b533445bc3b,0x5c3a42ccac43a255,0xbbddaccd4cc2d5c9,0x4d5b0949db252994, 
0xc30b1cc465522c5c,0x5ab4534dd9144a4e,0x2c5d45d50cbb55da,0xcb3c4a33b52246c2, 
0xcc935dd4c4ca1444,0xcbb4b95a345bbabc,0x5c11dac34ce4b2ba,0x3901b334d9bbab4d, 
0xa43a4cce5bcc435c,0x4a509b5dc3534b9c,0x3bccc4de400424c3,0x53d2b5ddd550cc24, 
0xccbc4bd3d4339c54,0xdc465b4a351b4b1a,0x44bbddbcdd4ccedb,0xd51b34ba242b3dbb, 
0x5c03b53dddd4c9a4,0x243d9c5b334434b6,0xddd14c2d54c3b144,0x3cba54c44b520d41, 
0xa13c45a4eccad46a,0xc54b144b6c4c44d5,0x5ac44d3b4345dc25,0x15d3c6b3c30a4d1b, 
0xacd99de594b3c344,0xb1d3d402dd4c054c,0x544cdade1bdbcdbc,0x1e50acb45b1c95bb, 
0x43c3441b5393d4db,0xc595bbc05a14d535,0xdedc44db393bac31,0x9b49540c3c0cc902, 
0x5045b53bd90c24bc,0x45d4e6ac4d4cda44,0xd4d5665c2bdc45bb,0x5254230a2d542c5c, 
0xb3c5c55cc34d6535,0x44c49cc5bcc2c54b,0x35434453da4d443a,0xc5541eb3dc42ca55, 
0x544cd429bcdc4c4c,0xb1d3bb019d4d349d,0xddd253b4d5e435b4,0xadde62243bb3c595, 
0x4cca0b4444d404cc,0x49d3c4c34ab2db95,0x43ed4c4cddc23322,0x1d2442b4ccb4c533, 
0x552c544bb4ce332a,0xa43cccaddd3c4b43,0xbcc353edc1cb14cc,0x44c95bcd5b4db490, 
0xdebdc5c55526ccb1,0x413d4b5b33c4bbc4,0x9adc9d453442d5b4,0x0cdbbad25db3c4c0, 
0x4c52db433dcb4c4d,0x4cd5b6d3cc324b34,0x39a5b6ad49d555c4,0x4636c54c15443b32, 
0xbdbccdc50d02cd65,0x4a5335cbcbd9bdb3,0xc54accd6d254bbdb,0xd9dd514c14cdd3b2, 
0x5c43a3935a4b2c41,0xd353424aa3c4ddc9,0x3ba54995b4bcc4da,0xd44c3c34c9ca4c13, 
0x03d30959cc1d3c5a,0xc455aadbc4cccd95,0x35ac3123c409abc3,0xe54d425544444a05, 
0x3453d3cb1c44443d,0xd3bcd43b4d24233d,0x5c5a445d35eabc52,0x4c2bd4b5c4ba41c1, 
0x4441dd15b433bb23,0xbcd9d554c5a4cdb9,0x46d22a54cb1cddbd,0xca24cdd5bb5c9cb4, 
0x533c4d433434dcc5,0x4511bb45b30b3524,0xc50cb115d35329bd,0x3d5d4bab4c9e2c3d, 
0x26ccda64415db134,0xb4d5b4a2c54d956c,0xb43cb4bdbcc9b253,0xad4b439dd4bca434, 
0x442bc2613dccc21b,0xcdb3c6c4459a3cb9,0x16da3ba5d5434ba1,0xe634cb3bda44d245, 
0xc53c45b3c034dd9c,0x4c4b6b0bdc34c424,0xc0cdbcce49c1cd3c,0x5dda22cc55ca5bb4, 
0xaebb21db3d404d5d,0x4ddc4949c9d5dacd,0x5c3d30d0433144d4,0x94d49bc354cab543, 
0x0b51c4cccae5dd6d,0xa450c1432cad4cc2,0xd1dc324dd35ecb56,0xbd0cdccd3e2bc5da, 
0xcc454d4b0ca54d34,0x4c2452c354d455c4,0xbc95ea05a51cc35c,0xc543cd34ebd53bc9, 
0x5b559d3dd3d54cdc,0x5cadb549e4b42ae5,0x2bd2d04b4d34c495,0x04d414ba5b23dc45, 
0x4c5bd452dbb35492,0x04d351bc42d6bcd2,0x53d5dc6453cbbd5a,0x53464042c115bb05, 
0x55b4bc5b4c2e3bcb,0x3dd3dcd455d29dbc,0xb5534ac5db53a4a9,0xdc3c313c5bdd3494, 
0x35b4435edd5d3d4a,0x3403dd9dcdcd535d,0x2c5b45dddc3544d0,0xc04c5a2d44ce4ba1, 
0x41195a3ddcc0d5a2,0xabc1c455cc5ebb46,0xd5eb39bcab0bb2d0,0xb45a022c5c5ddd5c, 
0xa5bb3dcd25b5b0c4,0x5559cc523423d53b,0xcbed34add4c445d3,0x1cac42c56c4c152b, 
0x430456560cac413c,0xd6bb15d36dc544c4,0x4d25533535d51144,0x04c413453ac39bbc, 
0xe4b4552d9354cccc,0x454ac5beddcdb4cd,0xdd51c3c5c94cb41b,0xa49caceddc2c3ecc, 
0x4cc11cc6cccc64c4,0xcb3d4145a0445b45,0x60adde3c2cb54d1c,0xd14b5664cb4bac55, 
0xc403bd60c333b9c0,0xd3205cbac94dbd91,0xd51ba5529193a1a2,0xc351d3a01cb544a0, 
0xbdcb5ddce6c4dda5,0x496ddd6bd34d3cdc,0x2ce3d4dddc44da1c,0xccd92cdc5bbcdddd, 
0xbdc15dcd3ab3c554,0xccd2d454c2ad4c32,0xad35dc35dc4c1cdc,0xa53c3cc3dd5cdd2d, 
0xb922bb53c4a3932c,0x2dc932bbb329bdc4,0xc6523042d2b42142,0x4345dab2c3a23442, 
0x2434d4bdd31c0d4d,0x554c455c434b34d9,0xccbc4414d434d5d5,0xdb5464cc4b2d2c31, 
0x3335514d149dd69a,0xc45d1d554b74c533,0x03a54b5d1ddba104,0x4559cb4bd264cdcc, 
0xb49295a534344cb2,0x54332c4cbd55c952,0x366d3b3b2cdc434a,0x5d9b4c2c54cd5414, 
0x4c22d4c54dad5d5d,0x435b54cbd5d45cb3,0x4a3bdcb34544a443,0x9cccc9b1e5e434d4, 
0x5565d351cdcbbc4c,0x555d5ac95baa3635,0xda4b59b5b5d54526,0x4c4c5543ccb4bb64, 
0x5a34ed4c9eda3bdb,0xcbcd2a93bd242b2c,0xd39c4b43c6d444c1,0xc992b045353ac659, 
0x5e253cdac4d4dc54,0x5b4bd3543db163dc,0x2db4dac15c5ab5ac,0xaa5cccc4cdc4cdae, 
0x5ccacad4b9bec4cb,0x3bc53cc2b42b3dd3,0x9640c1d13423554b,0x54bcd2bc44abc4ab, 
};

static int backbone_model2_conv1_quant1_threshold[64 * 14] =
{ // torch.Size([64, 14])
-1064, -722, -552, -424, -338, -253, -168, -82, 2, 88, 173, 301, 472, 813,
-1288, -862, -649, -490, -383, -277, -170, -64, 41, 148, 254, 414, 627, 1053,
-930, -630, -480, -368, -293, -217, -142, -67, 7, 82, 157, 269, 419, 720,
-717, -366, -191, -59, 28, 116, 204, 291, 379, 467, 555, 686, 862, 1213,
-1034, -677, -498, -364, -274, -185, -96, -6, 82, 172, 261, 395, 574, 932,
-975, -671, -519, -405, -329, -253, -176, -100, -24, 51, 127, 241, 393, 697,
-1106, -707, -507, -357, -257, -157, -57, 42, 142, 242, 342, 492, 692, 1091,
-1096, -716, -526, -384, -289, -194, -99, -4, 90, 185, 280, 422, 612, 992,
-1307, -868, -649, -485, -375, -266, -156, -46, 62, 172, 281, 446, 665, 1103,
-933, -601, -435, -310, -227, -144, -61, 21, 104, 187, 270, 395, 561, 894,
-1113, -752, -572, -437, -347, -256, -166, -76, 13, 103, 193, 329, 509, 870,
-930, -580, -406, -275, -187, -100, -12, 74, 161, 249, 336, 467, 642, 992,
-1007, -647, -468, -333, -243, -153, -63, 26, 116, 206, 296, 431, 610, 970,
-593, -347, -224, -132, -71, -9, 51, 112, 174, 235, 297, 389, 512, 757,
-1142, -789, -613, -481, -392, -304, -216, -128, -40, 48, 136, 268, 444, 797,
-631, -390, -270, -180, -120, -59, 0, 60, 120, 180, 240, 331, 451, 692,
-874, -511, -330, -193, -103, -12, 78, 169, 259, 350, 441, 577, 758, 1121,
-819, -556, -425, -326, -261, -195, -129, -63, 1, 67, 133, 231, 363, 626,
-1052, -709, -538, -409, -323, -238, -152, -66, 19, 104, 190, 319, 490, 833,
-1220, -812, -607, -454, -352, -250, -148, -46, 55, 157, 260, 413, 617, 1026,
-834, -527, -374, -259, -183, -106, -30, 46, 123, 199, 276, 391, 544, 850,
-1049, -624, -412, -253, -147, -41, 64, 170, 276, 382, 488, 647, 859, 1283,
-1084, -770, -614, -496, -417, -339, -261, -182, -104, -25, 52, 170, 327, 640,
-847, -537, -383, -267, -190, -112, -35, 41, 119, 196, 273, 389, 544, 853,
-890, -492, -293, -144, -45, 54, 153, 253, 352, 451, 551, 700, 899, 1297,
-867, -510, -332, -198, -108, -19, 69, 159, 248, 337, 426, 560, 739, 1096,
-970, -621, -447, -316, -229, -142, -55, 32, 119, 206, 293, 424, 598, 947,
-872, -579, -433, -323, -250, -177, -104, -31, 42, 115, 188, 298, 444, 736,
-1046, -703, -532, -403, -318, -232, -146, -61, 24, 110, 195, 324, 495, 838,
-889, -566, -405, -284, -203, -122, -42, 38, 119, 200, 280, 401, 563, 886,
-904, -517, -323, -177, -81, 15, 112, 209, 306, 403, 500, 645, 839, 1227,
-1039, -667, -481, -342, -249, -156, -63, 29, 122, 215, 308, 447, 633, 1005,
-606, -381, -268, -184, -128, -71, -15, 40, 97, 153, 209, 294, 406, 632,
-846, -522, -360, -238, -157, -76, 4, 85, 166, 247, 328, 450, 612, 936,
-1012, -661, -485, -353, -265, -178, -90, -2, 85, 172, 260, 392, 568, 919,
-977, -613, -432, -296, -205, -114, -23, 67, 157, 248, 339, 475, 657, 1020,
-954, -577, -389, -247, -153, -59, 35, 129, 223, 317, 412, 553, 742, 1119,
-755, -455, -305, -193, -118, -43, 31, 106, 180, 255, 330, 443, 592, 892,
-901, -537, -355, -218, -127, -36, 54, 145, 236, 327, 418, 555, 737, 1101,
-905, -594, -439, -322, -245, -167, -90, -12, 65, 142, 220, 337, 492, 803,
-941, -638, -487, -373, -297, -221, -146, -70, 5, 81, 156, 270, 422, 725,
-1035, -693, -521, -393, -307, -222, -136, -50, 34, 120, 206, 334, 505, 848,
-777, -443, -277, -152, -68, 14, 97, 181, 264, 347, 431, 556, 722, 1055,
-1098, -715, -523, -379, -283, -187, -91, 4, 100, 196, 292, 436, 628, 1011,
-1074, -611, -379, -205, -90, 25, 141, 257, 373, 489, 604, 778, 1010, 1473,
-899, -589, -434, -317, -240, -162, -85, -7, 69, 147, 225, 341, 496, 807,
-1066, -718, -544, -414, -327, -240, -153, -66, 20, 107, 194, 324, 498, 846,
-1042, -695, -522, -391, -305, -218, -131, -44, 41, 128, 215, 345, 519, 866,
-1047, -665, -474, -330, -235, -139, -44, 51, 146, 242, 337, 480, 671, 1053,
-786, -421, -239, -102, -11, 79, 170, 261, 352, 444, 535, 671, 854, 1218,
-1136, -731, -529, -377, -276, -175, -73, 27, 128, 229, 331, 483, 685, 1090,
-974, -609, -427, -290, -199, -108, -17, 73, 164, 255, 346, 483, 665, 1030,
-752, -459, -312, -202, -129, -55, 17, 90, 164, 237, 310, 420, 567, 861,
-1539, -1083, -855, -684, -570, -456, -342, -228, -114, -1, 112, 283, 511, 967,
-934, -637, -488, -376, -302, -227, -153, -78, -4, 69, 144, 256, 404, 702,
-500, -280, -171, -88, -33, 21, 76, 131, 185, 240, 295, 378, 488, 707,
-813, -498, -340, -222, -143, -64, 14, 93, 172, 251, 330, 448, 606, 921,
-956, -593, -412, -275, -185, -94, -3, 87, 178, 268, 359, 495, 677, 1040,
-645, -356, -212, -104, -32, 39, 111, 183, 255, 327, 399, 507, 651, 940,
-928, -603, -441, -319, -238, -156, -75, 5, 86, 167, 248, 370, 533, 857,
-665, -326, -157, -30, 54, 138, 223, 308, 393, 477, 562, 689, 858, 1197,
-1115, -727, -533, -387, -290, -193, -96, 0, 97, 194, 291, 437, 631, 1019,
-1052, -687, -505, -368, -276, -185, -94, -2, 88, 179, 270, 407, 590, 955,
-677, -435, -314, -223, -163, -102, -42, 18, 78, 139, 199, 290, 411, 653,
};

static uint64_t backbone_model2_conv1_conv2_weight[64 * 9] =
{ // torch.Size([64, 3, 3, 1])
0x5, 0xb, 0xc, 0x6, 0x3, 0x1, 0x6, 0x5, 0xb, 
0xc, 0x4, 0xc, 0xd, 0xe, 0x4, 0x4, 0xe, 0x5, 
0xd, 0xd, 0xd, 0x4, 0x4, 0x5, 0x4, 0x4, 0x5, 
0x3, 0xa, 0xb, 0xb, 0xe, 0xd, 0x4, 0xd, 0x1, 
0x3, 0x3, 0x4, 0x4, 0x5, 0x5, 0x4, 0x6, 0x4, 
0x9, 0x9, 0x1, 0x4, 0xd, 0x3, 0x2, 0x4, 0x7, 
0x5, 0xc, 0xd, 0x5, 0xc, 0xd, 0x5, 0xd, 0xd, 
0x5, 0x0, 0xd, 0x5, 0x4, 0xe, 0x6, 0x4, 0xd, 
0x1, 0xc, 0xb, 0x4, 0xe, 0xf, 0x3, 0x3, 0x2, 
0xb, 0x1, 0x2, 0x4, 0xa, 0xd, 0xd, 0xc, 0xf, 
0x3, 0xe, 0xd, 0x4, 0xd, 0xd, 0x6, 0x5, 0xb, 
0xc, 0x5, 0x6, 0xe, 0x4, 0x3, 0xd, 0xb, 0xc, 
0x3, 0x1, 0x4, 0x3, 0x5, 0x9, 0x6, 0x4, 0xd, 
0xc, 0x5, 0x0, 0xd, 0x4, 0x6, 0xc, 0xe, 0x5, 
0xa, 0x4, 0xd, 0x3, 0x7, 0x3, 0xd, 0x3, 0xd, 
0xd, 0x3, 0x1, 0x5, 0x6, 0xd, 0x5, 0xe, 0x0, 
0xe, 0xd, 0xc, 0xd, 0xd, 0x1, 0x5, 0x5, 0x5, 
0xc, 0x4, 0x5, 0xc, 0xd, 0xd, 0x2, 0x5, 0x6, 
0xc, 0xc, 0xc, 0xd, 0xd, 0xe, 0x2, 0x9, 0xa, 
0xd, 0x5, 0x5, 0xd, 0x4, 0x5, 0xd, 0xd, 0x2, 
0x3, 0xb, 0x6, 0x2, 0xc, 0x5, 0xe, 0xe, 0xa, 
0x1, 0x4, 0x4, 0xa, 0x5, 0x3, 0x5, 0x5, 0xa, 
0xc, 0xe, 0xa, 0x3, 0x6, 0x6, 0xc, 0xc, 0x3, 
0x5, 0xc, 0xd, 0x6, 0xc, 0xc, 0x5, 0x2, 0xd, 
0xd, 0xe, 0xe, 0xc, 0xa, 0x4, 0x5, 0x5, 0x5, 
0x3, 0xc, 0xa, 0x9, 0x9, 0xc, 0xb, 0x0, 0xe, 
0x3, 0x6, 0x4, 0x5, 0xc, 0xd, 0x5, 0xe, 0xc, 
0x4, 0x5, 0xd, 0xb, 0x5, 0xd, 0x3, 0x0, 0xe, 
0x4, 0x5, 0x6, 0x1, 0x0, 0x1, 0xd, 0xe, 0xc, 
0x5, 0x5, 0x2, 0x2, 0xd, 0xd, 0xe, 0xd, 0x3, 
0x4, 0x5, 0x4, 0x5, 0x5, 0x0, 0x3, 0x5, 0xb, 
0x4, 0x6, 0x5, 0xd, 0xc, 0x4, 0xd, 0xe, 0xc, 
0xc, 0xd, 0xd, 0x6, 0x2, 0x5, 0x0, 0xd, 0x0, 
0x3, 0x4, 0x0, 0xe, 0x1, 0x5, 0x2, 0xe, 0xd, 
0xe, 0xd, 0x5, 0xe, 0xc, 0x6, 0xc, 0x4, 0x5, 
0x5, 0xb, 0xd, 0x6, 0x5, 0xd, 0xb, 0x5, 0xb, 
0xb, 0xd, 0xd, 0x5, 0x2, 0xe, 0x6, 0xa, 0xc, 
0x9, 0x3, 0x3, 0xd, 0xc, 0x5, 0xd, 0x6, 0x6, 
0xd, 0x5, 0x5, 0xf, 0xa, 0x5, 0x5, 0x9, 0x4, 
0xc, 0xd, 0xd, 0x0, 0xc, 0xd, 0x5, 0x6, 0x5, 
0x4, 0x6, 0x4, 0x3, 0x4, 0xd, 0x4, 0xd, 0xd, 
0xc, 0x4, 0xb, 0x3, 0x4, 0x2, 0x5, 0x5, 0x5, 
0x3, 0x3, 0x1, 0x1, 0x4, 0x4, 0x4, 0x6, 0x5, 
0x5, 0x5, 0x5, 0x3, 0x5, 0x4, 0xb, 0xd, 0xc, 
0x4, 0xb, 0xb, 0x5, 0x1, 0x0, 0x5, 0x5, 0x5, 
0xd, 0xd, 0xb, 0xd, 0x2, 0x5, 0xc, 0x6, 0x6, 
0x6, 0x5, 0xb, 0x5, 0x5, 0xc, 0x3, 0x4, 0xd, 
0xd, 0x4, 0x5, 0xc, 0xa, 0x5, 0xc, 0x4, 0x6, 
0xd, 0xc, 0x6, 0xe, 0xd, 0x6, 0xd, 0xd, 0x5, 
0xa, 0xc, 0x2, 0x4, 0xe, 0xd, 0x3, 0xd, 0xc, 
0x6, 0x4, 0xd, 0x5, 0x4, 0xd, 0x5, 0x3, 0x4, 
0xb, 0x1, 0xe, 0x0, 0xd, 0xd, 0xc, 0xd, 0xc, 
0x5, 0xd, 0x5, 0x6, 0xc, 0xd, 0xa, 0x6, 0xe, 
0xc, 0x3, 0xc, 0xc, 0xc, 0xd, 0xd, 0xd, 0xd, 
0x9, 0x5, 0x2, 0x5, 0x5, 0x7, 0xe, 0xb, 0x5, 
0xb, 0xd, 0x5, 0x5, 0xe, 0x5, 0x2, 0xc, 0x2, 
0xd, 0xc, 0xc, 0xc, 0x5, 0x5, 0x5, 0x6, 0x9, 
0xb, 0xd, 0xc, 0x2, 0xe, 0xd, 0x9, 0xa, 0xd, 
0x3, 0x2, 0x4, 0x4, 0x5, 0x4, 0xc, 0xe, 0xf, 
0xa, 0xe, 0xa, 0x9, 0xe, 0xc, 0x4, 0xb, 0x5, 
0x1, 0x4, 0x2, 0x4, 0xd, 0xd, 0xc, 0xd, 0xe, 
0x3, 0xc, 0xe, 0x5, 0xc, 0xd, 0x4, 0x6, 0x6, 
0x3, 0x4, 0x5, 0x9, 0x5, 0xa, 0x5, 0x5, 0xc, 
0x3, 0x5, 0xe, 0x5, 0x4, 0xe, 0x4, 0xd, 0xc, 
};

static int backbone_model2_conv1_relu2_threshold[64 * 7] =
{ // torch.Size([64, 7])
-6, 72, 150, 229, 346, 504, 818,
-11, 38, 88, 139, 214, 314, 514,
38, 79, 119, 159, 219, 300, 460,
-45, 4, 55, 105, 181, 282, 484,
-29, 44, 118, 193, 305, 453, 751,
13, 71, 129, 187, 275, 391, 623,
17, 58, 99, 139, 200, 281, 443,
42, 76, 110, 144, 196, 264, 401,
-7, 57, 122, 187, 285, 415, 676,
-3, 71, 147, 222, 334, 485, 785,
-50, 5, 62, 118, 203, 316, 542,
23, 65, 107, 149, 211, 295, 462,
6, 56, 106, 157, 232, 333, 535,
-59, 1, 62, 123, 214, 336, 580,
54, 101, 148, 195, 266, 360, 549,
26, 68, 110, 152, 215, 298, 466,
12, 61, 109, 158, 231, 328, 522,
43, 79, 115, 152, 206, 279, 424,
33, 78, 123, 169, 237, 328, 509,
66, 100, 133, 167, 217, 284, 417,
-26, 33, 93, 154, 244, 365, 606,
5, 51, 97, 143, 213, 305, 490,
49, 88, 128, 167, 227, 306, 465,
53, 98, 143, 188, 255, 345, 526,
-40, 25, 91, 157, 255, 387, 650,
28, 63, 97, 131, 182, 250, 387,
-11, 36, 85, 133, 205, 302, 495,
-38, 24, 88, 152, 248, 375, 630,
-17, 44, 106, 169, 262, 387, 636,
42, 83, 124, 165, 227, 309, 473,
87, 124, 161, 198, 254, 328, 476,
40, 84, 128, 172, 238, 325, 501,
18, 60, 103, 146, 210, 296, 467,
28, 75, 122, 169, 240, 334, 522,
43, 92, 140, 189, 262, 359, 553,
46, 92, 139, 186, 256, 349, 536,
15, 67, 119, 171, 249, 352, 560,
33, 81, 130, 178, 251, 348, 542,
50, 99, 149, 198, 272, 370, 567,
21, 72, 124, 175, 252, 354, 559,
45, 85, 124, 164, 223, 302, 459,
4, 52, 100, 148, 221, 317, 509,
-8, 47, 103, 159, 243, 355, 580,
46, 88, 130, 172, 235, 318, 486,
59, 86, 112, 139, 179, 232, 338,
23, 82, 141, 200, 289, 407, 643,
-7, 43, 95, 146, 223, 326, 531,
-21, 32, 85, 139, 219, 327, 541,
30, 86, 142, 198, 282, 394, 618,
-6, 47, 102, 156, 237, 346, 563,
-57, -11, 35, 82, 152, 245, 432,
-9, 51, 113, 175, 268, 392, 639,
40, 90, 140, 189, 264, 363, 562,
73, 116, 158, 201, 264, 349, 519,
34, 105, 175, 245, 350, 490, 771,
46, 87, 128, 168, 230, 312, 476,
-2, 39, 81, 123, 186, 270, 439,
9, 74, 138, 202, 299, 427, 684,
31, 109, 186, 264, 380, 535, 846,
-7, 50, 108, 166, 252, 367, 598,
1, 65, 129, 194, 290, 418, 675,
49, 96, 143, 190, 261, 355, 544,
-16, 29, 75, 121, 190, 281, 465,
56, 105, 155, 205, 279, 378, 577,
};

static uint64_t backbone_model2_conv2_conv1_weight[64 * 1*4] =
{ // torch.Size([64, 1, 1, 64])
0x545dcd45a5525b44,0x55455bc55d63d595,0x553545555eb546dd,0x4c635dd6bd555adc, 
0x55dcbaeddccb2bcd,0x15bc0cc6435c06ac,0x457a453dacd33ddb,0x2cd459ad6dc544de, 
0xd2b23cad93c6bd20,0xc59103bc0e464ccb,0xdccbc54dccbda3bd,0x5de04521bd9bad5c, 
0xd553a13356b4bccd,0xce5b4b2ca6d55366,0x5cbd5b24415c3c50,0x094124cc454dc216, 
0xcdccccddddc42355,0xedbbabdb5c55d6b4,0xdccc69b455dc9255,0x3c5ecddda94dcb44, 
0xb4354ccd3c3b45c2,0x4cb32b42446a4343,0x4b0945564bb43152,0xe4a63493313d5a2a, 
0x52dd3556543c614a,0x645ded405c6ea5d6,0xe35b69d55541dc6c,0x60e65ebd995cc3bd, 
0xee5d4535e43cd3dc,0x5b4b2de04543ac66,0x50c5dd55d45b4d66,0xc4eed416b445d252, 
0xcb4454b54c55ad5d,0xc4dd6d545ce45595,0x65b5346d46d64564,0xc4cdc4650cd4c2e4, 
0x553dce5652465dd6,0xd36b44c55d46434c,0x554655666e4355d4,0x5d35d366cc43cc45, 
0x5eb66cda45c6c03a,0xa2d2ced463d3d5c6,0x9beb155e56ecd37c,0x5bedadcc5d5dbb4d, 
0xe55adc52cebcc5a2,0x465455b5e564543e,0x433550dce36d5195,0x66b56d0455550dda, 
0x3b3933549b433b04,0xa554ba34be9d23f5,0x4b2b43cb5444b4ca,0xb3db1c0539b9a254, 
0xcc6ad43d356add92,0x5cc55c6202c5461d,0x56355d65b5cc43cd,0xc2cc4ce96cd65cbd, 
0x2251ccb5b454ceb2,0xcb244dcc5d355d45,0x455bcc66dd5d65e3,0xa4c5b5d5c1566456, 
0x2dedbd3a2ac54bdd,0xdabb5b43cc15cc3c,0x24bbc0541c55d5a3,0x3dd33964ddeddce1, 
0x43cdcdccddd44c56,0xdd52cebc245cd29d,0xdded3cd4cbbe9ecb,0x4b95acd4a3635d5b, 
0xcde0d4ddabea3c05,0x5c54de9c556cde44,0x91cdddd6ed5e1cad,0xc135c2dc34b45564, 
0xcbc64d5d555ed254,0xd564a25ceccccceb,0x30b55d1dbdd65dd4,0xe52c63dc45935d0d, 
0xeb4b335bdeb54346,0x4dd26555ddd4425e,0x45555253b02555c6,0xd5d5de46b22b4c44, 
0x3e5c5bdd01e0b42c,0xc5dbddcc5ed33c03,0x5ba2d4cdd1532c05,0xb254da54bc555ccd, 
0x0c2ad6ea1b25c4c3,0x5cbdc594cd4c2c3a,0xbdd354dc4cd5cdbd,0xc6c9db35bd9ed65d, 
0x6d3db64d2ca6dc64,0x35b4db29cdddc933,0x50d5b4cc4cea43cc,0xb4d0dd44bacce44d, 
0x1de3a6664d6d4a34,0xd6566366d354d5d3,0xc5dc55b5db25e545,0x444c3c44dc3a35c6, 
0x3de6ec2b51a55c55,0xe6b5d4cbd3445b1b,0xecd4bb345dda4ddc,0x2c15d43e964b5d9b, 
0xdc54355c0ecd362c,0x55b315bdc54d302d,0x0cc325ddc533ed5d,0xbc555cc4cbdbeedb, 
0xbbb49c52ce5440cd,0xa5a355445444335d,0x432524d45c46d551,0x4e436b45bdd4eed1, 
0x554b6524355d535b,0x65b64643cc51e5cc,0x15b6c646c6b4b24e,0xd66c5c255d3535dd, 
0x3c02e2cc44d5bb05,0xeedc5ec234944b43,0x4aab5d4c5b4c3a05,0xac4ceddd554db4b6, 
0xbdc45c3c3c2bd344,0x5345242b3ab5ccd1,0xbadbd30db555dc33,0xd6ccb442d2525461, 
0xc145cb4ddde3de5d,0xda4d3cd4cd3b5b45,0xed35d3ddcdd4bd3d,0x4be42564352eed5c, 
0xbabc2dbdcc4cc42d,0x39cb0b91dcb2ccdd,0xd1c9bca3ccdcd5d0,0xdc02d332ccb04dc2, 
0xbd295dccad4ceec5,0x4dc94d6db44549c4,0xb55cdb4a454c455b,0xd6c24455c3266c65, 
0x56d25dbc264345ed,0x43b61121e516e553,0x65ca59555245a53a,0xb4cc3dc4ed345cdc, 
0xc653dc34b45d5c6c,0xcc5c154c2abdad45,0xddc3bdc4dbdb5ebd,0x4ccc34531bced4a5, 
0xa65aa2ca55d5dbdd,0x1c6bc52d465cad3c,0xdc4dcdbd4b2dadcc,0x55cb653d352ce4d4, 
0xa5d66c4c94415ad6,0x5343cc5cb14c4dbc,0x4b1d164dc4655544,0xc6e5244b6c6a4c6b, 
0xc39e54d4dcd4e35e,0xec0acdde35639695,0xbdc4bcecb6bebd5d,0x6c2dddcbd555d354, 
0xe44beaaddbdcb156,0x5dc3db5d33c3ee54,0x9dc3ed34f35b4ebd,0xc3cd5df5ce4cc454, 
0xb555b6bd9c4ec01e,0xb5b494c3d6544d35,0x54ba5cd54c65d542,0xc355355c45cbd5d4, 
0x2cdee4c24cd3ddc9,0xb35dbdd24345434b,0xc2cb5e534dd3ddcc,0xadd2b9c1d5e542c4, 
0x1ed2b43424524d06,0x52c654445c534594,0x3546cd46d453c596,0x5e445d654ce543cb, 
0x5ecc25ddc0b4ed54,0xdefe14bd5e04ca5c,0x4b2641dbd5b54345,0xdc9c1a55c514b44c, 
0xbc95d24d33d46914,0x1124dce50535651a,0xcb1343cc53045d4c,0x31a3cdcd654d2aed, 
0x549c45d26cd2de63,0xdd4e555cd54cea94,0x2555cc5c52b5ad94,0x53d3ca5ecd05d5db, 
0x4d9c55e4dddc54db,0x59cbac2564543a64,0x6453c4dad352c535,0x4bbbc4b2dda555a4, 
0xd5ed4193e54ecdbc,0x533355554bd2eceb,0xc46dc2bde5d41ea3,0x05d45de639dc3555, 
0x55d2aced34bb3dcd,0xd45de4d4cb4b54b9,0xc55d36cd4bd49dc2,0x3ca6c5be45440bb1, 
0x53abdd65a45dc5d5,0x6553bd45dbb143ed,0x5abcc446bcc45bc2,0xb5cb46d4d55bdd3d, 
0x2c2c45446ca5ce64,0xddcd2445d65b4d4d,0x56453a55555c3a56,0x59c5e25cd9c644c6, 
0x5c5cd43d6556d5a5,0xddd45c4db5d55c76,0x53e42d5a63255442,0xd55d55a5c5dc140c, 
0x5d4e35dd0dd5d456,0x4cddd50e0bdbbd5b,0xbdc5d99d55da5c9d,0xbabbdcb4acabd45e, 
0xe1adad55e44a4cc5,0xd4d55c456e45634c,0x45435664d3514515,0xd4435dd6cc555da5, 
0x5c5eb3bc5423cc6b,0x4cbc55bba5bc9b51,0x31544e2423ccae53,0x4d4cadcc41e6d3fc, 
0xc1d45bcdb5ebc594,0x53dbe3dcbbcd3ce2,0xeddec4dec5ccbd4d,0xe54d5aeeac9d556e, 
0xbdd445bd54cce55b,0xc3cadc5dd5dce5e5,0xededdd42c5dd2edd,0xd6ddccdd235d55cc, 
0x15065bebc5d5dd3e,0xdddccebc3ac5b5c3,0xbddc24ce45340c5e,0xc4de453d425d2c3e, 
0x543d42504c33bc62,0x521652cddc5e56d4,0xd3544324b5c4166e,0x5bd5c4455bbde5cd, 
0xb9d364d33d4b533b,0xc6b553549d05d5da,0xeb5d9602db4cd434,0xb5640a6bd445320b, 
0xc354442bdc4c566c,0x4ac6ccbd3c4ca5e3,0xecdad6dcc3cdc25c,0xc56dcd3c6d6c423e, 
0xa5cddc2dd53ceabc,0x4c54c55c54d43da3,0xcabd4d1344b944cc,0xd4cc45e3d4c4335d, 
0xd4d464dd5b2c6ccc,0xc4dac3553305de51,0xd46e5954a544335b,0xb4d5bd456d5464c4, 
0xb3434ae3dbdda49d,0x47dc5ec15cddc3b5,0xcd93e53de344dd5e,0x54c26355ee44b5bd, 
0x435eeddc43c4453c,0x4ccedddeca3c5d5d,0xedcd41455ddc6d9d,0xc042eddd65c5cecd, 
};

static int backbone_model2_conv2_quant1_threshold[64 * 14] =
{ // torch.Size([64, 14])
-896, -464, -248, -86, 21, 129, 237, 345, 453, 561, 669, 831, 1047, 1479,
-1284, -842, -621, -455, -344, -233, -123, -12, 97, 208, 319, 485, 706, 1148,
-1064, -722, -551, -422, -336, -251, -165, -80, 5, 91, 176, 305, 476, 818,
-1299, -785, -529, -336, -208, -80, 48, 176, 304, 433, 561, 753, 1010, 1523,
-1268, -861, -658, -505, -404, -302, -200, -98, 2, 104, 206, 358, 562, 969,
-670, -360, -205, -88, -11, 66, 143, 221, 299, 376, 454, 570, 725, 1036,
-1353, -852, -601, -413, -288, -163, -37, 87, 212, 338, 463, 651, 902, 1403,
-1362, -840, -580, -384, -254, -123, 6, 137, 267, 398, 528, 724, 984, 1506,
-1205, -720, -478, -296, -174, -53, 67, 189, 310, 431, 552, 734, 977, 1462,
-1181, -652, -387, -189, -57, 75, 207, 339, 471, 604, 736, 934, 1199, 1728,
-1722, -1055, -721, -471, -304, -137, 28, 195, 362, 529, 696, 946, 1279, 1946,
-948, -567, -376, -233, -138, -42, 52, 147, 243, 338, 433, 576, 767, 1148,
-1168, -735, -519, -356, -248, -140, -32, 75, 183, 291, 400, 562, 778, 1211,
-1461, -948, -692, -500, -371, -243, -115, 12, 141, 269, 397, 589, 846, 1359,
-1023, -603, -393, -235, -130, -25, 79, 184, 289, 394, 499, 657, 867, 1287,
-1787, -1065, -703, -433, -252, -71, 108, 289, 469, 650, 830, 1101, 1462, 2185,
-1285, -871, -665, -509, -406, -303, -199, -96, 7, 110, 214, 369, 576, 989,
-1367, -860, -606, -416, -289, -162, -35, 91, 217, 344, 471, 661, 915, 1423,
-1516, -961, -684, -476, -338, -199, -60, 77, 216, 354, 493, 701, 978, 1532,
-1226, -756, -520, -344, -226, -109, 8, 125, 243, 360, 478, 654, 889, 1360,
-1165, -754, -549, -395, -292, -189, -86, 16, 118, 221, 324, 478, 683, 1094,
-1378, -915, -683, -510, -394, -278, -163, -47, 68, 184, 299, 473, 704, 1167,
-1310, -861, -637, -469, -357, -244, -132, -20, 91, 203, 316, 484, 708, 1157,
-1103, -626, -387, -209, -89, 29, 148, 267, 387, 506, 625, 804, 1042, 1519,
-1532, -963, -678, -465, -322, -180, -38, 104, 246, 388, 530, 744, 1028, 1598,
-1051, -680, -494, -355, -262, -170, -77, 15, 108, 201, 294, 433, 618, 990,
-1115, -657, -429, -257, -143, -28, 85, 200, 314, 428, 543, 714, 943, 1401,
-840, -437, -235, -83, 16, 117, 218, 319, 420, 521, 622, 773, 975, 1378,
-1263, -851, -645, -490, -387, -284, -181, -78, 24, 127, 230, 385, 591, 1003,
-1166, -738, -523, -362, -255, -148, -41, 65, 173, 280, 387, 548, 762, 1191,
-1510, -1028, -787, -606, -485, -365, -244, -124, -3, 116, 237, 417, 658, 1140,
-1414, -959, -731, -561, -447, -333, -220, -106, 7, 120, 234, 405, 632, 1087,
-1155, -732, -521, -362, -256, -151, -45, 60, 165, 271, 377, 535, 746, 1169,
-1526, -972, -695, -488, -349, -211, -73, 65, 203, 342, 480, 688, 965, 1518,
-1314, -845, -611, -436, -319, -202, -85, 31, 148, 265, 382, 558, 792, 1260,
-1585, -996, -702, -481, -333, -186, -39, 107, 255, 402, 549, 770, 1065, 1654,
-966, -545, -334, -176, -71, 34, 139, 244, 350, 455, 560, 718, 929, 1350,
-1526, -1020, -767, -577, -451, -324, -198, -71, 54, 181, 307, 497, 750, 1256,
-1603, -1091, -834, -642, -514, -386, -258, -130, -2, 125, 254, 446, 702, 1214,
-944, -554, -359, -213, -115, -18, 79, 176, 274, 371, 469, 615, 810, 1200,
-1093, -760, -594, -469, -386, -303, -220, -136, -53, 29, 112, 237, 403, 736,
-857, -436, -225, -67, 38, 143, 248, 354, 459, 564, 670, 828, 1039, 1460,
-1262, -835, -621, -461, -354, -247, -140, -33, 72, 179, 286, 446, 660, 1088,
-1205, -766, -546, -381, -271, -162, -52, 57, 167, 277, 387, 551, 771, 1210,
-1264, -829, -612, -449, -341, -232, -123, -15, 93, 201, 310, 473, 690, 1124,
-1128, -646, -405, -225, -104, 15, 136, 256, 377, 497, 618, 799, 1040, 1521,
-1518, -986, -720, -521, -388, -255, -122, 10, 143, 276, 409, 609, 874, 1406,
-1244, -820, -608, -449, -343, -237, -131, -25, 80, 186, 292, 452, 664, 1088,
-1217, -724, -477, -292, -169, -45, 77, 200, 324, 447, 570, 755, 1002, 1495,
-1115, -670, -447, -280, -169, -58, 52, 163, 275, 386, 497, 664, 886, 1331,
-1283, -763, -503, -308, -178, -48, 82, 212, 342, 472, 602, 797, 1057, 1577,
-1231, -842, -648, -502, -405, -308, -210, -113, -16, 80, 177, 323, 517, 906,
-1146, -680, -447, -273, -156, -40, 75, 192, 308, 424, 541, 715, 948, 1414,
-1181, -778, -576, -425, -324, -224, -123, -22, 78, 178, 279, 430, 632, 1035,
-1731, -1158, -872, -657, -514, -371, -228, -85, 57, 201, 344, 558, 845, 1417,
-1656, -1138, -878, -684, -554, -425, -295, -166, -36, 93, 222, 416, 676, 1194,
-1509, -1053, -825, -654, -540, -426, -312, -198, -84, 29, 143, 314, 542, 998,
-1467, -939, -675, -477, -345, -213, -81, 50, 182, 314, 446, 644, 908, 1437,
-1000, -583, -374, -217, -113, -9, 95, 199, 304, 408, 512, 669, 878, 1295,
-1151, -730, -519, -361, -256, -150, -45, 59, 164, 270, 375, 533, 744, 1165,
-1361, -900, -669, -496, -381, -266, -150, -35, 79, 195, 310, 483, 714, 1175,
-1018, -618, -417, -267, -167, -67, 33, 133, 233, 333, 433, 584, 784, 1185,
-1424, -928, -681, -495, -371, -247, -123, 0, 123, 247, 371, 557, 804, 1300,
-1456, -1008, -784, -615, -503, -391, -279, -167, -55, 57, 169, 337, 561, 1010,
};

static uint64_t backbone_model2_conv2_conv2_weight[64 * 9] =
{ // torch.Size([64, 3, 3, 1])
0x4, 0x2, 0xd, 0x5, 0x5, 0xe, 0xd, 0xd, 0xe, 
0xe, 0x5, 0x5, 0xc, 0x6, 0x0, 0x6, 0x4, 0xd, 
0x9, 0x6, 0xd, 0xa, 0x3, 0x6, 0x5, 0xd, 0x5, 
0xd, 0xd, 0xd, 0xd, 0xd, 0xc, 0xd, 0x4, 0xa, 
0x5, 0x5, 0xe, 0x5, 0x4, 0xd, 0x6, 0xc, 0xd, 
0xd, 0x5, 0x5, 0x6, 0x4, 0xe, 0xd, 0xe, 0x2, 
0xd, 0xc, 0xd, 0x1, 0xd, 0xe, 0x5, 0xa, 0xe, 
0x5, 0x4, 0xb, 0x6, 0x5, 0x3, 0x5, 0x5, 0x4, 
0xd, 0xd, 0xb, 0xd, 0xd, 0x4, 0xe, 0xd, 0x4, 
0x9, 0xd, 0xc, 0x3, 0xe, 0xf, 0xb, 0x5, 0xc, 
0x5, 0x5, 0x5, 0x5, 0x6, 0x4, 0x5, 0x6, 0x3, 
0x3, 0x5, 0xd, 0x4, 0xd, 0xe, 0xd, 0xe, 0xc, 
0xc, 0xb, 0x6, 0x5, 0xc, 0xe, 0xb, 0x1, 0x4, 
0xa, 0xd, 0xd, 0xb, 0xd, 0xd, 0x4, 0xc, 0xe, 
0xc, 0xc, 0x3, 0xd, 0x0, 0x4, 0xf, 0xe, 0xd, 
0x5, 0x6, 0x6, 0x4, 0x3, 0x5, 0x4, 0xe, 0xe, 
0xb, 0xc, 0x5, 0x4, 0x6, 0x6, 0x3, 0x6, 0x5, 
0x2, 0xb, 0xb, 0x9, 0xa, 0x5, 0x5, 0x6, 0x7, 
0xb, 0x1, 0x3, 0x5, 0x4, 0x4, 0x6, 0x5, 0x6, 
0xe, 0xd, 0xa, 0x2, 0xe, 0xb, 0x3, 0xd, 0xe, 
0x6, 0x5, 0x5, 0x6, 0x4, 0xc, 0xa, 0xd, 0xd, 
0x2, 0x4, 0xb, 0x5, 0x5, 0x0, 0x6, 0x6, 0x4, 
0x4, 0x6, 0x5, 0xd, 0x5, 0x6, 0xb, 0xe, 0xe, 
0xa, 0xb, 0xd, 0xe, 0xc, 0x4, 0xe, 0xc, 0x3, 
0x5, 0x5, 0x5, 0x5, 0x5, 0x3, 0x5, 0x5, 0x2, 
0x5, 0x4, 0xd, 0x5, 0x6, 0x3, 0xc, 0xd, 0xd, 
0x2, 0x6, 0x2, 0xc, 0xe, 0xe, 0xc, 0xe, 0x2, 
0xa, 0xe, 0xd, 0x3, 0xe, 0xc, 0x6, 0xe, 0xc, 
0x5, 0x5, 0xd, 0x3, 0x5, 0xd, 0xb, 0x7, 0x4, 
0xc, 0x2, 0x5, 0xd, 0x4, 0x6, 0xe, 0xd, 0x4, 
0x5, 0x5, 0xd, 0x5, 0x6, 0x3, 0xa, 0x4, 0x5, 
0x4, 0x4, 0x4, 0x3, 0x3, 0x3, 0x4, 0x4, 0x4, 
0x5, 0xc, 0xd, 0x1, 0xd, 0xc, 0xd, 0xe, 0x5, 
0xd, 0xd, 0xd, 0x2, 0xd, 0xe, 0x1, 0xc, 0xd, 
0x4, 0x4, 0x4, 0x4, 0x5, 0x5, 0x5, 0x5, 0x5, 
0x5, 0x6, 0x3, 0x5, 0x5, 0x4, 0x5, 0x9, 0xb, 
0x4, 0x6, 0xc, 0x4, 0xc, 0xe, 0xd, 0xe, 0xd, 
0x4, 0x6, 0x5, 0x5, 0x6, 0x3, 0x5, 0x5, 0x5, 
0x5, 0x4, 0x4, 0x5, 0x5, 0x3, 0x0, 0x6, 0x6, 
0xd, 0x6, 0x2, 0xd, 0xe, 0x0, 0xe, 0xe, 0xa, 
0xe, 0x6, 0x5, 0xe, 0x6, 0xc, 0x5, 0x5, 0xc, 
0x4, 0x2, 0xd, 0x5, 0xd, 0xe, 0xc, 0xe, 0xc, 
0xd, 0x5, 0x6, 0xd, 0x4, 0x6, 0xe, 0xd, 0x5, 
0xd, 0x5, 0x6, 0xd, 0x4, 0x5, 0xc, 0x5, 0x5, 
0xe, 0xd, 0xd, 0xc, 0x4, 0x4, 0x5, 0x5, 0x6, 
0xd, 0xd, 0xd, 0xd, 0x2, 0x5, 0x4, 0x6, 0x6, 
0x4, 0x4, 0x5, 0x5, 0x5, 0x4, 0x5, 0x4, 0x4, 
0x6, 0x5, 0xc, 0x5, 0x3, 0xe, 0x5, 0xc, 0xd, 
0x4, 0x5, 0x4, 0x4, 0x5, 0x3, 0x4, 0x5, 0x5, 
0xd, 0xe, 0xe, 0xd, 0xd, 0xc, 0xc, 0x2, 0x5, 
0xc, 0xc, 0xd, 0xd, 0xc, 0xd, 0xd, 0xd, 0xc, 
0xb, 0x4, 0x3, 0xb, 0x6, 0x5, 0x4, 0x6, 0x4, 
0x9, 0x3, 0x2, 0xe, 0xe, 0xe, 0xb, 0xd, 0xc, 
0xb, 0xd, 0xc, 0x3, 0xe, 0xd, 0x5, 0x6, 0x5, 
0x4, 0x2, 0x2, 0x3, 0x6, 0x5, 0x3, 0x7, 0x5, 
0x5, 0x7, 0x6, 0x2, 0x4, 0x3, 0xc, 0x4, 0x3, 
0xb, 0x1, 0x3, 0xd, 0x5, 0x6, 0xd, 0x4, 0x6, 
0xd, 0xd, 0xa, 0xc, 0xd, 0xd, 0xb, 0xd, 0xd, 
0x0, 0xe, 0x3, 0x6, 0x3, 0xe, 0x5, 0x5, 0xe, 
0xc, 0xa, 0xc, 0x6, 0x5, 0xe, 0x4, 0x6, 0xd, 
0x2, 0x3, 0xc, 0x9, 0xd, 0xe, 0x2, 0xe, 0xd, 
0x0, 0xc, 0xc, 0xd, 0xd, 0xc, 0xd, 0xd, 0xd, 
0x5, 0x6, 0x6, 0x4, 0x5, 0x4, 0x3, 0x5, 0xc, 
0x5, 0x6, 0x5, 0x2, 0x6, 0x5, 0xb, 0x0, 0x4, 
};

static int backbone_model2_conv2_relu2_threshold[64 * 7] =
{ // torch.Size([64, 7])
120, 182, 245, 308, 402, 527, 778,
117, 184, 251, 317, 417, 550, 817,
24, 87, 150, 213, 308, 434, 686,
27, 76, 126, 175, 249, 348, 545,
124, 188, 251, 315, 410, 537, 790,
90, 166, 242, 317, 431, 582, 885,
-18, 58, 135, 211, 326, 479, 785,
54, 124, 194, 264, 369, 509, 789,
-11, 57, 126, 196, 300, 439, 717,
95, 155, 214, 274, 363, 483, 721,
-165, -86, -6, 72, 191, 350, 668,
99, 156, 212, 269, 353, 466, 692,
62, 119, 177, 234, 320, 436, 666,
-27, 36, 99, 163, 258, 386, 640,
23, 100, 177, 253, 368, 521, 828,
17, 58, 98, 138, 199, 280, 442,
56, 125, 195, 265, 369, 509, 787,
98, 163, 228, 293, 391, 522, 783,
55, 113, 171, 229, 317, 433, 666,
53, 125, 197, 269, 377, 521, 809,
62, 132, 203, 273, 378, 518, 798,
70, 128, 185, 242, 327, 441, 670,
142, 205, 269, 333, 428, 555, 810,
-18, 37, 92, 147, 229, 339, 560,
-40, 25, 91, 157, 256, 388, 652,
142, 184, 226, 268, 332, 416, 585,
142, 205, 268, 331, 425, 550, 801,
44, 123, 202, 282, 400, 559, 876,
86, 157, 227, 297, 403, 543, 825,
98, 148, 198, 247, 322, 421, 620,
12, 64, 117, 169, 247, 352, 561,
11, 35, 59, 83, 119, 167, 263,
31, 80, 129, 178, 251, 348, 544,
-31, 23, 78, 133, 215, 325, 545,
56, 117, 178, 240, 332, 454, 700,
21, 70, 118, 166, 239, 335, 528,
134, 192, 250, 309, 396, 512, 744,
10, 91, 172, 253, 375, 537, 861,
16, 94, 173, 251, 369, 525, 839,
153, 216, 280, 344, 439, 567, 822,
125, 180, 236, 291, 375, 486, 708,
56, 118, 181, 243, 337, 462, 712,
192, 243, 295, 346, 423, 526, 731,
43, 110, 178, 245, 346, 481, 750,
108, 165, 222, 278, 363, 476, 703,
97, 154, 211, 267, 352, 466, 692,
71, 122, 172, 223, 299, 401, 604,
47, 101, 154, 207, 288, 394, 608,
54, 99, 145, 190, 258, 348, 530,
58, 121, 184, 247, 341, 467, 718,
-11, 48, 108, 168, 259, 379, 620,
51, 112, 172, 232, 323, 444, 685,
46, 117, 187, 257, 363, 503, 784,
110, 173, 237, 300, 396, 523, 777,
-18, 71, 162, 252, 387, 568, 929,
41, 112, 183, 254, 360, 502, 785,
94, 158, 222, 286, 382, 510, 766,
27, 76, 124, 172, 244, 340, 533,
100, 158, 215, 273, 359, 475, 705,
107, 176, 245, 314, 417, 555, 832,
71, 154, 236, 319, 443, 608, 938,
12, 71, 129, 187, 275, 391, 625,
-15, 72, 161, 249, 382, 559, 912,
-4, 78, 162, 245, 370, 537, 870,
};

static uint64_t backbone_model3_conv1_conv1_weight[64 * 1*4] =
{ // torch.Size([64, 1, 1, 64])
0xc4c00d4a40cba245,0x3ddc5c34b9dbccc5,0xcb445b26aedc45c4,0xd5ac2544d2d465d4, 
0x36a02490464a9a5b,0xd5c1bcdd44aada2c,0xc44cc56d424dc420,0x45c0045a55c31422, 
0xcdce3ab4d5541b6d,0x5dc555dbc33d1d55,0x412b4d3624dc5d9d,0xe5d0b5b6d436b425, 
0x2babc124442b5a3c,0xbdd2ac4d0cb516d6,0xcc5c24434154ccc4,0x3659cc39cbbdcbdc, 
0xcd6db665d93c3ec3,0xda3a5adda34c9a5a,0xa3b54c1aa55ab1bc,0x0139b0a29605d333, 
0xc4ccce3d34554d5d,0xcc35d3dd35cb3ccd,0xdb0ddb4d545d454b,0x64433c4b4bdadcea, 
0x523bc32b44cad2da,0xd51b19cc93c314bd,0x5c24dbb4c30b15b9,0xadbd1c1c54e93ddc, 
0xb59d524ad34ecbbb,0x9c2d3154a4195510,0x45c45ed903bbc09b,0x9434daec4ccb49d5, 
0xe5ca53b5262dda24,0xbd4c1c5033e9ab33,0x955b45504bccb344,0x5c3cc4533bd3a5cc, 
0x5d43c35c59c3c3db,0x443dc552d5a16c22,0xbd4243c40ba0e164,0x4d4cdec5b1bc599a, 
0xad24a5b3bcc5dad4,0x4bbb55535ddc65d4,0xacb2ccb40ee562ce,0x9c50514d94bcd9ab, 
0x5dc4ba344d3d05b4,0xd544614bcc54c233,0xddcb3ccceb34cbd4,0xcbc10ccc4b2dbcab, 
0x0350d1bb9dcc3c55,0x5659ccc433d243d4,0x5d552dd2a35ccdbc,0xd4dbbacc5dc54c0c, 
0xc515bcc414cc4756,0x35cccc3b55434ba5,0xdd1eb4c22dcd45b3,0x423d9401c55d4444, 
0x2cc54bcab4b4d540,0x55239b56ca5554d6,0x4d04c3cddb5332a5,0x5a0dbcb4de55cd6d, 
0xd5004442d5db3d13,0xbd3c0ccbcbbd3bac,0x450a525dd442a33d,0x46a5c45b26b3c506, 
0x44e44530dcda9392,0x923c50344e5a4cb4,0x3d354bc4c444644c,0x142d36d4d45452ad, 
0x5dac3b455cdbd0db,0x44dd6e04c3a4d336,0x5ac4b335da9dcda4,0xd4d3ca41dda5b4b5, 
0x2caecdbd44c24441,0x5942b3dc34cd2dcc,0x2ccd4c043c2c544b,0xd4cb3c45cb040143, 
0xce431cbc4db4b625,0xb553a5c13d54443c,0x1bddadb4d32243c5,0xbcbc29e4ab3dcb5c, 
0xcb54cdd403dd4635,0x6359d6dd455c3bb4,0x3b4dedc5c3cdd6c3,0x244b3d1545c55c5d, 
0xadc53cc9bbd6559b,0x5dc4465cddcc4544,0x54034b45e3544acc,0x144b4939d1bb53b3, 
0xc430ed5debcbe255,0xc5662dcd2ccda4dd,0xc4c54dddb144c44b,0xc3b224cd6b39ddba, 
0x4903bbe44a4143cc,0x4c4456b04dc1cd52,0x5ad51a261cccbccc,0x44bc54144e155933, 
0x33ddc46959bc51b4,0x034c323c45c0bde4,0xdea43abbd546c335,0xd2e23abb02bc3b4b, 
0xdcbccdb6b4d534bb,0x0ed3d44e25ada5cd,0x0cbdd39dc3db5ddd,0x5059455cad4cddc4, 
0xacb4445c33cc94c4,0xd5dcbda0d2e5b41c,0x2b304bc5d403e4cb,0x94d3dcb2e5cdacbb, 
0xd5553c4c3cc3e455,0xe4405325cd44d9a5,0x4dd9bcc5e5042434,0xc4bd3424a4d55d3a, 
0x6943cbbc3dbb3345,0xc5435db32455ce9c,0x5eb4c4515cedd3a4,0xdce4b45c4344c44c, 
0x5b34ddad2e53445b,0x555025e4b9054354,0x4badedd5455acc40,0xab403ee5224c424d, 
0x3c13ab5dc44495cb,0x4c4dd5d452ec9343,0xc3cecb9223d343cd,0x4c2c5d45d43d00c0, 
0x5e4aa544bda35ddd,0x352344cc4b1c045c,0xd334dcd33b1cbcdd,0xcddb2c2cdd34b0ab, 
0xa414acacca33e545,0xdad04353c3456b51,0x4c0d5b3a2d4c5315,0x3c41eea55b5dbbb1, 
0xbdba3444cd54dddc,0x4b9bcd35bdb33534,0xc6d424a524bc3bad,0x4cd635bc333cd5c5, 
0x4d5224b42bc45dc3,0x5bbb6645a6c45441,0x44440cc545bd5346,0x2ddd9dc5ec23b451, 
0xcbba544db254433e,0xbd49d4c5adb6dd5d,0xd5dd642d52d50e4a,0xac5c44adcc2db4d5, 
0x1ac4ddbc4dd435d9,0xc2cedd9cd463d545,0xe4eedb35d3dd4d05,0xda96142dd36ed6c4, 
0x3c6db45b9ed3c041,0x2b5dd434bc53ddc4,0xc41dcddbc64c5cec,0xdad5cdd5b644ca9d, 
0xc4d5addc192c439d,0x1353dedd954cd54c,0xd5cbe54dd46bdc49,0x5214143d943d23ca, 
0x5ecc355d2e345dd4,0xc04155dca4cd4b5c,0xc5ca0cd5354c552d,0xdb253aed553c92cb, 
0x4bbd4d6c5c6c9b2d,0xdcd4b4b5cd360c33,0xad5cd1dc5dc25dc5,0x4cb1ccb9d43901cc, 
0xb43cccd054352222,0xa3bacd4d5534a4ad,0xbeac145c3dcb5544,0x5d5d654c3d23ecd5, 
0x0a4d45c443cc1ed4,0x55ce33c54cc3b43b,0xa554d1b514acc5d5,0x3cb5ca44e4c5324c, 
0xd42bbb43cb45cb4c,0xcc95e6b23ccccbdd,0xdcd0ebddb53c5cdb,0x4dc163bcdbcdcbbc, 
0x5c2d54adddc54403,0x5ab3c953bd51442c,0x45dd5dcd523494dc,0xd3d42bedad3bb954, 
0x5ba50352bc5c4bcb,0x3d5335d03dd3ce31,0x5a401c9555d3bc4d,0x22d535c4b4ba534b, 
0xdac4cd9493d46d5b,0x2ed505256bac4e4b,0xdccc3b0bd6554e46,0xb41555b6dd494293, 
0x0ac454a3cb553bc5,0x5d659392bd534cc4,0x5b45534d34c24551,0x553435bc2255cb52, 
0x3dad34b5350ad5bd,0xe4cd4dad15dc6c3d,0x22455cc34ddd5c64,0xac14d4c5d44cc5ec, 
0xe35d553bb333ddc4,0x02c3cab24dbcc23c,0xc514430d4bc496ed,0x4c23454d154ad42a, 
0xb5dd3c4cd3add134,0x1cbb1dd35dccedec,0xdd132c41cbda35d5,0x3cda5511414a54cb, 
0xcdb4aa0ceb363b2c,0x4d45c54bd91b5c4c,0x34913563d550c34d,0x4b433d5d4a043bc4, 
0x5bd0344443aca244,0xdb14524ca53ad9f4,0x4d22eccdb23c53dc,0xd3da453cdca43c1d, 
0x529a4c4cc5bd4c5c,0x431dbc51eceb53c6,0xdb51c3bb95549b4c,0x5553de23943d4add, 
0x412213504d545242,0xd455b2cd45e205d2,0xab5cd40e404acc40,0x3da24bac322bda3d, 
0xcab2d75cd41c3632,0xdcdbddd340004c06,0x65bdbb4c56c95e44,0x3d46bc55d76d667c, 
0x5dab342d45cc4c44,0x5d2dc53b35eddd4c,0x44543cb44b2e94dc,0x454c1d23d6d340eb, 
0x4d6433c0dc443c24,0x33d44231dd54c435,0x42bbcdca4c3205ed,0xa419ccdc3c3bccad, 
0x5ec4c54bbcdaabd3,0x4eed44429cc1b440,0x55c43cc9cddc4cd4,0xcdc34c25d32c4252, 
0x29b4b45cdb4c4133,0x5442a324e2555934,0x02cb4db0b043db63,0x3545eee635035b94, 
0x1b25db39ec4a5363,0xca45354be1ccca14,0x34355c24cd43cc4d,0x36b9db4d434244a6, 
0xd5d54095c422125c,0xac434cc14cd34445,0x4b01b53d03c4c945,0x444506c4e35c5360, 
0x4d424b4c1c42beb2,0xdd54a0c9b5d9c31d,0x45b91b3454439d3c,0x1ba5113c42dcc3d9, 
0x315cfc4e5cdcc524,0x45bc3ced95cdc1cc,0x4d2cad2bdc0c03ac,0xe0bc3e6244da4b24, 
};

static int backbone_model3_conv1_quant1_threshold[64 * 14] =
{ // torch.Size([64, 14])
-871, -535, -366, -240, -156, -72, 11, 95, 180, 264, 348, 474, 642, 979,
-952, -581, -395, -256, -164, -71, 21, 113, 206, 299, 391, 530, 716, 1086,
-810, -484, -321, -199, -117, -35, 45, 127, 208, 290, 371, 494, 657, 983,
-891, -568, -406, -285, -204, -123, -42, 38, 118, 199, 280, 401, 563, 886,
-653, -415, -295, -206, -146, -86, -27, 32, 92, 152, 211, 301, 420, 659,
-1115, -761, -585, -452, -363, -275, -186, -98, -10, 78, 166, 299, 476, 830,
-1026, -672, -495, -362, -274, -185, -97, -8, 79, 168, 256, 389, 566, 920,
-738, -477, -346, -248, -182, -117, -51, 13, 78, 144, 209, 307, 438, 700,
-857, -524, -358, -233, -149, -66, 16, 99, 182, 266, 349, 474, 640, 973,
-798, -493, -340, -226, -149, -73, 2, 79, 155, 231, 308, 422, 575, 880,
-925, -621, -469, -355, -279, -203, -127, -51, 24, 100, 176, 290, 442, 746,
-860, -554, -400, -285, -208, -132, -55, 21, 98, 174, 251, 366, 520, 826,
-908, -580, -416, -293, -211, -129, -46, 35, 117, 199, 281, 404, 568, 896,
-1121, -673, -449, -281, -169, -57, 54, 166, 278, 390, 502, 670, 894, 1341,
-1044, -646, -447, -298, -199, -99, 0, 98, 198, 297, 397, 546, 744, 1142,
-999, -608, -412, -265, -167, -69, 27, 125, 223, 321, 419, 566, 761, 1153,
-667, -393, -256, -154, -85, -17, 51, 119, 188, 256, 325, 427, 564, 838,
-1167, -761, -557, -405, -303, -202, -100, 1, 102, 204, 306, 458, 661, 1068,
-1002, -649, -473, -341, -253, -165, -77, 10, 98, 186, 274, 406, 583, 935,
-994, -640, -462, -329, -241, -152, -64, 24, 113, 201, 290, 423, 600, 955,
-978, -598, -409, -266, -171, -77, 17, 112, 207, 302, 397, 539, 729, 1109,
-863, -512, -336, -204, -116, -28, 59, 147, 235, 323, 411, 542, 718, 1070,
-1098, -723, -536, -395, -301, -207, -114, -20, 73, 167, 260, 401, 589, 964,
-732, -444, -301, -193, -121, -49, 22, 93, 165, 237, 309, 417, 560, 848,
-806, -509, -361, -250, -175, -101, -27, 46, 121, 195, 269, 381, 529, 826,
-1131, -789, -618, -490, -404, -319, -234, -148, -63, 22, 107, 236, 406, 748,
-1057, -710, -537, -407, -320, -234, -147, -60, 26, 112, 199, 329, 502, 849,
-857, -531, -367, -245, -163, -81, 0, 81, 163, 244, 326, 449, 612, 939,
-1137, -745, -550, -403, -305, -207, -109, -11, 85, 183, 281, 428, 624, 1015,
-981, -611, -426, -287, -194, -102, -9, 82, 175, 267, 360, 499, 684, 1054,
-995, -655, -484, -356, -271, -186, -101, -15, 69, 154, 239, 367, 538, 878,
-968, -661, -508, -393, -317, -240, -163, -87, -10, 65, 142, 257, 410, 716,
-833, -509, -347, -225, -144, -63, 17, 98, 179, 260, 341, 463, 625, 949,
-1064, -680, -488, -344, -248, -152, -56, 39, 135, 231, 327, 471, 663, 1047,
-1106, -662, -440, -273, -162, -51, 59, 171, 282, 393, 504, 671, 893, 1338,
-899, -598, -448, -335, -260, -184, -109, -34, 41, 116, 191, 304, 455, 756,
-1420, -943, -704, -525, -406, -286, -167, -48, 71, 190, 309, 488, 727, 1204,
-903, -578, -415, -293, -212, -130, -49, 31, 113, 194, 275, 397, 560, 885,
-1217, -809, -605, -453, -351, -249, -147, -45, 56, 158, 260, 413, 616, 1024,
-953, -615, -445, -318, -233, -149, -64, 20, 104, 189, 274, 401, 570, 909,
-881, -577, -424, -310, -234, -158, -82, -6, 69, 145, 221, 335, 487, 792,
-1038, -687, -511, -379, -292, -204, -116, -28, 58, 146, 234, 366, 541, 892,
-949, -613, -444, -318, -234, -150, -65, 18, 102, 186, 270, 397, 565, 902,
-1028, -728, -578, -465, -391, -316, -241, -166, -91, -16, 58, 170, 320, 620,
-829, -535, -388, -278, -205, -131, -58, 15, 88, 162, 235, 345, 492, 786,
-873, -525, -351, -221, -134, -47, 39, 125, 212, 299, 386, 516, 690, 1037,
-893, -559, -392, -267, -183, -100, -17, 66, 149, 233, 316, 441, 608, 942,
-767, -426, -256, -128, -43, 41, 126, 211, 296, 381, 466, 594, 764, 1105,
-1050, -680, -495, -356, -263, -171, -78, 13, 106, 198, 291, 430, 615, 985,
-949, -631, -471, -352, -272, -192, -112, -33, 46, 126, 206, 325, 485, 803,
-809, -559, -433, -339, -277, -214, -151, -88, -26, 36, 99, 193, 318, 569,
-760, -500, -370, -272, -207, -142, -77, -12, 52, 117, 182, 280, 410, 670,
-999, -663, -494, -368, -284, -200, -116, -31, 52, 136, 220, 346, 515, 852,
-856, -531, -369, -248, -167, -86, -5, 75, 156, 237, 318, 440, 602, 926,
-924, -600, -439, -317, -236, -156, -75, 5, 86, 167, 248, 369, 531, 854,
-955, -493, -261, -88, 27, 143, 258, 374, 490, 605, 721, 894, 1126, 1589,
-1072, -686, -492, -347, -250, -154, -57, 39, 135, 232, 329, 474, 667, 1054,
-799, -517, -376, -270, -199, -128, -58, 12, 82, 153, 224, 330, 471, 753,
-1041, -676, -493, -357, -265, -174, -83, 7, 99, 190, 281, 418, 600, 965,
-819, -484, -316, -191, -107, -23, 60, 143, 227, 311, 395, 520, 688, 1023,
-689, -405, -263, -157, -86, -15, 55, 126, 197, 268, 339, 445, 587, 871,
-776, -443, -277, -153, -70, 12, 95, 179, 262, 345, 428, 552, 718, 1051,
-507, -336, -250, -186, -143, -100, -58, -15, 27, 70, 113, 177, 262, 433,
-1677, -1169, -914, -724, -597, -469, -342, -215, -88, 38, 165, 356, 610, 1119,
};

static uint64_t backbone_model3_conv1_conv2_weight[64 * 9] =
{ // torch.Size([64, 3, 3, 1])
0xc, 0xd, 0xb, 0x5, 0x5, 0x5, 0x4, 0x5, 0x5, 
0x4, 0xa, 0x5, 0x4, 0x3, 0x6, 0x4, 0x9, 0x1, 
0x5, 0x6, 0x3, 0x3, 0x3, 0x3, 0x1, 0x4, 0xb, 
0xc, 0xb, 0x2, 0xc, 0x5, 0x3, 0x0, 0x6, 0x4, 
0xd, 0x5, 0x6, 0xd, 0x2, 0x5, 0x9, 0xd, 0x0, 
0x4, 0x6, 0xc, 0x9, 0x6, 0xb, 0xc, 0x3, 0xa, 
0x5, 0x3, 0x2, 0x5, 0x5, 0x4, 0x0, 0x4, 0xa, 
0x2, 0x9, 0xc, 0x4, 0x6, 0xb, 0xe, 0xc, 0x4, 
0x9, 0x7, 0x0, 0xa, 0xe, 0xa, 0x3, 0x3, 0x2, 
0xc, 0xa, 0x4, 0xe, 0xa, 0x5, 0x0, 0x4, 0x4, 
0xe, 0x4, 0x4, 0xd, 0x4, 0x4, 0xc, 0xd, 0xd, 
0x4, 0xd, 0xc, 0x5, 0xe, 0xc, 0x5, 0xb, 0xa, 
0xc, 0x5, 0x4, 0xd, 0x6, 0x4, 0xc, 0x3, 0x2, 
0x4, 0x5, 0x4, 0x4, 0x5, 0x2, 0x4, 0x4, 0xb, 
0x5, 0x0, 0xd, 0x0, 0xd, 0xc, 0xc, 0xd, 0x3, 
0x6, 0xb, 0xb, 0xd, 0xc, 0xb, 0xc, 0x4, 0x4, 
0x4, 0x4, 0x5, 0xb, 0xd, 0x4, 0xd, 0xe, 0x0, 
0xe, 0xe, 0x9, 0xd, 0xc, 0xa, 0xc, 0x2, 0x0, 
0x5, 0x5, 0xb, 0xc, 0xd, 0x3, 0xd, 0xb, 0xc, 
0x4, 0xc, 0xd, 0x4, 0xd, 0x3, 0x6, 0x4, 0x0, 
0xa, 0x3, 0xe, 0xa, 0xc, 0xe, 0x2, 0xd, 0xa, 
0x1, 0xc, 0xb, 0x9, 0xd, 0x4, 0x5, 0x6, 0x5, 
0xb, 0xf, 0x1, 0x3, 0xc, 0xb, 0xc, 0x4, 0xa, 
0xb, 0xe, 0xc, 0xd, 0xc, 0x5, 0xc, 0x3, 0x5, 
0x0, 0x6, 0x4, 0xd, 0x4, 0x5, 0xd, 0xe, 0x3, 
0xc, 0x2, 0xb, 0xc, 0x4, 0xd, 0xc, 0xd, 0xc, 
0x4, 0xd, 0xd, 0x5, 0xb, 0xc, 0x4, 0x1, 0xd, 
0xa, 0xd, 0xb, 0xe, 0x4, 0xb, 0xd, 0x4, 0x3, 
0xc, 0xb, 0xd, 0xc, 0xe, 0x2, 0x1, 0x4, 0x0, 
0x9, 0xe, 0x3, 0x3, 0x5, 0xa, 0x0, 0xb, 0xc, 
0x4, 0x5, 0xc, 0x4, 0x2, 0xd, 0x3, 0xc, 0xe, 
0x6, 0xc, 0xd, 0x3, 0x5, 0xc, 0xd, 0x5, 0x2, 
0xd, 0x4, 0x4, 0xc, 0x6, 0x2, 0xb, 0x5, 0x4, 
0x6, 0x4, 0xc, 0x4, 0x5, 0x9, 0x1, 0x0, 0xa, 
0xc, 0xc, 0x9, 0xe, 0xc, 0x2, 0xd, 0xa, 0x2, 
0xa, 0x4, 0x4, 0xc, 0x7, 0x9, 0x2, 0xb, 0x2, 
0x4, 0x4, 0x4, 0x4, 0x4, 0x4, 0x2, 0x4, 0x4, 
0xd, 0x1, 0x4, 0xd, 0x4, 0xb, 0x4, 0x6, 0x4, 
0x0, 0x3, 0x4, 0xc, 0x5, 0x5, 0xb, 0x4, 0x5, 
0xd, 0x4, 0xc, 0xe, 0xc, 0xa, 0x4, 0xc, 0x0, 
0x1, 0xd, 0xb, 0x9, 0x7, 0x2, 0xb, 0xb, 0x2, 
0x5, 0x3, 0x9, 0x6, 0xb, 0x3, 0x4, 0xb, 0xa, 
0x4, 0x5, 0x3, 0xa, 0x0, 0x2, 0xc, 0xf, 0xc, 
0x4, 0x4, 0xe, 0x4, 0x6, 0xd, 0x3, 0x5, 0x0, 
0xc, 0xe, 0x2, 0x5, 0xe, 0x3, 0xa, 0x6, 0x5, 
0x5, 0x5, 0x9, 0xb, 0xd, 0xb, 0xe, 0xd, 0xa, 
0x3, 0x0, 0x9, 0x4, 0x6, 0x0, 0x4, 0x5, 0x5, 
0x4, 0xd, 0xe, 0x5, 0xd, 0xd, 0x5, 0x4, 0x1, 
0xb, 0xc, 0x4, 0x1, 0xb, 0x4, 0x4, 0x6, 0x3, 
0x3, 0xe, 0xe, 0x4, 0xd, 0xc, 0x3, 0x5, 0x5, 
0xc, 0xd, 0xd, 0x3, 0x0, 0x9, 0x6, 0x5, 0x5, 
0xb, 0xc, 0x3, 0x5, 0x5, 0x3, 0xc, 0xe, 0x4, 
0x4, 0xd, 0xd, 0x5, 0xb, 0xd, 0xa, 0x4, 0x3, 
0x6, 0x1, 0xc, 0x4, 0xd, 0xc, 0x3, 0xc, 0x2, 
0xd, 0xd, 0x3, 0x4, 0xc, 0x5, 0xb, 0xa, 0x5, 
0xc, 0xd, 0xc, 0x0, 0xd, 0xd, 0xa, 0xd, 0xc, 
0x5, 0xc, 0xc, 0x6, 0x4, 0xb, 0x5, 0x5, 0xc, 
0xb, 0xd, 0xa, 0xd, 0xc, 0x4, 0x5, 0x5, 0x3, 
0xb, 0x5, 0x5, 0xd, 0x5, 0x4, 0xd, 0x4, 0x4, 
0x9, 0x4, 0x4, 0xc, 0xe, 0x4, 0xb, 0x9, 0x5, 
0x5, 0x5, 0x4, 0xc, 0xe, 0x2, 0x1, 0x0, 0xb, 
0xe, 0xd, 0x4, 0xc, 0xb, 0x2, 0x4, 0x4, 0x4, 
0x5, 0xc, 0xc, 0xe, 0xc, 0x5, 0xd, 0x3, 0x5, 
0xb, 0xb, 0x4, 0x1, 0xf, 0x3, 0xb, 0x3, 0x3, 
};

static int backbone_model3_conv1_relu2_threshold[64 * 7] =
{ // torch.Size([64, 7])
-12, 42, 98, 154, 237, 348, 571,
38, 78, 118, 157, 217, 296, 455,
12, 63, 114, 165, 241, 343, 548,
40, 72, 104, 137, 185, 249, 377,
-30, 52, 135, 218, 342, 508, 840,
-13, 38, 90, 142, 220, 324, 533,
14, 42, 71, 99, 142, 199, 312,
55, 86, 117, 147, 193, 254, 376,
9, 54, 100, 145, 214, 305, 487,
67, 104, 140, 177, 231, 304, 450,
19, 60, 100, 141, 202, 283, 445,
47, 84, 121, 157, 213, 286, 434,
-19, 23, 67, 110, 175, 262, 435,
59, 94, 130, 165, 219, 290, 433,
-33, 12, 58, 104, 172, 263, 446,
16, 40, 64, 88, 124, 172, 267,
-2, 45, 94, 143, 216, 313, 508,
40, 90, 141, 191, 267, 367, 569,
20, 53, 86, 120, 169, 236, 369,
16, 48, 80, 112, 160, 224, 352,
-36, 33, 103, 173, 278, 418, 697,
-46, 3, 54, 105, 181, 283, 486,
-9, 51, 113, 175, 267, 390, 637,
-59, -3, 52, 108, 193, 305, 529,
24, 78, 131, 185, 265, 373, 587,
6, 42, 77, 112, 165, 236, 377,
6, 42, 77, 112, 166, 237, 378,
4, 50, 96, 142, 211, 303, 487,
-43, 5, 55, 105, 180, 279, 478,
2, 27, 51, 75, 112, 160, 257,
22, 72, 122, 172, 246, 345, 544,
27, 61, 95, 129, 180, 248, 384,
34, 73, 113, 152, 211, 290, 448,
-12, 38, 90, 141, 218, 322, 528,
8, 57, 107, 156, 231, 330, 528,
-73, -7, 58, 123, 222, 353, 615,
44, 74, 104, 133, 178, 237, 356,
34, 67, 100, 134, 184, 251, 384,
-13, 28, 70, 111, 174, 258, 425,
-38, 10, 60, 110, 184, 284, 483,
14, 64, 113, 163, 238, 337, 537,
13, 50, 87, 124, 180, 255, 403,
-10, 35, 82, 128, 198, 291, 477,
41, 76, 110, 144, 196, 265, 403,
-18, 40, 100, 159, 249, 368, 606,
41, 84, 127, 170, 234, 320, 492,
79, 141, 204, 266, 359, 484, 733,
8, 50, 92, 134, 197, 282, 451,
12, 43, 74, 105, 152, 214, 338,
-54, 6, 67, 128, 220, 342, 586,
-3, 49, 101, 154, 233, 339, 550,
32, 69, 106, 142, 198, 272, 420,
50, 79, 107, 136, 179, 237, 352,
25, 59, 92, 126, 176, 243, 377,
-14, 22, 59, 97, 152, 227, 376,
59, 100, 141, 183, 244, 327, 491,
-12, 45, 102, 160, 247, 363, 594,
19, 51, 84, 116, 165, 230, 360,
-25, 20, 65, 110, 178, 268, 449,
40, 68, 96, 123, 165, 220, 331,
40, 73, 107, 141, 192, 260, 396,
-41, -1, 38, 78, 138, 218, 379,
22, 89, 156, 223, 324, 458, 726,
-37, 22, 83, 144, 235, 356, 598,
};

static uint64_t backbone_model3_conv2_conv1_weight[64 * 1*4] =
{ // torch.Size([64, 1, 1, 64])
0x69dcdc4ddb24a5cd,0xccb4c205dc4d2453,0xb5d5355502d4b65e,0x4b4cc344dcbb05bc, 
0x1c34543abc4940b5,0xd434439bd0d3d5cc,0x51dbd34c3c4552a4,0xd42d533e49352034, 
0xd3cc91c2445494a3,0x5d9b433c52bb4bdd,0xdba4cd3c95edad9c,0x944c1cda3d40344c, 
0x441cbd26455dcc4c,0xdcaaddc2b5c3a34d,0x334cd63bc34a44d5,0x344455ac563b4b54, 
0xcc31443c1bc343c5,0xc5c056c240ea52d3,0x04c543945b54db44,0xd4be94bba5554ca4, 
0x5914c4c454a21a51,0x54993dcb35313344,0x3db24432e23b135b,0x4b44945344cedc5d, 
0x315cc3d4c5ccdb94,0x349c326c4b43cb44,0xa3d519912dbbc5bc,0x5c33a43ea0da4b53, 
0x4a2652c5c5bb5455,0xb45b3b32c415dd44,0x5da9445db6cc5c34,0x5d2d32c9c42ca54b, 
0x4b4c41c4b9c4c03a,0xd3b3cc3bd2cad3cc,0x539ce43d22b25ceb,0xccda5dc4d34c440b, 
0x4ec44d4e4dcd3240,0xb4c95dc4239342cb,0xb044a3db5e44d52b,0xcec4db43354e3dbb, 
0x4d4c33d543cd52c6,0x469d4a4d54c5d44b,0xcbb5bc2494a50443,0xb555b45c25d3bc55, 
0x4c460c5b403b5549,0xb51a9c534c551d93,0xd5bc416c44bbd13b,0x4d45d3bcdc2c44c4, 
0x3cbc5b9d9aa3bdcc,0x5aca45c346033c4b,0x45cb4b3ae4b5cb3b,0xe533bebcb1b5344c, 
0xbb25bba44445d55c,0x04d12535d3490c3b,0x2c5a33cab45ccd52,0x5c50dcb4e04cb6cb, 
0xc353db5555552b45,0x6444454c455ad5d5,0x54d5a405aeada354,0x5196543c4643554b, 
0x5dcb2bc445541c3c,0xd5cc0b3b44cb4de3,0x44c3c55dd42ceab3,0x3eb5332bc4de451c, 
0x44bde4511599dc1c,0x3d54e5c52544c555,0x4d3cc4334a6d51b4,0x91491bc253d00c6a, 
0xb9355bc2a2ed3645,0xb24d53c0c4c2cd52,0xad5502c5b6d3b3d5,0x4dd4c6cc5ada4dd3, 
0xccd2bc35b4333c33,0xb3dc9daac6334ed3,0x59c4dc33d0ac3444,0xb32204d2c1accc5b, 
0x5bc493a3a5444bac,0x5299dd4bd4bdcc54,0x5dbac5d4edc03cdd,0x3bc55c514dbdc41c, 
0x135cc03bb4bde35c,0x4c24d546b54b92ba,0xb3454cc44b6cb5a1,0x23a4e3c354db3d5b, 
0xd2429c25c0b3cb44,0x4b43bbb42149b3c4,0x5cbccd6c4ccdcca4,0xb54554a3a543bc45, 
0x33cee4dac9cba42d,0x0c4c95a335c32444,0x190bd3b24b33ccd1,0xc3e3c4955ad43e45, 
0x5c4ca635559dcc5c,0x3c20a992ddb4cb6a,0x5a4a4433a6bc49c3,0x4dd25acd462d34c2, 
0xb4956dd3215c90c6,0xa44c51d954ccb65d,0xc4d9cb431cc641bb,0x3650346cb53cc4d6, 
0x9b4c314de42db35c,0x449b1b0334025333,0xc1cc35a123b3c5d2,0xdc14c30950cda3ce, 
0x43943c434aa04945,0xb22d34d15a456c43,0xda343ba54a3de344,0x94553b2b5b42b2d4, 
0x4961444cb4229c3b,0xbd45cc44cd2ddcc1,0x54324dcbc5d254c3,0x5edc3ad4c45c4dbe, 
0xfa44454344434044,0x3549234d43b2b4b3,0x433c53d32431cd4b,0x3145b935c5493552, 
0xd4d3c4b54a562513,0xcc342595acada2d5,0x521b455e4bbdae54,0x53aa0544c544d53b, 
0xd35da355d5bb106d,0xcd49a4d0e43b31ba,0x34ddc544bb1d44d5,0xcac30acbbc3a2c9d, 
0xc344cc5dd4546652,0x54445ab5bd4c2c3d,0xcdd6cec4445d4533,0x9c542dd0a52a5b93, 
0x5dc543ccc15353c9,0x25dc5dca5e1d5acb,0xdbb44dcd1cd4ccbd,0xd9ca0b434b43c4b1, 
0x3549b50b0b55bc54,0x55e9b3bc4d2d45b4,0x440d556bc43c425e,0x40355c4cc34bb5a0, 
0x429cb135cd54d443,0x45eaddcb3d444dc4,0x5cc03cc5315c433d,0x445c5a2cc2b152c5, 
0x94925c141dac433d,0x1be44a4c45c35cae,0x55c41392d924b153,0x452b24ca430cccc2, 
0xb1e32c4b19cc5ad1,0x5cb214d3342152a4,0x9cb51a259d2454b3,0xd54d43b452a55cc5, 
0xcd5035c453523254,0xab3c44a4dd354453,0xca5d5311353d2c44,0x4453cc32a55dd69d, 
0x54b21d4cd11c14ce,0x04c49cc2cc4b4d2d,0xb523b554d49a32c0,0x0add45301cc9acbd, 
0xda4244d26bb4db50,0x54c4c4ccd5e4cc25,0x39da143dc5a9c439,0xcb5cbb31ca5dd259, 
0x96d9444c255cbd4c,0x9144b24c545504e5,0x00c0d3c3c54e3cb0,0x245b2da4cdec3c55, 
0xada555cd4a0bcbd5,0x46cc34635c34c1cc,0xbd3be35d2c45443d,0x5c53cb5bc5d5cc14, 
0x45544ac55b445b43,0xb524ab4444b452cd,0xcb4e444d32d21a54,0xc54bb424335ce4cc, 
0xc152bdad519aa39c,0x9a4c2a4104b3b52c,0xbcbccc404ac99bb3,0x2b45bbcba421cb42, 
0x45dbbdcb19d53414,0x2d6492c4cdadc545,0xbd0454cb5c22bb2d,0xad4b5d5bc03333cc, 
0x4ecb46c554144db5,0x44b04bcccc45d654,0x3b453c5b65145945,0xd1595dcc455aac5b, 
0x34ccd52dccadbc30,0xbc4cdb9d3c504c3d,0x02c50b354dc424c2,0x65d5434d5cd9dd52, 
0xb54d559435e6a433,0x4c5953639a341c56,0x6dccbc95cd555ccd,0xc0ba5d3956bccc34, 
0x01c4a911b55442db,0x1c3e13254c1b6453,0x395c1bd1bb4bacb1,0xa0024b0243b2a3ab, 
0xcacdc53dcc44e1dc,0x3c1a55da5d2139ca,0x4542dcb95d444cd4,0xb5dbc4cc5c35bdc2, 
0x4144444bbccdadcd,0x53b2d634b234915c,0xa40b25d4d234c44d,0x14c3ad4a94d4c5bd, 
0x4b94425b523cbe4b,0x3bc10cbb5354b592,0xc44c23954d54944b,0x45454c4db43c2232, 
0x325cd5bc02c45a3d,0x62cb40ab3c9b544d,0xbd45edc5ac54a5cd,0x24b4cdb934d350dc, 
0x5da544a5c4cc3a3d,0x95c443c3d1541444,0x43aac534d345a392,0x32c305431303d0dc, 
0xd5cc4cc3eaaac5bd,0x2dcd9ccacbbcad4c,0x39ddb24c4cddc9db,0xb42bdc5daedccc05, 
0xcc34545cdd04aa2c,0xdd94cce5dd9c312d,0x495b934544b559e5,0x24cc4dc5d504bd44, 
0x4dc95d3cd0e5c245,0x4cd295c4caddbd44,0x2cd53cc3d0e3dc1c,0xbddd4d6c1e5dd52b, 
0xd251b23a643b125c,0x6d3c5c4c10dcd9c2,0xc540cd6a4c4035c4,0x0b3034abbd50cba4, 
0x4a5ccb9a923cb1bc,0xdd45cac5ddcb21d9,0x4451bcc3c5445cc3,0xd90dbbb4c4ba530c, 
0x5ddabcc442a34c9c,0xb5c359c4b3bc43bb,0x95ce44ccdd54b34b,0x9244dc54c33bc5cd, 
0xbccbcdc54c1a43dd,0xcbdc4ecdccdd5dec,0xcc54b4dc2dcb2252,0x51acb6d29d4999dd, 
0xec3cbad333dccb3d,0x424c9ccdcb4cc95d,0x35ded4542c4a3dc3,0x5ca4924dcb40b4c3, 
0xcd5b1551cdbb346d,0xbd4b46450aec55a3,0xc33ccbba5dccb424,0x3d4da2d59d4e3cbc, 
0x5cc5c35cc54c0ccc,0xccbdcc446b5c4c90,0xbd5d5ddccbbadccc,0x3dc49bcc2bdbc352, 
};

static int backbone_model3_conv2_quant1_threshold[64 * 14] =
{ // torch.Size([64, 14])
-1160, -730, -515, -354, -246, -139, -31, 75, 182, 290, 397, 558, 773, 1203,
-784, -491, -344, -235, -161, -88, -15, 57, 130, 204, 277, 387, 533, 826,
-847, -549, -399, -287, -213, -138, -64, 10, 85, 159, 234, 346, 495, 793,
-895, -541, -363, -230, -142, -53, 34, 123, 212, 300, 389, 522, 699, 1054,
-857, -481, -293, -153, -59, 34, 128, 222, 316, 409, 503, 644, 832, 1207,
-808, -510, -362, -250, -176, -102, -27, 46, 121, 195, 269, 381, 530, 827,
-957, -624, -457, -332, -249, -165, -82, 1, 84, 167, 251, 376, 543, 876,
-1043, -642, -442, -292, -192, -92, 8, 108, 208, 308, 408, 558, 758, 1159,
-943, -637, -485, -370, -294, -218, -141, -65, 10, 87, 163, 277, 430, 735,
-1488, -1030, -800, -628, -513, -399, -284, -169, -54, 59, 174, 346, 575, 1034,
-742, -423, -264, -144, -64, 14, 94, 174, 253, 333, 413, 532, 692, 1010,
-934, -593, -423, -295, -210, -125, -39, 45, 130, 215, 300, 428, 599, 940,
-892, -596, -449, -338, -264, -190, -116, -43, 30, 104, 178, 289, 436, 732,
-805, -490, -333, -215, -137, -58, 19, 98, 176, 255, 334, 451, 609, 923,
-713, -356, -178, -44, 44, 133, 222, 312, 401, 490, 579, 713, 891, 1248,
-1206, -827, -638, -496, -402, -307, -212, -118, -23, 70, 165, 307, 496, 875,
-980, -597, -405, -261, -165, -69, 26, 122, 218, 314, 409, 553, 745, 1129,
-1049, -673, -484, -343, -249, -155, -61, 32, 126, 220, 314, 455, 644, 1020,
-864, -586, -447, -343, -274, -204, -135, -66, 3, 72, 142, 246, 384, 662,
-1012, -700, -545, -428, -350, -272, -194, -117, -39, 38, 116, 233, 388, 700,
-891, -532, -352, -218, -128, -38, 51, 140, 230, 320, 410, 544, 724, 1083,
-762, -434, -270, -147, -65, 16, 98, 180, 262, 344, 426, 550, 714, 1042,
-1231, -832, -632, -482, -382, -282, -182, -82, 17, 117, 217, 367, 567, 966,
-937, -553, -361, -217, -121, -25, 70, 166, 262, 358, 454, 598, 790, 1174,
-866, -507, -328, -193, -104, -14, 75, 164, 254, 343, 433, 568, 747, 1106,
-894, -584, -429, -313, -236, -158, -81, -3, 73, 151, 228, 345, 500, 810,
-608, -334, -197, -94, -26, 42, 110, 179, 247, 315, 384, 487, 624, 897,
-969, -615, -438, -305, -216, -128, -39, 48, 137, 225, 314, 447, 624, 978,
-805, -480, -317, -196, -114, -33, 47, 129, 210, 291, 373, 494, 657, 982,
-897, -546, -370, -238, -150, -62, 25, 113, 200, 288, 376, 508, 684, 1035,
-976, -617, -437, -302, -213, -123, -33, 56, 146, 235, 325, 460, 639, 999,
-740, -442, -293, -181, -106, -32, 42, 116, 191, 266, 340, 452, 601, 899,
-1151, -754, -556, -408, -309, -210, -111, -12, 86, 185, 284, 433, 631, 1027,
-1042, -610, -394, -233, -125, -17, 90, 198, 306, 414, 521, 683, 899, 1330,
-1005, -629, -442, -301, -207, -113, -20, 73, 167, 261, 355, 495, 683, 1058,
-782, -483, -334, -222, -147, -73, 1, 76, 150, 225, 300, 412, 561, 860,
-906, -587, -427, -308, -228, -148, -68, 10, 90, 170, 250, 369, 529, 848,
-782, -465, -306, -187, -107, -28, 50, 130, 209, 288, 368, 487, 646, 963,
-1149, -792, -613, -479, -390, -300, -211, -121, -32, 56, 146, 280, 459, 816,
-828, -523, -370, -256, -180, -103, -27, 48, 124, 201, 277, 391, 544, 849,
-1262, -799, -568, -394, -279, -163, -47, 67, 183, 299, 414, 588, 819, 1282,
-1034, -675, -496, -361, -272, -182, -92, -3, 86, 175, 265, 399, 579, 937,
-631, -349, -208, -102, -31, 38, 109, 179, 250, 320, 390, 496, 637, 919,
-920, -581, -411, -284, -200, -115, -30, 54, 138, 223, 308, 435, 604, 943,
-829, -536, -390, -280, -206, -133, -60, 13, 86, 159, 233, 343, 489, 782,
-794, -455, -286, -159, -74, 10, 95, 179, 264, 349, 434, 561, 730, 1069,
-886, -561, -398, -276, -195, -114, -32, 48, 129, 210, 292, 414, 576, 901,
-973, -596, -407, -265, -170, -76, 18, 112, 207, 301, 396, 537, 726, 1104,
-654, -409, -286, -194, -133, -71, -10, 50, 111, 173, 234, 326, 448, 693,
-833, -520, -363, -245, -166, -88, -10, 68, 146, 225, 303, 421, 578, 892,
-861, -547, -390, -273, -194, -116, -37, 40, 119, 197, 276, 393, 550, 864,
-665, -374, -229, -120, -47, 25, 97, 170, 243, 316, 388, 497, 643, 933,
-1046, -647, -447, -298, -198, -98, 0, 100, 200, 300, 400, 549, 749, 1148,
-799, -485, -328, -210, -132, -53, 24, 103, 181, 260, 338, 456, 613, 927,
-1209, -854, -677, -544, -455, -366, -278, -189, -100, -11, 76, 209, 387, 742,
-1057, -658, -458, -308, -209, -109, -9, 90, 190, 290, 390, 539, 739, 1138,
-1156, -790, -606, -469, -377, -286, -194, -102, -11, 80, 172, 309, 492, 859,
-780, -449, -284, -161, -78, 4, 86, 169, 251, 334, 416, 540, 705, 1035,
-688, -440, -316, -223, -162, -100, -38, 23, 85, 147, 209, 302, 426, 674,
-792, -534, -404, -308, -243, -178, -114, -49, 14, 79, 144, 240, 370, 628,
-1113, -790, -628, -507, -426, -346, -265, -184, -103, -22, 57, 179, 340, 663,
-1130, -764, -581, -444, -352, -261, -169, -78, 13, 104, 196, 333, 516, 882,
-1096, -675, -464, -306, -201, -96, 9, 114, 219, 324, 430, 588, 798, 1219,
-1071, -716, -538, -405, -317, -228, -139, -51, 37, 126, 214, 348, 525, 880,
};

static uint64_t backbone_model3_conv2_conv2_weight[64 * 9] =
{ // torch.Size([64, 3, 3, 1])
0x3, 0x5, 0x5, 0x3, 0x5, 0x5, 0xc, 0x5, 0x4, 
0x6, 0xb, 0xe, 0xc, 0xe, 0x1, 0xc, 0x5, 0x5, 
0x5, 0x5, 0x5, 0x4, 0x4, 0x5, 0xc, 0xd, 0xd, 
0xd, 0xd, 0xc, 0xd, 0x9, 0xc, 0xe, 0xc, 0xa, 
0x5, 0x5, 0xd, 0x4, 0x5, 0xd, 0x4, 0x1, 0xe, 
0xd, 0xd, 0x2, 0xb, 0xd, 0xe, 0x3, 0x3, 0xc, 
0x3, 0x4, 0xc, 0x5, 0xb, 0x5, 0x3, 0xf, 0x3, 
0xd, 0xc, 0xb, 0xd, 0xe, 0xc, 0x5, 0x4, 0x1, 
0x5, 0x6, 0xc, 0x0, 0x5, 0xe, 0x3, 0x6, 0xc, 
0xb, 0xd, 0xd, 0x2, 0xd, 0xc, 0x2, 0xc, 0xc, 
0x1, 0x4, 0x1, 0xc, 0xe, 0xd, 0xb, 0xc, 0x1, 
0xc, 0xd, 0xd, 0xd, 0x5, 0x5, 0xe, 0x3, 0x4, 
0xc, 0xd, 0x0, 0xd, 0xd, 0x5, 0xd, 0x4, 0x5, 
0x3, 0xc, 0xc, 0x0, 0xe, 0xd, 0xc, 0x5, 0x5, 
0x4, 0x2, 0x3, 0xc, 0xe, 0xb, 0xc, 0xd, 0xd, 
0xd, 0xc, 0xc, 0xd, 0xd, 0xc, 0xb, 0xc, 0xd, 
0x4, 0x4, 0x3, 0x3, 0xd, 0xf, 0x4, 0xd, 0xc, 
0xd, 0xd, 0xd, 0xc, 0xd, 0xc, 0x4, 0x5, 0x5, 
0x5, 0xc, 0xd, 0x6, 0x5, 0xd, 0x9, 0x5, 0x0, 
0xd, 0x6, 0x5, 0xc, 0x5, 0xa, 0xd, 0x5, 0x5, 
0xc, 0xf, 0xa, 0xc, 0x1, 0x4, 0x0, 0x1, 0x2, 
0x4, 0x3, 0x4, 0x5, 0x4, 0x3, 0x4, 0x5, 0x3, 
0xb, 0x5, 0x5, 0x4, 0x4, 0x5, 0x3, 0xe, 0xe, 
0xc, 0xe, 0xe, 0x0, 0xc, 0xc, 0x4, 0xb, 0x1, 
0x3, 0x5, 0xa, 0x5, 0x4, 0xc, 0xd, 0xf, 0xd, 
0x4, 0x5, 0x5, 0xb, 0xb, 0xc, 0xd, 0xd, 0xd, 
0x9, 0xd, 0x5, 0x4, 0xe, 0x4, 0xb, 0xb, 0x0, 
0x5, 0x5, 0x5, 0x3, 0x3, 0x3, 0xd, 0xd, 0xc, 
0x3, 0x3, 0xb, 0x1, 0xf, 0x1, 0xa, 0x3, 0x0, 
0xc, 0xc, 0xd, 0xc, 0xb, 0xb, 0xd, 0xe, 0xc, 
0x4, 0x5, 0x3, 0x5, 0x6, 0x5, 0x0, 0x4, 0x4, 
0xa, 0x3, 0x4, 0x9, 0xd, 0xd, 0xd, 0xe, 0xe, 
0x0, 0x7, 0x4, 0xc, 0x4, 0xc, 0xc, 0xc, 0xa, 
0xa, 0xc, 0xa, 0xa, 0xc, 0xc, 0xd, 0xd, 0xd, 
0xb, 0xc, 0x4, 0xd, 0xd, 0xb, 0xd, 0xd, 0xb, 
0x4, 0x4, 0xc, 0x5, 0xd, 0xd, 0x5, 0xe, 0xc, 
0xd, 0xd, 0xa, 0xd, 0x5, 0x5, 0xd, 0x6, 0x2, 
0xe, 0xd, 0xa, 0xd, 0x5, 0x3, 0xc, 0x4, 0xa, 
0xd, 0x2, 0x4, 0xd, 0x3, 0x6, 0xb, 0x5, 0x5, 
0xc, 0x5, 0x5, 0xd, 0xc, 0x5, 0x9, 0xe, 0x5, 
0xc, 0x5, 0x4, 0x3, 0x4, 0x5, 0x4, 0x5, 0x3, 
0xa, 0x4, 0x5, 0xd, 0xb, 0x4, 0xe, 0xe, 0xc, 
0xd, 0xd, 0x3, 0xd, 0xd, 0x4, 0xd, 0x3, 0x5, 
0x3, 0x1, 0x4, 0x4, 0x4, 0x5, 0x0, 0x1, 0xb, 
0x5, 0x5, 0xb, 0x4, 0x5, 0xd, 0x5, 0x5, 0xc, 
0xd, 0xe, 0xd, 0xe, 0xc, 0x2, 0xb, 0x3, 0x4, 
0x3, 0x6, 0x5, 0x0, 0xd, 0x6, 0x0, 0xd, 0x4, 
0xd, 0xd, 0x1, 0x9, 0xe, 0xc, 0xc, 0xe, 0xc, 
0x4, 0xd, 0xc, 0xd, 0x5, 0xd, 0xa, 0x6, 0xc, 
0xc, 0x6, 0x6, 0xd, 0xb, 0xc, 0xb, 0x0, 0x0, 
0x3, 0xd, 0xc, 0x5, 0xc, 0xd, 0x5, 0x5, 0xd, 
0xb, 0x5, 0x4, 0xb, 0xd, 0x4, 0xb, 0xe, 0xc, 
0xd, 0xe, 0xe, 0x2, 0xb, 0xb, 0x3, 0xb, 0xb, 
0x2, 0xb, 0xd, 0xc, 0xb, 0xb, 0xc, 0xb, 0xc, 
0x5, 0x4, 0xc, 0x5, 0x5, 0xa, 0x4, 0x2, 0x4, 
0x2, 0x5, 0x6, 0xc, 0xa, 0x6, 0x1, 0xd, 0x4, 
0x4, 0xa, 0x1, 0x5, 0x6, 0xb, 0x2, 0x5, 0x3, 
0x1, 0x4, 0xb, 0x4, 0x6, 0x3, 0x4, 0x5, 0x3, 
0x5, 0xa, 0xd, 0x4, 0x6, 0xc, 0xc, 0xc, 0x4, 
0xc, 0xd, 0xd, 0xa, 0x4, 0x4, 0x4, 0x6, 0x5, 
0x5, 0x5, 0x5, 0x6, 0xc, 0xc, 0x5, 0x5, 0xd, 
0xd, 0x5, 0x4, 0xd, 0x6, 0x3, 0xa, 0x5, 0x3, 
0xc, 0x3, 0x2, 0x2, 0x4, 0x5, 0x5, 0x5, 0x6, 
0xc, 0x3, 0x0, 0xc, 0x6, 0x3, 0x3, 0x4, 0xa, 
};

static int backbone_model3_conv2_relu2_threshold[64 * 7] =
{ // torch.Size([64, 7])
-38, 17, 72, 128, 211, 321, 543,
23, 75, 126, 178, 255, 358, 564,
62, 97, 132, 167, 220, 290, 430,
35, 85, 135, 185, 260, 361, 561,
77, 120, 164, 207, 273, 360, 534,
46, 84, 122, 160, 217, 292, 444,
-4, 62, 128, 195, 295, 429, 696,
-19, 23, 66, 109, 173, 259, 430,
2, 59, 117, 175, 262, 378, 609,
14, 54, 94, 134, 194, 274, 433,
24, 62, 100, 137, 194, 269, 420,
-19, 30, 79, 128, 202, 301, 498,
77, 114, 151, 189, 245, 320, 469,
21, 59, 96, 133, 189, 263, 412,
0, 43, 85, 127, 191, 276, 445,
7, 53, 100, 147, 218, 311, 499,
159, 217, 274, 331, 416, 531, 759,
67, 107, 147, 187, 247, 327, 487,
108, 151, 193, 235, 299, 384, 553,
55, 99, 143, 188, 254, 343, 521,
6, 49, 92, 135, 200, 286, 459,
4, 43, 83, 123, 182, 261, 419,
90, 125, 161, 196, 250, 321, 462,
22, 81, 140, 199, 287, 405, 641,
46, 102, 159, 216, 301, 414, 640,
53, 88, 122, 156, 208, 277, 414,
44, 81, 118, 155, 210, 283, 430,
22, 53, 84, 115, 162, 224, 349,
-5, 45, 96, 147, 223, 325, 528,
-35, 16, 67, 119, 196, 300, 506,
-146, -63, 18, 101, 226, 391, 723,
38, 91, 145, 198, 278, 385, 598,
64, 105, 146, 186, 247, 329, 491,
7, 52, 97, 142, 209, 299, 478,
0, 44, 89, 134, 201, 291, 470,
80, 110, 140, 170, 215, 276, 396,
95, 136, 178, 219, 281, 364, 529,
-43, 0, 44, 87, 153, 241, 416,
56, 106, 156, 205, 280, 379, 578,
57, 97, 136, 175, 234, 313, 469,
16, 55, 93, 132, 190, 267, 421,
33, 80, 127, 174, 245, 339, 527,
15, 60, 105, 150, 218, 308, 488,
57, 84, 112, 139, 180, 235, 344,
34, 72, 111, 149, 207, 284, 438,
5, 54, 102, 151, 223, 320, 515,
3, 60, 118, 176, 262, 377, 608,
-4, 44, 93, 142, 216, 314, 510,
-57, -11, 34, 81, 150, 243, 429,
41, 77, 114, 150, 204, 276, 420,
62, 91, 120, 149, 193, 252, 369,
80, 118, 156, 194, 251, 327, 479,
53, 103, 154, 204, 280, 380, 582,
8, 44, 80, 116, 170, 242, 386,
-10, 24, 60, 95, 148, 218, 359,
34, 78, 122, 166, 232, 320, 496,
-24, 7, 39, 71, 118, 182, 309,
-27, 30, 87, 145, 231, 346, 576,
-3, 36, 77, 117, 178, 259, 422,
133, 186, 239, 292, 371, 477, 689,
86, 129, 172, 215, 279, 365, 538,
-36, 13, 63, 113, 188, 288, 488,
71, 124, 176, 228, 306, 411, 620,
21, 50, 79, 108, 152, 210, 327,
};

static uint64_t backbone_model4_conv1_conv1_weight[64 * 1*4] =
{ // torch.Size([64, 1, 1, 64])
0xb4b5cccbd4abc502,0xc324be42243352d2,0x5cd3c0455ddce62c,0x425634bd243c24bc, 
0xbcb1cbd443b5b34c,0x03c5a355c33ccbb0,0x5bcaca5ac1c45cc6,0x49ab4b62cc095ec5, 
0x34cb92c333b64c49,0x435db545d54cd424,0xb13acc126325dc1c,0xc92db4db0c54dc24, 
0x264bc9ddcdcdad0b,0xc2a1c93543ca4c2d,0xe653aa55d9dcb4dd,0xca94a53b3c445c2d, 
0xa43b204344ebb12c,0x4c4d4bda24200de3,0x53d5b35359402393,0x55bcb5d354039b35, 
0x3d5d45c451da2333,0x55bcc6bc535ccdd9,0xd03ab42cdaa25d34,0xcabda343aa55cdb4, 
0x24b49cc53045cd4c,0x53341b45343b3c45,0xba125bd534c54a95,0x9d0b44c45ad64dc3, 
0x0bbddcbcd64bd2cb,0x904c254544542ddc,0x5b3c6cbb245cdcd0,0x55444b5ad903cdcd, 
0xc5e33452d245193a,0x34454d35d3525553,0x4ccad5cb4b24c254,0xd14b1333d9dc29c4, 
0xd2ec5e3acddcd55d,0xcdb4c444e59d5cc5,0x2545dd4ab34464a5,0x4de31a3d4d253cf5, 
0xc5cc1bc19dcdcbc3,0x31ba3c54abccb5b1,0x2545cc3c103cdbcd,0x4dad5c4d49ddc435, 
0xcba3d4d44bd4a439,0x9abc9cbe5adbd550,0x55c2444cdb3444cc,0x5a2413a2a354ba93, 
0xbbb59352cc420a10,0xc3db5d3accdd045c,0x5c9ab9424cda4393,0x0c01b3092a543cce, 
0x2c4334c344db4342,0x432bd03b34334dd1,0x2134b4c292144404,0x150b40a5a333330b, 
0xad4d445b45ab45bb,0xdbcc92e43db3d25d,0xdd4aaa2e0953a249,0x04c5bd5cbb5cd5a4, 
0x253d303c4cca45c4,0xd3039d5c4d02a55d,0xd544356bbc0d433e,0x5a44a41c34cca445, 
0x4d4341c50ddca045,0xd5acbdbd4d245535,0x42b59ca4b5ca3a34,0x0c9d53c051b4a4a6, 
0x3e55d943bdcdaacb,0x5cc2b544c5bb5c35,0xa453cc339cd05345,0xedc4cdba4cd59cbb, 
0xd5bb1c50c0b954d5,0xccd5c1b4d4ae5cbc,0x4c46dc5cdf5dcd5e,0x2cd4e45becbdd5b6, 
0xdbccb34bb5234cc1,0xd1d02d4d4bcd1b5a,0x553434cb4c4ab43c,0x64cdcac40a4dd324, 
0x4a61d554d355c634,0xbb4b14cb6bd64cdd,0x54d1c5ccdc4465cd,0xecc54c65d3c6dc4d, 
0x2b93cc5c4a5db9c3,0xccb154e5ccc4a540,0xcd534345235b4cb5,0xc434c9d3bb431dbc, 
0xc3c43c44db61c511,0x2b359ddc5bcc9543,0x4bdc4bac5a4b9344,0x4d15c4b0c1ba55b3, 
0x4d4ac90caaaa05da,0x09a53cb455b54ebd,0x1db3c3cbdc4d05ce,0x3135ac5cd4a0cc4c, 
0x4d43d4ba234dca31,0x52215305dda39532,0x4a6123abb0345cc9,0x943e4ec4cbd35e3d, 
0x34abd5453245d62a,0xccd5b54c3eb9b2d0,0xdd20344b5aca4d4c,0x443d434ab31a54cc, 
0x0baa09a31ca3c3bc,0xbcdb4dbd1ddab44b,0xbcbc9c4bca3bdd2b,0x1bc9b95cba4bd2ca, 
0x34463bcdc2d321c2,0x525c0d09b3b3455d,0x59c4b2a04ca04459,0x3e2434ab4ab3db46, 
0xd5c42d5454a3c243,0xad31a4cb45e394ce,0x1513ca04913b3a35,0x4d40cd30442b52d3, 
0x9bcca3cdc4343dc4,0x4b95434533b45d03,0x952052445cb0c35b,0x300db4d449d41436, 
0xa415c339cc90534b,0x4ae15dc105ed44c4,0x29c393c2dc33393c,0x1494d44bc3155d34, 
0x3e4a235e5cc2c201,0xc4c335a52b3044cb,0xb223534c425d3333,0x3aba3b3c4b05d335, 
0xc5bc3c5da4ba3e2c,0x91b43cd6cd34955b,0xd4ac2b6544ca54aa,0x5c3a10b35c4524ac, 
0xdc4dda6e5429ca2a,0xdb4c2dd315c0c65d,0x241b54c1c2323193,0xc52bbc5cbb51ddbc, 
0x34124c35cc33bcb3,0x5b0c35a5c593bd0b,0x4332b044e5904aa5,0xe0bccc43d3012a3e, 
0x932334934125b34c,0x3334c344dd2b4b2a,0x34ee4c5b34db432c,0x3f244442a9444b5e, 
0x9c5545656a3c5432,0xb3dc555e54baacba,0xd5b4406ebc4a63c4,0xddc33c445304c5cd, 
0x5c4cd435b4434700,0xccd4a313ccabcd3c,0xecba39c93b31bb44,0x04d2444cb3b351bd, 
0xbc2cc3dd3ced1acb,0xcc4b334cb4235c45,0xb5533bb4ecc43502,0xd4a432c002ba1dc5, 
0x3b12ccac42ddbc3a,0x426cdcbdbc553b2b,0x4b533ab46bb0359d,0x42c9cbe04963accd, 
0xa4339c3d4cc5c59c,0xcddbcd3333dda30d,0x34bcbd5bdc5c52c9,0x44c49c6ccd344dd5, 
0x3d2b44cdba6dcca2,0xcd2644d214b4cde5,0x323c5a4adadc0ec5,0x35c4a49aa44b55ad, 
0xc4add42bacdd5da3,0xb1c4c443cc2b504b,0xd243ca5059dc356a,0xad234d345b3bdc2d, 
0x2440204acecb21c2,0xacc5521333d15ced,0x2241c4d0c9c15353,0xccc03b5454e43c25, 
0x4bb43043dc45dcb3,0xbd43dbecd5bcc454,0x3d53c3dad4d54e03,0xe5bcd4ebc3e409bd, 
0xc5cd10bdcac1c4d3,0xcd5a13b6cb35451d,0xc54a4bbcacc13c5e,0xdddbb36b0c24d5b5, 
0xcccb3b45c5543bc2,0xda3baa41d3bcd44c,0x5cb3c44a4aab93cb,0xd392dd44d4cecacc, 
0x35553d53ed0db243,0x4049b9c5cbc4a2ab,0x5c41ed44434ab5b4,0x3d443dbab4d464cb, 
0xadcbb4d543ac454b,0xb46522ad44265cb5,0xdb4d62c255d3162c,0x4d4454b35b54354c, 
0xcdd354d544db3dd3,0x5c436ccb44d24d33,0xc953cce4d4dadc25,0x15acc5dcccae5a06, 
0x3019244454c45994,0xa422ca5944101a34,0xb445341bd3244413,0x555222242453aa34, 
0x2cc4d2443f504cbb,0x0ccb595a450c9c45,0xda6213c5d53443d4,0xde4444c34ad53d2b, 
0x4d4acba4d55bc1b2,0xa36b2ac62326b3dc,0xb2b35bc35b0b21cb,0xdca4944b43eb234a, 
0x4544c32c4d15ccd4,0xccbc5c54bccbd55c,0xb5625259343abdc4,0xa34bdded3cdbae3d, 
0x3c545d5d9cddca20,0xd95b4edc44c595bc,0x51b334309b335453,0x9502c5c544c50ab5, 
0x4513c3bdcc541033,0x43035d31cc4c3b43,0x1d9b3db3431cebcd,0x02232a3d4a5dc2bc, 
0x459deb433254b532,0xccc3b9353c3a45cc,0xcc4c13c53023b2bd,0x554e0c1bcbc354cd, 
0x2cd55bd9cccd4435,0x5c31bccd46135dcc,0xdcb5c1dc3dcc105b,0xe395c4c35434e4d5, 
0xbcc9d5aa5cd5c3b3,0x55eccc552cbdc4c3,0x5d5ce4dd52d440db,0x52ce4e63d44c3ccd, 
0xc6a3c4144344bca9,0xb4ccdc6e23ccca4c,0xe53cb2ad44ccc4d3,0xccbc35dbb4c2a4ad, 
0x444ca93cdd2444d1,0x4da3b4b3c4ca152d,0x4ca42bc9dcc3b93e,0xeb23d35cc1edc055, 
0x3cb6eac5c39453d4,0x3bc4a9bb03a05c5c,0xcac4933baa9bc515,0xd0350b4bc2cb4eb2, 
0xb44350c1ccb5d4c1,0xbcd3cd4999be4c44,0x5d3cde4cdd449c55,0x5ce3cb5dddcd49a5, 
0x555dccc2b22d5d15,0x25353dd53934ddd5,0xcdd4cdc5dac2acbd,0xb33c4451c3b36152, 
};

static int backbone_model4_conv1_quant1_threshold[64 * 14] =
{ // torch.Size([64, 14])
-1170, -742, -528, -368, -261, -154, -47, 59, 166, 273, 380, 540, 754, 1182,
-1228, -804, -592, -433, -327, -222, -116, -10, 95, 201, 307, 466, 678, 1101,
-1012, -623, -428, -282, -185, -88, 8, 106, 203, 300, 397, 543, 738, 1127,
-1112, -702, -497, -343, -240, -138, -35, 66, 169, 271, 374, 528, 733, 1143,
-1024, -616, -412, -259, -157, -55, 46, 148, 250, 352, 454, 607, 811, 1218,
-1131, -653, -413, -234, -114, 5, 124, 244, 364, 483, 603, 783, 1022, 1501,
-1126, -644, -403, -223, -102, 17, 138, 258, 379, 499, 620, 801, 1041, 1523,
-1455, -939, -681, -487, -358, -229, -100, 28, 157, 286, 415, 608, 866, 1383,
-1445, -971, -734, -557, -438, -320, -201, -83, 35, 153, 271, 449, 686, 1160,
-2389, -1700, -1355, -1096, -923, -751, -579, -406, -234, -61, 110, 369, 714, 1404,
-1437, -943, -696, -511, -388, -264, -141, -17, 105, 229, 352, 537, 784, 1278,
-976, -593, -401, -258, -162, -66, 29, 125, 220, 316, 412, 556, 747, 1130,
-1145, -729, -521, -364, -260, -156, -52, 51, 155, 260, 364, 520, 728, 1145,
-1198, -716, -475, -294, -174, -53, 66, 187, 307, 428, 548, 729, 970, 1452,
-1443, -959, -717, -536, -415, -294, -173, -52, 68, 189, 310, 492, 734, 1218,
-1059, -641, -432, -275, -171, -66, 37, 142, 246, 351, 455, 612, 821, 1239,
-1004, -571, -355, -193, -85, 23, 131, 239, 347, 455, 563, 725, 942, 1374,
-1208, -758, -533, -364, -251, -139, -26, 85, 198, 310, 423, 592, 817, 1267,
-2174, -1503, -1167, -916, -748, -580, -412, -245, -77, 90, 258, 509, 845, 1516,
-1011, -647, -465, -329, -238, -147, -56, 34, 125, 216, 307, 444, 626, 990,
-1244, -705, -435, -233, -98, 35, 170, 305, 440, 575, 710, 912, 1181, 1721,
-1062, -683, -494, -352, -258, -163, -68, 25, 120, 215, 309, 451, 641, 1019,
-1291, -866, -654, -495, -389, -282, -176, -70, 35, 141, 248, 407, 619, 1044,
-1450, -998, -771, -602, -489, -375, -262, -149, -36, 76, 189, 359, 585, 1038,
-1020, -629, -433, -287, -189, -91, 6, 104, 201, 299, 397, 544, 739, 1130,
-915, -573, -403, -275, -189, -104, -19, 66, 151, 236, 322, 450, 620, 962,
-1518, -1055, -823, -649, -533, -418, -302, -186, -70, 45, 161, 334, 566, 1029,
-968, -573, -376, -228, -129, -30, 68, 166, 265, 364, 463, 611, 808, 1203,
-1234, -825, -620, -467, -365, -263, -160, -58, 43, 145, 248, 401, 605, 1014,
-796, -439, -261, -127, -38, 50, 139, 228, 317, 406, 496, 629, 808, 1164,
-1050, -679, -493, -354, -261, -168, -75, 16, 109, 202, 295, 434, 620, 991,
-1058, -623, -406, -243, -134, -25, 82, 191, 300, 408, 517, 680, 898, 1332,
-1181, -731, -505, -336, -224, -111, 1, 113, 226, 339, 452, 621, 846, 1297,
-1008, -611, -413, -264, -165, -66, 32, 132, 231, 330, 429, 578, 776, 1173,
-1034, -684, -509, -378, -290, -203, -115, -28, 59, 146, 234, 365, 540, 890,
-1465, -955, -700, -509, -381, -254, -127, 0, 127, 255, 382, 574, 828, 1338,
-1211, -672, -403, -201, -66, 67, 202, 337, 471, 606, 741, 943, 1212, 1751,
-1131, -728, -527, -376, -275, -175, -74, 26, 126, 227, 328, 479, 680, 1083,
-1255, -808, -585, -417, -305, -194, -82, 29, 141, 252, 364, 531, 755, 1202,
-1132, -650, -409, -228, -107, 12, 133, 253, 373, 494, 614, 795, 1036, 1518,
-1496, -1014, -774, -593, -473, -353, -232, -112, 7, 128, 248, 428, 669, 1150,
-1173, -774, -575, -426, -326, -226, -127, -27, 72, 171, 271, 420, 620, 1018,
-956, -595, -414, -278, -188, -98, -7, 82, 173, 263, 353, 489, 670, 1031,
-1017, -634, -442, -298, -202, -106, -10, 85, 181, 277, 373, 517, 709, 1092,
-1837, -1285, -1010, -803, -665, -527, -390, -252, -114, 23, 161, 367, 643, 1194,
-1091, -696, -499, -351, -253, -154, -55, 42, 141, 239, 338, 486, 683, 1077,
-1350, -926, -714, -555, -449, -343, -236, -130, -24, 81, 187, 346, 558, 982,
-1275, -837, -618, -454, -344, -235, -126, -16, 92, 202, 311, 476, 694, 1132,
-1459, -762, -414, -152, 21, 195, 369, 543, 717, 892, 1066, 1327, 1675, 2372,
-1482, -1022, -792, -620, -505, -390, -275, -160, -45, 69, 184, 357, 587, 1047,
-1050, -552, -302, -115, 8, 133, 257, 382, 507, 631, 756, 943, 1192, 1691,
-1100, -685, -477, -321, -217, -114, -10, 93, 197, 301, 405, 561, 768, 1184,
-963, -557, -353, -201, -99, 2, 103, 205, 307, 408, 510, 662, 866, 1272,
-1301, -843, -613, -441, -327, -212, -97, 16, 131, 246, 360, 532, 762, 1220,
-1178, -699, -459, -279, -159, -39, 79, 199, 319, 439, 559, 739, 978, 1458,
-1286, -859, -645, -485, -379, -272, -165, -58, 47, 154, 261, 421, 634, 1061,
-969, -610, -430, -296, -206, -116, -26, 62, 152, 242, 332, 466, 646, 1005,
-1343, -838, -586, -397, -271, -145, -18, 107, 233, 359, 485, 674, 927, 1431,
-1371, -914, -686, -515, -401, -287, -172, -58, 55, 169, 283, 454, 683, 1139,
-1163, -739, -527, -368, -262, -156, -50, 55, 161, 267, 373, 532, 744, 1168,
-1555, -1040, -782, -589, -460, -331, -203, -74, 54, 183, 311, 505, 762, 1277,
-905, -583, -422, -302, -221, -141, -60, 19, 99, 180, 260, 381, 542, 863,
-1753, -1236, -977, -783, -654, -524, -395, -265, -136, -7, 122, 316, 574, 1092,
-1086, -653, -437, -275, -167, -58, 49, 157, 265, 373, 481, 644, 860, 1293,
};

static uint64_t backbone_model4_conv1_conv2_weight[64 * 9] =
{ // torch.Size([64, 3, 3, 1])
0x4, 0x5, 0x4, 0x5, 0x5, 0x4, 0x4, 0x5, 0xb, 
0x5, 0x6, 0x4, 0x1, 0xa, 0xb, 0xc, 0xd, 0xb, 
0x4, 0x6, 0x3, 0xc, 0x5, 0x4, 0xc, 0x4, 0x4, 
0xd, 0xd, 0xb, 0xc, 0x5, 0x5, 0x4, 0x5, 0x5, 
0x5, 0x5, 0x5, 0x0, 0xc, 0xc, 0xd, 0xd, 0xd, 
0x6, 0x4, 0xd, 0x4, 0xd, 0xc, 0x4, 0x4, 0xb, 
0x6, 0x5, 0xd, 0x5, 0xd, 0xc, 0xc, 0xb, 0xc, 
0x2, 0x5, 0x5, 0x5, 0xa, 0x1, 0x6, 0x3, 0x3, 
0x4, 0xd, 0xd, 0x2, 0x5, 0xe, 0x4, 0x4, 0xd, 
0xb, 0xc, 0xc, 0x9, 0xe, 0xe, 0x3, 0xc, 0x1, 
0xc, 0xc, 0xb, 0x3, 0x3, 0x4, 0x4, 0x5, 0x5, 
0xe, 0x6, 0x5, 0xd, 0xc, 0x4, 0xb, 0xd, 0x2, 
0x5, 0x5, 0x5, 0xb, 0x3, 0x5, 0xd, 0xd, 0x4, 
0x3, 0x2, 0x4, 0xc, 0xc, 0xc, 0xd, 0xc, 0xc, 
0xa, 0xd, 0xb, 0xb, 0xf, 0xc, 0x4, 0x3, 0x5, 
0xb, 0x4, 0xc, 0xd, 0xc, 0x1, 0x3, 0xe, 0xd, 
0x1, 0xb, 0x0, 0xc, 0x7, 0xb, 0x2, 0x4, 0x0, 
0xb, 0x9, 0xd, 0x4, 0x2, 0xd, 0x6, 0x6, 0xb, 
0x4, 0x4, 0xc, 0xe, 0xc, 0x5, 0xd, 0xb, 0xa, 
0x3, 0xd, 0xe, 0x4, 0x5, 0xd, 0xb, 0xb, 0xb, 
0xd, 0xe, 0x1, 0xc, 0xe, 0xa, 0x0, 0xb, 0x4, 
0x4, 0x2, 0xc, 0xd, 0xc, 0x3, 0xe, 0xc, 0x2, 
0x4, 0xc, 0xe, 0x5, 0x4, 0xd, 0x5, 0x4, 0xd, 
0x5, 0x3, 0x2, 0x3, 0xd, 0xc, 0x0, 0xe, 0xc, 
0xe, 0xe, 0xa, 0x3, 0x4, 0x9, 0x2, 0x4, 0x1, 
0x4, 0x2, 0xc, 0x5, 0xc, 0xd, 0x6, 0xd, 0xd, 
0x5, 0x4, 0xd, 0x4, 0x4, 0x4, 0x9, 0x3, 0x4, 
0xd, 0x4, 0x5, 0xd, 0x1, 0x6, 0xc, 0x1, 0x3, 
0xa, 0x4, 0xa, 0x4, 0xf, 0x3, 0x0, 0x3, 0x1, 
0x6, 0x5, 0x3, 0xb, 0xd, 0xd, 0xc, 0xb, 0xb, 
0x5, 0x9, 0xe, 0x5, 0xe, 0x3, 0x4, 0x9, 0x4, 
0xc, 0xc, 0x9, 0xb, 0x2, 0xc, 0xe, 0xd, 0xb, 
0xb, 0x5, 0x4, 0xc, 0xb, 0xc, 0xe, 0xe, 0xb, 
0x6, 0xc, 0xd, 0x6, 0xd, 0xd, 0x5, 0x5, 0xc, 
0xe, 0xd, 0x4, 0xb, 0xb, 0x5, 0x2, 0x5, 0x5, 
0x5, 0x4, 0x6, 0xd, 0xc, 0xc, 0xe, 0xd, 0xe, 
0x4, 0x4, 0x3, 0xd, 0xc, 0xc, 0xc, 0xd, 0xd, 
0x3, 0xc, 0xc, 0xb, 0x6, 0x5, 0xe, 0xc, 0x5, 
0xd, 0xd, 0xd, 0xb, 0xc, 0xc, 0xa, 0x3, 0xc, 
0x5, 0x6, 0x5, 0xb, 0xc, 0xa, 0x0, 0xc, 0x4, 
0xd, 0xb, 0x1, 0xe, 0x4, 0x1, 0xc, 0xc, 0xc, 
0xd, 0x3, 0x5, 0xe, 0xb, 0x6, 0x2, 0x3, 0x3, 
0x3, 0xa, 0x4, 0x5, 0x6, 0x3, 0xa, 0xd, 0xc, 
0xd, 0xd, 0xd, 0x2, 0xc, 0x4, 0x5, 0x3, 0x5, 
0x4, 0x5, 0x6, 0x3, 0x4, 0x5, 0xb, 0x1, 0x9, 
0x4, 0xe, 0xe, 0xb, 0x4, 0x2, 0xc, 0xa, 0xb, 
0x2, 0x4, 0x4, 0xe, 0x4, 0x4, 0xe, 0x4, 0x2, 
0xb, 0x4, 0x3, 0xc, 0xb, 0x5, 0x3, 0xf, 0xc, 
0x3, 0x6, 0x6, 0xc, 0x5, 0x4, 0x4, 0xb, 0x4, 
0xc, 0xc, 0xd, 0xb, 0xc, 0xc, 0xb, 0xd, 0xc, 
0x3, 0xd, 0xd, 0xd, 0xd, 0xc, 0xc, 0x4, 0x5, 
0x6, 0x5, 0x5, 0xc, 0xd, 0x0, 0xd, 0xd, 0xd, 
0x6, 0x5, 0xc, 0x5, 0xd, 0xd, 0x3, 0xc, 0x3, 
0xa, 0xf, 0x3, 0x3, 0xc, 0x3, 0x2, 0xd, 0x0, 
0xd, 0xd, 0xd, 0xb, 0xc, 0x1, 0xd, 0xb, 0xb, 
0x1, 0xd, 0x1, 0x5, 0xe, 0x4, 0x4, 0xe, 0xa, 
0xc, 0xa, 0x4, 0xe, 0x4, 0x2, 0xb, 0x5, 0x4, 
0xa, 0x7, 0x5, 0x9, 0x4, 0x2, 0xb, 0x2, 0xb, 
0x4, 0x4, 0x0, 0x4, 0x4, 0x5, 0x3, 0x4, 0x5, 
0xc, 0xb, 0xc, 0x4, 0xc, 0xd, 0x7, 0x5, 0xa, 
0xc, 0x5, 0x5, 0x5, 0xc, 0xd, 0x3, 0xd, 0xd, 
0xa, 0xc, 0xb, 0xb, 0xd, 0xd, 0x5, 0x5, 0x5, 
0x3, 0x4, 0x2, 0x4, 0xf, 0xb, 0xc, 0xa, 0x9, 
0xa, 0xc, 0xb, 0xc, 0x7, 0xa, 0x4, 0x5, 0x2, 
};

static int backbone_model4_conv1_relu2_threshold[64 * 7] =
{ // torch.Size([64, 7])
35, 84, 134, 184, 259, 359, 558,
-28, 25, 78, 131, 211, 317, 529,
17, 69, 121, 173, 251, 355, 563,
10, 50, 90, 130, 191, 271, 432,
34, 67, 100, 133, 182, 248, 380,
-5, 30, 67, 103, 158, 231, 377,
33, 65, 96, 127, 174, 237, 362,
-15, 45, 105, 166, 256, 377, 619,
-37, 0, 36, 73, 128, 201, 349,
28, 60, 92, 125, 173, 237, 366,
0, 32, 65, 98, 147, 213, 345,
-1, 47, 97, 146, 220, 318, 515,
-4, 24, 54, 83, 127, 186, 303,
11, 38, 65, 92, 133, 187, 296,
93, 149, 205, 261, 346, 458, 683,
-18, 23, 65, 107, 171, 255, 424,
-8, 53, 116, 178, 272, 397, 646,
-30, 23, 77, 132, 213, 321, 539,
29, 54, 79, 105, 143, 193, 294,
-11, 30, 73, 115, 178, 263, 431,
-51, 20, 92, 165, 273, 417, 705,
-3, 51, 105, 160, 243, 353, 573,
1, 37, 73, 109, 164, 236, 380,
-4, 27, 59, 92, 140, 205, 334,
42, 91, 141, 190, 265, 364, 562,
35, 77, 120, 163, 227, 313, 484,
4, 25, 47, 69, 101, 144, 231,
36, 77, 118, 159, 221, 303, 467,
2, 56, 110, 164, 245, 354, 570,
-12, 36, 84, 132, 204, 300, 493,
36, 82, 128, 174, 243, 335, 519,
42, 76, 110, 143, 194, 261, 396,
-8, 40, 88, 136, 208, 304, 497,
47, 93, 138, 184, 253, 344, 527,
7, 53, 99, 145, 213, 305, 487,
77, 123, 168, 214, 282, 374, 556,
0, 39, 80, 121, 182, 264, 427,
81, 121, 161, 202, 263, 344, 505,
53, 93, 133, 173, 233, 313, 473,
-79, -32, 14, 61, 131, 225, 412,
-6, 34, 75, 117, 179, 261, 426,
78, 115, 152, 189, 245, 319, 467,
4, 42, 79, 116, 172, 247, 396,
11, 49, 86, 123, 179, 254, 404,
31, 94, 157, 220, 314, 440, 692,
-37, 17, 71, 126, 208, 318, 537,
15, 57, 100, 142, 205, 289, 458,
-11, 48, 109, 169, 260, 381, 623,
-66, -17, 31, 80, 154, 252, 448,
35, 73, 111, 149, 206, 281, 432,
7, 41, 75, 109, 160, 228, 363,
58, 103, 148, 194, 261, 352, 533,
15, 58, 102, 145, 210, 297, 471,
62, 128, 193, 259, 357, 488, 750,
52, 94, 135, 177, 240, 323, 490,
32, 84, 137, 190, 268, 374, 584,
47, 78, 109, 140, 186, 247, 371,
-76, -9, 57, 124, 224, 358, 626,
13, 60, 107, 155, 225, 320, 509,
19, 81, 143, 205, 298, 421, 669,
14, 45, 77, 108, 155, 218, 343,
39, 80, 122, 163, 226, 309, 475,
32, 81, 130, 179, 252, 350, 545,
-6, 53, 113, 173, 263, 383, 623,
};

static uint64_t backbone_model4_conv2_conv1_weight[64 * 1*4] =
{ // torch.Size([64, 1, 1, 64])
0x594ccbdad3d4bca3,0xcd4d24a34dadc0bc,0x59ca3d5db5559dda,0xbaca4ba6edcc01c3, 
0x49e436ec4c3acc5c,0x3b2c2d4d95443954,0x924b3ca45a3ba53c,0x45b04445353bc55b, 
0x44c94219cc0ccb0c,0xc4453335c319c4ec,0xbb34aa033344a251,0x0cb3ac24cbcac4c4, 
0xa594ab436d3c94c5,0x34dbc99cb2bddd4c,0xb5dc3a2d25ddbb43,0x5bcddd45cb5dabcc, 
0xd6accd4c540543d2,0x644d11bb4bbdcc2a,0xb1454dcc094ca3de,0xd4abc4564252a5dc, 
0xde113244235ba43c,0xd35c140ccc3bc221,0x321245444444594d,0x4d4a32bdb14c4455, 
0x9b5cca430d453d2b,0xcaedc0d20d2b3c3e,0x23c35ac4616d91c5,0xe2d0443ddcccb45d, 
0x5ccd154b495dd434,0x52419c491b3cd202,0x1bba44acc54b5dc0,0xd4bcd3b0cc434344, 
0x01033acd44d54cb3,0xab4d5d345bdb24bc,0xb553dbeb5dccda4c,0xbe1c55abc4c2355d, 
0x3c55b4d33cd34cac,0xb45c53d5321b44a2,0xcdccac2c44b6d065,0x5c0451d6a3d23ac2, 
0xb13d5392c492c415,0xcc3cd45340b42521,0xbb43d2e3bd05cb13,0xac4d24339ab63c43, 
0x5d4b455b25dd443d,0xc2343d9c433a35c5,0x2c45455cd5a2be3e,0xbdb40c3c51532355, 
0xcbbb2c26ad5bcb44,0x2cdb5acbaa69bd4a,0xdc5cbcc5cd3a4ba5,0xccb4cdc2cabb9dd2, 
0x0133154c5cb9331d,0x43cd3d405ddd4943,0xd9035c9db5399153,0x43b254155253c44d, 
0x34432acc4d9544c3,0x5edd20555bb30b44,0x4533abb25aa5dc1b,0x545d5535a52b4434, 
0x5cd322ddbb31bccc,0xca54b9513cc3c62b,0x5c2ccc5dc4cbdade,0xd4dc5ddb44cb5d4a, 
0x5c4a3144255dcca3,0xb55c03442449b4c1,0x4c3444d54b454255,0x443c3b33dadb9553, 
0xdd534c12233e4bd5,0x616db433334e3da4,0x4dc195c4ac55d4c5,0xc154cbc5dc32ccbc, 
0x34b19ad5144446d5,0xc5de334c305de55b,0xa343574bc94ea3cb,0xa454545553304ab4, 
0x4ace3422435cb2ba,0xb454cd93c3b43b33,0x4da44333d4454a23,0xc53b133c4d123c65, 
0xa3d9c44b435414b4,0x449240cb2b5d3da5,0xd0c14444dc4acb64,0x54d13d1453adb9b9, 
0x39393c355c5cd433,0x95dbdb6dc54d5424,0xc4cb4555523d5ac4,0x933ac4baca5bdc3c, 
0x4c3c314bc132ab43,0xcab39cad543ca902,0x9cc7c22b4a0bab13,0xb4ac11a34ddc02a3, 
0x33234c432b4dd544,0x133642a6c5bb14c5,0x5bba25045bcb5a54,0x4345c349e3524544, 
0x4db9c3b4943cb45b,0xc345a1bcbba4db52,0x423bb5adc2d34a3b,0x544041a3b4aa4d4d, 
0x41bbcbc63b2243b4,0xc43bdbc4c25b35ce,0xccbcebd544b2b945,0x9c4b4324a9c4cd43, 
0x55430203932044b5,0x544c03553b236935,0xc3b5c3bbc43cb5b4,0x053d455545394d2a, 
0x6525cb1ad45465d6,0x3bdc2ba424c452c4,0x32cbc6c4bc54cbd1,0x5b55b54a54cf54da, 
0x3dc423cbcbdddddc,0xd15adda6ccddddaa,0x32c4cccdc33e57bd,0x4c24cd6d43acdc3b, 
0xcdc51c1ca35a643c,0xdd533dddd41b99c3,0xb254ad0b1c4d4ecd,0x1cdbb12d164cb94c, 
0xc4c1ab44ccc390b4,0xac1cd55d5e6445d5,0x5453b4343dcdb4dc,0x4bc3bb2c93c3caa3, 
0x3bdabc440d2cbdc4,0xbdbed2535c54b333,0xb96a0c5cd3cbd9bc,0x4cc4bdd3d4c0dcc4, 
0x3e44b4ccb42234bb,0xc53d303435044344,0x4c49224a9d34c19b,0xa31c45edb451a43a, 
0xb0b00d4a5d2c33c4,0x32cbbc9bbdcd3a64,0xdccabbbab5ad5544,0xd3c3cc3dbb5cb01d, 
0xdc1433553cc9d540,0x5546db35c03002c5,0xc31b30ca5e9a3344,0x3b4cccac4c5324d3, 
0x60bac34cbcd2aab1,0x49c3bc9d2cba3251,0xd3a6b2bcb3b9c915,0xb4290b4b2b4ccdac, 
0xd25d6b53dc91dd5d,0x2ddcb3d3baeacde4,0xbb146d951c52abc4,0xd4dc1ccc0dc4a60b, 
0x909acb19ab3a9403,0x90b2a12920939b3a,0x1a399510cc22b939,0x304ab30a40a1bb2a, 
0xb0513c55ddd255dc,0x93ccc1b4bd05ac1c,0xcdc34d245434c444,0x32d2253d4a243bcc, 
0x30039babcdbc545c,0x3a1b9bcb53c26cb2,0xa9ccb5cdb9c2cbc9,0x1c24bc9c4dcaaccb, 
0x93b5dcc42cb443ad,0x2525dd4dc3c43dab,0xd655cbcc2dcdb04b,0xd304c90d3464ac4d, 
0xedb1a3d33abad45d,0xd5d55c3bb5b44b41,0xa40d25121c43cc54,0xdc4445de1cb44bb3, 
0xc0c3b43bc56eb554,0xc595cc0ce4324bba,0xbdc43443353c54db,0x3435ec6e4a5ddd43, 
0x4cdd54454b22accb,0x51c9dd2ddda53b53,0xa4bc49a5054d5a9c,0x35caccd4c54b5954, 
0x4b04a02bc40c4436,0xbc53dcac4435bc4a,0x4cd5450cd23452db,0xa4d4cc5555130a3c, 
0xacacc424d55cdca4,0xcb3cc644dd5ccc46,0x4c244d4dd442cc00,0x5dcbbbcbb245ddd4, 
0x3a4c45b93c5ddd3d,0xd130456cac44b5cd,0xcdcbdda2c4a45bd5,0xcbcc9cd5cce35dc4, 
0xdd3b44435d312a46,0xddcdc43d5ea3d43d,0x124a34ca45a5394c,0x2a2d5bd35444255b, 
0xc3cb6c43dab4cbb3,0xd3432c53b9c593d4,0x64bb4c443c5b93dc,0x23dcabcacddd5ab5, 
0x1d52c2ed3542344b,0x32bb25b444d46925,0x33cc4b1cac3b42cc,0x9bb43ada2940c24d, 
0xd45c2d43bdbcb415,0xaaddc3503ad1553b,0xcac144b4ccc53b44,0xc2cdba3ac903c4c4, 
0xbbdcdd3d35cc4bd2,0x5a43cb3d1dcb1d5c,0xebc4bcdcd2a95ccc,0xe6d3ccd355141c5c, 
0x23b4c4c4144caad3,0x45053cf1b4534d34,0x39dcd2543b4d03c5,0xac4cbbb3adbd44b4, 
0xa64bc33b2414c445,0x5d24352d35354d34,0x43bb462b43c41db3,0x244d4353bdd59544, 
0xd5a63bb2cdcdc40c,0xb9b54bcdd14bbddd,0x01cd314923bdb2b2,0x4bc4dd5bbcdcbc3a, 
0xbc5ae4c543945c35,0xb34c34d2935c9c46,0xd052c354ccbbd9b4,0x5d43433055b3e2bc, 
0x3ddc403ec56acdda,0xc3dcb540c3c2acb2,0x3b4a5c6cdc4c32db,0x5dbd4cd4bb4bc44b, 
0xdcbdd4a55c5cdb33,0xb05445d4b14d5a24,0xcc4c4344d43ccd53,0xcdc5dcc5ad4dbcd5, 
0x1cedbd55cc4bbdc5,0xdacdccc4cc529b33,0xcc55ddd5bd4d1ac3,0xcdd3db50cc2b4dc5, 
0x90aab92aa43ba504,0x93a3ba2b09939d13,0x492aa530bc32b20a,0x414ba23a4a19bb2b, 
0x4cb494349d4cd44b,0xc4552b41e5344cea,0x4d5b3455c433cbb1,0xc52cc153d4634c55, 
0x0c2243415d5ddddb,0x43d3cc4ddb3a3a5c,0xc4cc4caa02ed3314,0x4ac4cdbbc49acd3d, 
0x4b3344b4614ccd3c,0x3445cbd9cdcdb34a,0x51b3c33c25cc3311,0x3c4ccc25b04c2d4d, 
0xdcb555dcc4dc4c9b,0x534ba0cc25ad1c5a,0x0cca25ba5943d312,0xdcb1d54d1c412a3c, 
};

static int backbone_model4_conv2_quant1_threshold[64 * 14] =
{ // torch.Size([64, 14])
-931, -603, -439, -316, -235, -153, -71, 10, 92, 174, 256, 379, 543, 871,
-770, -458, -301, -184, -106, -28, 49, 127, 205, 283, 362, 479, 635, 947,
-784, -496, -353, -245, -173, -101, -29, 41, 113, 185, 257, 365, 508, 796,
-975, -655, -495, -375, -295, -215, -135, -55, 24, 104, 184, 304, 464, 784,
-871, -557, -400, -283, -204, -126, -47, 30, 109, 187, 266, 383, 540, 854,
-768, -473, -325, -214, -141, -67, 6, 80, 153, 227, 301, 412, 559, 854,
-1059, -732, -569, -446, -364, -282, -201, -119, -37, 44, 125, 248, 411, 738,
-789, -482, -329, -214, -137, -60, 15, 92, 169, 245, 322, 437, 590, 897,
-809, -494, -336, -218, -139, -61, 17, 96, 175, 254, 332, 451, 608, 923,
-906, -527, -338, -195, -101, -6, 88, 182, 277, 372, 466, 609, 798, 1177,
-1256, -784, -548, -371, -253, -136, -18, 99, 217, 335, 453, 630, 866, 1338,
-879, -528, -352, -220, -132, -44, 43, 130, 218, 306, 394, 526, 702, 1053,
-915, -625, -480, -371, -299, -227, -154, -82, -9, 62, 134, 243, 388, 677,
-838, -508, -342, -218, -136, -53, 29, 111, 194, 277, 359, 483, 648, 979,
-789, -484, -332, -218, -141, -65, 10, 86, 162, 238, 315, 429, 581, 886,
-901, -584, -425, -307, -227, -148, -69, 9, 89, 168, 247, 366, 524, 841,
-642, -364, -225, -121, -51, 17, 87, 156, 226, 295, 365, 469, 608, 886,
-1088, -708, -518, -376, -281, -186, -91, 3, 98, 193, 288, 430, 620, 1000,
-1141, -715, -502, -342, -235, -129, -22, 83, 190, 297, 403, 563, 776, 1202,
-698, -417, -276, -171, -100, -30, 40, 110, 180, 251, 321, 427, 567, 849,
-876, -552, -390, -268, -187, -106, -25, 55, 136, 217, 298, 419, 581, 905,
-861, -556, -404, -290, -213, -137, -61, 14, 90, 166, 243, 357, 509, 814,
-732, -469, -338, -240, -174, -108, -42, 22, 88, 154, 219, 318, 449, 712,
-778, -441, -272, -146, -61, 22, 106, 191, 275, 359, 443, 570, 738, 1075,
-856, -511, -338, -209, -123, -36, 49, 135, 222, 308, 394, 524, 696, 1042,
-786, -513, -376, -274, -206, -138, -69, -1, 66, 134, 203, 305, 441, 714,
-906, -535, -350, -211, -118, -25, 66, 159, 252, 345, 437, 576, 762, 1133,
-972, -605, -421, -284, -192, -100, -8, 83, 175, 266, 358, 496, 680, 1047,
-1118, -749, -565, -426, -334, -242, -150, -58, 33, 125, 217, 356, 540, 908,
-1002, -667, -500, -375, -291, -207, -124, -40, 43, 126, 210, 335, 503, 837,
-725, -483, -362, -272, -211, -151, -91, -30, 29, 90, 150, 241, 361, 603,
-946, -645, -494, -381, -305, -230, -155, -79, -4, 71, 146, 259, 410, 711,
-804, -505, -355, -242, -168, -93, -18, 56, 131, 206, 281, 393, 543, 843,
-1013, -665, -492, -362, -275, -188, -102, -15, 71, 158, 245, 375, 548, 895,
-777, -468, -314, -199, -122, -45, 32, 109, 186, 263, 340, 455, 610, 918,
-766, -480, -337, -230, -159, -88, -16, 54, 126, 197, 269, 376, 518, 804,
-1150, -769, -578, -435, -339, -244, -149, -53, 41, 137, 232, 375, 566, 948,
-611, -379, -263, -176, -118, -60, -1, 56, 114, 172, 230, 317, 433, 665,
-737, -467, -333, -232, -164, -97, -30, 36, 104, 171, 238, 339, 474, 743,
-830, -535, -388, -277, -203, -129, -56, 17, 91, 165, 238, 349, 496, 792,
-920, -541, -352, -210, -116, -21, 73, 167, 262, 357, 451, 593, 782, 1161,
-989, -600, -406, -260, -163, -66, 30, 127, 225, 322, 419, 565, 759, 1148,
-1336, -910, -697, -537, -431, -324, -217, -111, -4, 101, 208, 368, 581, 1007,
-919, -579, -408, -281, -196, -111, -25, 59, 144, 229, 314, 442, 612, 952,
-687, -385, -234, -121, -46, 29, 104, 180, 255, 331, 406, 519, 670, 972,
-881, -570, -414, -298, -220, -142, -64, 13, 90, 168, 246, 363, 518, 829,
-1120, -732, -538, -392, -295, -198, -101, -4, 92, 189, 286, 432, 626, 1014,
-883, -549, -382, -257, -174, -90, -7, 76, 159, 243, 326, 451, 618, 952,
-943, -608, -441, -316, -232, -148, -65, 18, 102, 185, 269, 394, 562, 896,
-680, -414, -280, -180, -114, -47, 19, 85, 152, 219, 285, 385, 519, 785,
-860, -571, -427, -319, -247, -175, -103, -31, 41, 113, 185, 293, 437, 725,
-945, -631, -474, -357, -278, -200, -122, -43, 34, 113, 191, 309, 465, 779,
-926, -617, -462, -346, -269, -192, -115, -37, 39, 116, 193, 309, 464, 773,
-709, -408, -257, -144, -69, 5, 80, 156, 231, 306, 381, 494, 645, 946,
-943, -638, -485, -371, -294, -218, -141, -65, 10, 87, 163, 278, 431, 736,
-794, -495, -345, -233, -158, -83, -8, 66, 140, 215, 290, 403, 552, 852,
-955, -621, -454, -329, -246, -162, -79, 4, 87, 170, 254, 379, 546, 880,
-1003, -643, -463, -329, -239, -149, -59, 30, 120, 210, 300, 435, 614, 974,
-1051, -734, -576, -457, -378, -298, -219, -140, -61, 17, 97, 215, 374, 691,
-806, -498, -344, -229, -152, -75, 1, 78, 155, 232, 309, 424, 578, 886,
-812, -507, -354, -240, -163, -87, -11, 64, 141, 217, 293, 408, 560, 865,
-935, -623, -467, -350, -272, -194, -116, -38, 39, 117, 195, 312, 468, 780,
-1107, -692, -485, -329, -225, -121, -18, 85, 189, 293, 397, 552, 760, 1175,
-894, -572, -411, -290, -210, -129, -49, 31, 111, 192, 272, 393, 554, 876,
};

static uint64_t backbone_model4_conv2_conv2_weight[64 * 9] =
{ // torch.Size([64, 3, 3, 1])
0xa, 0x6, 0x5, 0xb, 0x6, 0x5, 0xb, 0xc, 0xd, 
0x5, 0x5, 0x4, 0x4, 0x4, 0x4, 0x3, 0x4, 0x3, 
0x2, 0xd, 0xd, 0x0, 0x3, 0xd, 0x9, 0x3, 0xd, 
0xb, 0x6, 0x9, 0x4, 0x5, 0xc, 0x4, 0x5, 0xc, 
0x3, 0xd, 0xa, 0x7, 0xd, 0x0, 0x4, 0x5, 0x3, 
0xa, 0x3, 0xc, 0x2, 0xf, 0xd, 0x4, 0x5, 0x0, 
0xb, 0xc, 0x4, 0xd, 0xc, 0x6, 0xd, 0x5, 0x6, 
0x5, 0x5, 0x3, 0xc, 0x3, 0xd, 0xe, 0xd, 0xd, 
0x6, 0x6, 0x5, 0x2, 0xd, 0xd, 0xb, 0xd, 0x2, 
0x5, 0xa, 0xb, 0x6, 0x5, 0x4, 0x4, 0x5, 0x5, 
0x4, 0x1, 0x4, 0x4, 0x4, 0x4, 0xb, 0x5, 0x5, 
0x9, 0xe, 0xe, 0x1, 0xc, 0x3, 0x4, 0x2, 0xa, 
0x4, 0x5, 0xe, 0x6, 0x4, 0xe, 0x4, 0xa, 0xd, 
0x2, 0xe, 0xe, 0x4, 0xb, 0xd, 0x4, 0x4, 0xd, 
0x4, 0xe, 0xd, 0x5, 0x4, 0xe, 0x5, 0x6, 0xd, 
0xc, 0xb, 0x6, 0x9, 0x4, 0x5, 0x5, 0x6, 0x5, 
0x5, 0x3, 0xd, 0x5, 0xd, 0xd, 0x3, 0xd, 0xd, 
0xc, 0xd, 0xd, 0xd, 0xc, 0xc, 0xc, 0xb, 0xc, 
0xc, 0xc, 0xc, 0xd, 0xc, 0xd, 0xb, 0xd, 0xd, 
0xd, 0x4, 0xd, 0x6, 0x4, 0xe, 0x4, 0xd, 0xa, 
0x3, 0x4, 0x3, 0xd, 0xb, 0xc, 0xd, 0xe, 0xd, 
0xe, 0xd, 0xc, 0xd, 0xc, 0xc, 0xa, 0x1, 0xb, 
0xb, 0xd, 0xb, 0x3, 0x7, 0xd, 0xa, 0xb, 0xc, 
0xd, 0x2, 0x5, 0xd, 0xb, 0x3, 0xe, 0xc, 0xc, 
0xb, 0x3, 0x0, 0x4, 0x5, 0x4, 0x5, 0x5, 0x2, 
0xd, 0x2, 0x5, 0xd, 0xd, 0x5, 0x2, 0xd, 0xd, 
0xd, 0xc, 0xd, 0xc, 0xc, 0xb, 0xc, 0xc, 0x5, 
0xc, 0xd, 0xc, 0xc, 0xd, 0xc, 0xd, 0xd, 0xc, 
0x5, 0xc, 0x5, 0x5, 0xd, 0x6, 0x3, 0x5, 0x3, 
0xe, 0xe, 0x4, 0x4, 0x5, 0x5, 0x5, 0x4, 0x4, 
0xd, 0xe, 0xd, 0x2, 0x5, 0x4, 0x3, 0x5, 0x3, 
0x6, 0x6, 0x5, 0xc, 0xd, 0xa, 0xb, 0xd, 0x5, 
0x2, 0x5, 0xe, 0x5, 0xe, 0xd, 0xb, 0xa, 0x4, 
0x5, 0x5, 0xb, 0xd, 0x5, 0x5, 0xa, 0xb, 0x6, 
0xb, 0xe, 0xd, 0x2, 0xd, 0xd, 0x1, 0xb, 0xc, 
0x4, 0x3, 0x3, 0x9, 0x7, 0xc, 0xb, 0x1, 0xa, 
0x4, 0x4, 0x4, 0x4, 0x5, 0x5, 0x2, 0x5, 0x5, 
0x1, 0x2, 0x4, 0x3, 0x2, 0x4, 0xa, 0x3, 0x4, 
0x6, 0x5, 0x5, 0xc, 0x4, 0x3, 0xd, 0xd, 0xb, 
0x6, 0x4, 0x4, 0x4, 0xa, 0x5, 0x4, 0x2, 0xc, 
0xd, 0xd, 0x6, 0xd, 0xe, 0x5, 0x9, 0x3, 0x6, 
0x5, 0x5, 0x5, 0x4, 0xe, 0xd, 0xc, 0xd, 0xe, 
0xc, 0xe, 0xe, 0x4, 0xb, 0xc, 0xc, 0x4, 0xc, 
0x5, 0x6, 0x5, 0x4, 0xb, 0x4, 0xb, 0x4, 0xa, 
0x5, 0x6, 0x5, 0xd, 0xd, 0xd, 0xc, 0xd, 0xc, 
0xd, 0xc, 0xb, 0x4, 0x6, 0x5, 0x4, 0x5, 0x5, 
0x4, 0x5, 0x5, 0xc, 0x5, 0x5, 0xa, 0x6, 0x4, 
0xf, 0xd, 0xc, 0xd, 0xc, 0x4, 0x5, 0x2, 0x4, 
0x4, 0xc, 0x2, 0x5, 0xc, 0x3, 0x7, 0x5, 0x9, 
0x5, 0x5, 0x6, 0x5, 0xd, 0xd, 0x5, 0xd, 0xe, 
0xd, 0xd, 0xc, 0xa, 0xb, 0xb, 0x6, 0x5, 0x4, 
0x1, 0xe, 0xa, 0x5, 0x4, 0xd, 0x5, 0x6, 0x5, 
0xd, 0xe, 0xd, 0x9, 0x3, 0xd, 0x6, 0x5, 0x5, 
0xd, 0xa, 0x6, 0xe, 0x1, 0x5, 0xd, 0xd, 0x4, 
0x5, 0x6, 0x4, 0x5, 0xc, 0xc, 0x4, 0xd, 0xc, 
0x3, 0x5, 0x4, 0x9, 0x3, 0xc, 0xc, 0xe, 0xe, 
0x5, 0x7, 0x4, 0x4, 0x4, 0xb, 0xa, 0xb, 0x4, 
0xb, 0x3, 0x4, 0x1, 0x3, 0x5, 0x3, 0x6, 0x5, 
0x5, 0x7, 0xb, 0x3, 0x4, 0x3, 0xc, 0x0, 0xc, 
0x2, 0x3, 0x4, 0x3, 0x3, 0x4, 0xa, 0x3, 0x5, 
0xb, 0xe, 0x2, 0xe, 0xc, 0x4, 0xd, 0x5, 0x5, 
0x6, 0xd, 0xe, 0x5, 0x0, 0xc, 0x5, 0x3, 0xc, 
0xc, 0xd, 0xd, 0xa, 0xb, 0xd, 0x0, 0xc, 0xc, 
0x4, 0xc, 0xc, 0x5, 0x4, 0x9, 0x5, 0x5, 0x6, 
};

static int backbone_model4_conv2_relu2_threshold[64 * 7] =
{ // torch.Size([64, 7])
19, 60, 101, 141, 203, 284, 447,
30, 78, 125, 173, 244, 339, 529,
36, 72, 108, 145, 199, 272, 417,
22, 63, 105, 146, 209, 292, 458,
9, 71, 134, 196, 289, 413, 661,
-38, 20, 80, 139, 229, 348, 587,
90, 138, 185, 233, 304, 400, 591,
-17, 30, 79, 128, 201, 299, 495,
29, 67, 105, 143, 199, 274, 425,
22, 68, 115, 162, 231, 324, 511,
14, 35, 57, 79, 111, 154, 241,
20, 65, 111, 157, 225, 317, 500,
74, 122, 170, 217, 289, 384, 575,
42, 89, 135, 181, 250, 342, 526,
71, 115, 159, 203, 269, 357, 533,
39, 85, 130, 175, 243, 334, 516,
-37, 10, 58, 107, 179, 275, 468,
-15, 36, 88, 140, 218, 321, 529,
3, 47, 91, 134, 200, 288, 463,
-11, 29, 71, 113, 175, 259, 426,
8, 52, 97, 141, 208, 298, 476,
48, 97, 147, 196, 270, 369, 567,
-87, -9, 69, 147, 265, 422, 736,
-6, 35, 78, 120, 184, 268, 438,
-31, 29, 90, 152, 244, 366, 612,
52, 89, 126, 163, 219, 293, 442,
-47, -10, 26, 63, 118, 192, 339,
-29, 17, 65, 113, 184, 279, 470,
2, 46, 89, 132, 197, 284, 457,
86, 126, 166, 205, 265, 345, 504,
64, 107, 150, 193, 258, 344, 516,
23, 66, 108, 151, 215, 300, 470,
26, 68, 110, 152, 215, 299, 467,
-2, 37, 76, 116, 175, 254, 412,
34, 84, 133, 182, 257, 355, 553,
-4, 51, 106, 162, 246, 358, 581,
48, 88, 129, 169, 230, 311, 473,
20, 40, 61, 81, 112, 153, 235,
14, 69, 125, 181, 264, 375, 598,
-59, -9, 40, 90, 165, 266, 467,
70, 113, 156, 200, 265, 351, 524,
70, 121, 172, 222, 298, 399, 602,
-66, -26, 13, 53, 112, 192, 351,
44, 90, 137, 183, 253, 346, 531,
55, 97, 140, 182, 246, 331, 500,
35, 79, 122, 166, 231, 318, 491,
21, 66, 110, 155, 221, 311, 489,
59, 132, 205, 278, 388, 535, 828,
56, 109, 162, 216, 296, 402, 616,
60, 103, 145, 187, 250, 334, 502,
43, 77, 111, 145, 196, 264, 401,
73, 124, 175, 226, 303, 405, 609,
73, 125, 176, 228, 306, 409, 616,
58, 112, 166, 219, 300, 407, 621,
-34, 4, 43, 82, 140, 218, 374,
56, 99, 143, 186, 250, 336, 508,
30, 82, 134, 186, 264, 368, 575,
8, 44, 80, 116, 171, 243, 387,
64, 114, 164, 214, 289, 389, 589,
24, 46, 68, 90, 123, 167, 255,
34, 77, 121, 165, 231, 319, 494,
38, 79, 120, 161, 222, 304, 468,
1, 38, 75, 112, 167, 241, 389,
38, 77, 117, 157, 216, 296, 454,
};

static uint64_t backbone_model5_conv1_conv1_weight[64 * 1*4] =
{ // torch.Size([64, 1, 1, 64])
0x4952bc2bbb52534c,0x3ac4b344ec0d9ca9,0x145bc9cbcbd53cd5,0x555455653ac24b35, 
0xcd50c4454c5c4dad,0xeb4c5c353cad5b54,0x43cb50db54c9d44b,0xdcc5cbb24d9c653c, 
0x124c434b43f4d344,0xd43d4bb34242b359,0xc1fe54553d9ca65c,0x4da3c51ab4ddb32c, 
0x443d546a3eb3e332,0x434d4de59c5441de,0x04dd5cc2bcacd143,0xcb53e5b2b4c3bb49, 
0xa5633ca4b3593344,0x4dd49dc44045ae34,0x251ac5dc43d35065,0xc561bbd444b463cc, 
0xca94433c55435954,0x3ce6c55444435344,0x945cc33252c25915,0x543c43c65145c3aa, 
0x0de0d4d454cc54c5,0xc3450d4e0cd2d1d6,0x5356d3a2c6446ebd,0x43cc6d235561ddca, 
0xd24dd53a2d0ded5a,0xc54c5e55cdd45d35,0x3bd55ddce4c2d54d,0xcd3c4ddde3ba4ec3, 
0x44b44db4244444d5,0xe5009aedd444dd3c,0x3522b5534d3b2d42,0x3a4b534445cea1b4, 
0xbd34caa0446c5b04,0x0944324ac2ba4c34,0x9c55333205cc53b0,0x24bb4143424354a9, 
0xcdb0c514339c2aa1,0xc5bd3c35ccb44db4,0xabb2ca3429c54457,0x4db0bcdb5b1a43eb, 
0xcc650b05555ccdc5,0xdc5b3cda5bcb2b63,0xdd144454933c444a,0x40b4cdd4c6b364bc, 
0x5e533339b4b340c4,0xbd514e134c9c3951,0x9014dbb45bdcc5d3,0xc246c49cbc1c4532, 
0x1643b53ccc30c44d,0xc245349434a5cd2c,0x33cc24ad33dc3cee,0xe4c56aa3b544595c, 
0xb0d29d2ee5a9c9dd,0xc4c2a5cd411bb604,0xd4c3ccdd5b53c34a,0x3bdc422b4204c32c, 
0xe4c4d5b1ddc4e34d,0xa3a40c55d1bcc26b,0x444dd5c2e2d43c5c,0x33a35c34462944cb, 
0x0bd54cda436c61ba,0x4da63b6cc44d4c25,0xcc66b345c5ab4994,0x251b55433943555d, 
0x45621e4d5a53a3cc,0x42d3b4d5433ccbcc,0xb44c54c5dbaa2254,0xc25bcb434bd1646b, 
0x5d9453db00323412,0x20524cb24c5a1dc2,0x454444a3ead5bcd3,0xdc44a4e444b233e5, 
0x4a54336dc44d504d,0x0cb53c045d3d3b5a,0xa91334d23020acd2,0xc55494542dc3551c, 
0x2545b43db4c1d9c0,0xce40c64e4632bdec,0x5bac0dbc1a69dc5c,0xcde53a324c509bd4, 
0x0b2c5c346cd615d5,0xd56e54e4db46dbbe,0x45ddce51cdbb26cb,0x4b454554d4dcc435, 
0x46ad33bc422f450d,0x51114043db35b55c,0xe4cb25bd3b442db0,0xbc24346ca2c1b0a5, 
0x53d94090bb3ccd43,0xc5c3b420a405bec4,0x1c545a63535b34c3,0xd2bec555b424cc3d, 
0x23c32cd555c526c4,0x6accdc3cd31bc5db,0xc5aceb5aacd9bccd,0xc2243adcc5c2e9a4, 
0x65dd34c23be6e43a,0x545ed05b511434c5,0x45dcdc545bc6db44,0xbda4d694b555d4bc, 
0x44dcc443bced5e42,0x4e5d4a5fc1c5bedc,0xc3c3ddacc44dd6be,0xeecd4d4d0d43dbac, 
0xcdb2244504acb04a,0x54d435435a493555,0x2c9dbac3cbdd0cd3,0xb4e34ccbc3a4519a, 
0xd5cc30344a5d4245,0x5d443b52cb9d92d4,0x31b4cbe33335ac52,0xa505e9334d1cd93c, 
0xb332944c4d44354d,0xd534b6a3d3b69352,0x443c5bcd1b45bdcb,0xb205555c01454ddb, 
0x194644b554515c33,0x5b453453dc4d4354,0xcb55c04424ac4dc4,0xa253495449a45334, 
0xc3c4cd35c2b3345b,0x940ccc0320b5c4bb,0x552c3a5c590dccbd,0xeabd4d4bb5ccccc5, 
0xddcc9944bb4bd5b3,0x3bb22e3bcd2db4d2,0xbb445ddbc42cc243,0x24dccdcc349adc5c, 
0xa3d3cdc0eb423bcd,0x1cdb5d9cc5cb35d3,0xc33dcbdc6bbc0a44,0xdd4ccbcd59a4e435, 
0x4dcc41363ea5db93,0x4b1b4ecbdb1513d2,0x0a333b9429d3cddd,0x4c540db2d214dd65, 
0xdccb1d49d4b924bd,0x2cc3eccb5b4dadd3,0xb1343db1c35dc5dc,0xc9dcdabbcc033dcc, 
0x7c3cc5dc5cbd0ac4,0xc2d1cbbdb4c53a54,0x24c443cc10a6c3dd,0xdc4b4cb94e14ccb3, 
0xa5cccd4bc2ebad19,0x52c3ddc233cccdd1,0xda2545b4c36ca949,0x4b5c4b524c2ecdd3, 
0xb334bbc044b4b42b,0x2bc5b453b425b45c,0x24acc55c33cd5ead,0xd0ca6ab3462434b4, 
0xc5d3ba1cd35cd35d,0x63c1c35b5cc445d6,0x9d5936a4c535cc34,0x442b55d2c5449ccc, 
0x0dcc432db3b34dba,0xccc3c4ad644ac45d,0x1db93cc33b3bb1ec,0x15dd43614d1cd999, 
0xcc6b3a65dc5c3ebc,0x594c44c2aabc446c,0xcdd3446a523e2dda,0x4444cc4bd5c25359, 
0xdccc44cb3544505c,0xad44d54b5444cdc9,0x546cd533c452a2ec,0xb33356bb40b4c1e0, 
0x51be9c54b50bb654,0x4dc43ab54025264b,0x45ba234d23d333eb,0xd3a95d42b2a50352, 
0x3cddcce3d425d5dd,0x31d43b9cc5c532ab,0xc2535a1c24e54c00,0xc5da4aed4534cc5a, 
0xcc434554dc5c31bd,0xcc51543bcd3d433c,0x33b54b125b4d1cc9,0xd394bb5acd24455c, 
0x51c553d60d4d9ac3,0x2c54336d124c45cc,0xdc35dc45535b3e34,0x355bb559cca4d45c, 
0xd3b435c54a0453fc,0x42c5a3e3d434ccce,0x5c534b33ccc41932,0x444c549c64c91b34, 
0xdc2c464b4c95ad23,0xb2c4293a4b4b5929,0x5b3c3d5c50dd9dd0,0x43553cd1964532cb, 
0xc519b2b40054bcd4,0xe65b23c3c4a591d3,0x3545454344cb3e55,0x5b3033cb4bc1b94b, 
0xc32b534b92c4d24b,0xb43b2b9b4a43b2cb,0x54dd1cbc0dbcda9a,0xcd34d91b01cbd9b3, 
0x3b2495344bcf3d5b,0xcb4951cc0b96bb4c,0xdcda5cc4ba35435c,0xdd5d53634cde134b, 
0xd5244dc1d3543cbc,0xb454b563b4443a4c,0x034dc35429eb4dc9,0x45b4c65d95b544cc, 
0xdcd5cb3532d34a45,0xb44b5546c5c3140b,0x524cdc3a1b5d4cd5,0x25cbcd5531babcc3, 
0x46c4ac6343023435,0x4bd42c3d4cab23da,0x3c5af149345eb55a,0x34545b5ba130d561, 
0xd3ccc2c4c944b32c,0x4452c15dc5b33ac4,0xb556cd59a4c40eca,0x53c0250b3455cacc, 
0x55c4b4cd4cd3b452,0x2222342955a24234,0xa35ccabd14343a92,0xccc155c50b44a913, 
0xed0a23da5414d5ba,0xb4cad95bbead4bec,0x344bcddc2cc5d444,0x560bc304dc3ddccd, 
0xcb4acd4ea54b4d5c,0x53d5dd3453cccd4c,0x4c1a45994c4c36d5,0x465ccb5c5c24ccdc, 
0xdb111bc2d34cc43c,0x3eb33dbcba0dcbd0,0xcc3bcbc341cd5356,0x0dcccedb34229cbc, 
0xb4cd3bd04abba4b5,0x5c34dcbdb393b2dc,0xbb42a3a2e445c2ce,0x245c10d1151cdcb5, 
0x4a351d3abc5434bd,0x5e34d40dcb1c4bcc,0xcb414c321a51daad,0xc54d4545daa3a591, 
0xd43dbd41c4b54edc,0x5d3cd40a45a40b14,0x4a342454493d4299,0x5ddccbca26bcb3b4, 
0xb642ccc3acca4cdc,0xd31c34c345cad3cd,0x34cd45aa3c342e54,0xbc19c5c422cbc0c4, 
};

static int backbone_model5_conv1_quant1_threshold[64 * 14] =
{ // torch.Size([64, 14])
-1314, -772, -501, -298, -162, -27, 108, 243, 379, 514, 650, 853, 1124, 1666,
-1619, -952, -618, -368, -201, -34, 132, 299, 465, 632, 799, 1050, 1383, 2051,
-1835, -1204, -888, -651, -493, -336, -178, -20, 137, 295, 453, 690, 1006, 1637,
-1616, -1102, -844, -651, -523, -394, -265, -137, -8, 120, 248, 441, 699, 1213,
-1138, -633, -380, -191, -65, 61, 187, 313, 439, 566, 692, 881, 1134, 1639,
-2054, -1244, -839, -535, -332, -130, 72, 274, 477, 679, 882, 1186, 1591, 2401,
-1843, -1113, -748, -474, -292, -110, 72, 254, 437, 619, 802, 1076, 1441, 2170,
-2079, -1413, -1079, -829, -662, -496, -329, -162, 3, 170, 337, 587, 920, 1587,
-1322, -831, -585, -401, -278, -155, -32, 90, 212, 335, 458, 642, 888, 1380,
-1623, -966, -638, -392, -228, -63, 100, 264, 428, 592, 756, 1003, 1331, 1988,
-1219, -750, -516, -340, -223, -106, 10, 127, 244, 361, 478, 654, 888, 1357,
-1529, -897, -581, -344, -186, -28, 129, 287, 445, 602, 760, 997, 1313, 1945,
-1250, -799, -574, -405, -292, -179, -67, 45, 158, 270, 383, 552, 777, 1228,
-1296, -817, -578, -398, -279, -159, -39, 79, 199, 319, 438, 618, 857, 1336,
-1586, -1064, -804, -608, -478, -347, -217, -86, 43, 174, 304, 500, 760, 1282,
-1227, -790, -571, -407, -298, -188, -79, 30, 139, 248, 358, 522, 740, 1178,
-1238, -693, -420, -216, -79, 56, 192, 329, 465, 601, 738, 942, 1215, 1760,
-1112, -617, -370, -185, -62, 61, 185, 308, 432, 555, 679, 864, 1111, 1605,
-1362, -873, -628, -445, -322, -200, -77, 44, 166, 289, 411, 595, 839, 1329,
-1415, -832, -540, -321, -175, -29, 115, 261, 407, 553, 699, 918, 1209, 1793,
-1466, -907, -628, -418, -278, -138, 1, 140, 280, 420, 560, 769, 1049, 1608,
-2228, -1508, -1148, -878, -698, -518, -338, -158, 21, 201, 381, 651, 1011, 1731,
-1185, -740, -518, -351, -240, -129, -18, 92, 203, 314, 425, 592, 814, 1259,
-1113, -683, -469, -308, -201, -93, 13, 120, 228, 335, 442, 603, 818, 1247,
-1803, -1251, -974, -767, -629, -491, -353, -215, -76, 61, 199, 406, 682, 1235,
-1702, -1087, -779, -548, -394, -241, -87, 66, 220, 374, 527, 758, 1066, 1681,
-2580, -1797, -1406, -1113, -917, -722, -526, -330, -135, 60, 255, 549, 940, 1722,
-1351, -871, -631, -451, -331, -211, -91, 28, 148, 268, 388, 568, 809, 1289,
-1307, -838, -603, -427, -310, -192, -75, 41, 159, 276, 393, 569, 804, 1273,
-1342, -806, -539, -338, -204, -70, 63, 196, 330, 464, 598, 799, 1066, 1601,
-1648, -977, -641, -390, -222, -54, 113, 280, 448, 616, 784, 1035, 1371, 2042,
-1297, -853, -630, -464, -353, -241, -130, -19, 91, 202, 313, 480, 703, 1147,
-1734, -1203, -937, -738, -605, -473, -340, -207, -74, 57, 190, 389, 655, 1186,
-1509, -999, -743, -552, -424, -296, -168, -41, 86, 214, 342, 533, 789, 1300,
-1858, -1326, -1060, -860, -727, -594, -460, -327, -194, -61, 71, 271, 537, 1070,
-1789, -1219, -934, -720, -578, -435, -293, -150, -8, 134, 276, 490, 775, 1345,
-1322, -865, -637, -466, -352, -238, -124, -10, 103, 218, 332, 503, 731, 1187,
-1721, -1152, -867, -653, -511, -368, -226, -84, 58, 200, 343, 556, 841, 1411,
-1295, -764, -498, -299, -166, -33, 99, 232, 365, 498, 631, 830, 1096, 1627,
-1241, -721, -462, -267, -137, -7, 122, 252, 382, 512, 642, 837, 1097, 1617,
-1495, -935, -656, -446, -306, -166, -26, 113, 252, 392, 532, 742, 1022, 1581,
-1542, -950, -654, -432, -284, -136, 11, 159, 307, 455, 603, 825, 1121, 1713,
-1313, -784, -520, -322, -190, -58, 73, 205, 337, 469, 601, 800, 1064, 1592,
-1166, -680, -437, -254, -133, -11, 109, 231, 353, 474, 596, 778, 1021, 1507,
-1699, -1147, -870, -663, -525, -386, -248, -110, 27, 166, 304, 511, 788, 1341,
-1323, -794, -530, -332, -200, -67, 64, 196, 328, 460, 593, 791, 1055, 1584,
-1374, -829, -556, -352, -215, -79, 57, 193, 329, 466, 602, 807, 1080, 1625,
-1728, -1136, -840, -618, -470, -322, -174, -26, 121, 269, 417, 639, 935, 1527,
-1303, -813, -568, -385, -262, -140, -18, 104, 226, 349, 471, 655, 900, 1389,
-1279, -769, -513, -322, -194, -67, 60, 188, 315, 443, 571, 762, 1017, 1528,
-1614, -1069, -796, -592, -456, -319, -183, -47, 89, 225, 361, 566, 839, 1384,
-1605, -1071, -804, -604, -471, -337, -203, -70, 63, 196, 330, 530, 797, 1331,
-1151, -612, -342, -140, -5, 129, 264, 399, 534, 669, 803, 1006, 1275, 1815,
-1498, -886, -581, -351, -199, -46, 106, 259, 412, 564, 717, 946, 1252, 1863,
-1407, -853, -576, -368, -229, -91, 47, 186, 324, 463, 602, 809, 1087, 1641,
-1694, -1096, -797, -573, -424, -275, -125, 23, 173, 322, 471, 695, 994, 1592,
-1065, -626, -406, -242, -132, -22, 86, 196, 306, 416, 526, 690, 910, 1349,
-1606, -1091, -834, -640, -512, -383, -254, -126, 2, 131, 259, 452, 710, 1224,
-1270, -732, -463, -261, -127, 7, 141, 276, 410, 545, 679, 881, 1150, 1688,
-1763, -1186, -897, -681, -537, -393, -248, -104, 39, 183, 328, 544, 832, 1409,
-2242, -1580, -1248, -1000, -834, -668, -502, -337, -171, -5, 159, 408, 739, 1402,
-1399, -942, -713, -542, -427, -313, -199, -84, 29, 143, 258, 429, 658, 1115,
-986, -617, -433, -294, -202, -110, -17, 74, 166, 259, 351, 489, 674, 1043,
-1712, -1027, -685, -428, -257, -86, 85, 256, 427, 598, 769, 1026, 1368, 2053,
};

static uint64_t backbone_model5_conv1_conv2_weight[64 * 9] =
{ // torch.Size([64, 3, 3, 1])
0x6, 0xc, 0xc, 0x5, 0xc, 0xa, 0xc, 0xc, 0xc, 
0xe, 0xc, 0xc, 0xb, 0x3, 0x1, 0xd, 0xb, 0xc, 
0xc, 0x4, 0x4, 0xf, 0x3, 0x3, 0xa, 0x4, 0x9, 
0x5, 0x4, 0xf, 0x5, 0x5, 0xd, 0x5, 0x3, 0x3, 
0x5, 0x1, 0xe, 0x4, 0xb, 0xd, 0x9, 0x9, 0xc, 
0x9, 0x2, 0xa, 0xc, 0xb, 0xc, 0xc, 0xc, 0xd, 
0x3, 0x3, 0x4, 0x2, 0x5, 0x4, 0x1, 0x5, 0x5, 
0x3, 0x3, 0x1, 0x4, 0x3, 0x4, 0x5, 0x4, 0x4, 
0xf, 0xc, 0x4, 0xd, 0x3, 0x5, 0x9, 0x2, 0x0, 
0xb, 0xb, 0xb, 0xc, 0xc, 0xb, 0xc, 0xc, 0xc, 
0xb, 0xd, 0xc, 0x0, 0xb, 0x5, 0xc, 0x4, 0x6, 
0xe, 0xd, 0xa, 0xd, 0xb, 0x3, 0xb, 0x4, 0x4, 
0xb, 0xd, 0xd, 0x4, 0x0, 0xc, 0x5, 0x5, 0xb, 
0x5, 0x4, 0xe, 0x5, 0x3, 0xc, 0x3, 0xc, 0xe, 
0x5, 0xd, 0xd, 0x5, 0xd, 0xc, 0x5, 0x3, 0x2, 
0xc, 0x3, 0x6, 0xc, 0x0, 0x4, 0xe, 0xc, 0xa, 
0xc, 0x9, 0xb, 0xc, 0xa, 0xc, 0xc, 0xa, 0xc, 
0x4, 0x3, 0x3, 0x4, 0x4, 0x1, 0x5, 0x5, 0x0, 
0x5, 0x1, 0x5, 0x4, 0xc, 0xc, 0x9, 0xc, 0xe, 
0xd, 0x9, 0x4, 0xb, 0x9, 0x3, 0xe, 0xc, 0xa, 
0x4, 0x6, 0x5, 0xb, 0x4, 0xb, 0x2, 0x9, 0xc, 
0x4, 0x3, 0x4, 0xb, 0xd, 0xd, 0xd, 0x9, 0xe, 
0x3, 0x5, 0x5, 0x1, 0x5, 0x4, 0xd, 0xd, 0xd, 
0xc, 0xb, 0x4, 0xc, 0xc, 0x4, 0xd, 0xd, 0xb, 
0x0, 0x4, 0x6, 0x1, 0x2, 0x4, 0x1, 0x3, 0x3, 
0xc, 0xd, 0x3, 0xb, 0xa, 0x9, 0xd, 0xc, 0xd, 
0x0, 0x3, 0x4, 0x2, 0x4, 0x4, 0x5, 0x4, 0x5, 
0xd, 0xc, 0x2, 0xd, 0xc, 0x5, 0x4, 0x4, 0x6, 
0xc, 0xa, 0xc, 0xd, 0x5, 0x4, 0xd, 0xc, 0x5, 
0x4, 0x4, 0x5, 0xc, 0x3, 0xc, 0xd, 0xd, 0xd, 
0xd, 0xd, 0xd, 0xc, 0xd, 0xd, 0x5, 0x4, 0x5, 
0x2, 0x3, 0x4, 0x3, 0x5, 0xc, 0x3, 0x1, 0xd, 
0x5, 0xc, 0xe, 0x4, 0xb, 0xe, 0xb, 0x4, 0x2, 
0xd, 0xd, 0xc, 0x4, 0x3, 0x4, 0x5, 0x5, 0x5, 
0xd, 0xd, 0xb, 0xd, 0x5, 0x4, 0xb, 0x5, 0x3, 
0xd, 0xd, 0xe, 0x4, 0x1, 0x4, 0x4, 0x5, 0x4, 
0xd, 0xc, 0x0, 0xb, 0x3, 0xb, 0x5, 0x6, 0x1, 
0x6, 0x4, 0x5, 0x4, 0xa, 0xc, 0x2, 0xc, 0x0, 
0xb, 0xb, 0x0, 0xd, 0xc, 0x5, 0xc, 0xc, 0x6, 
0x5, 0x4, 0x4, 0x9, 0xd, 0xd, 0x5, 0x3, 0x4, 
0x6, 0x6, 0x0, 0xc, 0xa, 0x1, 0xd, 0xc, 0x4, 
0xb, 0x4, 0x5, 0xb, 0xa, 0xc, 0xd, 0xd, 0xd, 
0xd, 0xb, 0xd, 0xb, 0x9, 0xa, 0xb, 0xc, 0xb, 
0xe, 0xc, 0x4, 0xd, 0x1, 0x4, 0x3, 0x5, 0x5, 
0x4, 0x4, 0x3, 0x4, 0xc, 0xc, 0xc, 0xd, 0xd, 
0x5, 0xa, 0xb, 0x4, 0xc, 0xd, 0x5, 0xc, 0xd, 
0xc, 0xd, 0xd, 0xb, 0xc, 0xb, 0x4, 0xc, 0x9, 
0x9, 0x2, 0xc, 0xd, 0xc, 0xe, 0x9, 0x5, 0x9, 
0xb, 0xc, 0xc, 0xb, 0x5, 0x3, 0x1, 0x6, 0x5, 
0x5, 0x5, 0x4, 0x5, 0x2, 0xc, 0xb, 0xd, 0xe, 
0x4, 0x4, 0x3, 0x3, 0x3, 0x3, 0x2, 0x4, 0x2, 
0xd, 0xb, 0xe, 0x4, 0x5, 0xc, 0x2, 0x2, 0xa, 
0xd, 0xc, 0xd, 0xc, 0xc, 0xb, 0x5, 0x5, 0x5, 
0x6, 0x4, 0xd, 0x5, 0x5, 0xc, 0x4, 0x3, 0xc, 
0x3, 0x5, 0x4, 0xc, 0xb, 0xc, 0xd, 0xd, 0xe, 
0xc, 0xb, 0xc, 0x6, 0x4, 0x5, 0x5, 0xb, 0x4, 
0xd, 0xd, 0x4, 0xb, 0xd, 0x3, 0x4, 0x3, 0x4, 
0x5, 0xc, 0x2, 0x9, 0x4, 0x9, 0xd, 0x5, 0x6, 
0x5, 0x5, 0x5, 0x3, 0xb, 0x5, 0xb, 0xc, 0x4, 
0xe, 0x2, 0x5, 0xc, 0x4, 0x4, 0x5, 0x4, 0xd, 
0x4, 0x4, 0xe, 0x5, 0x4, 0xc, 0x6, 0x3, 0xd, 
0xd, 0xc, 0x4, 0xd, 0x4, 0x3, 0xc, 0x3, 0xb, 
0xc, 0xd, 0x5, 0x3, 0x4, 0x4, 0x5, 0xb, 0xe, 
0xd, 0xd, 0xc, 0x3, 0x3, 0x3, 0x5, 0x5, 0x4, 
};

static int backbone_model5_conv1_relu2_threshold[64 * 7] =
{ // torch.Size([64, 7])
4, 34, 64, 94, 139, 200, 320,
117, 152, 188, 223, 277, 348, 490,
58, 109, 160, 211, 288, 390, 595,
82, 139, 197, 254, 341, 456, 686,
-7, 36, 79, 123, 189, 276, 451,
-75, -43, -11, 20, 68, 132, 260,
16, 57, 98, 138, 200, 282, 446,
-19, 15, 51, 87, 141, 213, 356,
78, 139, 199, 259, 350, 471, 712,
-1, 24, 50, 75, 114, 166, 270,
12, 55, 98, 141, 206, 292, 464,
21, 56, 92, 127, 180, 250, 391,
19, 67, 114, 161, 232, 327, 516,
48, 98, 148, 198, 273, 374, 574,
35, 68, 101, 134, 184, 250, 382,
-4, 43, 91, 139, 211, 308, 501,
24, 43, 62, 82, 110, 149, 225,
0, 38, 77, 116, 174, 252, 408,
9, 46, 83, 119, 175, 249, 396,
31, 67, 103, 139, 194, 266, 411,
-37, 8, 55, 101, 171, 264, 450,
-10, 38, 87, 135, 209, 307, 502,
32, 76, 119, 162, 227, 314, 488,
47, 76, 104, 132, 175, 232, 346,
57, 101, 145, 189, 256, 344, 520,
-21, 21, 64, 106, 171, 256, 428,
4, 50, 96, 142, 211, 303, 486,
24, 62, 99, 137, 193, 269, 419,
32, 59, 86, 114, 154, 209, 317,
28, 63, 97, 131, 183, 252, 389,
-9, 25, 60, 96, 149, 219, 360,
18, 43, 69, 94, 133, 183, 285,
32, 69, 106, 143, 198, 272, 420,
5, 50, 94, 138, 204, 293, 469,
-22, 15, 53, 91, 148, 224, 377,
25, 64, 103, 142, 201, 279, 435,
-3, 42, 88, 135, 204, 296, 481,
28, 68, 108, 147, 207, 286, 445,
24, 51, 78, 104, 145, 199, 306,
22, 50, 77, 105, 146, 201, 311,
-44, 0, 45, 90, 157, 246, 425,
11, 47, 82, 118, 172, 243, 386,
41, 74, 107, 140, 190, 256, 387,
14, 55, 96, 138, 199, 282, 447,
10, 36, 63, 89, 129, 183, 289,
23, 56, 90, 124, 174, 241, 375,
-13, 27, 69, 110, 172, 254, 420,
3, 41, 78, 116, 173, 248, 399,
75, 117, 158, 200, 262, 345, 512,
28, 66, 103, 141, 198, 274, 426,
3, 22, 41, 60, 88, 126, 203,
21, 52, 83, 114, 161, 223, 348,
49, 86, 123, 159, 214, 288, 434,
18, 59, 100, 141, 202, 284, 447,
28, 65, 101, 137, 192, 265, 410,
75, 115, 156, 196, 256, 336, 497,
-5, 32, 69, 107, 163, 238, 389,
38, 72, 107, 141, 193, 262, 399,
-7, 35, 77, 120, 184, 269, 440,
33, 64, 94, 125, 171, 233, 356,
42, 73, 104, 135, 182, 244, 368,
9, 33, 57, 81, 117, 165, 262,
56, 84, 112, 140, 181, 237, 347,
-12, 18, 49, 79, 126, 188, 311,
};

static uint64_t backbone_model5_conv2_conv1_weight[64 * 1*4] =
{ // torch.Size([64, 1, 1, 64])
0x5acd543ccd61d5d5,0x2cb6cdc9d1d35444,0x45c9cc5dccccbcc6,0x449dc45bc45c34c6, 
0x4ddc1353215c42b4,0x4c5db2250dd2b52d,0x4a4cb4b3da4a224a,0x414dd33b15b1b4d5, 
0x491bd1c4ccc4accd,0xcac4bc31c54c4cc4,0xa5b32d4ccccbbcc4,0x2cccccc4944d7ccd, 
0xdc533a14d45cc34d,0xc05cc54cddd45c9d,0xb1d39c244c3d42ad,0x034c21c14bbbccc3, 
0xbd5c4cd45db6e3c4,0x5cc55124cb6ddc3b,0x335cc45e2504c241,0xdbd25b5c4452c4dc, 
0xd03dcc2d44dcbb24,0x3c5c2cddc0c4c6cd,0x4cb3cbb054e6dcdb,0x2d35d30cc45530c4, 
0xd3c4d25d333cbcc4,0x439bbad025c495e4,0x3a44495059d51b24,0x5c44452b94544243, 
0x5013c9c2b6ad34bd,0x344b2c5b51b5cbdc,0x9cabaec3bbcb5ba4,0xb3cdcc441cacbc42, 
0xd4be23553bc5093d,0xbdd35d539c442ad5,0x315cd2c993b20bad,0xdca45dddc2a3b92b, 
0x5d22e4e006cb6ce5,0x442ecddc5c13e4dd,0xc4cd5d2dcd4cce46,0xdccdddc5445b46d0, 
0xc450bc2cd0c31b44,0xdc4d1adecca2c53d,0x2ba5ccd442d4ecbb,0xc444dd9cdc9cacec, 
0xdb5b53cca96dccc4,0x9c44abe4dc3c3355,0x5becb9d4ccccc5ec,0x959ad1a3dbedbdcc, 
0xb5a2b3543cb434da,0xbcc0536413b5c010,0xa4d5bd433cbcb432,0xd0eb3cb2c4bc9bc5, 
0xc50552d41c2da255,0x3995d3535cdb5345,0xca5a3ac04ca0cc23,0x4bd0bb13459ca2c4, 
0xa2b365a5cc5c3324,0xab1a3d3b34144546,0xbb4c5cbc424923c5,0x335c4d54dc5c55a5, 
0x4d13c221c429dc1d,0xd355d45cbdc45c54,0x0c0cd3cac4c43c4c,0x524544cddb4b5cad, 
0x35cbcc4cbcbc5bd9,0xdc2bbaccc4dbb2dc,0x9da5dd34cbcdbc2b,0x2a2bdcdca4ac51a9, 
0xa5cc52243bc5b23d,0xbcd24b6b3444bcd1,0x0b3ac0cb92c93ccc,0xdccc5bbb43bccc45, 
0xd1344312c35205e4,0xd935c4c5dad93449,0x154bcd5d52c53b35,0x215b445ddc5550aa, 
0x44a4394adab442cc,0xc44b344cba3c3b23,0xbc23d24411fc524b,0x544aba2ccc545d25, 
0x55c054544d5554c9,0xbd014ca5465dc555,0x4504cec43ab335d5,0x5b53b96ded316345, 
0x4d4404d4334b5cbc,0x24cbcc4444ccca31,0xca2c23dd4b2d94bc,0x241a3cb63dc9cceb, 
0x0dbcbbc51cb2db1d,0xac5a4bdcc440bb29,0xac5dc5cbc2244cdc,0x6da6d9c4c3b1b32d, 
0x94444d050394cd4a,0xcd4db54eb2425dc4,0x3eb34bc5442e4cbd,0x595442bd3c44dd53, 
0xd6db9e3c3d243b93,0xddcd5ddc36ccdcdc,0x3c450e05cd2b0dc4,0xbbd4d4cda5ac4a3d, 
0x11d4dcbb5aa6dcb3,0xa42d4bc4053ed4dc,0x43db2adc46c44ddc,0xcd4accd3dba6cc4b, 
0xd59b4dad94adb5b1,0xc2c9bccb1eca54c5,0x1c4b434ab534cbc9,0x3abb524adcdcb3c3, 
0x4b0c36aac4c4cc50,0xc6daddd54152d403,0xc3cc4acdcc13d40a,0xcbd413c69ddbdddd, 
0x3bdab22b034bc0bb,0x34cca4440c655e39,0xbb4924c3411c5bd1,0x924c42b3b2b43c63, 
0xd334bc4b50bd21cb,0x221bcbb5c3d2c51b,0x54c1b5bd93554bc9,0x344c09b054ebdce1, 
0xb123cc5abdcd41a5,0x5544c0dbc5c5d3bc,0x522549944d4a1334,0x4c3ba54cb453a4b3, 
0x03adbab34025549c,0xbbbc2d0d25cbddc3,0x24d4cb54b32c4bd5,0xacbecd45b4dc5303, 
0x932d4c354bd24536,0xb553d4ca93c43bc3,0x65a4b145c54cc424,0x341dcd3b3bce23b5, 
0x3b4e435c42d5134a,0x4cb5db0c4b223455,0xd344c4c35b54c523,0xd45a3d23d4a25db5, 
0xc92934335b55562a,0x5cd31dd3a4cbd424,0x24ca3a60301db246,0x091acc1546cb6645, 
0xb3c44c42dd3295ac,0xe44c3243c0d3aca5,0x03b3a4c4d5eb4355,0x220b4154bd12e555, 
0x035cc4acc4d44455,0x54542dddc3a3354a,0x35914b944a46d413,0xb504c44bcbc9d9e4, 
0xb22b9523dccdb45c,0xc5d53bb2bc5bc32c,0x9d4c94cdc2d2a523,0xabc3bb4ccc219c9a, 
0x94bf0d3b1bd3d43b,0xc14b434da13523c4,0x4d25e5c4b5b4c09a,0x4c153dbd193cd343, 
0x1dccccbd9ec34dbc,0xcdb4dd5ccec5bd3c,0xcddace445bcddcdd,0x3c59d9ddd0eb9545, 
0x5ccbc2b3bba6d95c,0xc504acd1140d30b1,0x92db5c52c454ba4b,0xc2a34ccc4d50bcd0, 
0xab2269e5ad54d34b,0x549453b5d95d5444,0x425c349c24c2905b,0xa5e1acaea23444c2, 
0xc4bccc4bcbd243db,0xccbb443da322343b,0x033b5a36b1c5a523,0x502ca53335553253, 
0x2cc4ddc2c4cb42b3,0xc50cdbcc355b2335,0x34b213454b4bdac4,0x321adb41001bb443, 
0xc4a5ca4c3cc3d9c5,0xc15b3c25222b369c,0x3b35accd42d44cbc,0xd4919021c433cbdc, 
0x5bc1b4bc63b19eb9,0xbcb3c42a4b40b49c,0x2b4bbb2b924cc3ce,0xc0b39ae5b4d2d7b3, 
0x25cbbcab35395b5b,0x6c1c444c53a504cd,0x49e345a5c4693dad,0x5cdc3ade34ec2d4c, 
0x34cbcd1231044444,0x5b12354944555cb4,0x52515535dc1cdec4,0x5542444a353b424b, 
0xc0cc944ac3cc4993,0x4441b29c2da5b3cd,0x22b5341b62bb591b,0x4c55a3cc4cd04d59, 
0xab2ca12beddb3d3e,0xd294434bbc424b3d,0xdccdc5baccacc23d,0xbabcabbc33bcb2dc, 
0xa3433144e4bad50b,0xe2431bbadbbc3213,0x33c344ea13ec51b4,0x342cc35ece94beb2, 
0xc95bcdbba2c40b4c,0x444201deac43b54b,0xd3c4234b5cb6cd3b,0xdd16cdb9b4452b44, 
0xd4b2d0c3c343ccbe,0xdb9db5cab44cdcdc,0xc1d44c6cccbacd4b,0xcdd033ddc4db11c9, 
0xb9b21535bb34c45a,0xb5b329dc565cbc0a,0x16446b5cab50d345,0xbb44ca5dcc5c35cb, 
0xc2dda4423db301d4,0x3cc5211aa25bbb35,0x45dbba3caa5135c3,0x2ac94412eadb5c4c, 
0x32a5b33d235150a5,0x1bd23bb55bc9baa5,0x6bd4bd3544944202,0x9534cbbccc541c2c, 
0xdc41c343b33bbbc4,0xcb03555cccc556a5,0x4cb4c31543d4d2ba,0x46c5d4b40c3cbbdc, 
0xcc43bdd3bc3c4cbd,0xad4c5cbdd539055d,0x5bbe4ad4ecc3c1cb,0x56d4d5b3c3ccd4cc, 
0x42c52ec2bc432555,0x495c355c44d15b4b,0x3924459a52c33134,0x4c342d345a4243c5, 
0xbd43d43d3553c33b,0xdd5324a4cdd34644,0x1d02cbb925d55c5c,0x4544032add352cbb, 
0xc45c43dcbc21c424,0x344453d4d5345455,0x49c33b331dc4b442,0x30e5deacda42134a, 
0xa35b4344bc432ca4,0x4225540bb25bcac4,0x3cbba3b343b05c4c,0xcb0334cd39b4c054, 
0xbcd5d253dddc3dbd,0xd55bddccd5e6c1cc,0x4ac6d3dccb32411c,0x5c54251c3b9ba3b3, 
0xae44d453dc3453ce,0x94d43b44a4b5db39,0x34d404c02d35225a,0xdc41a131420904cd, 
};

static int backbone_model5_conv2_quant1_threshold[64 * 14] =
{ // torch.Size([64, 14])
-876, -546, -382, -258, -176, -93, -11, 70, 153, 235, 317, 441, 605, 935,
-826, -517, -362, -247, -169, -92, -15, 62, 139, 216, 293, 409, 564, 873,
-874, -570, -418, -304, -228, -152, -76, 0, 75, 151, 227, 341, 493, 797,
-822, -540, -398, -292, -222, -151, -81, -10, 60, 130, 201, 307, 448, 730,
-942, -589, -413, -281, -193, -105, -16, 71, 159, 247, 335, 467, 643, 996,
-1010, -659, -483, -351, -263, -176, -88, 0, 87, 175, 263, 395, 570, 922,
-906, -568, -400, -273, -189, -104, -20, 64, 148, 233, 317, 444, 613, 950,
-913, -596, -437, -318, -239, -160, -80, -1, 77, 156, 236, 355, 513, 831,
-834, -553, -413, -307, -237, -167, -97, -26, 43, 113, 183, 289, 429, 710,
-1257, -792, -560, -386, -270, -154, -38, 77, 193, 309, 425, 599, 831, 1295,
-941, -649, -503, -393, -320, -247, -173, -100, -27, 45, 118, 228, 374, 667,
-1152, -783, -599, -461, -369, -277, -185, -93, -1, 90, 183, 321, 505, 873,
-764, -494, -359, -258, -190, -123, -55, 11, 79, 146, 213, 315, 450, 720,
-703, -439, -306, -207, -141, -75, -8, 57, 123, 189, 255, 354, 487, 751,
-780, -453, -290, -168, -86, -5, 76, 157, 239, 321, 402, 525, 688, 1014,
-1007, -636, -451, -311, -219, -126, -33, 59, 151, 244, 337, 476, 661, 1032,
-975, -683, -537, -427, -354, -281, -208, -135, -62, 10, 83, 193, 339, 631,
-960, -625, -457, -331, -247, -163, -79, 4, 88, 172, 256, 382, 550, 886,
-715, -425, -279, -170, -97, -25, 47, 120, 192, 265, 338, 447, 592, 883,
-1019, -636, -445, -301, -206, -110, -14, 80, 176, 272, 367, 511, 702, 1085,
-898, -521, -332, -191, -97, -3, 91, 185, 279, 373, 468, 609, 797, 1174,
-898, -548, -373, -242, -155, -68, 19, 106, 194, 281, 368, 499, 674, 1024,
-842, -543, -393, -281, -206, -131, -56, 18, 93, 168, 243, 355, 505, 804,
-1131, -754, -566, -425, -330, -236, -142, -48, 45, 140, 234, 375, 563, 940,
-991, -689, -538, -425, -349, -274, -198, -123, -47, 27, 103, 216, 367, 669,
-896, -582, -425, -307, -229, -150, -72, 6, 84, 163, 241, 359, 516, 830,
-933, -627, -474, -359, -283, -206, -130, -54, 22, 98, 175, 289, 442, 748,
-1011, -645, -461, -324, -232, -141, -49, 42, 133, 225, 317, 454, 638, 1004,
-807, -511, -364, -253, -179, -105, -31, 42, 116, 190, 264, 375, 523, 818,
-835, -546, -402, -294, -221, -149, -77, -5, 66, 138, 211, 319, 463, 752,
-675, -413, -282, -184, -118, -53, 11, 77, 142, 208, 273, 371, 502, 764,
-1006, -677, -512, -389, -307, -224, -142, -60, 21, 104, 186, 309, 474, 803,
-728, -475, -348, -253, -190, -126, -63, 0, 62, 126, 189, 284, 410, 664,
-836, -520, -363, -245, -166, -87, -8, 69, 148, 227, 306, 424, 582, 897,
-976, -608, -424, -285, -193, -101, -9, 82, 174, 266, 359, 497, 681, 1050,
-889, -576, -419, -302, -224, -145, -67, 10, 89, 167, 245, 363, 519, 832,
-758, -451, -298, -183, -106, -30, 46, 123, 199, 276, 352, 467, 621, 927,
-779, -499, -359, -253, -183, -113, -43, 26, 96, 166, 236, 342, 482, 762,
-1137, -748, -553, -408, -310, -213, -116, -19, 78, 175, 272, 418, 612, 1001,
-1079, -762, -603, -484, -404, -325, -246, -166, -87, -7, 71, 190, 349, 666,
-808, -486, -324, -204, -123, -42, 37, 118, 198, 279, 360, 480, 642, 964,
-769, -461, -306, -191, -114, -37, 39, 117, 194, 271, 348, 463, 618, 926,
-714, -431, -289, -183, -113, -42, 28, 99, 170, 240, 311, 417, 559, 842,
-711, -440, -304, -203, -135, -67, 0, 67, 135, 203, 270, 372, 508, 779,
-1245, -847, -647, -498, -398, -299, -199, -99, 0, 99, 199, 348, 547, 946,
-788, -506, -365, -260, -189, -119, -48, 21, 91, 162, 232, 338, 479, 761,
-832, -541, -396, -287, -214, -141, -68, 3, 76, 149, 221, 331, 476, 767,
-779, -485, -338, -227, -154, -80, -7, 66, 139, 213, 287, 397, 544, 838,
-744, -481, -349, -251, -185, -119, -53, 12, 77, 143, 209, 307, 439, 702,
-1048, -710, -540, -414, -329, -244, -160, -75, 8, 93, 177, 304, 474, 812,
-940, -607, -440, -315, -232, -148, -65, 17, 101, 184, 267, 392, 559, 892,
-796, -516, -377, -272, -202, -132, -63, 6, 76, 146, 216, 320, 460, 739,
-1075, -740, -572, -447, -363, -279, -195, -111, -28, 55, 139, 265, 432, 768,
-814, -462, -286, -153, -65, 22, 110, 198, 286, 374, 462, 594, 770, 1123,
-909, -603, -449, -335, -258, -181, -105, -28, 47, 124, 200, 315, 469, 775,
-801, -509, -363, -254, -181, -108, -35, 37, 110, 183, 255, 365, 511, 802,
-970, -614, -436, -303, -213, -124, -35, 53, 142, 231, 320, 453, 632, 988,
-750, -485, -352, -253, -186, -120, -53, 12, 78, 145, 211, 311, 444, 709,
-678, -398, -257, -152, -82, -12, 57, 128, 198, 268, 338, 443, 584, 864,
-911, -562, -388, -257, -170, -82, 4, 91, 178, 266, 353, 484, 658, 1007,
-784, -487, -338, -227, -153, -78, -4, 69, 143, 218, 292, 403, 552, 849,
-674, -421, -295, -200, -136, -73, -10, 52, 116, 179, 242, 337, 463, 716,
-980, -632, -458, -328, -241, -154, -67, 19, 106, 193, 279, 410, 584, 931,
-776, -482, -335, -225, -151, -78, -4, 68, 142, 215, 288, 399, 546, 839,
};

static uint64_t backbone_model5_conv2_conv2_weight[64 * 9] =
{ // torch.Size([64, 3, 3, 1])
0x6, 0x4, 0x2, 0x6, 0x3, 0xc, 0x5, 0x9, 0x4, 
0x5, 0x2, 0xd, 0x4, 0xb, 0xd, 0x2, 0xc, 0xe, 
0x4, 0x3, 0x5, 0xc, 0xb, 0x6, 0xc, 0x3, 0x4, 
0x6, 0x5, 0x4, 0x4, 0x0, 0xc, 0x2, 0xc, 0xc, 
0xe, 0xd, 0xd, 0xa, 0xc, 0xa, 0xb, 0xa, 0xa, 
0xb, 0x6, 0x5, 0xc, 0x6, 0x2, 0xd, 0x1, 0x2, 
0x5, 0x5, 0xc, 0xb, 0x4, 0xd, 0xe, 0xc, 0xd, 
0x2, 0xb, 0x4, 0x3, 0x3, 0x4, 0x5, 0x5, 0x5, 
0x3, 0x2, 0x5, 0x3, 0xc, 0x4, 0x4, 0x3, 0x6, 
0x5, 0x4, 0x5, 0x4, 0xc, 0x4, 0x4, 0x3, 0x5, 
0x6, 0xc, 0xb, 0x5, 0xb, 0xc, 0x5, 0x5, 0xa, 
0x5, 0x9, 0x9, 0x5, 0x5, 0x3, 0x5, 0x5, 0x4, 
0x5, 0xd, 0xe, 0x5, 0x4, 0xd, 0x0, 0x4, 0x0, 
0xe, 0xc, 0xd, 0x0, 0x4, 0x4, 0x4, 0x5, 0xa, 
0x6, 0x5, 0x5, 0x3, 0x9, 0x3, 0xe, 0xc, 0xd, 
0x3, 0xc, 0x3, 0x4, 0x5, 0x3, 0x6, 0x4, 0x4, 
0x6, 0x4, 0x4, 0x4, 0x4, 0x4, 0xc, 0xc, 0xc, 
0x5, 0x3, 0x2, 0x4, 0xd, 0x0, 0x6, 0xa, 0x4, 
0x9, 0xd, 0xe, 0x5, 0x3, 0xd, 0x3, 0x5, 0xa, 
0x5, 0x5, 0x5, 0xc, 0xc, 0x4, 0xe, 0xd, 0xd, 
0xd, 0xc, 0xb, 0xd, 0xa, 0xa, 0xe, 0x9, 0xc, 
0x5, 0xb, 0xb, 0x6, 0xd, 0xe, 0x6, 0x4, 0x0, 
0x5, 0x2, 0xb, 0x4, 0x2, 0xb, 0x6, 0x5, 0x9, 
0x6, 0x4, 0x6, 0x4, 0xc, 0xb, 0x4, 0x3, 0xa, 
0x1, 0xb, 0x4, 0x9, 0xa, 0x3, 0x5, 0x5, 0x6, 
0x4, 0x4, 0x3, 0x5, 0x5, 0x6, 0x0, 0x2, 0x5, 
0x5, 0x3, 0x5, 0x1, 0x2, 0x4, 0xe, 0xd, 0xc, 
0x5, 0x4, 0x5, 0x5, 0xb, 0x1, 0x3, 0x4, 0x0, 
0xd, 0xc, 0x0, 0xe, 0x5, 0x4, 0xe, 0x2, 0x4, 
0x5, 0x5, 0x5, 0xc, 0xc, 0xc, 0xd, 0xc, 0xc, 
0x6, 0x6, 0xd, 0x0, 0x4, 0xc, 0xd, 0xc, 0xb, 
0xb, 0xb, 0xc, 0xc, 0xd, 0xc, 0xc, 0xc, 0xc, 
0xd, 0xe, 0xe, 0x3, 0x4, 0xb, 0x5, 0x4, 0xc, 
0x0, 0xb, 0xd, 0x2, 0xd, 0xd, 0x4, 0xc, 0xc, 
0xc, 0xc, 0xb, 0xc, 0xc, 0xd, 0xc, 0xc, 0xb, 
0x5, 0x5, 0xe, 0x5, 0x4, 0xe, 0xc, 0xc, 0xd, 
0xb, 0xd, 0x5, 0x0, 0xc, 0x6, 0x3, 0xb, 0x6, 
0x5, 0x4, 0x6, 0x4, 0x2, 0x4, 0xc, 0xc, 0xd, 
0x5, 0x4, 0x5, 0x4, 0xb, 0x4, 0x9, 0x4, 0x5, 
0x5, 0xa, 0x3, 0x5, 0x9, 0x9, 0x6, 0x4, 0x4, 
0x2, 0x9, 0xb, 0x3, 0xa, 0x3, 0x6, 0x4, 0x6, 
0x4, 0x4, 0x1, 0xd, 0xc, 0x4, 0xd, 0xe, 0x5, 
0x4, 0xc, 0xe, 0x4, 0x4, 0xd, 0x5, 0x3, 0xd, 
0xd, 0x3, 0x5, 0xc, 0xb, 0x4, 0xd, 0xc, 0xc, 
0xc, 0xd, 0xd, 0x4, 0x5, 0x5, 0x2, 0xa, 0xa, 
0x6, 0xd, 0xd, 0x7, 0x3, 0xd, 0x5, 0xc, 0xd, 
0xd, 0x9, 0x5, 0xd, 0x5, 0x6, 0xc, 0x3, 0x6, 
0x3, 0xc, 0xd, 0x5, 0xd, 0xd, 0x4, 0xc, 0xe, 
0x5, 0x0, 0xb, 0x6, 0x4, 0xc, 0xd, 0xc, 0xc, 
0x4, 0x4, 0x3, 0x4, 0x4, 0xc, 0xd, 0xd, 0xd, 
0x5, 0x4, 0x4, 0x4, 0x4, 0x2, 0x4, 0x4, 0x2, 
0x6, 0x5, 0xe, 0x5, 0x5, 0xc, 0xc, 0xb, 0x0, 
0xb, 0x9, 0xb, 0x4, 0x4, 0x2, 0x6, 0x5, 0x5, 
0x5, 0x3, 0x4, 0x6, 0x4, 0x6, 0x4, 0xc, 0xc, 
0x3, 0x3, 0xd, 0x4, 0xa, 0xd, 0xb, 0xd, 0xd, 
0x5, 0x5, 0xb, 0x5, 0xc, 0xd, 0x5, 0xa, 0xd, 
0xe, 0x3, 0x6, 0xc, 0x1, 0x4, 0x2, 0x3, 0x4, 
0x4, 0x6, 0x0, 0xb, 0x6, 0x3, 0x4, 0x4, 0x6, 
0xd, 0xd, 0xd, 0x0, 0x3, 0x2, 0xd, 0x1, 0xc, 
0xd, 0xe, 0xd, 0xc, 0xb, 0x5, 0xd, 0x9, 0x5, 
0x0, 0x2, 0xc, 0x9, 0x4, 0xc, 0xb, 0xc, 0xf, 
0x9, 0xd, 0xd, 0x5, 0x3, 0xb, 0x6, 0x3, 0x4, 
0x3, 0xc, 0xc, 0x3, 0xb, 0x4, 0x4, 0x6, 0x5, 
0xd, 0xd, 0xc, 0xc, 0x2, 0x5, 0xa, 0x4, 0x5, 
};

static int backbone_model5_conv2_relu2_threshold[64 * 7] =
{ // torch.Size([64, 7])
31, 90, 148, 206, 294, 411, 644,
1, 53, 104, 155, 232, 335, 541,
5, 53, 101, 149, 222, 318, 511,
-3, 48, 100, 152, 230, 334, 542,
55, 104, 152, 201, 274, 371, 566,
49, 94, 139, 184, 252, 342, 522,
22, 72, 121, 171, 245, 345, 543,
30, 73, 116, 159, 223, 308, 480,
52, 88, 123, 159, 212, 283, 425,
-56, -13, 29, 72, 137, 224, 396,
19, 61, 103, 144, 207, 290, 458,
25, 81, 137, 193, 277, 389, 612,
59, 92, 124, 156, 205, 270, 399,
33, 67, 102, 136, 188, 256, 394,
49, 95, 141, 187, 255, 347, 531,
27, 68, 110, 151, 213, 296, 462,
25, 72, 118, 165, 235, 328, 514,
34, 66, 99, 132, 181, 246, 376,
19, 90, 161, 231, 338, 479, 763,
29, 86, 144, 201, 287, 402, 633,
29, 86, 144, 201, 288, 403, 632,
-4, 36, 76, 116, 177, 258, 419,
46, 85, 124, 163, 221, 299, 455,
53, 117, 181, 246, 342, 471, 728,
28, 80, 131, 183, 260, 363, 569,
31, 82, 133, 183, 259, 361, 563,
7, 49, 91, 132, 195, 279, 446,
14, 64, 115, 165, 241, 343, 545,
-5, 45, 96, 147, 224, 326, 530,
45, 89, 134, 179, 246, 336, 515,
74, 116, 158, 200, 263, 348, 516,
26, 58, 91, 123, 172, 237, 366,
11, 54, 98, 141, 205, 292, 464,
34, 66, 99, 131, 179, 243, 372,
48, 76, 103, 131, 172, 227, 337,
-21, 32, 85, 139, 219, 326, 540,
5, 48, 91, 134, 199, 285, 457,
24, 64, 104, 144, 205, 285, 446,
13, 66, 119, 172, 251, 357, 568,
29, 96, 162, 228, 327, 460, 725,
-15, 20, 56, 92, 147, 219, 363,
47, 89, 131, 173, 235, 319, 486,
28, 70, 111, 153, 216, 299, 466,
21, 58, 95, 131, 187, 260, 408,
36, 55, 74, 93, 121, 159, 235,
59, 142, 225, 308, 432, 597, 928,
44, 114, 184, 254, 359, 499, 778,
-25, 19, 63, 107, 174, 262, 439,
23, 55, 87, 119, 167, 231, 359,
18, 52, 87, 122, 175, 245, 385,
50, 76, 103, 129, 168, 221, 326,
80, 125, 169, 214, 281, 370, 548,
13, 74, 135, 196, 288, 410, 654,
7, 53, 99, 146, 215, 308, 493,
-27, 27, 82, 137, 220, 330, 551,
26, 75, 124, 174, 248, 346, 543,
26, 78, 130, 181, 259, 362, 568,
32, 103, 174, 245, 351, 493, 777,
61, 108, 156, 204, 276, 371, 562,
9, 79, 150, 220, 325, 465, 746,
66, 132, 199, 266, 365, 499, 765,
0, 61, 122, 183, 275, 397, 642,
39, 72, 106, 139, 190, 257, 391,
45, 73, 101, 129, 172, 228, 342,
};

static uint64_t neck_lateral_convs_0_conv1_weight[64 * 1*4] =
{ // torch.Size([64, 1, 1, 64])
0xba1324a4ca12123b,0x34a124420a2b003a,0x2b15241932242934,0x1b11323505a9c2ba, 
0x4912b2bb32c0120a,0xb033ab22b23b23b2,0x304a3304ad23abc2,0x14b333abc400b4a0, 
0xc4c53334b1230043,0x45b3aa49bb192244,0x2305bcb35a04c334,0x230b3bb326b4c01b, 
0x2aa9299940a33409,0x012b3a12421231a4,0xa20a0a0005a2ac29,0x113223a0a1100003, 
0xb411ba19d13ccd93,0x2bc3d3aadc0bbb2d,0x2303922a2e3b13c0,0x4bcccb103aa2a09c, 
0x3aa45c339954c4a4,0x2c3035410bcdba94,0x2bc4cd2543c43b92,0x0d4464b325254adc, 
0x00a2b0aaa13b2030,0x32c920ca21132003,0x2ba393aa21b9a0ca,0x913b912121090011, 
0xd305dcb4c32bba3c,0x4dcaa0c2b9bd1904,0x3cc3bb114dc3db43,0x32c39b11db3dbcc3, 
0xb4bbccb34a3343d3,0x5294223b4334209c,0xb3343a41bc3bd4dc,0x314b14cc399b0b43, 
0x2a45b9b4cc4c2144,0x4bcccbdaabcd2c53,0x1cc2cc1e4dcadb54,0x39d43c2dcdbd3bb3, 
0x3b93cb3c33c313cc,0xc351aca333c433ab,0x493b2343b34449a5,0x3334cb44aaa9404b, 
0xb1bdbd93930abc5a,0x32b121c33b9cb1bc,0xabc9bb3ab42e3433,0x1c5a5cb2b294bcdb, 
0x2ba342ac6a9355aa,0x925c5041653541b6,0x1a33a1aa26b3bb40,0xc35235a0b3301b36, 
0x5bb3303b23431326,0x241a54342aab21c4,0x94c5ac0131b53240,0x3cb3542224343acc, 
0xcbc0b3a22aabbb4a,0x90c23bcbbc2c4c39,0x4cb4b04d4b22c934,0x23a94d33bcbd42c9, 
0x253bab2bc332cd33,0x433a9a59c20232c1,0x4ca42ba44c3bc5bc,0x4439323a953bbccc, 
0xac44bb4123b2220c,0x2bb1ccab33b329cc,0xb4cecdca94cabdc3,0xbcc1cbbd0d3bb23c, 
0x4bad443333cc3a2c,0x15953c15244cbbbb,0x201a1c39c59453cc,0x9b3c99344935c030, 
0xba240b23ca10ba14,0x4bbc332db301dc61,0x40c42c2c319c9035,0xa9b44cb03a9dcc20, 
0x4ccb24ddc5542ad1,0x4193bb52c94d40c1,0xc3dc4dc9d4dc9d5c,0xc4c2c3caabd1bc54, 
0x449cbcb224aab4cb,0xbb324c1c990304d3,0xb3243cb59422c3ca,0x4c4bb5adb33cc2a3, 
0x5bbcccbdbc9bb3bc,0x6bbbb404324dc93a,0x2cbddca3a49b34d3,0xcb293c19a404dcac, 
0xdd1415bd3443451c,0x323a3494445c3bb4,0xb3434c3345300b4b,0xac2b44b4baa34944, 
0x5a4cbab34b3c3b3a,0xc5c3aac934c3a4db,0x913ac4bccc5a5b1c,0x3091cb49cbc45333, 
0xc4cbbbc2dcb2cc5c,0x32c0adc3cc0ea493,0xacccbc24422bc454,0x942b4b3cccb3ccb1, 
0x3cbdbcc9c4ba23dc,0xbba4accbcccdc4bb,0xb34cc9cbcbcccdcb,0xa443adcdab4cc99d, 
0xb39a0dc23b0ccb95,0xd994bcc949233bab,0xbdd4bd0544cdbacb,0x3d423ccd19bb2bc3, 
0x093c443d33a44a33,0xd32aa4a04c45c45c,0x9533444db44ac33b,0xb25513cb4a3b5453, 
0x4c3ccccc3bcc4a1c,0x39bc22c1a2159bc4,0x0b42b4bcc4ac4909,0x204b43c332c3b229, 
0xdb214caa143b3bb3,0x2cc034dc32cccb4b,0xb4b3ac3c15cc9c42,0xb952cb22391ba3ca, 
0x4bba59906bc5562b,0xa15c6a41652542c6,0xb01cbbbab7b3cc4a,0xb34455a1b4912036, 
0xb105cc04cccc9cda,0xcc030d4aaebc4b23,0x1dbb2c254bc5d3aa,0x31c042cbcb9bdbc9, 
0x9593023a3a3b2950,0x350cb144cb1bbb21,0xb133cc344041b414,0xb3b24b3d33232399, 
0xca2c9d1341c40b93,0xae14cbbb1b3a2bcc,0xc5de9ccbc4dcbb3a,0xab99c00ccebca24a, 
0xd0a04badd951b259,0x4cdd0a4dc4bdedb2,0x2acbcbbda34dd345,0x11b43a3a432cacb2, 
0x32442a331b2c2344,0xb52ac9b232c42329,0x0b11332b143c341a,0xa333bbac41c45443, 
0x44bd32ca51bc4b6c,0xc5bcc0d04a34c4dc,0xc24a334bc4adbc65,0x9c29442c432cd34a, 
0x1b93baa212392230,0x32c922a222143092,0x0ba3a2ba30c02bc1,0xb03aa3b121a032a2, 
0x045b2b54ca43ba32,0x9ca0c491432b3b22,0xc4aebc3b4353a332,0x5bbcbc4c2dac534d, 
0x23cac5e9b5db3cb2,0x42c34aac33540dc3,0x40c3a4d3c4d43cb3,0xd54d3405a4bccb43, 
0xba344c2443a921b4,0xe5340cb43b04422b,0x123444012b9bbdbc,0x32240b9329ab5442, 
0xc233cc05393c3c44,0xe5251dcaca921a9a,0xbbcbcc244bc42c9d,0x0b2c3324cbca49b3, 
0x5a9bd9cc3bbcbba5,0xb1133cb1432419c3,0xc91c3c23cabb31cc,0xcabac4ac1d13a341, 
0xa6533a63c445c1bb,0xbd23b4b5cdca434c,0x454e34544451d3c1,0x5c34c251dd3b25cd, 
0xc4331bb4b35bc205,0x43a922024b3512a4,0x4143adb32c3bb4c2,0x324c540cb5a2ccdc, 
0x4433d453c2c4a5d2,0x4e0bcbb35cc4333c,0x4130445cc3434935,0xb422c454344dc35c, 
0x322bb4330b4a2c44,0xb440ab523b19b24b,0xc3bba9aacb5433c2,0xb3034c4a434b4b3b, 
0xc954cb43a2b3c45d,0x3c4ba443abccb304,0x22ceb4b409350345,0x4cb4443b1ba2cca3, 
0x3555b44a345544c4,0xc3b4bb2452dc493a,0x43335443cd452c3d,0x55c2c4411bc3434c, 
0x3b4d450440da4934,0xc2b4b4ca4b45cabc,0x34431a2c04432c3b,0xbc4a3425345c415a, 
0x342cd4dccccbbdcc,0xb1c1dccbdc3ccdbb,0x2dccc4b33cc0b69c,0x42c9bc99d9cbcb4c, 
0x9a33343db464a404,0x5c3cc4405b4433c3,0x3344351da33c2145,0xb422bccc533934bb, 
0x32b49523a454335b,0x36933241bb3d3215,0xbac35b3a53241430,0x1d214344cb23b342, 
0xa3b3cb0413ca1b2b,0x4b9904ab34b420c0,0x423b122443c2b3a3,0x2b91b42bc9cce340, 
0xbcb4a3512143939d,0xa130bc3c33a429cb,0x245e14c3bba4b9ab,0xcbcac0a92da0b444, 
0xc4d41429b2c1cb03,0x4ca0a432c544aacc,0x4a43c43c3bb2b430,0xc03bc435c69ddabb, 
0x3cbab3c9332c3acc,0xc1cb21bb323542c4,0x3104b4c0aaca429a,0x2b4c35c123a9bba0, 
0x4c14ac19445b95c4,0xa31243cc53c93bc1,0xb4b4cc24453cbd2c,0xbb4a3ccb345b99b5, 
0x529bbcc93b4c2192,0xc9c42c9313bc3cb4,0x9c39b4b4db314c1c,0x12ba09acadb44942, 
0x3c440b14bb3cb3d1,0x4043cbd9a3bb9b19,0x4dc1acbd1da39ce3,0x0cc33ca3caa19cd9, 
0x4c34c14b34433bdb,0xb4c34b399bcdcab5,0xa3bcbbd49cb624ad,0x0adba522da9429b1, 
0x4a34c94c430333d9,0xcc40ba4243b493b3,0x34a131b5a995bbcd,0x14b2c532c3bcb243, 
0xaabbb9bc30039391,0xb0bb41b1a3242320,0x9242330044bbb0bc,0xa342b3c2339b13a0, 
0xcbcc334a34343904,0xac4440b3c33daa3d,0xb41342bdb9cc0d3c,0x2949d3c03c4b5ad3, 
};

static int neck_lateral_convs_0_quant1_threshold[64 * 14] =
{ // torch.Size([64, 14])
-519, -307, -202, -122, -69, -17, 35, 88, 141, 194, 247, 326, 432, 643,
-470, -294, -205, -139, -95, -51, -7, 36, 80, 124, 169, 235, 323, 500,
-526, -295, -180, -94, -36, 21, 78, 136, 194, 251, 309, 396, 511, 742,
-497, -313, -221, -152, -106, -60, -14, 31, 77, 123, 169, 239, 331, 515,
-442, -294, -220, -165, -128, -91, -54, -17, 19, 56, 93, 148, 222, 370,
-840, -528, -371, -254, -176, -98, -20, 57, 135, 214, 292, 409, 565, 878,
-899, -582, -423, -304, -224, -145, -65, 13, 92, 172, 251, 370, 529, 847,
-1019, -735, -593, -487, -415, -344, -273, -202, -131, -60, 10, 116, 258, 542,
-801, -501, -351, -238, -163, -88, -12, 62, 137, 212, 287, 400, 550, 851,
-684, -544, -473, -421, -386, -350, -315, -280, -245, -210, -175, -122, -52, 87,
-579, -334, -212, -120, -58, 2, 63, 124, 185, 247, 308, 400, 522, 767,
-804, -552, -426, -332, -269, -206, -143, -80, -17, 45, 108, 202, 328, 580,
-872, -578, -431, -321, -247, -174, -100, -27, 46, 119, 193, 303, 450, 744,
-557, -300, -171, -75, -11, 52, 117, 181, 245, 309, 374, 470, 598, 855,
-875, -617, -488, -391, -327, -262, -198, -133, -69, -4, 59, 156, 285, 543,
-729, -444, -301, -194, -123, -51, 19, 90, 161, 233, 304, 411, 553, 839,
-1010, -711, -562, -450, -376, -301, -227, -152, -78, -3, 70, 182, 331, 630,
-603, -339, -207, -107, -41, 24, 90, 156, 222, 288, 354, 453, 586, 850,
-834, -541, -394, -284, -211, -138, -64, 8, 81, 154, 228, 338, 484, 777,
-1011, -693, -534, -415, -335, -256, -176, -97, -17, 61, 141, 260, 419, 737,
-889, -570, -410, -291, -211, -131, -51, 27, 107, 187, 267, 386, 546, 865,
-826, -560, -428, -328, -262, -196, -129, -63, 2, 69, 135, 234, 367, 632,
-831, -470, -290, -155, -65, 24, 114, 204, 294, 384, 474, 610, 790, 1150,
-841, -518, -356, -235, -154, -73, 6, 87, 168, 249, 329, 450, 612, 935,
-934, -643, -498, -389, -316, -243, -170, -98, -25, 47, 119, 228, 374, 664,
-1328, -951, -762, -621, -526, -432, -338, -244, -149, -55, 38, 180, 368, 745,
-877, -606, -470, -368, -300, -232, -164, -97, -29, 38, 106, 208, 344, 615,
-642, -344, -196, -84, -10, 64, 138, 212, 287, 361, 435, 547, 696, 993,
-1038, -676, -494, -358, -268, -177, -86, 3, 94, 185, 275, 411, 593, 955,
-848, -567, -427, -322, -252, -181, -111, -41, 28, 98, 169, 274, 414, 695,
-603, -338, -205, -106, -40, 26, 92, 158, 225, 291, 358, 457, 590, 855,
-1066, -746, -587, -467, -387, -308, -228, -148, -68, 11, 90, 210, 370, 689,
-828, -503, -341, -219, -138, -57, 24, 105, 186, 267, 348, 470, 632, 957,
-1116, -783, -616, -491, -408, -324, -241, -158, -74, 8, 92, 217, 383, 717,
-990, -705, -562, -456, -384, -313, -242, -171, -100, -28, 42, 149, 291, 576,
-497, -264, -148, -61, -3, 54, 113, 171, 229, 287, 345, 432, 549, 781,
-918, -604, -447, -329, -251, -172, -94, -15, 62, 141, 219, 337, 494, 808,
-817, -531, -389, -282, -210, -139, -68, 3, 74, 145, 217, 324, 466, 752,
-796, -474, -313, -193, -112, -32, 47, 128, 208, 288, 369, 489, 650, 971,
-1209, -770, -551, -386, -277, -167, -58, 51, 161, 270, 380, 544, 764, 1202,
-535, -298, -180, -91, -31, 27, 86, 146, 205, 264, 323, 412, 531, 768,
-812, -531, -391, -286, -215, -145, -75, -5, 64, 135, 205, 310, 450, 731,
-573, -351, -240, -156, -101, -45, 9, 65, 120, 176, 231, 315, 426, 648,
-1259, -783, -544, -365, -246, -127, -8, 111, 230, 349, 468, 647, 886, 1362,
-818, -524, -378, -267, -194, -121, -47, 25, 99, 172, 246, 356, 503, 796,
-387, -173, -66, 14, 67, 121, 174, 228, 282, 335, 389, 469, 576, 791,
-770, -430, -260, -132, -47, 37, 122, 207, 292, 378, 463, 590, 760, 1101,
-750, -470, -330, -225, -155, -85, -15, 54, 124, 194, 264, 369, 509, 789,
-965, -578, -384, -239, -142, -45, 51, 148, 245, 341, 438, 584, 777, 1165,
-665, -353, -196, -79, -1, 76, 154, 232, 310, 388, 467, 584, 740, 1052,
-1420, -1010, -805, -651, -548, -446, -343, -240, -138, -35, 66, 220, 425, 835,
-638, -357, -217, -111, -41, 28, 98, 169, 239, 309, 379, 485, 625, 906,
-628, -338, -192, -83, -11, 61, 133, 206, 279, 351, 424, 533, 678, 968,
-639, -414, -301, -217, -161, -104, -48, 7, 63, 120, 176, 260, 373, 598,
-650, -397, -271, -176, -112, -49, 13, 77, 140, 203, 266, 361, 488, 741,
-925, -610, -452, -334, -256, -177, -98, -19, 58, 137, 216, 334, 491, 806,
-1185, -765, -555, -398, -293, -188, -83, 21, 126, 231, 336, 494, 704, 1124,
-877, -536, -365, -237, -152, -66, 18, 103, 189, 274, 359, 487, 658, 999,
-729, -476, -349, -254, -190, -127, -64, 0, 62, 125, 189, 284, 411, 664,
-883, -640, -519, -427, -367, -306, -245, -184, -124, -63, -2, 88, 209, 453,
-925, -605, -445, -325, -245, -165, -85, -5, 74, 154, 234, 354, 514, 833,
-612, -361, -236, -142, -79, -17, 45, 108, 170, 233, 296, 390, 515, 766,
-834, -525, -370, -254, -176, -99, -21, 55, 133, 210, 287, 404, 558, 868,
-937, -628, -474, -358, -281, -204, -127, -50, 26, 104, 181, 296, 451, 759,
};

static uint64_t neck_lateral_convs_0_conv2_weight[64 * 9] =
{ // torch.Size([64, 3, 3, 1])
0xe, 0xb, 0x3, 0xe, 0x6, 0xb, 0xd, 0xd, 0x3, 
0x3, 0x2, 0x3, 0xd, 0xd, 0xd, 0x3, 0x4, 0x4, 
0x4, 0xe, 0x4, 0x4, 0xd, 0x4, 0xb, 0xd, 0x3, 
0xa, 0x9, 0xa, 0xa, 0x9, 0xa, 0xa, 0x9, 0xa, 
0x3, 0x2, 0x3, 0x2, 0x2, 0x2, 0x3, 0x3, 0x3, 
0x1, 0xb, 0xc, 0xd, 0xe, 0xc, 0x3, 0x4, 0xa, 
0xa, 0xb, 0xa, 0xa, 0xb, 0x9, 0xa, 0xb, 0xa, 
0x9, 0x5, 0x6, 0xb, 0x4, 0x4, 0xb, 0x1, 0xb, 
0xc, 0x9, 0x1, 0xd, 0xd, 0xb, 0xb, 0x9, 0xb, 
0x5, 0x2, 0xb, 0x6, 0x4, 0x2, 0x2, 0x0, 0xc, 
0xe, 0xc, 0x3, 0xd, 0xa, 0x2, 0x2, 0x2, 0x0, 
0xa, 0x3, 0x9, 0x6, 0x6, 0x5, 0xc, 0xd, 0xb, 
0xd, 0xc, 0xc, 0xb, 0x0, 0xb, 0xd, 0xc, 0xc, 
0xd, 0xc, 0xc, 0xd, 0x6, 0xd, 0xc, 0xe, 0xa, 
0xb, 0xa, 0x0, 0xc, 0x4, 0x6, 0x3, 0x5, 0x2, 
0x5, 0x3, 0xa, 0x5, 0x6, 0xc, 0xb, 0xb, 0x4, 
0x4, 0x5, 0x1, 0x5, 0x5, 0xc, 0x4, 0xc, 0xc, 
0x9, 0xc, 0xe, 0x4, 0x3, 0xd, 0x3, 0xb, 0x0, 
0xa, 0xc, 0x4, 0xc, 0x9, 0x5, 0x9, 0x5, 0x6, 
0xd, 0xa, 0x3, 0x4, 0x6, 0xb, 0x5, 0x5, 0xd, 
0xc, 0xb, 0x3, 0xc, 0xb, 0xc, 0xd, 0xc, 0xd, 
0x1, 0x3, 0xc, 0x4, 0x6, 0x9, 0xc, 0x2, 0x3, 
0xb, 0xe, 0xc, 0x4, 0xb, 0xc, 0x3, 0x3, 0xd, 
0x4, 0xc, 0xd, 0x3, 0x2, 0xd, 0x9, 0xc, 0xd, 
0x3, 0x7, 0xb, 0xb, 0x4, 0x4, 0xc, 0x3, 0xa, 
0x4, 0x5, 0x0, 0x3, 0x2, 0x2, 0x4, 0x3, 0xb, 
0x3, 0xc, 0x2, 0x4, 0x7, 0xa, 0xc, 0xa, 0x4, 
0x2, 0x4, 0x9, 0x0, 0xb, 0x2, 0xd, 0xe, 0xd, 
0x9, 0xc, 0xd, 0x2, 0xb, 0xc, 0x9, 0xb, 0xb, 
0xd, 0xd, 0x4, 0xb, 0x3, 0x5, 0x5, 0x5, 0x3, 
0xc, 0xb, 0xc, 0xb, 0xa, 0xb, 0xc, 0xb, 0xc, 
0xc, 0xc, 0x3, 0x7, 0x3, 0xb, 0x5, 0xa, 0xc, 
0xa, 0x2, 0x9, 0x4, 0x4, 0x3, 0x6, 0xb, 0xb, 
0x5, 0xd, 0x2, 0x5, 0x6, 0x4, 0xc, 0x5, 0x1, 
0xa, 0x3, 0x5, 0xa, 0x6, 0x1, 0x3, 0x5, 0xd, 
0x2, 0xd, 0xc, 0x3, 0xc, 0xd, 0x1, 0x3, 0xb, 
0xe, 0xe, 0xc, 0x2, 0x4, 0x9, 0x0, 0xb, 0x3, 
0xb, 0xa, 0xa, 0xa, 0xa, 0xa, 0xa, 0xa, 0xb, 
0xc, 0x4, 0x4, 0xf, 0xb, 0x4, 0xc, 0x4, 0x4, 
0xd, 0xb, 0xc, 0x4, 0x5, 0xa, 0x3, 0x6, 0x4, 
0x4, 0xc, 0xe, 0x4, 0xa, 0xc, 0x2, 0x3, 0xc, 
0x6, 0x3, 0xb, 0x5, 0x3, 0xb, 0x1, 0xa, 0xa, 
0x6, 0xc, 0xa, 0x5, 0xd, 0x3, 0x4, 0xa, 0xb, 
0xc, 0xf, 0xd, 0x4, 0xc, 0x4, 0x1, 0x1, 0xb, 
0xe, 0x5, 0x3, 0xc, 0x5, 0xc, 0xd, 0xd, 0xc, 
0x4, 0xd, 0xe, 0x4, 0xb, 0xc, 0x3, 0x2, 0xb, 
0x4, 0x4, 0x2, 0x4, 0x4, 0x2, 0x4, 0x5, 0x4, 
0xb, 0xe, 0x4, 0x4, 0xe, 0x3, 0x4, 0x5, 0xc, 
0xf, 0x0, 0x5, 0xb, 0x2, 0x4, 0x4, 0x4, 0xb, 
0xc, 0xb, 0x3, 0xe, 0xb, 0xa, 0xc, 0xb, 0x4, 
0x2, 0xc, 0x4, 0x4, 0x4, 0x5, 0x5, 0x4, 0x4, 
0x0, 0xb, 0x4, 0x1, 0xe, 0xc, 0xb, 0x9, 0x3, 
0xc, 0xb, 0xc, 0xd, 0xc, 0x5, 0x4, 0xe, 0xb, 
0xe, 0x3, 0x3, 0xd, 0xc, 0x1, 0x2, 0xd, 0xb, 
0x5, 0x7, 0x4, 0x3, 0xd, 0x4, 0x2, 0xc, 0xb, 
0xe, 0xb, 0x3, 0xd, 0xb, 0x1, 0xd, 0xc, 0x2, 
0xb, 0xb, 0xb, 0xb, 0x9, 0x9, 0xc, 0xb, 0xb, 
0x3, 0x4, 0x3, 0xc, 0xc, 0xc, 0xd, 0xd, 0xd, 
0x4, 0xd, 0xa, 0x3, 0xd, 0x6, 0xb, 0xb, 0x5, 
0x0, 0xb, 0x9, 0xc, 0xc, 0x9, 0x6, 0x6, 0x5, 
0x6, 0x6, 0x4, 0x3, 0xb, 0x2, 0x0, 0x4, 0xb, 
0x2, 0x9, 0x3, 0x1, 0x4, 0xc, 0xd, 0xe, 0xc, 
0x2, 0xd, 0x9, 0xc, 0xb, 0x1, 0xb, 0xc, 0x0, 
0x5, 0xb, 0xe, 0x5, 0x5, 0xb, 0x3, 0x3, 0x4, 
};

static int neck_lateral_convs_0_relu2_threshold[64 * 7] =
{ // torch.Size([64, 7])
-31, 10, 52, 94, 158, 242, 412,
32, 59, 86, 114, 155, 210, 319,
-37, 2, 41, 80, 139, 217, 374,
21, 31, 42, 53, 69, 90, 133,
37, 55, 74, 93, 121, 159, 235,
-33, 14, 61, 108, 178, 273, 461,
3, 10, 17, 23, 33, 46, 73,
27, 56, 84, 113, 155, 212, 326,
-10, 18, 46, 75, 118, 175, 289,
55, 118, 180, 242, 336, 461, 710,
62, 99, 136, 173, 228, 302, 450,
22, 75, 128, 181, 260, 366, 578,
-228, -179, -130, -80, -7, 91, 287,
3, 41, 79, 117, 175, 251, 404,
30, 62, 93, 124, 170, 233, 357,
32, 64, 97, 129, 177, 241, 370,
-5, 23, 52, 82, 125, 184, 300,
48, 75, 102, 129, 169, 223, 331,
59, 89, 119, 150, 195, 256, 377,
75, 118, 160, 202, 266, 351, 520,
20, 51, 82, 113, 160, 222, 347,
-2, 29, 60, 92, 139, 202, 328,
-50, 14, 79, 144, 242, 371, 631,
20, 51, 82, 114, 161, 223, 348,
-62, 0, 62, 124, 218, 343, 593,
-22, 10, 43, 76, 126, 192, 324,
1, 63, 124, 185, 277, 400, 645,
26, 63, 100, 138, 193, 268, 417,
3, 26, 48, 70, 104, 148, 238,
-12, 32, 76, 121, 188, 277, 455,
105, 123, 141, 159, 186, 222, 294,
58, 98, 138, 178, 238, 318, 478,
16, 44, 71, 98, 139, 194, 303,
-4, 35, 75, 115, 174, 254, 413,
11, 42, 73, 104, 151, 213, 337,
2, 25, 49, 73, 108, 156, 250,
35, 67, 99, 131, 179, 243, 372,
4, 12, 20, 29, 41, 58, 91,
31, 109, 187, 265, 382, 538, 849,
40, 86, 132, 178, 247, 339, 523,
41, 71, 101, 131, 176, 236, 356,
45, 75, 106, 136, 181, 242, 363,
-45, -4, 35, 75, 136, 216, 378,
-26, 70, 166, 262, 406, 599, 983,
20, 53, 87, 121, 171, 238, 373,
121, 174, 227, 280, 360, 467, 680,
13, 33, 52, 71, 100, 138, 215,
18, 67, 116, 165, 238, 336, 532,
50, 92, 133, 175, 237, 320, 486,
29, 56, 84, 111, 152, 207, 317,
-33, 22, 78, 133, 217, 328, 551,
25, 53, 80, 108, 150, 205, 316,
-37, 9, 56, 104, 174, 269, 458,
31, 61, 90, 120, 165, 225, 344,
-68, -17, 32, 83, 159, 260, 462,
-4, 30, 65, 100, 153, 223, 364,
-3, 12, 28, 44, 68, 100, 165,
-33, 10, 53, 97, 162, 249, 424,
39, 81, 123, 165, 229, 313, 482,
46, 78, 110, 142, 191, 255, 383,
38, 84, 130, 175, 244, 335, 518,
16, 41, 66, 90, 128, 177, 277,
9, 27, 45, 63, 90, 126, 197,
77, 115, 153, 190, 247, 322, 473,
};

static uint64_t neck_lateral_convs_1_conv1_weight[64 * 1*4] =
{ // torch.Size([64, 1, 1, 64])
0x4455514b5cc5a5c3,0xd4535dc5c455d543,0x43cd6cc45d5dc359,0x3b54d445c4dcd444, 
0x44a443515315da4c,0x5b3cddbcb5ba94c4,0x4bd3b443cc40d34d,0x2324dcdbe3cb433a, 
0x93bad2bc0c3cccc4,0xbdccc33cbe134d2b,0xbbc3bccc4a0cdabc,0xbbbbccbc3cc4ccd3, 
0x54d43d42d334c2c6,0x4c541134c4cbc420,0xc449b4da43b53a3c,0xc1dc04a4934d455b, 
0x93cc0da9d4c5cbb4,0x15b2b325941b254a,0xda321bcbbac9523b,0xc4d19249c15a4454, 
0x94a6344232c4339b,0x334cab2035135bca,0x94d91c4934a0b2bc,0xbb446b3aa1534b3a, 
0x24a43333243b33b9,0xb2342252cc334a32,0x33a4b501c549beba,0x33302cc43ab34233, 
0xc20c0492eba4c9bc,0x24bbbdcbcb4cd2c3,0xb43cc3db3c4c2bb4,0xa49abc3d34dbc4d3, 
0x9bbccccdc4344399,0xaa54c044c1bb5c33,0x1532b0c9ab4a4cd9,0x1bc14b23a2c331d3, 
0xbd4ccaab5a3c539d,0x3cd490bca1c5bc5c,0xad0c3c5caac41abc,0xc25da4324b443d4a, 
0xccb425ccbd01bbc2,0x9dc4dccc25d343b4,0x1cacbeabceccd5dc,0xc3dabdcbd066ccad, 
0x44cc5555b534d1ac,0x52c55dbda461c414,0xa2040ba49235da52,0xc45b452d3249235d, 
0x43b44d2095cdd5c0,0x904d10235cc34ccc,0xcba3b4b551444442,0xa2bb924b435ccbb9, 
0xbdccc4bd994bb123,0x0cb4ac033adbe335,0xb223bb29bf1c1dc3,0xa4c2c2ccc34b393c, 
0xbb2cb3c4b0132b3b,0x0cb42244dd44e254,0xb445a3a3bb341cb3,0x435342d9c243521d, 
0xcb443acbc4c094b3,0x4b3dac3555d4dc32,0x04c4ba54344234cc,0xc4355d4d4031bd24, 
0x4425cc43c435c41d,0x3c43332c11104a40,0xd534a3b129a2a3b5,0xd49d1035b55c543c, 
0x49314c9123cbc499,0xcb3c2ba242210a3c,0x45a333340a094c10,0x3302a5bc1cacbbc1, 
0xa515d253444c5c5b,0x33e43343bc5d4453,0x24b1d4ddc5555cc4,0x352493534db554d5, 
0xb1b334353cc2ab24,0xa44244b5d44a3593,0x310c5b29c14b334b,0x9b24aa0393a63345, 
0x4a3d45cc4baa4aca,0xc4aca3339c1d25ad,0x3a2c3ce590c09b44,0x51964aac3ba0ca34, 
0xdc55cc3bc4214ccc,0xbc340ca443c9ac5d,0xbd5c3bc543d34cc1,0x0a33b0abc3a97bcd, 
0x556463955ce1455c,0x964db5d59466d3cd,0x44cc5d4bdc535534,0xcc3b4656632dc5d6, 
0xba5033ca5dcd494d,0xc1bdc42d3dd24dd9,0x33cca443ccbccbaa,0x5d35ccc4dbd3cdc5, 
0xc341d4441da05c39,0x14bc4cc5c9244144,0xcb393d9c0551943a,0x0d534b1494054443, 
0x454544b434b3c4ca,0xb34d214e4a5301cd,0xa4b495c54b23c943,0x4c542344cb0abb42, 
0xcbbdcbbdbcc01d59,0x3d4aabdd05ca3bbc,0xacc359baacbcd6c0,0xcdd334bc03bddacc, 
0x26c345d44ac30b4c,0xb4d3dcbebc5a3bd5,0x55b22b3c0adbbc93,0x4c303addc4d1d3b4, 
0x44144acc54cb40d9,0xc411b521a0b4acac,0xbca94b4b13abeecc,0x4b2b4b35ccd2c3d5, 
0xdbcccc3bcc3ccd29,0x49c5cd3cccc1401d,0x2bab4cce04543c4d,0xbd23bccc5cc23d23, 
0x33223cc4cbab3a4a,0x444c55524b5b3d43,0xb4b43c34363b450b,0x99545b425263b334, 
0x4adc292cd445d4c5,0x52c4ca9b32ac4443,0x9435a1cb3135a443,0x24cc449b233ac64c, 
0x44b4525425c5c34d,0x55b1a5d24543b5d4,0x4bc52353c345c54c,0xcc1345d42b594256, 
0xbdcc45d453cd3db5,0xc5ddcdc5bd23aac4,0x5de3243db43cc2dc,0x5cd5a3ddacd3c0b5, 
0xcc3d13ccd2baa3ba,0x4ca25c92d31a4b4d,0xcc3cbcbc030251cb,0x3bcca13c4be5cb33, 
0xc093cd4d34a9b15c,0x0d5aa33b44db6540,0xbbcc3c99b52cc12c,0xca3b4b39c0424213, 
0xaccecc4dcccbdc7c,0x5d9d4cc135cc431b,0xdaec4d91bdb316b4,0xdcdcd04cb3bc29cd, 
0xcd4b13a0540c4342,0x921ccaa3c1c23b4c,0x0b3dc3130c394092,0xc444313a1236db13, 
0x3cc9b3ccb943b25d,0xcddcbc4b1acb4c35,0xcad2dc2d4bc5b44c,0xdcc3cbbbab5dbccc, 
0x55442b4dc5dc93cc,0x1353abd35cb4cbbd,0x0b5c56465a535944,0x54cd565143d444bd, 
0x462395ac5abb495b,0xbc3b00ce42495dc1,0x45a3ca149cacc3c4,0xb15143b94b24d4c4, 
0x4cdc53342ccc4c44,0xc43b32b54b4134c4,0x45cab329b22c4ba9,0xa2c3bac14bcbd4d5, 
0x2badc30db333b4d9,0x3b9a434cb4cc244b,0xdcb20cd3aab43424,0x53c6413c3b4b5253, 
0xccc5ddcacd1ccdc4,0xdca5455d4edac4ad,0x5454dc4c4ddd5cdd,0x3cdc5cbd3dbdb2a4, 
0xa305554454d44012,0x9c5c3355c3404243,0x4533cd14c414b422,0xc4444444b96543b4, 
0x23d44aaa5cdcba34,0xca2cacd42143bcb4,0x56a3242bba115c9b,0x291d34dcb3cadbdc, 
0x13d5d5494a401c34,0x33b34dca34c42d53,0x34b5a35034b1d41b,0x53a4545bc3c6949e, 
0x3bd52dc52dc13c9b,0xccdadd952b350bc3,0x3c3cb1dc5a0bdccc,0xdc2edcd2b3d5bcc4, 
0xb034ce4d2bbbcb41,0xc53cdc42bb5c23c4,0xe50b2ccc131dbbac,0xcd3349c5acccbad4, 
0x441b35c54aa4cad0,0xc9dc3ad3dc54cbb5,0x6ec5aa4014cb92b4,0x5b412c3c24c225c0, 
0xcc5e54acb4cbd5cb,0xc524d3d34d3243db,0x4cc24c235b9acc04,0x4d4ac4bcc35ec3c5, 
0xb44354343bc941bb,0xb53ac1b3cc4b6bb3,0x04a045333241a433,0x2a39d0c3a364c3c5, 
0xcab4c4bcd043bdc4,0xccc5b329c44c499a,0xcc434cdc2bcbb4c4,0xb3c23a2103cb333c, 
0xc155adad4bb02bbd,0xd94cb59dd0d45acd,0x1d4b9cac334ddbdd,0x1dbcccc5dcb5cbd5, 
0x9c44ccd2bb3c5cbd,0xdcc2c414bba3cbcc,0xcd5c245521ca5bc4,0x4acc49c33ac00bc4, 
0x3c254d4db54b5442,0xe4b403d55352bc54,0x93cc556464414355,0x9cbd253454ccc4dd, 
0xd344c2a121433b2c,0x3dc5abcd45243dbc,0x3bb9b343acc14ba2,0x4a5b44aaccc53c5c, 
0x14dbdb4cc454c1d3,0x2cc4d52c34d43242,0xae544ccdcb0342ad,0xa5aca34cc24c3433, 
0x1a45cd4c3ab00422,0xc45bca434b4bbacb,0xd5cca0a44b4cdbb2,0xcaa3bc25cbd0c1b3, 
0xc1c9d409bb445c01,0x53939450b3ca3214,0xbdb3bbbcc3c4d4a2,0xc3a04d441334434a, 
0xbb53bd4daddcd3b2,0xc41dc544d04cc4e3,0xc4bcbccca4bcad1c,0x9dd3ccd5caac0bd5, 
0x3bc34dc53cdcc245,0x043dbd3443b44c45,0x4aa4445ac3adc43e,0xdd9d4bcbd44ebd9b, 
0xcb324cd44cdc34cb,0xd4dd635a55453bbc,0x2ddb6b2c44ddd34d,0xcc43d40d553bcb5c, 
0xa34ab0b31b0a309b,0x3cab42ad0b23eb30,0x3cb1a922adb3c323,0x9c523b4c34c2424b, 
};

static int neck_lateral_convs_1_quant1_threshold[64 * 14] =
{ // torch.Size([64, 14])
-1208, -710, -460, -273, -149, -24, 99, 224, 349, 473, 598, 785, 1034, 1533,
-1306, -854, -628, -459, -346, -233, -120, -7, 105, 218, 331, 500, 726, 1178,
-1560, -1141, -932, -775, -670, -565, -461, -356, -252, -147, -42, 114, 323, 742,
-918, -560, -382, -247, -158, -69, 20, 109, 199, 288, 378, 512, 691, 1048,
-1005, -634, -448, -309, -216, -123, -31, 61, 154, 247, 340, 479, 664, 1036,
-902, -515, -322, -177, -80, 16, 112, 209, 306, 402, 499, 644, 837, 1224,
-949, -551, -352, -203, -104, -4, 94, 194, 293, 392, 492, 641, 840, 1238,
-1147, -818, -653, -530, -448, -365, -283, -201, -118, -36, 45, 169, 333, 662,
-1247, -816, -601, -439, -331, -223, -116, -8, 99, 207, 314, 476, 691, 1123,
-1086, -731, -554, -421, -332, -244, -155, -66, 21, 110, 199, 332, 509, 864,
-1616, -1143, -906, -729, -611, -492, -374, -256, -137, -19, 98, 276, 512, 985,
-919, -507, -302, -147, -45, 57, 160, 263, 366, 469, 571, 726, 931, 1343,
-1197, -715, -474, -293, -173, -53, 67, 187, 308, 428, 549, 729, 970, 1452,
-1200, -847, -671, -538, -450, -362, -274, -186, -97, -9, 78, 210, 386, 739,
-1036, -666, -480, -341, -249, -156, -64, 28, 121, 213, 306, 445, 630, 1000,
-953, -569, -377, -233, -137, -41, 54, 150, 246, 342, 438, 582, 774, 1158,
-772, -449, -288, -167, -87, -6, 74, 154, 235, 315, 396, 517, 678, 1000,
-971, -597, -410, -270, -176, -83, 10, 103, 197, 290, 384, 524, 711, 1085,
-1368, -733, -415, -177, -18, 139, 298, 457, 616, 774, 933, 1171, 1489, 2124,
-1783, -1173, -867, -639, -486, -333, -181, -28, 123, 276, 429, 657, 963, 1573,
-958, -616, -444, -316, -230, -145, -59, 26, 111, 197, 283, 411, 582, 925,
-1346, -787, -507, -297, -157, -17, 122, 262, 402, 542, 682, 892, 1172, 1732,
-1721, -1025, -677, -416, -242, -68, 105, 279, 453, 627, 801, 1062, 1411, 2107,
-1471, -1017, -789, -619, -505, -392, -278, -165, -51, 62, 175, 346, 573, 1027,
-919, -540, -351, -209, -114, -19, 74, 169, 264, 358, 453, 595, 785, 1163,
-1301, -794, -540, -350, -223, -96, 30, 156, 283, 410, 537, 727, 981, 1488,
-1513, -1080, -864, -702, -594, -486, -378, -270, -162, -53, 54, 216, 432, 864,
-633, -466, -383, -320, -278, -237, -195, -153, -112, -70, -28, 33, 117, 283,
-1107, -722, -530, -386, -289, -193, -97, -1, 95, 191, 287, 431, 624, 1008,
-1745, -1227, -968, -774, -644, -515, -385, -256, -127, 2, 131, 326, 584, 1102,
-718, -350, -165, -27, 64, 156, 248, 341, 433, 525, 617, 755, 940, 1308,
-935, -539, -342, -193, -94, 3, 102, 201, 300, 399, 498, 646, 844, 1240,
-844, -431, -224, -69, 33, 137, 240, 343, 447, 550, 654, 809, 1015, 1429,
-1504, -1020, -778, -597, -476, -355, -234, -113, 7, 128, 249, 431, 673, 1157,
-962, -670, -525, -415, -342, -269, -196, -124, -51, 21, 94, 203, 349, 641,
-876, -525, -350, -218, -130, -43, 44, 132, 220, 307, 395, 527, 702, 1053,
-1886, -1268, -959, -728, -573, -419, -264, -109, 44, 199, 353, 585, 894, 1512,
-654, -408, -286, -194, -132, -71, -9, 51, 112, 174, 235, 327, 450, 695,
-1306, -940, -758, -621, -529, -438, -346, -255, -164, -72, 18, 155, 338, 704,
-881, -440, -219, -53, 56, 166, 277, 387, 497, 608, 718, 884, 1104, 1546,
-1187, -734, -508, -339, -226, -113, 0, 113, 226, 339, 452, 621, 848, 1300,
-1118, -708, -502, -348, -245, -143, -40, 62, 164, 267, 370, 524, 729, 1140,
-1003, -625, -436, -294, -199, -105, -10, 83, 178, 272, 367, 509, 698, 1076,
-1432, -991, -771, -605, -495, -385, -274, -164, -54, 55, 165, 331, 551, 992,
-886, -469, -260, -104, 0, 104, 208, 313, 417, 521, 625, 782, 990, 1408,
-1260, -828, -613, -451, -343, -235, -127, -19, 87, 195, 303, 465, 681, 1112,
-984, -594, -398, -252, -155, -57, 39, 137, 234, 332, 430, 576, 771, 1161,
-1332, -948, -756, -612, -516, -420, -324, -228, -132, -36, 59, 203, 395, 778,
-1254, -861, -665, -517, -419, -321, -223, -125, -27, 70, 169, 316, 512, 905,
-622, -398, -286, -202, -146, -90, -33, 22, 78, 134, 190, 274, 386, 610,
-1541, -983, -704, -495, -355, -216, -76, 62, 202, 341, 481, 690, 969, 1527,
-667, -380, -237, -129, -57, 14, 85, 157, 229, 301, 372, 480, 624, 911,
-1550, -1031, -771, -577, -447, -317, -187, -57, 72, 201, 331, 526, 786, 1305,
-1377, -961, -752, -596, -492, -388, -284, -180, -76, 27, 131, 287, 495, 911,
-964, -606, -427, -292, -203, -113, -24, 65, 155, 244, 334, 468, 647, 1005,
-945, -465, -224, -44, 75, 195, 315, 435, 555, 675, 795, 976, 1216, 1696,
-1157, -748, -544, -390, -288, -186, -84, 17, 120, 222, 324, 477, 682, 1091,
-1553, -1037, -779, -585, -456, -327, -198, -69, 60, 189, 318, 511, 770, 1286,
-981, -634, -460, -330, -243, -156, -69, 17, 103, 190, 277, 407, 581, 929,
-1132, -727, -525, -373, -272, -170, -69, 31, 132, 233, 335, 486, 689, 1094,
-1443, -1018, -805, -646, -539, -433, -327, -220, -114, -8, 98, 257, 470, 895,
-1376, -923, -697, -527, -414, -301, -187, -74, 38, 151, 265, 434, 661, 1114,
-1751, -1176, -889, -673, -530, -386, -242, -98, 44, 188, 332, 547, 835, 1410,
-718, -480, -361, -272, -213, -153, -94, -34, 24, 83, 143, 232, 351, 589,
};

static uint64_t neck_lateral_convs_1_conv2_weight[64 * 9] =
{ // torch.Size([64, 3, 3, 1])
0xd, 0xc, 0xc, 0xf, 0x4, 0xd, 0xc, 0x3, 0x4, 
0x9, 0x0, 0xa, 0x5, 0x2, 0x4, 0x5, 0x5, 0x6, 
0xb, 0xc, 0xa, 0x0, 0xd, 0xd, 0x4, 0xd, 0xc, 
0x3, 0x4, 0xc, 0xe, 0x5, 0x3, 0xf, 0xc, 0x4, 
0x4, 0x3, 0xe, 0xd, 0x3, 0xd, 0xd, 0x0, 0xd, 
0xd, 0xd, 0x5, 0xd, 0xd, 0x5, 0xb, 0x3, 0x3, 
0xb, 0xc, 0xb, 0xb, 0xd, 0xb, 0xa, 0xc, 0x9, 
0x4, 0x6, 0x3, 0xa, 0x6, 0x9, 0xd, 0xd, 0x4, 
0xd, 0xd, 0xc, 0xc, 0xb, 0xc, 0xb, 0xb, 0x2, 
0x9, 0x4, 0xa, 0xd, 0xb, 0xc, 0xd, 0xe, 0xc, 
0x1, 0x5, 0x5, 0x5, 0xd, 0x5, 0x5, 0x5, 0x5, 
0x3, 0x5, 0x3, 0xd, 0xd, 0xc, 0xd, 0xd, 0xd, 
0x4, 0x0, 0x0, 0x4, 0x4, 0x3, 0x4, 0x4, 0x5, 
0x0, 0xc, 0x3, 0xa, 0x7, 0xb, 0x4, 0x4, 0x4, 
0xe, 0xd, 0xe, 0xb, 0x4, 0xb, 0x4, 0x5, 0x0, 
0xa, 0xe, 0xd, 0xa, 0xd, 0xc, 0x4, 0x0, 0xa, 
0xf, 0xd, 0x4, 0xc, 0x3, 0x2, 0x4, 0x1, 0x0, 
0x5, 0x3, 0x9, 0x5, 0x1, 0xb, 0x5, 0x3, 0xb, 
0xd, 0x3, 0xe, 0xc, 0x4, 0xb, 0xd, 0xb, 0xe, 
0x0, 0x3, 0xe, 0x3, 0x4, 0xe, 0x4, 0x4, 0xc, 
0x1, 0x6, 0xb, 0x5, 0x5, 0xc, 0x6, 0xc, 0xb, 
0xe, 0xd, 0x9, 0xe, 0xc, 0x4, 0xe, 0xb, 0x4, 
0xc, 0x1, 0xb, 0xc, 0xd, 0xd, 0xd, 0xc, 0xe, 
0x0, 0x4, 0xa, 0xb, 0x7, 0x4, 0xb, 0x5, 0x2, 
0xb, 0x4, 0x3, 0xd, 0xa, 0xd, 0xd, 0xd, 0xc, 
0x9, 0x5, 0x6, 0x3, 0x4, 0x5, 0x1, 0x4, 0x5, 
0x4, 0x4, 0x5, 0x4, 0x4, 0x5, 0x2, 0x4, 0x4, 
0x0, 0x6, 0x4, 0x4, 0x5, 0x5, 0xb, 0xd, 0xb, 
0xb, 0x4, 0x5, 0x1, 0x6, 0x4, 0x4, 0x3, 0xc, 
0xd, 0xc, 0xd, 0xb, 0x3, 0xb, 0xc, 0xc, 0xc, 
0x2, 0x5, 0x0, 0xe, 0xe, 0xc, 0xc, 0xd, 0xa, 
0x5, 0xd, 0xe, 0x3, 0x0, 0xd, 0x4, 0x3, 0xc, 
0x4, 0x5, 0xe, 0x4, 0x4, 0xe, 0xd, 0xd, 0xd, 
0x4, 0xc, 0xc, 0xc, 0xc, 0x5, 0xc, 0x5, 0x7, 
0xd, 0x5, 0x1, 0x6, 0x5, 0xb, 0x3, 0xc, 0xa, 
0x9, 0x4, 0x3, 0xb, 0xd, 0x5, 0x4, 0x7, 0xa, 
0x3, 0x3, 0x4, 0x5, 0x5, 0x5, 0x5, 0x4, 0x4, 
0x3, 0xc, 0x6, 0xc, 0xd, 0x4, 0xc, 0x1, 0xd, 
0xb, 0x4, 0x5, 0xc, 0x5, 0x6, 0xc, 0x4, 0x9, 
0xc, 0xb, 0xd, 0x4, 0x5, 0xd, 0xb, 0xd, 0xe, 
0x2, 0x4, 0x4, 0xb, 0x4, 0x5, 0x2, 0x5, 0x6, 
0x5, 0x4, 0xd, 0x5, 0x5, 0xc, 0x5, 0x4, 0xa, 
0xb, 0x0, 0xd, 0x4, 0xb, 0xe, 0x4, 0xe, 0xd, 
0x4, 0xc, 0xb, 0x5, 0x4, 0xa, 0x3, 0x7, 0x5, 
0xb, 0xe, 0xc, 0xc, 0xe, 0x4, 0x4, 0xc, 0x2, 
0x6, 0x4, 0x1, 0x5, 0x0, 0x3, 0x5, 0x3, 0xb, 
0xc, 0x0, 0x4, 0xc, 0xe, 0x3, 0x2, 0xe, 0xd, 
0x3, 0x2, 0x0, 0xb, 0x6, 0x5, 0x5, 0x5, 0xa, 
0x3, 0x4, 0x4, 0x4, 0x6, 0x5, 0xc, 0xd, 0x9, 
0x6, 0x6, 0x6, 0x4, 0x0, 0x4, 0x4, 0xb, 0x3, 
0xc, 0xd, 0x9, 0xd, 0xb, 0xb, 0x3, 0xd, 0xd, 
0xc, 0x4, 0x3, 0x4, 0xf, 0xb, 0x9, 0x4, 0xb, 
0xd, 0xc, 0x9, 0xd, 0xc, 0xb, 0xc, 0xc, 0xa, 
0x7, 0x5, 0xc, 0x5, 0xc, 0xc, 0x3, 0xa, 0x2, 
0x3, 0x6, 0x6, 0xb, 0xb, 0x3, 0x4, 0xd, 0xc, 
0xb, 0xc, 0xb, 0xd, 0xd, 0x2, 0xe, 0xd, 0x3, 
0xc, 0x2, 0x3, 0xd, 0x1, 0xd, 0xe, 0xd, 0xa, 
0xc, 0xe, 0xb, 0x3, 0xb, 0xb, 0xc, 0xb, 0xc, 
0xb, 0xb, 0x9, 0xa, 0x1, 0x5, 0x5, 0x6, 0x5, 
0xd, 0xb, 0x1, 0xd, 0xb, 0x4, 0xd, 0xc, 0x3, 
0x4, 0x7, 0x5, 0xd, 0xc, 0x5, 0x1, 0xb, 0x4, 
0x2, 0x3, 0x3, 0x5, 0x6, 0xb, 0x5, 0x6, 0x2, 
0x6, 0x5, 0x6, 0x5, 0x2, 0x9, 0x0, 0xc, 0xc, 
0xb, 0x5, 0x4, 0xe, 0x5, 0x3, 0xc, 0xc, 0x4, 
};

static int neck_lateral_convs_1_relu2_threshold[64 * 7] =
{ // torch.Size([64, 7])
27, 136, 244, 353, 516, 733, 1167,
-126, -39, 48, 135, 267, 442, 792,
-2, 50, 104, 157, 237, 344, 558,
75, 133, 192, 251, 340, 457, 693,
-5, 40, 85, 131, 199, 290, 472,
-2, 38, 79, 120, 181, 262, 425,
55, 86, 118, 149, 197, 260, 386,
-96, 3, 103, 203, 354, 554, 955,
17, 53, 90, 126, 181, 254, 400,
35, 76, 116, 157, 217, 298, 460,
15, 78, 142, 205, 300, 426, 680,
62, 117, 172, 228, 311, 422, 644,
-25, 8, 43, 78, 130, 199, 338,
-3, 66, 135, 204, 308, 447, 724,
0, 61, 123, 184, 277, 400, 646,
41, 84, 128, 172, 237, 325, 500,
97, 156, 214, 273, 360, 477, 711,
24, 51, 78, 104, 145, 198, 305,
47, 121, 195, 270, 381, 529, 825,
-104, -56, -9, 38, 109, 204, 395,
-11, 73, 158, 244, 372, 542, 884,
48, 126, 204, 282, 399, 555, 867,
-73, -6, 59, 126, 226, 360, 627,
5, 69, 133, 197, 292, 420, 675,
-72, 15, 103, 191, 323, 499, 852,
-7, 57, 121, 186, 282, 411, 669,
-12, 57, 127, 196, 301, 440, 719,
35, 162, 288, 415, 604, 857, 1363,
13, 81, 148, 215, 316, 451, 720,
23, 50, 78, 105, 146, 200, 309,
43, 104, 166, 227, 318, 440, 685,
33, 71, 108, 145, 202, 276, 426,
43, 104, 166, 227, 319, 442, 688,
113, 166, 219, 272, 352, 458, 669,
-6, 37, 82, 126, 193, 281, 459,
-2, 77, 156, 235, 354, 512, 829,
-50, -5, 39, 84, 152, 242, 423,
-25, 64, 154, 244, 379, 558, 918,
73, 127, 182, 236, 317, 426, 644,
35, 92, 149, 207, 292, 406, 635,
28, 74, 120, 166, 235, 327, 512,
46, 87, 127, 168, 230, 311, 475,
43, 94, 145, 195, 271, 373, 576,
18, 80, 142, 203, 296, 420, 667,
-78, -7, 63, 135, 242, 384, 670,
40, 79, 117, 156, 214, 290, 444,
93, 140, 188, 235, 306, 401, 591,
34, 82, 130, 177, 249, 344, 535,
82, 129, 175, 222, 291, 384, 570,
287, 407, 527, 647, 827, 1067, 1548,
59, 107, 156, 204, 276, 373, 566,
-18, 50, 119, 188, 292, 430, 707,
50, 87, 125, 162, 218, 292, 442,
65, 122, 179, 236, 322, 436, 665,
17, 59, 102, 145, 210, 295, 467,
46, 122, 199, 275, 390, 543, 848,
-41, 11, 64, 117, 197, 304, 516,
4, 47, 89, 132, 196, 281, 452,
11, 54, 98, 141, 205, 292, 464,
29, 52, 74, 96, 129, 174, 263,
60, 127, 195, 263, 364, 500, 770,
52, 116, 179, 243, 338, 465, 718,
44, 97, 150, 204, 283, 390, 603,
-56, 39, 134, 230, 374, 566, 950,
};

static uint64_t neck_lateral_convs_2_conv1_weight[64 * 1*4] =
{ // torch.Size([64, 1, 1, 64])
0x2bd995eddea96dd9,0x6cc6ccba320cdac5,0xeb4c53cdb50ddcac,0xd293c4d1b24bdc0d, 
0x0b5c16dc2c4d554c,0xcdc615c43d49c4b4,0xcb5b544ce4cd9d4c,0xd4bb4dd4542c2556, 
0xb53cbb5cbb6b2b3d,0xa53bccddc43cd26c,0xc4cb5c9d465ba4d4,0x5dcd5c4ac353c32c, 
0x554bc9454d944d9c,0x2be43de546c43dc4,0x3dd3244455c4cd55,0x545555d5db55c49c, 
0xbc2d9ac42a94caa9,0xdc9c4dc3b5bcbabc,0x4ccbb43c59dc4c39,0x3144cbd5cb115b2b, 
0xdc4ca4149944bb4c,0xd5345cddb322443a,0xbd464bb5dc5495d3,0xd0cb36543d4c3410, 
0x5544c4bd43b4cc23,0xbcd345451ec3bd45,0xc4b0a2435bd4cc4c,0xc021b1be43c5544c, 
0x53344cbabd45dd3d,0xd44c3c5ca59b1ba9,0x3d03a565235145a5,0x1544dd44addd34dc, 
0x42a3cc4bbb2c25cd,0xdcacc4c1bc0bc94c,0xc4a4e4d4a3adde33,0x14cc00c332a12354, 
0x1a4bcd3a443204a0,0x42a2b542debcc352,0x1529d143394bbc03,0x94db4acecb5b2042, 
0xac30593cdbbc3f4b,0xd3404cc34532cdb2,0x3d4c4424124455ba,0x4edbccd4d35e4ddc, 
0x4ccdbc34434c5114,0x45c2444c4c94bd9a,0xc4312bc4cc4b5199,0xa355424c4344b2b3, 
0x453ccc456563e54d,0x2db34542c595b35e,0xc4a45424133ccc20,0x23435da45dd4c455, 
0x45554adc9224c445,0x94534563c30db4d4,0x5dc5344434b245bb,0x35249b552deca446, 
0xbd3dd14b545d5333,0xddd45cc33334dcc1,0x444d1d4e0d2c05c4,0x62dc5bcdb4b331b5, 
0xc30ddbdbdaa5d54d,0xbc459cc51b1c35b3,0x3cc1d249d2cb3d23,0x2d4ccbc44bbbc433, 
0x530cd9a43253cdc1,0xc3455cce43c444ae,0x494ccbd3d34344c3,0x4bc54b94bb354a22, 
0xed54b3cd9a455455,0x4dcc4ba6e343c445,0x5144a553c4ccc54d,0x2d5dd495d45e4d44, 
0x65034495ab3b14dd,0x320ca5542c4a3b51,0x932b440bbdc45043,0x3bc5d3a3acc51bdb, 
0x4c405a5b34c4bd45,0xd56b443c5cca4dbb,0x3442b4b5bb5536a4,0xcb145c6cb32ac4cb, 
0x13d3b359a0544564,0xb5bc39c2d56556b4,0x55b524c3254443cb,0x43b33435394a2b35, 
0xd539c441416d655c,0x5b21334dccc44c45,0xd4c34d65bc4dc31e,0xdcad55cd345e5bb3, 
0x0c4ed5544aed4d4b,0x0d3b44da4da54dda,0xc5244ddc3dcc9ddc,0xadcc43eca51c4a4a, 
0xc0cd32c54434c025,0xbcdbd0d6d3243b0c,0xa4309cdd4ecbcc0b,0x1cdc9bcda31d4555, 
0xcd4b44bab4543512,0x534c56cb5e465599,0x4cbc4beab4dd494c,0x40cd4d4965dcb424, 
0xa42cdceddbc3bcdb,0xdbbdccc4dbcdcb5d,0x3dc2d9ddcdd444bc,0xbdeddbcd44cc5c5d, 
0xd5c1ca54c4c4a55c,0x1cd4ccc4cb22b945,0x3cdbcd55dc2ccddc,0xcdacdaccad3b43bb, 
0x5343dd3641a44bdc,0x5bc333ad93ddae4d,0xc3d4d4eb61453d9c,0xe6d454d1b4b56145, 
0xb25bdbb290dcccab,0x92d6c94d3c9dd204,0x2c62d014f1c4dcb0,0x9cdbdc443ca3cc0d, 
0xacb4d3345adc4d54,0x14d45454d4555d13,0xa41cc2534145534e,0xd54432c5455e4d0a, 
0x3ccc3bc91cc9cbc3,0xc3e3bdc4b40bd5db,0xc3add3bb3bec4bbc,0xa14cbdd033d5bc33, 
0xb44ad32c53499140,0x6234d5541c453c55,0x94665c24d053bd93,0xdccd54649345b142, 
0xd9d3e34dcbec5d4c,0xd441442bd3cdcb55,0xdcc9ac34b5234bcd,0xac6cb6bad4cddbbd, 
0x44ca1435a3334cd3,0x5d4bba34c3a5bd4d,0xdbcc51dc555dca34,0x544543cb3255291c, 
0x44a53565dcd3dc3d,0xca4934dbc5c9255d,0x2c54c43435c9b359,0x44046dc6dcddc294, 
0xc45a9c3cd9ccdcac,0x3bb6cb31aa49a003,0xcabcdbc1a93bdbba,0xbbb242da12a22a3c, 
0xcd4c234444cc3cb3,0xdcdb5ad4dc39ddd3,0x3d454555ccc4e534,0xd944c5d4ddcddd3e, 
0xaba4e5b12ae063ac,0x92b4b5b1c03cce55,0xbb45b434d31dcdcd,0xd2cb44cab56bdcdc, 
0x4b5244304e5524cb,0x5d542c3d5ccd46b3,0x95dccbad44dedd5d,0xc6b46225c3c5b645, 
0x42a4ba4504940ddb,0xb1bcac4d4ccc9b3c,0x4cccdadc5dd44c9b,0xb5c5bb1bb9d55d1d, 
0x1c1cabb0135ac33c,0xdcda3dd3b4a2a9cc,0xadbb12ac4cc4033b,0x9144cb443dc34494, 
0xdc3c95cddce24e43,0xdd4cb9ad4ccc44b5,0x2ec5dd455dddcca4,0x0c4db5cced3e45cc, 
0xcdd43b5320cca649,0xb5b3359cecb43142,0x4a4bcb44455443ca,0x4ddc425d132bb51e, 
0xdc24c4dd652bc1b4,0x4d5cb5595c9564d3,0x44bb0dbd4d41ac43,0xccc6545bc21334b5, 
0x55444355bdde5e45,0xccdb524ad35c3ac5,0x534345cc5651a23c,0x5c3545c6c55c5cc4, 
0x45d6b55b5b5d253c,0x5414d54d5c3344a3,0x24244d333c3d3bac,0x0b1a555c3235d3d4, 
0x4c236330a4a4de52,0xb65334433ddd4a22,0x453c64a4dbc65594,0x95323b4911c0c53c, 
0xa4d4a3ecdbdc3b45,0xcd591c615b3ddc24,0x4a5c5254dc266e5a,0x5ccbdab343c3b4bd, 
0x3cbdc1432db4cc0d,0xdc2b3dd94213aacd,0x0b304bb5dd504bd5,0xcccd4d4ddb54242d, 
0x034459445c5b4b04,0x5d544b5c24eabb45,0xc425cc53434d2d25,0x195c5543d320c522, 
0xcadbd451a943b23b,0xcd5dbc04b54555a1,0x22b66cc4c06e54e3,0xb9cb5661b262cb35, 
0xcc464b1945235d24,0x5522d33cbcb54cb5,0x444b4c5aa54b3ad0,0xcbd31b4dc5449dc4, 
0xbccac224cdb10db4,0x5d2b1539bed5b41c,0x43bcc2bc5c3dcd9c,0xb0cb5dded4dd253c, 
0x442ddc96554c460a,0x5d5ca344b555fc54,0xcce3555ec34abdbd,0xd545454334a03d53, 
0x55155ce04b9d45ca,0xad993453443ab49a,0x04a333c09dbbc45b,0xc4a6a5349523c101, 
0xc516c4c33dcb4d5e,0xdbd45d4b4c4dccd3,0xcd1c933cdcdbbb2c,0x4bd53ce5cdc0ccdc, 
0xb5daec4d10da0dbc,0x0ccdc539a9dadc45,0xcdccd34453bed93c,0x9c3bdadacabbbccd, 
0x54d63151b21c41c3,0x354db344b3b0bb3c,0xc4c24cec435ce4b3,0x54d3942055a54242, 
0x35c2b1db54bbd9dc,0xcd92cd5343ab2ad2,0xba33cc4c3ecdbd9c,0x9bd6c6c4cb5c210c, 
0x14c4dc3d44ed4de5,0x3ce1b53c5bdcce4b,0xc95debcd4495dc35,0x5dbcdbddd5ba4eee, 
0x35cbc653dcca5cdd,0xe524d4dbdcdcd455,0xedc43cc4c33eadba,0xd30d13c322c203bd, 
0x4b44cbd4cccdd5b9,0x5ddabccebb2a3c9d,0xccbdc4cbcc4ccd3b,0xc1344ddbbc63b353, 
0x36450b9c04c43cbc,0xcb155d4ac20c1a50,0x9cc34c45c433a41c,0x44d24355ce6c53c5, 
0xde4b5a55b44a5c41,0x9b4dc55a5bb55314,0x434ecb403cc44c60,0xa2ccce4c4cbb31c5, 
};

static int neck_lateral_convs_2_quant1_threshold[64 * 14] =
{ // torch.Size([64, 14])
-1125, -749, -561, -420, -325, -231, -137, -43, 50, 144, 238, 379, 567, 943,
-903, -563, -392, -265, -180, -94, -9, 75, 160, 245, 330, 458, 628, 969,
-739, -465, -327, -224, -156, -87, -18, 49, 118, 187, 255, 358, 496, 770,
-1400, -931, -696, -520, -402, -285, -167, -50, 66, 184, 301, 477, 712, 1182,
-972, -629, -458, -329, -243, -158, -72, 13, 98, 184, 270, 398, 569, 912,
-1052, -653, -453, -303, -203, -103, -3, 96, 195, 295, 395, 545, 745, 1144,
-894, -578, -421, -302, -223, -144, -65, 13, 91, 170, 249, 368, 526, 841,
-690, -426, -294, -195, -129, -62, 3, 69, 135, 201, 267, 366, 498, 762,
-1048, -702, -530, -400, -314, -227, -141, -55, 31, 117, 203, 333, 506, 851,
-752, -486, -353, -253, -187, -120, -54, 12, 78, 144, 211, 311, 443, 709,
-977, -637, -467, -340, -255, -170, -85, 0, 84, 169, 254, 382, 552, 891,
-936, -593, -422, -293, -207, -121, -36, 49, 135, 221, 307, 435, 607, 950,
-872, -535, -366, -240, -155, -71, 12, 96, 181, 265, 349, 476, 644, 981,
-793, -475, -316, -196, -117, -37, 41, 121, 200, 280, 359, 478, 637, 955,
-828, -535, -388, -278, -205, -132, -58, 14, 87, 160, 234, 343, 490, 783,
-969, -631, -462, -336, -251, -167, -82, 1, 86, 170, 255, 381, 550, 888,
-741, -465, -327, -223, -154, -85, -16, 52, 122, 191, 260, 363, 502, 778,
-905, -552, -376, -243, -155, -67, 20, 108, 197, 285, 373, 505, 682, 1034,
-686, -434, -308, -213, -150, -87, -24, 38, 101, 164, 227, 321, 447, 699,
-937, -565, -379, -240, -147, -54, 38, 131, 224, 317, 410, 549, 735, 1107,
-969, -550, -340, -182, -77, 27, 132, 237, 341, 446, 551, 709, 919, 1338,
-919, -569, -394, -263, -175, -88, -1, 86, 173, 261, 348, 479, 654, 1004,
-944, -616, -453, -330, -248, -166, -84, -2, 78, 160, 242, 365, 529, 856,
-895, -568, -405, -282, -201, -119, -37, 43, 125, 207, 288, 411, 574, 901,
-894, -550, -377, -248, -162, -75, 10, 96, 182, 269, 355, 484, 657, 1001,
-1042, -723, -563, -443, -364, -284, -204, -124, -45, 34, 114, 234, 393, 712,
-913, -603, -448, -331, -254, -176, -99, -21, 55, 133, 210, 326, 481, 791,
-1067, -692, -505, -365, -271, -177, -84, 9, 103, 197, 290, 431, 618, 993,
-1037, -708, -544, -421, -339, -257, -175, -93, -10, 71, 153, 276, 440, 769,
-709, -418, -272, -163, -90, -18, 54, 127, 199, 272, 345, 454, 599, 890,
-1039, -696, -525, -397, -311, -225, -140, -54, 30, 116, 202, 330, 501, 844,
-1030, -604, -392, -232, -125, -19, 86, 193, 299, 406, 512, 672, 885, 1310,
-993, -651, -480, -352, -266, -181, -95, -10, 74, 160, 245, 374, 544, 886,
-688, -419, -285, -184, -116, -49, 17, 84, 152, 219, 286, 387, 522, 791,
-759, -467, -321, -211, -138, -65, 7, 80, 153, 226, 299, 409, 555, 847,
-777, -518, -388, -291, -226, -161, -97, -32, 32, 97, 162, 259, 389, 648,
-937, -631, -479, -364, -287, -211, -135, -58, 17, 94, 170, 285, 438, 744,
-960, -645, -487, -369, -290, -211, -132, -53, 25, 104, 183, 301, 459, 774,
-835, -528, -374, -259, -182, -105, -29, 47, 124, 201, 278, 393, 546, 854,
-806, -526, -387, -282, -212, -142, -72, -3, 66, 136, 206, 311, 450, 730,
-859, -550, -395, -279, -202, -125, -47, 29, 106, 183, 261, 376, 531, 840,
-1071, -718, -542, -410, -321, -233, -145, -57, 30, 119, 207, 339, 515, 868,
-773, -465, -311, -195, -118, -41, 35, 112, 189, 267, 344, 459, 614, 922,
-792, -486, -333, -218, -142, -65, 10, 86, 163, 239, 316, 430, 583, 889,
-964, -563, -362, -211, -111, -11, 89, 189, 289, 390, 490, 640, 841, 1242,
-899, -549, -374, -243, -155, -68, 19, 106, 194, 282, 369, 500, 676, 1026,
-1044, -654, -460, -314, -217, -119, -22, 74, 172, 269, 366, 512, 707, 1096,
-923, -614, -460, -344, -267, -189, -112, -35, 41, 118, 196, 312, 466, 775,
-877, -567, -412, -296, -219, -141, -64, 12, 90, 167, 245, 361, 516, 825,
-803, -487, -329, -210, -131, -52, 26, 105, 185, 264, 343, 461, 620, 936,
-862, -504, -325, -191, -101, -12, 77, 167, 256, 346, 435, 570, 749, 1107,
-795, -479, -321, -203, -124, -45, 33, 112, 191, 270, 349, 467, 625, 941,
-905, -596, -442, -326, -248, -171, -94, -16, 60, 137, 214, 330, 485, 794,
-923, -585, -416, -290, -205, -121, -36, 47, 131, 216, 300, 427, 596, 933,
-643, -398, -276, -184, -123, -62, -1, 60, 121, 182, 243, 335, 457, 702,
-976, -679, -531, -420, -345, -271, -197, -123, -49, 24, 98, 210, 358, 655,
-1165, -796, -611, -472, -380, -288, -195, -103, -11, 81, 173, 312, 496, 866,
-889, -549, -379, -251, -166, -81, 3, 88, 173, 258, 343, 471, 641, 981,
-902, -607, -460, -349, -275, -202, -128, -54, 19, 93, 166, 277, 424, 719,
-1294, -856, -636, -472, -362, -253, -143, -33, 75, 185, 295, 459, 679, 1117,
-930, -619, -463, -347, -269, -191, -114, -36, 41, 118, 196, 313, 468, 779,
-1044, -705, -535, -408, -323, -238, -154, -69, 15, 100, 184, 312, 481, 820,
-674, -412, -281, -182, -117, -51, 13, 79, 144, 210, 276, 374, 505, 767,
-788, -482, -330, -215, -139, -62, 13, 89, 166, 242, 319, 433, 586, 891,
};

static uint64_t neck_lateral_convs_2_conv2_weight[64 * 9] =
{ // torch.Size([64, 3, 3, 1])
0x4, 0xa, 0x4, 0x4, 0x6, 0x5, 0x1, 0x2, 0x4, 
0xe, 0xc, 0xd, 0xc, 0x1, 0xc, 0xc, 0x2, 0xc, 
0xb, 0xd, 0x9, 0x4, 0xd, 0xc, 0x7, 0x2, 0xa, 
0xc, 0x3, 0xa, 0xe, 0xc, 0xc, 0xd, 0x9, 0xc, 
0xc, 0xa, 0x3, 0x4, 0x4, 0x5, 0x4, 0x4, 0x5, 
0xb, 0xc, 0xd, 0xd, 0xc, 0xb, 0xd, 0xc, 0xb, 
0x5, 0x5, 0xc, 0x5, 0x5, 0xb, 0x5, 0x3, 0xd, 
0xd, 0xe, 0xe, 0xd, 0xd, 0x0, 0x5, 0x4, 0x4, 
0x3, 0x5, 0x5, 0xc, 0xa, 0x4, 0xc, 0x3, 0x5, 
0xc, 0x2, 0x5, 0xd, 0xc, 0x5, 0xd, 0xc, 0x6, 
0xd, 0xd, 0xd, 0xe, 0xd, 0xd, 0xd, 0x4, 0x2, 
0x2, 0x1, 0xb, 0xa, 0xb, 0xc, 0xa, 0xc, 0xe, 
0x4, 0xb, 0xb, 0x5, 0x1, 0xe, 0x9, 0xc, 0xe, 
0xd, 0xb, 0x5, 0xc, 0xe, 0xd, 0x3, 0xb, 0xd, 
0x5, 0x2, 0xb, 0xb, 0xc, 0x1, 0xe, 0xe, 0xc, 
0x4, 0x3, 0x3, 0x5, 0x3, 0x4, 0x1, 0x4, 0x3, 
0xc, 0xc, 0xe, 0x9, 0x5, 0xb, 0x1, 0x4, 0x9, 
0x4, 0x2, 0x3, 0x5, 0x9, 0x2, 0x4, 0x6, 0x6, 
0xb, 0xd, 0xb, 0xd, 0xc, 0x6, 0xc, 0x5, 0x4, 
0xe, 0xb, 0x4, 0xd, 0x1, 0xc, 0xe, 0xb, 0x3, 
0x5, 0x5, 0x5, 0x3, 0x5, 0x5, 0x1, 0x3, 0xa, 
0xa, 0xc, 0xc, 0x5, 0x4, 0x3, 0x6, 0x6, 0x5, 
0xa, 0x5, 0x4, 0x4, 0x5, 0x4, 0x5, 0x5, 0x2, 
0x3, 0x3, 0x1, 0x3, 0xb, 0x0, 0x6, 0x5, 0x5, 
0x2, 0xc, 0xe, 0x4, 0x2, 0xd, 0xc, 0xd, 0xd, 
0x5, 0x4, 0x5, 0x3, 0xa, 0x4, 0x5, 0x3, 0x5, 
0xb, 0x3, 0x9, 0x0, 0x5, 0x5, 0x5, 0x5, 0xc, 
0x6, 0x4, 0x7, 0xb, 0xc, 0xa, 0x4, 0xc, 0x4, 
0x6, 0x5, 0x6, 0x9, 0xc, 0x3, 0xc, 0xd, 0x0, 
0xe, 0xd, 0xd, 0xc, 0x2, 0x9, 0xa, 0x4, 0xc, 
0x4, 0x4, 0x2, 0x5, 0x4, 0x2, 0x4, 0x4, 0xb, 
0xd, 0xd, 0xd, 0xb, 0xc, 0xa, 0x9, 0xc, 0xa, 
0x6, 0x5, 0x1, 0x6, 0x3, 0xc, 0x4, 0xc, 0xc, 
0xd, 0xa, 0x0, 0xe, 0xa, 0xc, 0xc, 0xa, 0xc, 
0xc, 0xd, 0x5, 0xb, 0xd, 0x4, 0xd, 0xe, 0xb, 
0xc, 0xb, 0xa, 0x5, 0x5, 0x5, 0x1, 0x9, 0x9, 
0x2, 0xc, 0xc, 0x0, 0x0, 0x9, 0x6, 0x6, 0x5, 
0x5, 0x7, 0x4, 0x5, 0x4, 0xb, 0xa, 0xc, 0x9, 
0x2, 0x0, 0x9, 0xc, 0xc, 0xb, 0xe, 0xe, 0xe, 
0x6, 0x4, 0x6, 0xb, 0xc, 0x1, 0xc, 0xc, 0x9, 
0xa, 0xb, 0xa, 0x5, 0x5, 0x4, 0x3, 0xa, 0xb, 
0x4, 0x1, 0x2, 0x5, 0x5, 0x5, 0x3, 0x3, 0x6, 
0xd, 0x3, 0x0, 0xd, 0x0, 0x2, 0xe, 0xc, 0x3, 
0xc, 0x1, 0xe, 0x3, 0x3, 0xd, 0xc, 0xd, 0xd, 
0xd, 0x1, 0xb, 0xd, 0xa, 0x1, 0xe, 0xa, 0xd, 
0x0, 0x2, 0xd, 0xb, 0x3, 0xc, 0xd, 0xd, 0xe, 
0xc, 0xd, 0xd, 0x2, 0xb, 0xc, 0xc, 0xb, 0xd, 
0x5, 0x2, 0xc, 0x6, 0x3, 0xc, 0x6, 0x3, 0x2, 
0x3, 0x4, 0x5, 0xb, 0x2, 0x4, 0x2, 0x4, 0x6, 
0xc, 0xc, 0xd, 0x0, 0xc, 0xe, 0x4, 0xc, 0xc, 
0xe, 0x2, 0xc, 0xd, 0xa, 0x3, 0xe, 0xd, 0xd, 
0x3, 0xb, 0xe, 0x9, 0x9, 0xe, 0x4, 0xb, 0xd, 
0x4, 0xc, 0xd, 0x4, 0xa, 0xd, 0x3, 0xc, 0xe, 
0x5, 0x4, 0xc, 0x5, 0xc, 0xf, 0xc, 0xa, 0xe, 
0x3, 0xa, 0xc, 0x4, 0x2, 0xc, 0x6, 0x5, 0x9, 
0xc, 0x2, 0x4, 0x3, 0x9, 0x1, 0x5, 0x5, 0x6, 
0x5, 0x6, 0x5, 0x3, 0xc, 0x3, 0x3, 0x2, 0x2, 
0x5, 0x5, 0x6, 0x0, 0xc, 0x4, 0x4, 0xa, 0x4, 
0x4, 0x6, 0x4, 0x4, 0x5, 0xa, 0x1, 0xb, 0xc, 
0x2, 0x2, 0x4, 0x5, 0x5, 0x4, 0x6, 0x5, 0x5, 
0x3, 0x2, 0x5, 0xa, 0x6, 0xa, 0x5, 0x5, 0xc, 
0x1, 0x5, 0x4, 0x3, 0x6, 0x3, 0x9, 0x3, 0x3, 
0x2, 0x1, 0x3, 0x4, 0x6, 0xc, 0xb, 0xc, 0xf, 
0xe, 0x4, 0x4, 0xe, 0xc, 0xa, 0xc, 0xc, 0x2, 
};

static int neck_lateral_convs_2_relu2_threshold[64 * 7] =
{ // torch.Size([64, 7])
4, 48, 92, 136, 202, 290, 466,
15, 74, 133, 193, 281, 400, 637,
32, 97, 162, 226, 323, 453, 711,
-93, -47, -1, 44, 113, 205, 389,
28, 72, 115, 158, 223, 310, 482,
36, 76, 116, 155, 215, 294, 453,
27, 73, 120, 166, 235, 328, 512,
48, 113, 179, 245, 343, 475, 738,
18, 52, 86, 119, 170, 237, 372,
36, 75, 115, 154, 213, 292, 450,
49, 101, 152, 204, 281, 384, 591,
-19, 20, 60, 100, 160, 240, 400,
-10, 45, 102, 158, 243, 355, 581,
13, 65, 117, 169, 247, 351, 559,
0, 68, 137, 205, 308, 444, 718,
-25, 15, 55, 95, 156, 237, 398,
17, 56, 95, 134, 192, 269, 424,
1, 59, 117, 175, 262, 378, 610,
56, 90, 125, 160, 211, 280, 419,
19, 56, 93, 129, 185, 258, 406,
8, 58, 108, 158, 233, 333, 532,
5, 61, 117, 173, 257, 369, 593,
-48, 21, 90, 159, 263, 402, 680,
-79, 0, 79, 159, 279, 438, 758,
10, 66, 121, 177, 260, 372, 595,
-47, 18, 83, 148, 247, 378, 639,
-5, 29, 64, 99, 151, 221, 362,
24, 105, 187, 268, 391, 554, 880,
36, 84, 133, 181, 254, 352, 546,
-23, 40, 104, 167, 263, 390, 645,
6, 33, 59, 86, 125, 178, 284,
23, 64, 104, 145, 206, 286, 448,
8, 67, 126, 186, 275, 394, 631,
0, 61, 121, 182, 273, 394, 637,
-7, 53, 113, 174, 265, 387, 630,
50, 73, 95, 118, 153, 198, 290,
8, 68, 128, 187, 277, 396, 635,
59, 158, 258, 357, 507, 706, 1103,
-73, 27, 128, 228, 379, 580, 983,
-17, 27, 71, 115, 182, 270, 448,
-4, 41, 88, 135, 205, 299, 486,
-25, 42, 109, 176, 277, 412, 681,
2, 61, 120, 179, 267, 385, 621,
-4, 51, 106, 162, 245, 356, 579,
-10, 56, 123, 191, 292, 427, 696,
-1, 61, 125, 188, 283, 410, 664,
-58, -14, 30, 75, 143, 232, 412,
41, 104, 167, 229, 324, 449, 700,
-60, -8, 42, 93, 171, 273, 479,
-29, 31, 93, 154, 246, 369, 615,
41, 112, 183, 254, 361, 504, 788,
34, 84, 134, 184, 259, 359, 559,
7, 60, 113, 166, 245, 350, 562,
-9, 76, 162, 249, 378, 551, 896,
46, 90, 133, 177, 242, 329, 504,
-3, 81, 165, 250, 377, 546, 884,
9, 64, 118, 173, 256, 365, 585,
50, 100, 150, 199, 274, 373, 571,
56, 99, 141, 183, 247, 332, 502,
-95, -24, 45, 116, 222, 364, 647,
-17, 33, 84, 135, 211, 313, 516,
-29, 34, 98, 162, 258, 386, 642,
84, 141, 199, 257, 343, 458, 689,
53, 101, 149, 198, 270, 366, 559,
};

static uint64_t bbox_head_multi_level_share_convs_0_0_conv1_weight[64 * 1*4] =
{ // torch.Size([64, 1, 1, 64])
0xa9213a20b91b4adb,0xba42904c2a909caa,0x2b1322a1abc9bbba,0xb2ba2c1b4a91ab33, 
0x3943c13a4254a2cb,0x143a32b330921041,0xc229cb1343a2a302,0x49b9b9cb49a30c11, 
0x003301224b231222,0xa29124121493a094,0x91a333b2a943322b,0x21b3229392210201, 
0x32b4a4341a324323,0x42a32b2bb331a349,0x3a04a033a21b4c3c,0xbc4b3332339b9322, 
0xb0bbab31baab93bc,0xb3c3cbbbccac2b33,0x15a3cb4324a3c313,0x33b51baaaab43aba, 
0xca1a291a299c22a2,0x2a23bb0db3a2bba9,0x4933a4c2aaca0c9a,0xa313103029ba0d0a, 
0xb23a44b50a3bbb43,0xa14302b9314324b3,0x49b551341c41b31b,0xa4b5a34253b3929a, 
0xa2db24c21ddb3b32,0x3a342b31191014cb,0x3ac00913323c2d4c,0xaa3b4943413b90c2, 
0xba931ca9102b4a3b,0x290a2b5dba939d29,0x33292312aaab1cab,0x9a2b3a2caaa22dab, 
0x1a033a432aa2b4bd,0xa2cbd022cca31190,0xa512b24ba394d029,0x22b49b99bac54a20, 
0x33a39333bc203302,0x43334c32323120a3,0x2b23ab911333313a,0x9a3c1321243ba9a1, 
0x30aa9abb0c9bb2bb,0x321ba9b2ca992a3b,0xda2adda00ac99abb,0xcbbbd3cb2aaa9aba, 
0x3130c9a94b31b9bb,0x2aab1a14ba244a33,0xb112bb2c31ccb043,0x3ac2b3bb41010a21, 
0xbbcab9432ca3b5cd,0xb9cacbc9cdbca133,0x951ca243b90acccc,0x20253c1a3bc40ba9, 
0x2b34a9a12a02bb00,0x022bb939aa953a33,0xb2249a3c43aa0bb3,0x4ab012b1ba330a3a, 
0xd21c43ba92ac910a,0x3a9b309aba90cac2,0x22ca33b9b213b9b2,0xc2c1a040b9dc092b, 
0xa9ab9b1bb204baab,0x21b2baa9339099ba,0xa9aaa20b93b1a100,0x9a1abaa9a90909a9, 
0x3bcb33cdabb32c24,0x3c344ba943c3b33b,0x293d33a2bb4c5bcb,0x9caa43b9dc419a3b, 
0xb2cb4912a23a232a,0x01110090111aa1b0,0xa0ba32b0b12003ba,0x1332131301b91243, 
0x33211a03993a2bb0,0xb4a30cb431221433,0xb324ba2aa9b33c53,0x00a323a053ab2922, 
0x2023c9a10b03a19a,0xa99b3092aa932929,0x2930cb9019a3ba29,0x2ac9b0a9203919cb, 
0x310a041331320933,0x2932aa39a32103a3,0x339343323a20521c,0x11434122321300c4, 
0xc9cabb42dccc95bc,0x0cc3c2abcb0c31ab,0x4babab24b3bcbcbc,0x2a259b3baac520b2, 
0xa9422b213531ba21,0x212a0a1a2120a130,0xb433b43a32b01300,0x1ab9339ab14b205c, 
0xa4922a2a2295b02b,0xa1c23522333b4032,0xb42bab3c44131b4b,0xccc2a2b3b4412404, 
0x91ba932b4202aaca,0x1aa4a3c42200121b,0xbb9121912a3ba193,0x3303a0b2312194a3, 
0x11a3132bb92512cb,0x2132243332324a3b,0x2a049b3a3ab3ab03,0xc1a32ac4234a9534, 
0xb109cc3ac40c3093,0x32b22c2b32aaacc0,0x3b1b2aa2b04b3bcb,0xbc3b2293ca3aa990, 
0x2aa1321a140399c0,0xaaa3a4a331a91b1b,0x2b1a223a2123a1a3,0xa21a2cbb9a3aa404, 
0xb1cbbbaa2cbc0a34,0xbbaa3cbbb221baac,0x3cc301c3aa2b394c,0x3bbacb5232daaacc, 
0x390b00229993a0b1,0x9a0a24c42aaa254b,0xc9caabb229309930,0x2bab13003ab09d02, 
0x93c32a231a2bab3c,0x93ab2b2aba22a99b,0x11a22ba0b2099ba9,0x1bb9b033a2aa109b, 
0xb00a3003b3dc233a,0x3c22aa3ba209c1b3,0x432b331ab13292a9,0x013a1240b9292b03, 
0xaa03b4a92213310a,0x9242a13c99209292,0x231aa2224bbaa142,0x14221bb911420002, 
0xb9ac519b033b2291,0x2920a10922bdc3d9,0xa1bb34b0aa22a390,0x03416433aba11143, 
0x32b40224243c9a43,0xb042aa22a3332333,0x3014b4b43ab0230a,0x92a3323a32039a3b, 
0x29a340a4cbc11143,0xac3a204b2a1ca0b3,0x4a324a4b331424a1,0xb4134232c1310aa2, 
0xd3ad1433b33334c3,0x0290a9bbb30db4b3,0x1ecb43b4c33b9cbc,0x104d0109b3ccbc9a, 
0x4a34cb0333b594ac,0xc5cabaa243354c43,0xb323333a55aca441,0x4c390ccd334313a9, 
0x4a341bb24a42c23d,0xb439a3333aa53c9a,0xb433ba1c42a33543,0x1aa4a1b24bb43232, 
0x3b19ba1bc2ccaa01,0xaaa12dd22bb2a4ab,0xc21a0ab2b9390231,0x392b230b2b99199b, 
0x34332c55b2a335bc,0x94b9bbb42b4c3224,0xc2b4cc3325b3b941,0xa343b3b3343a1b1a, 
0x432424a4300c5234,0xb144b34433303222,0x4a2344349c5a39ab,0x9334543342210233, 
0x0a09b4113142b134,0x0992a1b091921303,0x220ba20311aa3029,0x29299191a9220102, 
0xbacbbb3c92abcbcc,0xbad1919bb3bcbc3b,0xc99cd0bdb3b12922,0x3c3ccbcccbba02a3, 
0xa19ba339b4223901,0x1024ab12010b10b1,0x22b1329aaa300a29,0x09313a2930b012a2, 
0x1193c32222221230,0x1120233b2a2a9b23,0x913b3a10223b33c9,0x2c429092b24304a9, 
0xcb40db3b03b14442,0x9b2c3c2cb2b3bda3,0x3041aba2bc033bdb,0x3b3acc4bab32999b, 
0x093b3a3aa49b1b49,0x10baaa4222aaa3a3,0x43aa541b022202a9,0xb243124aa0b21340, 
0x40431493201aa033,0xd9b2baa330213321,0x310244023a3a2013,0x2213403111b0013b, 
0xab3b21cc232bbbbb,0xcbbbb3abcbb9a132,0xb31ca13bbabbbab3,0xa0b3cbbcabb30a1b, 
0x91aaba29a01a33aa,0x311222aba192bb31,0x190922a3c22a3bac,0x1c423013a9a90c12, 
0x91124aa32aab932b,0xa2bb3a04cc93a4a0,0xba9b3cbac33133ab,0xbc99122b00bb0b3a, 
0x39aa0593a3a2ba22,0x9b11aac3a9222531,0xa2a422233b213a20,0x43322a2b42a12ba5, 
0x2094bbc11d199b3c,0x019b212a1ba51a4c,0x2332bc29911a2203,0xa9c31a332a391201, 
0xa05341c33a31cbac,0x1a0c21932a3403b0,0xb3322ca031b4b334,0xc4d2b23293111a39, 
0xb93c43a2b1abaacb,0xaaaa20b222aba4ab,0xbacb39ba3994ca32,0xa3cab9422ada0b3a, 
0xa2bba133cacb23a4,0x2b242ba2432b13c2,0x3cbb39a3b30a9c0b,0xaa3c3939939bb292, 
0x90b02139b2b942cb,0x39a303903a90933c,0xb90929b4bb322aac,0xbb4c9aa4399a0db9, 
0xbb23b2b93bc2aa4b,0xabbc9c390ba49ab2,0xa24bcb3c40a394a2,0x23a1bbc9ba3204aa, 
0x9aa29baa3b10bc32,0xb1bca400bcb29bb2,0x030bba2a9bab12a1,0x10a3ab22aba29ba3, 
0xb92bbb31333b240c,0xc3c2eb09ddb02b31,0xa700ba432433c2b3,0x03943dc2b3945a00, 
0xbaab1cac3b94b22b,0xb1cab3aa93bbac22,0xb1bca3ad11baaa29,0x2cbbabc0bc2b13ad, 
0xa3255bb44c3b2c53,0xab2b2949bb4549a3,0x53443b3239b1a333,0xa4c41a5944c3141a, 
};

static int bbox_head_multi_level_share_convs_0_0_quant1_threshold[64 * 14] =
{ // torch.Size([64, 14])
-374, -251, -189, -143, -112, -81, -50, -19, 10, 41, 72, 118, 180, 303,
-238, -138, -88, -50, -25, 0, 24, 49, 74, 99, 124, 162, 212, 312,
-578, -373, -271, -194, -142, -91, -40, 10, 62, 113, 164, 241, 343, 548,
-252, -138, -81, -39, -10, 17, 46, 74, 103, 131, 160, 203, 260, 374,
-570, -367, -266, -189, -139, -88, -37, 13, 63, 114, 165, 241, 343, 546,
-430, -296, -229, -179, -146, -113, -79, -46, -12, 20, 53, 103, 170, 304,
-566, -345, -235, -152, -96, -41, 13, 69, 124, 179, 235, 318, 428, 649,
-271, -177, -130, -95, -72, -48, -25, -1, 21, 45, 68, 103, 150, 244,
-489, -338, -263, -206, -169, -131, -93, -55, -18, 19, 57, 114, 189, 340,
-538, -347, -251, -179, -131, -84, -36, 11, 59, 107, 155, 227, 322, 514,
-302, -180, -118, -72, -41, -11, 19, 50, 80, 111, 142, 188, 249, 372,
-285, -215, -180, -153, -136, -118, -101, -83, -65, -48, -30, -4, 30, 101,
-166, -105, -75, -52, -36, -21, -6, 8, 24, 39, 54, 77, 108, 169,
-575, -376, -277, -203, -153, -104, -54, -5, 44, 93, 143, 217, 316, 515,
-133, -83, -58, -39, -26, -14, -1, 10, 23, 35, 48, 67, 92, 142,
-398, -276, -216, -170, -140, -110, -79, -49, -19, 10, 41, 86, 147, 268,
-366, -246, -186, -141, -111, -80, -50, -20, 9, 39, 69, 114, 174, 295,
-658, -424, -308, -220, -161, -103, -44, 13, 72, 130, 189, 276, 393, 627,
-207, -126, -85, -55, -34, -14, 5, 26, 46, 66, 87, 117, 158, 239,
-463, -283, -194, -126, -81, -37, 7, 52, 97, 142, 187, 254, 344, 524,
-103, -69, -52, -39, -30, -22, -13, -5, 3, 11, 20, 33, 50, 84,
-250, -137, -81, -38, -10, 17, 45, 74, 102, 130, 158, 201, 257, 370,
-658, -439, -329, -246, -191, -136, -82, -27, 27, 82, 137, 219, 329, 549,
-303, -178, -116, -69, -38, -7, 24, 55, 86, 117, 149, 195, 258, 383,
-345, -188, -109, -50, -11, 27, 67, 106, 145, 184, 224, 283, 361, 518,
-335, -197, -129, -77, -43, -8, 25, 59, 94, 128, 162, 214, 283, 420,
-334, -166, -82, -19, 22, 64, 106, 148, 190, 232, 274, 337, 420, 588,
-391, -267, -205, -159, -128, -97, -66, -35, -4, 26, 57, 103, 165, 289,
-580, -343, -224, -135, -75, -16, 43, 102, 161, 221, 280, 369, 488, 726,
-289, -221, -187, -162, -145, -128, -111, -94, -77, -60, -43, -18, 15, 83,
-210, -138, -103, -76, -58, -41, -23, -5, 12, 29, 47, 74, 109, 180,
-493, -321, -235, -171, -128, -85, -42, 0, 42, 85, 128, 193, 278, 450,
-308, -202, -149, -109, -83, -57, -30, -4, 22, 48, 75, 114, 167, 273,
-238, -139, -89, -52, -27, -2, 22, 47, 72, 97, 122, 159, 209, 308,
-318, -199, -139, -94, -65, -35, -5, 24, 54, 84, 113, 158, 218, 337,
-428, -257, -171, -107, -64, -21, 21, 64, 107, 150, 193, 257, 343, 514,
-229, -128, -77, -39, -13, 11, 36, 62, 87, 113, 138, 176, 227, 328,
-554, -381, -295, -230, -187, -144, -100, -57, -14, 28, 71, 136, 222, 395,
-396, -231, -149, -88, -47, -6, 35, 76, 117, 158, 199, 260, 342, 507,
-264, -149, -92, -49, -20, 7, 36, 65, 94, 122, 151, 194, 251, 366,
-432, -306, -243, -196, -164, -133, -101, -70, -38, -7, 24, 71, 134, 260,
-702, -433, -299, -198, -131, -64, 2, 70, 137, 204, 271, 372, 506, 775,
-732, -471, -340, -242, -177, -111, -46, 18, 84, 149, 214, 312, 443, 704,
-241, -147, -99, -64, -40, -16, 6, 30, 54, 77, 101, 137, 184, 279,
-700, -466, -349, -261, -202, -144, -85, -26, 31, 90, 148, 236, 353, 588,
-242, -151, -106, -72, -49, -26, -3, 18, 41, 64, 87, 121, 166, 257,
-292, -165, -102, -55, -23, 7, 39, 70, 102, 134, 165, 212, 276, 402,
-448, -308, -237, -184, -149, -114, -79, -44, -9, 26, 61, 113, 184, 324,
-322, -197, -135, -88, -56, -25, 5, 36, 68, 99, 130, 177, 240, 365,
-307, -180, -117, -70, -38, -7, 24, 56, 87, 119, 151, 198, 261, 388,
-423, -299, -237, -191, -160, -129, -98, -67, -36, -5, 25, 71, 133, 257,
-335, -216, -157, -112, -82, -52, -23, 6, 36, 66, 95, 140, 199, 318,
-475, -321, -244, -186, -147, -109, -70, -32, 6, 45, 83, 141, 218, 372,
-302, -171, -105, -56, -23, 9, 42, 74, 107, 140, 173, 222, 288, 419,
-344, -217, -154, -106, -75, -43, -11, 20, 51, 83, 115, 162, 226, 353,
-378, -247, -182, -132, -100, -67, -34, -2, 30, 63, 96, 145, 210, 341,
-211, -161, -136, -117, -104, -92, -79, -66, -54, -41, -28, -9, 15, 65,
-448, -295, -218, -160, -122, -84, -45, -7, 31, 69, 107, 165, 242, 395,
-613, -428, -336, -267, -221, -175, -129, -82, -36, 9, 55, 124, 216, 401,
-185, -126, -97, -75, -60, -45, -31, -16, -1, 12, 27, 49, 79, 138,
-303, -207, -159, -123, -99, -74, -50, -26, -2, 21, 45, 81, 129, 226,
-219, -113, -60, -20, 5, 32, 58, 85, 111, 138, 164, 204, 257, 363,
-445, -308, -240, -189, -154, -120, -86, -52, -17, 16, 50, 102, 170, 307,
-537, -328, -223, -145, -93, -41, 11, 63, 115, 167, 220, 298, 402, 611,
};

static uint64_t bbox_head_multi_level_share_convs_0_0_conv2_weight[64 * 9] =
{ // torch.Size([64, 3, 3, 1])
0xb, 0x4, 0x3, 0x1, 0x5, 0xb, 0x1, 0x5, 0x3, 
0xa, 0x3, 0x5, 0xc, 0xe, 0x5, 0x5, 0xa, 0x9, 
0x3, 0x9, 0xd, 0x9, 0x2, 0xd, 0x4, 0x1, 0xc, 
0x4, 0xb, 0xb, 0x2, 0xe, 0x4, 0xd, 0x1, 0x2, 
0x2, 0x4, 0x4, 0x4, 0x5, 0x4, 0xb, 0x4, 0x1, 
0x5, 0xa, 0x2, 0x6, 0xa, 0xa, 0x5, 0x3, 0xa, 
0xd, 0xc, 0x9, 0xd, 0xc, 0x3, 0xb, 0xb, 0x9, 
0xe, 0xe, 0xb, 0x4, 0x6, 0x1, 0xc, 0x4, 0xc, 
0x5, 0x4, 0x2, 0x5, 0xb, 0x9, 0x5, 0x0, 0xa, 
0x4, 0x4, 0x4, 0x4, 0xc, 0x4, 0x5, 0x4, 0x5, 
0x3, 0x1, 0x3, 0xc, 0xf, 0x0, 0x1, 0x9, 0x3, 
0x0, 0xd, 0xd, 0x5, 0x6, 0x4, 0xb, 0x5, 0x2, 
0x5, 0xd, 0xd, 0x4, 0x5, 0xc, 0xc, 0x5, 0xa, 
0x5, 0x3, 0x9, 0x5, 0xb, 0x1, 0x4, 0x4, 0x2, 
0xd, 0xe, 0xa, 0x4, 0x6, 0x5, 0x3, 0x5, 0x0, 
0xb, 0x3, 0x1, 0x4, 0x0, 0xc, 0x5, 0x6, 0xb, 
0x1, 0x3, 0x2, 0x9, 0x5, 0x1, 0x9, 0x5, 0x9, 
0xc, 0x2, 0xb, 0x4, 0x6, 0xb, 0x4, 0x4, 0x0, 
0xa, 0xb, 0x1, 0xc, 0xd, 0xa, 0x4, 0x6, 0x0, 
0x3, 0x4, 0x4, 0xc, 0xb, 0x5, 0xc, 0x2, 0x5, 
0x9, 0xc, 0x2, 0x4, 0x6, 0xa, 0xc, 0xd, 0x2, 
0xb, 0x3, 0xc, 0x4, 0x3, 0xb, 0xc, 0xe, 0x2, 
0x3, 0x4, 0x4, 0x4, 0x4, 0x4, 0xa, 0x0, 0x4, 
0xc, 0xc, 0x9, 0xd, 0xd, 0xa, 0x3, 0x2, 0x3, 
0x3, 0x2, 0xe, 0x2, 0x4, 0xe, 0x0, 0x2, 0xd, 
0xd, 0x2, 0x3, 0xc, 0x3, 0x9, 0xd, 0x9, 0x3, 
0xc, 0x2, 0x2, 0xe, 0x3, 0xa, 0xd, 0xb, 0x2, 
0x4, 0x4, 0xd, 0xc, 0x6, 0xc, 0x3, 0x4, 0xc, 
0xd, 0xb, 0xa, 0xc, 0xa, 0x2, 0xa, 0x2, 0x2, 
0x5, 0x5, 0xb, 0x5, 0x5, 0xc, 0xb, 0xb, 0xa, 
0xb, 0x0, 0x4, 0xa, 0x6, 0xb, 0xc, 0x6, 0x3, 
0x3, 0x4, 0x4, 0x3, 0x3, 0xa, 0x4, 0x4, 0x0, 
0xa, 0xd, 0x3, 0x5, 0xd, 0x3, 0x5, 0x4, 0xc, 
0xc, 0xd, 0x2, 0xd, 0xa, 0x3, 0xa, 0xb, 0x1, 
0xd, 0xd, 0x2, 0x4, 0xb, 0x3, 0x6, 0x7, 0x9, 
0x2, 0xe, 0x4, 0x4, 0x1, 0x9, 0xc, 0xd, 0x9, 
0x4, 0xc, 0xb, 0x4, 0xd, 0xb, 0x7, 0x4, 0x9, 
0xb, 0xf, 0x3, 0xb, 0xc, 0x4, 0xc, 0x9, 0x4, 
0x4, 0xf, 0xd, 0x4, 0x5, 0xa, 0x3, 0x2, 0xb, 
0xc, 0x7, 0x0, 0x3, 0x5, 0x1, 0xc, 0xb, 0xb, 
0x2, 0x3, 0x5, 0x0, 0xb, 0x6, 0x0, 0xa, 0x5, 
0x1, 0x2, 0xd, 0xb, 0x0, 0xe, 0x4, 0xb, 0xd, 
0xc, 0xd, 0xc, 0xc, 0x2, 0x2, 0xd, 0xd, 0xd, 
0xa, 0xb, 0xc, 0xa, 0x9, 0xa, 0x1, 0xb, 0xc, 
0x4, 0x5, 0x3, 0x4, 0x3, 0x3, 0x2, 0x3, 0x3, 
0x4, 0x5, 0xb, 0xc, 0xc, 0xc, 0x9, 0xc, 0x5, 
0x1, 0x9, 0xc, 0x4, 0xb, 0xd, 0x3, 0xd, 0xd, 
0xc, 0xc, 0xc, 0xe, 0xc, 0x4, 0xc, 0x4, 0x6, 
0xc, 0x4, 0x5, 0xd, 0xd, 0xb, 0x5, 0xd, 0xb, 
0xb, 0x3, 0x3, 0xd, 0xe, 0xa, 0x9, 0xc, 0x4, 
0xb, 0x3, 0xa, 0x4, 0x6, 0x3, 0xc, 0xc, 0xa, 
0x2, 0x4, 0x9, 0x6, 0xc, 0xa, 0x3, 0xc, 0x3, 
0x4, 0x3, 0x2, 0x3, 0x2, 0x9, 0x4, 0x4, 0x0, 
0xb, 0xd, 0x9, 0x5, 0xe, 0x4, 0xb, 0xe, 0x4, 
0x4, 0x7, 0x2, 0xa, 0xb, 0xb, 0xb, 0x2, 0xb, 
0x3, 0xe, 0xb, 0xd, 0xc, 0x3, 0x4, 0x5, 0x9, 
0x1, 0x3, 0xa, 0xc, 0x5, 0x4, 0x3, 0x6, 0x4, 
0xa, 0xe, 0xa, 0xb, 0xe, 0x9, 0x3, 0x2, 0x1, 
0xd, 0x5, 0x2, 0xd, 0x5, 0x1, 0xc, 0x4, 0xa, 
0xd, 0xc, 0x4, 0xd, 0x6, 0x0, 0x1, 0x3, 0xb, 
0x3, 0x5, 0xb, 0x0, 0x5, 0xe, 0x2, 0x0, 0xc, 
0x5, 0x5, 0x4, 0x3, 0x4, 0x4, 0x4, 0x5, 0x4, 
0x4, 0x3, 0xb, 0xc, 0x7, 0xc, 0x9, 0x4, 0x3, 
0x4, 0xd, 0xb, 0x9, 0xe, 0xc, 0x1, 0xd, 0x3, 
};

static int bbox_head_multi_level_share_convs_0_0_relu2_threshold[64 * 7] =
{ // torch.Size([64, 7])
25, 48, 71, 93, 127, 173, 263,
54, 88, 122, 156, 207, 275, 412,
-59, -44, -28, -12, 10, 41, 103,
-32, -6, 20, 47, 88, 141, 249,
-117, -75, -32, 10, 73, 159, 329,
-28, 10, 49, 88, 147, 224, 380,
-96, -61, -25, 10, 63, 134, 277,
64, 129, 195, 260, 359, 490, 752,
5, 30, 54, 79, 117, 167, 266,
-88, -44, 0, 43, 108, 196, 372,
-26, 27, 80, 134, 214, 321, 536,
-52, 9, 71, 132, 225, 348, 595,
18, 73, 128, 183, 266, 376, 596,
-122, -65, -9, 46, 130, 242, 466,
59, 145, 230, 316, 445, 616, 959,
-21, 1, 24, 48, 83, 130, 224,
9, 27, 46, 64, 92, 129, 203,
-14, 19, 54, 89, 140, 210, 348,
-13, 5, 24, 42, 71, 109, 184,
30, 51, 72, 93, 125, 167, 252,
34, 81, 128, 175, 246, 340, 529,
-19, 11, 42, 73, 119, 181, 305,
-79, -34, 10, 55, 122, 212, 392,
-25, 2, 29, 57, 98, 153, 264,
-4, 33, 71, 109, 166, 242, 395,
9, 26, 43, 60, 86, 120, 189,
14, 46, 77, 108, 155, 218, 343,
15, 51, 87, 122, 176, 247, 390,
4, 21, 38, 55, 81, 115, 183,
3, 65, 126, 188, 280, 403, 649,
-98, -19, 60, 139, 258, 416, 733,
-27, -1, 23, 48, 86, 136, 237,
-23, 1, 26, 50, 87, 137, 236,
26, 47, 69, 90, 123, 166, 252,
-282, -209, -136, -64, 44, 190, 481,
-25, -1, 21, 45, 80, 127, 221,
104, 148, 192, 237, 303, 392, 569,
-14, 31, 78, 124, 194, 286, 471,
5, 53, 101, 149, 220, 316, 507,
71, 113, 154, 196, 258, 342, 508,
0, 34, 68, 103, 155, 225, 363,
-76, -26, 24, 74, 149, 250, 451,
-133, -116, -99, -82, -56, -22, 45,
-7, 3, 15, 27, 45, 68, 116,
-63, -38, -13, 10, 47, 97, 195,
16, 40, 65, 89, 125, 174, 271,
16, 43, 69, 96, 136, 189, 295,
44, 100, 157, 213, 298, 411, 637,
-30, 0, 31, 62, 109, 171, 295,
1, 27, 54, 80, 120, 173, 279,
-24, 1, 27, 53, 92, 144, 248,
-11, 12, 37, 61, 98, 146, 244,
-1, 22, 46, 71, 107, 155, 252,
-81, -27, 26, 80, 161, 268, 484,
-20, 30, 82, 133, 210, 312, 517,
-53, -27, -1, 24, 63, 114, 218,
13, 91, 169, 247, 365, 521, 834,
-14, 19, 52, 86, 137, 205, 341,
27, 53, 80, 106, 145, 198, 303,
26, 74, 121, 168, 238, 332, 521,
-9, 19, 48, 77, 121, 179, 296,
-615, -528, -441, -354, -223, -49, 299,
-79, -24, 30, 86, 169, 280, 502,
-109, -64, -19, 25, 92, 182, 362,
};

static uint64_t bbox_head_multi_level_share_convs_1_0_conv1_weight[64 * 1*4] =
{ // torch.Size([64, 1, 1, 64])
0x0393b29a233b24b2,0x2022b0494c2ca329,0x23a14c4b4343b323,0x3ab50b0b0d0434a4, 
0x329aa42c93b32943,0x3d1495c5cc63ba43,0x43245354414bcb3c,0x2ac4b591b4ad143b, 
0x421a422ac3442421,0x5bcb34b342c439b3,0x52cccb5c52dd4339,0xbc44b4d3433b52b2, 
0x63545cc953343dd3,0xc443cd4e2413c12a,0x4d31dbb1cb43a344,0x2393d31b44a15a14, 
0xdc52cc3cedabac35,0xcd49d95ccb4ddb45,0xa3ccc1d3bd4351a5,0xb4cc5cbdaab35c2d, 
0xca9b9dc2a013b96e,0x912c29aba13bd432,0x34b3402c4bbabab5,0xbacbdbc402b3abac, 
0xb235c3344c52bb35,0x9c9cc4416410435c,0xa4b1bccd053ca3c5,0x323cd633c9c3ccc4, 
0x0353cbc34bdcc03a,0xa35a904c3b0cdb39,0xdbab3cdccc5013c2,0x24dbbc4a41cacb3a, 
0xdb341bca9b42c4d9,0xbd9d9c4ab339c2b4,0x42ab4bb25391d403,0xc6cdd09cc1c9d3a0, 
0xb3b02cc9323cb1ba,0x44bb1bbc0b54ccc4,0x42b4cbda0bcacb1b,0xc3cb34dcc9bdd2cb, 
0x4204b3344553bb2a,0xa93b5953433cc312,0x3d3b5c5b33502234,0xabd4c444cbc3a444, 
0x5c3343b41aa443bc,0xc5540b5db1339343,0x440bd3d3b4355444,0x9c43a53a22509404, 
0x3c94e335c35c4364,0x343e344413545334,0x5b53cbbcc433abd6,0xcb3d455c43c43ac5, 
0x2c242b5cbabbb313,0x34cd41cba1b3da34,0x2b3cbbba53db2a02,0xbadcb3c0c1ddc13c, 
0x0c331c3ab9bb5cc5,0x3b1d92414c2a9b24,0x3a1a31aa2b91432c,0xb3ca952c10b032a3, 
0x5d5b9dcd4d4bcca4,0xcb3dbd3c23c3d454,0xddc54ccc4454cdc5,0xc53c312cc4dd41c4, 
0xb2b3b954b1a46a5b,0xbd4431a42b530413,0x440c6443a94ab4a5,0x3303c544a343b413, 
0xbd44a2323b3dcc93,0x22ccc22c49dccdcb,0xcc9d3c9cbcbc3bbe,0xa3dc0d5a51cccb3b, 
0xcbc3b0bd394dccc4,0xd34cbd910ccbbba0,0xdca34c4cbc3424b4,0x42cc1c4c50db5c00, 
0xc3ccbacb491ac34c,0xb434c53494d1b5cc,0x122aa340c9095aaa,0x29c2ad9340243c19, 
0x3d4543a0444ab2e4,0x344ccc3c43b45334,0x4de292c3b3c23b4c,0xa434545d449cbba4, 
0xc3bb0c4b3934c342,0xc2440c4022d04513,0xc34b4599ba544003,0x4b43bb2342004033, 
0x5b33353bc0c21b3b,0xd44cab4d3b42a1dc,0x29a4cb21ab43a205,0x2c59cbc233cc21c0, 
0x24caaa4211c3c2c9,0x433bbb43390cc4bc,0xab0c5a9bbc50a1b4,0x3ebbdbc3a2b2aacc, 
0xcb44a32baab3d4a4,0xc1433b12c4e33431,0xcc3ac432a3255194,0x33503c5154bb4441, 
0xb943a24233c44339,0x1b232313333b494c,0x44493b5b1a31bbb3,0x2b44c144c33a9323, 
0xbccd5adbc5cd241c,0x44345c4ddd9cc5e5,0x5b35cbb4dec32b45,0xcdb45e12593559cc, 
0x04ac14c410b25c6c,0xa414a31a4b9293c9,0x22333331b9029ba5,0x12da3514ab13a3b2, 
0x4335a33bb45a4414,0x421349413c3dda44,0x3ba45c5b4954b304,0x3094042b4d4334c1, 
0x5bc43945b3dc4dba,0x04a44b422435504a,0x644bd54545e4cc2c,0xcd59354ab342b4b4, 
0xaab0c43cdd32b3dc,0xbbdcc4c4e9ac1dec,0xbc5cc950432a04cb,0xc4cbbc53d9c2bb5c, 
0x5b9c4bab3cc33c11,0xbba3d9c23294c0ba,0xb41cd5d3c9bcab1c,0x334c04bb259cbd4c, 
0x9c9c55dc34cdb430,0xb4535c5bcd9224c4,0x3d45c0c3db442cb3,0xb3d15d6b5ab23444, 
0x3234e4442c5b4334,0x43cdc4344433434c,0xab243b4d3311adc4,0xb34c244ab3c44cb5, 
0x5cdca925b52b535c,0xbbd413542a3bb3cb,0x4553b29bba322dac,0xcb524c45a925e431, 
0x549c3c42c3d41054,0xc5354c4ca20ae33b,0x3c6dc444d3334643,0xbdb4c4d4cc35c415, 
0x4430b15430342b51,0xb34a994d4a3bc5cc,0xb43c44acc39323bb,0x21bbd424b31342b4, 
0xd403b333b439a499,0x142c429acb2ccb43,0x3b045c5b4933b333,0xbcd41213bcbaa49a, 
0xd29525232c4330ac,0x933b22bc30444402,0x4a1b514ac43ac2a2,0xa42cb3a9413403c3, 
0x5ccc45abc5cd5a4d,0xb924b240cc5b53eb,0x34a4dc4cb1c0bd43,0xbb645c3c5db4b2ba, 
0xb33b4c9a0cdbcc4d,0xabbba93ccaccdc4b,0xccbb3cbb2bba0239,0x3dc1dcb440bbb3bc, 
0xcbbcad4310dccc4d,0x420cc33c59adeabc,0x0b2b5cbc9dbbd3b2,0x2edcecb352cbb3ac, 
0x1124b33cb44144a4,0x433442424c9d9a44,0x3394515b4c45b303,0xa0441c414ca434c3, 
0xbac54552c34a43c6,0x344c05bc4a243a05,0x433dd3c3c0c2334c,0xcd523453444434a4, 
0xa3aca6b403246b2a,0xcb34c4343a5b443b,0xc4214153bb50b323,0x34b4a453524442b2, 
0x13c324a1ac99cab2,0xbbb2c2b4a9bbbbac,0xdb3c29c4d39bc32c,0x22c0a15c51bb3c0a, 
0xabadc1d4d9dcbb6d,0xb4352934dcaadada,0x306d2431cc431ab6,0x0cb0cd053acbb04d, 
0x3c43c3c5adb4ccdc,0xddcacb44c04dcdcd,0xdc5cbb45435a04c0,0xa3c4dc5bdacad25c, 
0x453dc4d4a44b005c,0xb4c5cb4a31345433,0x3345d5b32b4c53a3,0x366364b220424b23, 
0xdc5a4ddc5bacbc14,0x3dbbc2d549ccbd6c,0xdda45d534dbbda4d,0x1ac4ddaa592b0b4c, 
0xdc9a9a331c4300cb,0xa23c2c4c211cb2d2,0xba0cdbd2c49a5bbc,0xcbebc2c0cbb44129, 
0x413ab4a42ca391d2,0x0cc4b4b4b5c2435d,0xbb32335a2abc2221,0xc344b93b3144cb3b, 
0xab3b5dcd0cb5cdec,0xcc15cdddcac4dabd,0xccdc53c5402bc55b,0x4b45dcd01c5bbbbd, 
0x435b24b9c9a30312,0x5c24b634c4544b32,0x3b3aca94b40eab3c,0xbb34a4913051c0ab, 
0xed44bcbebbcaca45,0x1c4d43cd9bccdb4c,0xd3dc9c4d44d94dba,0x91dca4cda9cd6dbb, 
0x4bd114a449a94b40,0xd4342daab4144402,0x4421c44319c73425,0x2a49053003431123, 
0x644da49124a4344d,0x424235369ad24b3d,0x5b5de3dbb5cc5413,0xbc4aa5344ac5c346, 
0xc4d423b113a44cb4,0xd3032bc501244431,0x0925344441a5b29b,0x11311432412c53b2, 
0xb5ca06bcaaa443b3,0xd45c544bc35244d9,0xc552d244d5520494,0x2b444555d103a444, 
0x9bbb9b9451cccc29,0xd4ca1dcc39ccccbc,0x4aba9b434de5ca03,0xaacaac4111209c4c, 
0x4c32bb1a3cb3c424,0x3a044413c2322d43,0x3c35335b4243b93e,0x12434054344a5449, 
0xb4c4b33bb14c0bc2,0xc1ac0cba393b95e9,0x9bbc4bc3dd4bd2bb,0xb1ccacaa3abbdcdd, 
0xd64c4a0c41bcd43c,0x45542d4c44c4d4b3,0xc45bc544cb643524,0x0be4c4c4a3bc9a41, 
0x1b9d4b11b2d33c2c,0xc2bd43b2c4355aca,0xc533cacbc5ca3a2c,0xa25cb601b2acbab5, 
};

static int bbox_head_multi_level_share_convs_1_0_quant1_threshold[64 * 14] =
{ // torch.Size([64, 14])
-618, -375, -254, -162, -102, -41, 19, 80, 141, 201, 262, 353, 475, 718,
-463, -250, -143, -63, -10, 43, 96, 149, 203, 256, 309, 389, 496, 709,
-622, -380, -258, -167, -107, -46, 14, 74, 135, 196, 256, 347, 469, 711,
-576, -344, -227, -140, -82, -24, 33, 92, 150, 208, 266, 353, 470, 702,
-1065, -685, -495, -352, -257, -162, -67, 27, 122, 217, 312, 455, 645, 1025,
-573, -387, -294, -224, -178, -131, -85, -38, 7, 54, 100, 170, 263, 449,
-1001, -663, -494, -368, -283, -199, -114, -30, 54, 138, 223, 349, 518, 856,
-841, -561, -421, -316, -246, -176, -106, -36, 33, 103, 173, 278, 418, 698,
-727, -504, -392, -308, -252, -196, -140, -84, -28, 27, 83, 167, 279, 503,
-907, -611, -464, -353, -279, -205, -131, -57, 15, 89, 163, 274, 422, 717,
-761, -454, -301, -186, -109, -32, 43, 120, 197, 273, 350, 465, 619, 925,
-674, -381, -234, -124, -51, 22, 95, 169, 242, 315, 389, 499, 646, 939,
-832, -533, -384, -272, -198, -123, -49, 25, 100, 174, 249, 361, 510, 808,
-674, -481, -385, -313, -265, -216, -168, -120, -72, -24, 23, 96, 192, 385,
-314, -209, -156, -116, -90, -63, -37, -11, 15, 41, 67, 107, 160, 265,
-895, -605, -461, -352, -280, -207, -135, -62, 9, 82, 154, 263, 407, 697,
-407, -189, -80, 0, 54, 109, 163, 217, 272, 326, 380, 462, 571, 788,
-863, -606, -477, -381, -317, -252, -188, -124, -59, 4, 68, 165, 293, 550,
-676, -463, -357, -277, -223, -170, -117, -63, -10, 42, 95, 175, 282, 495,
-433, -264, -180, -117, -74, -32, 9, 51, 93, 136, 178, 241, 325, 494,
-810, -503, -349, -234, -157, -80, -3, 73, 150, 227, 304, 419, 573, 880,
-377, -198, -108, -41, 3, 48, 93, 137, 182, 227, 272, 339, 429, 608,
-491, -312, -223, -156, -112, -67, -23, 21, 65, 110, 155, 221, 311, 489,
-885, -571, -413, -295, -217, -138, -59, 19, 97, 176, 255, 373, 530, 845,
-417, -245, -159, -95, -52, -9, 33, 76, 119, 162, 205, 270, 356, 528,
-604, -362, -242, -151, -91, -30, 29, 89, 150, 210, 271, 361, 482, 723,
-822, -523, -374, -261, -187, -112, -37, 37, 112, 187, 261, 374, 523, 822,
-132, -70, -38, -15, 0, 15, 31, 46, 62, 78, 93, 117, 148, 210,
-668, -381, -238, -130, -58, 13, 84, 156, 228, 300, 372, 479, 623, 910,
-928, -553, -365, -224, -130, -36, 57, 150, 244, 338, 432, 573, 761, 1136,
-977, -649, -485, -362, -280, -198, -116, -34, 47, 129, 211, 334, 498, 826,
-911, -592, -432, -312, -233, -153, -73, 6, 86, 165, 245, 365, 525, 844,
-649, -399, -274, -180, -117, -55, 7, 69, 132, 194, 257, 351, 476, 726,
-910, -582, -418, -296, -214, -132, -50, 31, 113, 195, 276, 399, 563, 890,
-523, -305, -197, -115, -60, -6, 47, 102, 156, 211, 265, 347, 456, 673,
-729, -431, -282, -170, -96, -21, 52, 127, 201, 276, 350, 462, 611, 909,
-500, -293, -190, -112, -60, -9, 42, 94, 145, 197, 249, 327, 430, 637,
-759, -476, -335, -229, -158, -87, -17, 53, 124, 194, 265, 371, 512, 795,
-1187, -782, -579, -427, -326, -224, -123, -21, 79, 180, 282, 434, 637, 1042,
-549, -339, -234, -155, -102, -49, 2, 55, 107, 160, 213, 292, 397, 607,
-942, -633, -479, -363, -286, -209, -131, -54, 22, 99, 176, 292, 447, 755,
-983, -684, -535, -423, -348, -273, -199, -124, -49, 24, 99, 211, 360, 659,
-298, -138, -58, 1, 41, 81, 121, 161, 201, 241, 281, 341, 421, 581,
-687, -418, -283, -182, -115, -48, 18, 86, 153, 220, 288, 388, 523, 792,
-450, -214, -96, -7, 51, 110, 169, 228, 287, 346, 405, 493, 611, 848,
-537, -355, -263, -195, -149, -104, -58, -13, 32, 78, 123, 192, 283, 465,
-982, -579, -377, -226, -125, -24, 76, 176, 277, 378, 479, 630, 832, 1235,
-902, -585, -426, -306, -227, -148, -68, 10, 90, 169, 249, 368, 527, 845,
-679, -361, -202, -83, -3, 75, 155, 234, 314, 393, 473, 592, 751, 1069,
-893, -602, -456, -347, -275, -202, -129, -57, 15, 88, 160, 269, 415, 706,
-619, -433, -339, -269, -223, -176, -129, -83, -36, 10, 56, 126, 220, 406,
-521, -309, -204, -124, -71, -18, 34, 86, 139, 192, 245, 325, 430, 642,
-898, -591, -438, -323, -246, -169, -93, -16, 60, 136, 213, 328, 481, 788,
-617, -378, -258, -168, -109, -49, 10, 70, 130, 190, 249, 339, 459, 698,
-641, -504, -435, -384, -350, -315, -281, -247, -213, -178, -144, -93, -24, 112,
-639, -367, -230, -128, -60, 7, 75, 143, 212, 280, 348, 450, 587, 859,
-832, -518, -361, -243, -164, -86, -7, 70, 149, 227, 306, 424, 581, 895,
-565, -330, -212, -123, -64, -6, 52, 111, 170, 229, 288, 376, 494, 730,
-711, -411, -260, -148, -73, 1, 76, 151, 226, 301, 377, 489, 639, 939,
-924, -620, -468, -353, -277, -201, -125, -49, 26, 102, 179, 293, 445, 750,
-480, -272, -168, -90, -38, 13, 65, 117, 169, 221, 273, 351, 455, 663,
-874, -586, -442, -334, -262, -191, -119, -47, 24, 96, 168, 276, 420, 707,
-989, -610, -420, -277, -182, -87, 7, 102, 197, 292, 386, 529, 719, 1099,
-841, -536, -383, -269, -193, -116, -40, 35, 112, 188, 264, 379, 531, 837,
};

static uint64_t bbox_head_multi_level_share_convs_1_0_conv2_weight[64 * 9] =
{ // torch.Size([64, 3, 3, 1])
0x9, 0xc, 0x1, 0xb, 0xc, 0x9, 0xb, 0xc, 0x9, 
0xc, 0xc, 0x3, 0x4, 0xe, 0x5, 0x3, 0xd, 0x4, 
0xe, 0xa, 0x3, 0xd, 0x1, 0x4, 0xd, 0xc, 0xa, 
0x1, 0xb, 0xe, 0x2, 0xb, 0xe, 0x4, 0x4, 0xb, 
0xb, 0x9, 0x6, 0xb, 0x5, 0x5, 0xd, 0x3, 0x4, 
0x5, 0x6, 0x5, 0x3, 0x4, 0x4, 0xc, 0xa, 0xb, 
0xc, 0xb, 0x9, 0xd, 0xc, 0xb, 0xb, 0xb, 0xd, 
0x6, 0x4, 0xb, 0x5, 0x4, 0x9, 0x5, 0x4, 0x9, 
0xb, 0xd, 0xc, 0xb, 0x5, 0xc, 0x4, 0x6, 0x4, 
0x4, 0x2, 0x2, 0x5, 0xc, 0x4, 0x4, 0xb, 0x4, 
0xc, 0x3, 0x9, 0xc, 0xe, 0xd, 0x3, 0x4, 0x9, 
0x3, 0xc, 0xd, 0x4, 0xc, 0xd, 0x2, 0xc, 0xd, 
0xc, 0xd, 0xa, 0xc, 0xd, 0xa, 0xb, 0xc, 0x1, 
0xc, 0x3, 0xa, 0xd, 0x6, 0x3, 0xa, 0xc, 0x2, 
0x0, 0x2, 0xd, 0xd, 0xc, 0x4, 0x4, 0x6, 0x3, 
0x9, 0xa, 0x3, 0x3, 0x5, 0x6, 0xc, 0xc, 0x4, 
0x3, 0x4, 0x0, 0xd, 0xe, 0x3, 0x4, 0xb, 0xc, 
0x1, 0xb, 0xb, 0x3, 0x5, 0x3, 0x4, 0x5, 0x5, 
0x4, 0xc, 0xa, 0x6, 0xb, 0x9, 0x6, 0x4, 0xa, 
0x1, 0x1, 0x4, 0xe, 0x5, 0xc, 0xd, 0x3, 0x2, 
0xd, 0xe, 0xe, 0x2, 0x4, 0xd, 0x4, 0x4, 0x0, 
0x4, 0xa, 0xc, 0x4, 0xd, 0xb, 0x4, 0xe, 0x6, 
0xa, 0x3, 0x9, 0x4, 0x5, 0xd, 0x4, 0xc, 0xe, 
0x3, 0x3, 0x5, 0x5, 0x4, 0x5, 0x4, 0xa, 0xb, 
0xb, 0x2, 0x2, 0x2, 0xf, 0x4, 0x4, 0xa, 0xb, 
0xc, 0x3, 0xa, 0xc, 0x3, 0x3, 0xc, 0xd, 0x1, 
0x6, 0x4, 0xd, 0x5, 0x6, 0x3, 0x2, 0x4, 0xc, 
0xd, 0xe, 0x1, 0x3, 0x6, 0x1, 0xb, 0x3, 0x3, 
0x3, 0xd, 0x3, 0xa, 0xc, 0x0, 0x0, 0xd, 0x2, 
0xd, 0xb, 0x3, 0xd, 0x1, 0x3, 0xd, 0xc, 0xa, 
0xb, 0xa, 0x5, 0x3, 0x5, 0x5, 0x5, 0x4, 0x3, 
0x1, 0x4, 0xa, 0x3, 0x5, 0x0, 0xa, 0x4, 0x2, 
0x5, 0x4, 0xd, 0x6, 0x4, 0xb, 0x4, 0x5, 0xa, 
0xc, 0x0, 0xb, 0xd, 0x3, 0xd, 0xc, 0xb, 0xb, 
0x2, 0x5, 0xb, 0x2, 0x6, 0x3, 0xe, 0x2, 0x4, 
0xc, 0xf, 0xc, 0x1, 0x2, 0x5, 0x2, 0xc, 0x3, 
0x3, 0x4, 0x1, 0x3, 0xc, 0xe, 0xa, 0xc, 0xb, 
0xc, 0x9, 0x3, 0x0, 0xe, 0x4, 0xb, 0xb, 0x1, 
0xd, 0xd, 0xd, 0xb, 0xb, 0x0, 0x4, 0x3, 0x4, 
0x0, 0x4, 0xb, 0xa, 0x7, 0xb, 0x3, 0xc, 0xc, 
0x5, 0x4, 0x4, 0x3, 0x4, 0x1, 0x1, 0x2, 0x1, 
0x5, 0x5, 0x5, 0x4, 0x2, 0x3, 0x0, 0xb, 0x2, 
0x3, 0xd, 0x4, 0x0, 0xe, 0x0, 0x2, 0xb, 0x2, 
0xd, 0xc, 0xd, 0xc, 0xa, 0xc, 0xc, 0x0, 0xb, 
0x3, 0xe, 0x1, 0x3, 0x4, 0x0, 0xb, 0xc, 0xa, 
0xd, 0xc, 0xb, 0xb, 0xc, 0xb, 0x5, 0x5, 0x4, 
0x5, 0x6, 0x6, 0x5, 0x1, 0x2, 0x4, 0xb, 0xb, 
0x4, 0xc, 0xb, 0x4, 0x4, 0x5, 0xa, 0x5, 0x6, 
0xb, 0xe, 0xd, 0x3, 0xd, 0xa, 0xc, 0x5, 0xb, 
0xb, 0x9, 0x2, 0xc, 0x3, 0x4, 0x3, 0x5, 0x7, 
0xc, 0x4, 0xa, 0x1, 0x6, 0xc, 0x3, 0xc, 0x3, 
0xd, 0xc, 0x3, 0xd, 0x4, 0x2, 0xa, 0x5, 0x4, 
0xc, 0x2, 0x4, 0x2, 0x5, 0x5, 0x3, 0x5, 0x4, 
0xc, 0xd, 0x3, 0xd, 0xd, 0x4, 0xc, 0x1, 0x4, 
0x4, 0xd, 0xa, 0x3, 0x7, 0xd, 0x5, 0x5, 0x3, 
0x2, 0xa, 0xc, 0x4, 0xc, 0xe, 0x9, 0xb, 0xc, 
0x4, 0x4, 0xe, 0x4, 0x4, 0xe, 0x0, 0xc, 0xd, 
0xc, 0xd, 0x0, 0x9, 0x2, 0xb, 0x0, 0xc, 0xb, 
0x5, 0x5, 0xc, 0xc, 0xd, 0xc, 0xd, 0xe, 0x5, 
0x3, 0x4, 0x4, 0x4, 0x3, 0x3, 0x4, 0x4, 0x3, 
0x5, 0xc, 0xc, 0xd, 0xe, 0x2, 0x3, 0x4, 0x4, 
0xc, 0xb, 0x4, 0x4, 0x5, 0x5, 0x5, 0x5, 0x4, 
0xd, 0xc, 0x0, 0xe, 0x6, 0xc, 0xb, 0x2, 0x5, 
0x4, 0x4, 0x2, 0x4, 0x5, 0x3, 0x3, 0x5, 0x3, 
};

static int bbox_head_multi_level_share_convs_1_0_relu2_threshold[64 * 7] =
{ // torch.Size([64, 7])
-1, 11, 24, 36, 56, 82, 133,
-18, 14, 46, 79, 127, 192, 322,
22, 53, 84, 115, 162, 224, 349,
-4, 35, 74, 114, 173, 252, 410,
15, 82, 150, 217, 318, 452, 722,
-37, -4, 27, 60, 109, 174, 305,
-70, -33, 4, 42, 98, 173, 323,
13, 52, 91, 129, 187, 265, 419,
12, 41, 69, 98, 140, 197, 311,
-32, -9, 12, 34, 67, 112, 201,
-33, 2, 38, 74, 128, 200, 345,
-11, 21, 54, 86, 135, 201, 331,
-111, -51, 7, 67, 156, 275, 513,
26, 58, 89, 121, 168, 231, 357,
-24, 19, 63, 106, 172, 259, 434,
24, 91, 159, 226, 328, 463, 733,
7, 36, 65, 94, 137, 195, 312,
4, 32, 61, 89, 132, 189, 303,
6, 30, 54, 78, 114, 161, 257,
-1, 31, 64, 97, 147, 213, 346,
-76, -7, 61, 130, 233, 371, 646,
3, 32, 61, 90, 133, 191, 307,
-36, 11, 58, 105, 176, 271, 460,
-32, 11, 54, 97, 161, 248, 420,
-38, 9, 57, 105, 177, 272, 464,
-19, 8, 36, 64, 106, 161, 273,
58, 95, 132, 169, 225, 299, 447,
-46, 72, 191, 311, 489, 727, 1203,
8, 24, 40, 56, 80, 113, 177,
5, 38, 72, 105, 154, 220, 353,
-11, 31, 73, 116, 180, 266, 437,
-11, 5, 22, 38, 63, 97, 163,
34, 68, 101, 135, 185, 252, 385,
-117, -52, 11, 76, 173, 303, 561,
32, 70, 107, 145, 201, 276, 425,
-9, 53, 117, 180, 275, 402, 655,
-4, 29, 63, 98, 149, 217, 354,
-6, 14, 35, 56, 88, 130, 214,
-25, -12, 0, 14, 33, 60, 113,
-48, -3, 41, 86, 154, 244, 424,
-15, 12, 39, 66, 107, 162, 272,
0, 32, 64, 96, 143, 207, 334,
40, 77, 113, 149, 204, 277, 422,
-6, 26, 60, 94, 144, 212, 347,
-3, 17, 38, 59, 90, 132, 216,
-26, 10, 46, 82, 136, 208, 353,
-75, -40, -6, 27, 79, 147, 285,
-26, 22, 71, 120, 193, 291, 487,
7, 60, 113, 167, 247, 353, 567,
9, 46, 83, 120, 176, 250, 399,
32, 60, 89, 118, 161, 219, 334,
-5, 17, 40, 63, 97, 142, 233,
-70, -3, 62, 129, 229, 362, 629,
-32, -9, 13, 36, 70, 115, 207,
133, 255, 377, 499, 682, 927, 1415,
-44, -9, 25, 61, 114, 184, 325,
18, 71, 124, 177, 256, 362, 574,
10, 30, 49, 68, 97, 135, 212,
66, 122, 178, 234, 318, 430, 654,
19, 42, 64, 87, 121, 166, 257,
-17, 4, 26, 48, 81, 124, 212,
-7, 33, 73, 114, 174, 255, 417,
24, 75, 125, 176, 252, 353, 555,
-56, -44, -32, -19, -1, 22, 71,
};

static uint64_t bbox_head_multi_level_share_convs_2_0_conv1_weight[64 * 1*4] =
{ // torch.Size([64, 1, 1, 64])
0x9db433c3d3cdcacc,0xa4cbda3ac2b1b323,0xdbbcb3cdb95c0dbd,0x03aabcd3bbcc45ba, 
0x5430c4e0440ed2da,0xd3dde4a5d333b1c4,0x05b4d4dc9acdd5d4,0xc4ead34bcc02d5d3, 
0xa90ccc0c4c254cbd,0xa33d4d9c1cbb5e33,0x2223bcc4cee1324b,0xad493cf9cdc4da40, 
0xaa1bc431ba934424,0xcb4234b14940ecbb,0x53441a1991c4b494,0xc24a21103143425c, 
0x2dbcb231dc3dbccd,0x12cbd4c0babc34ca,0xdc2ab9bcb3bbbaab,0x0b02c4c2544bc3b3, 
0x3db2dccabe23529c,0xcc4d5c9bb2b92e92,0x34c2a0bccd3ba424,0x9a0bbb2addd0d3a4, 
0xbba34cb3de49acc2,0xd9ac5ddb2b4c4dd4,0xd34b3bc1cbbc1ccb,0xbd3aac44ad2bceaa, 
0x9c3a14e256a01401,0x203a33433325b241,0x5291334b4241a09b,0xb5d33bb9db4233bb, 
0xc4a133939e44b4ad,0x34ad4cd25b5ccdde,0x94434dddcdd31dee,0x2dc24ac49cccd3bb, 
0x1d3cb00c50364415,0x142324414bc2a2b9,0x4940abb5a441143b,0x9cc3242d4540c9a3, 
0xdd3abc4d6535a412,0x53b4344a52da9a3c,0x4b3e5b30bb55454c,0x1643444b3c3b234b, 
0xb53944545caee3b5,0x54e4d3cc4cdcc55b,0x5c3a3dcdd5d0dddd,0xbb4443bc355dc59b, 
0x0c1cc3d5d3bc39bd,0xd35dc4d1dcd4dcd5,0x5acecdddcced43cc,0xdb2cc240b4b3d34c, 
0x4c433a3264243631,0x502a544249b5bb3a,0x54493a442b3a243b,0x35c04922d44304bb, 
0xacb1baa5cbc94c24,0xab35c251c344d454,0x6bbe534a34551c55,0xb3b30329344b336b, 
0xd3142bb41c3dd63e,0x9b9d3bb33bdb4c3c,0x45249d3bd1dbbbc9,0x23e3323bc05bd3cb, 
0xae42b1ca440cc43a,0x3114b3a3b3342a32,0xd115c25a3cbc934b,0x44dab351bccbb4d0, 
0x4cc23554443505c3,0x4bdc4b4acc442343,0xb9042bd5d2cc04c9,0xd4bbdcca42535531, 
0xadadac91dd4cbccb,0xc45cd0d2149accda,0xd5442cdcbc0c9caa,0xcdd5dab25aa4cd44, 
0x63b5dc4a4e355dcb,0xa4343d4cc3bcecc1,0x9c5c3b25ddc242ac,0xdd2dbcd3cdc3535d, 
0x2d4bbcd2c4dc30ad,0xc00ccb4ad1359cb2,0x9bdbc3cbdd3cbc49,0xb5dcd93ce0c5ecb3, 
0xb3b5bc4c9acb32a4,0xc0446c40c323ca52,0x33aa9559a343b640,0x25bcc92aa43b5b22, 
0xc5b31cdccc9bbdb9,0xc3acccabc23c5bb3,0xdcdcd30b332bb2b2,0x2d49cc31bccbbbc3, 
0x2404bc4c54a99333,0x4a3452c333090cbc,0x5a4b4442b9439523,0x35cc445a414a140c, 
0xd9c31c54dc24cdb5,0xb4b55ccac3030c3c,0xdd3bb4444434ac32,0x3b5942304abb4e4b, 
0xc9bbabd9cc9bb1a9,0x2b4bbacc39b4ba2b,0xbacb4c0c3a931c2c,0xcbb231ba9c904caa, 
0xc43d4cb2443bd54c,0x5c3cd6043bbc3443,0x44c50c4b425bbd03,0x4cd4434bc949ddb3, 
0xddc2bb63e34449c1,0x33445b5b52b4c45d,0x4c2b534914453c54,0x455a35aa445b3d52, 
0xb9240b434bb32434,0xa93b53114114ac0b,0x434232342bba2303,0x132a3139ca33a23b, 
0x4c930b2343324530,0x4a4b44394ac2a002,0x53414c33bab3392a,0x24c34bcbc233a341, 
0x33c44d33ce4d94ce,0xcd235ccbbcbc4c45,0x34b5dcdcdcdc25cc,0x32c9cb142c0a04c2, 
0xd3b4a9aa3b92bdaa,0xb1c32c40b3cb20cc,0xdcccc4b3915aaca1,0x9312bb09bccb21b1, 
0xaa4ac2c343a34433,0x30534b4c9cbb9d33,0x04b12ab03cc435ba,0xb4010c20d2d44bbb, 
0xab234d34eccd1425,0x3b445dbabb9ab495,0xc459493d45439552,0x23bcc253555d33c3, 
0xbcababcbcbbabb93,0xaa3bbbab33b4ba3c,0xcaccac3a2bb33b1c,0xcbb092a0abab3caa, 
0xdc3b4943ac943ebb,0xd9cc2db124bc921d,0xedcc0523ccbcbac3,0xb002cb42bdcb4dc9, 
0x3c3d13d92431cd3d,0x931dd541ac0334d9,0x3cca94942c22adcb,0xb0c341c3cbc4dd1a, 
0x0b0cd9b4cd1ac0bc,0xc4123b5b12131cb0,0xc99abda9da292c2b,0xbcb4592b3abc2b93, 
0xb5bd4c55fdcccdc5,0x14a5b35cd4c4b354,0xdc45b21255559d53,0x3d64c4c3546b4e59, 
0x3093454544343402,0x3cdb4a93bb5c4535,0x5adbb2e4d453c315,0xbc33a49cc464b554, 
0xb103a34444caa4c3,0xa49bbb4a3c442a33,0xab124bd2c4c33331,0xc443924a43433434, 
0x4134329432a92319,0x903b31292a333ba3,0x3233213312a92910,0xa9303a90b222c123, 
0x333300923212230b,0x1a1a3332a14a1cb3,0x32421421342b9200,0x2240319a9211d324, 
0xb5234bbb5993254c,0x3c224bb24bcc3911,0x53b3133442acc546,0xabcb2b543d440dbb, 
0xabb23bccc42ddccd,0x3adbd9c4ca1da4b3,0xd3acb32c05699b1b,0x3440c4cb544bc4c3, 
0x45b4c34b52342c33,0x3c33413434349419,0x543329441b3b2234,0xaa3443335d455234, 
0x5c3b324433313433,0x334013a333433334,0x3334bc3ac9403134,0x3bc333aaa044c254, 
0x3b04433449239423,0x2329424042343b33,0x34443a34abbb30a4,0x22a34aa1c243bc43, 
0x65c4354324acb1b5,0xcbd5b913154c3535,0xc337444a554a16c5,0xba33c960cd335624, 
0x53c555645c9ccbcd,0x14cc5bcc5cddedcd,0x2c4f6d5cbcdb0bde,0xcac3aa943b2de34a, 
0x453354c44922321c,0x3a213330ab4c3bd4,0x443514c43322c415,0x434022a1a34315a0, 
0xec3cccd1dbbca19d,0xb33d2b9b4cc5cd99,0x3ccd3d4cddc3135a,0xa5dcc35ac3a1ddac, 
0xd532e0cdc2adb339,0xcc3bc4a9bcbd4cdd,0x43bcbb3e255da9d2,0xdc59a3525cdcdccc, 
0x5dc3b49b3d156e94,0xc45b4dcc4ab49db5,0x5b4353555bc4154c,0x3bcb9deacce4d423, 
0xdd44cc5b43254234,0x0c4c52c14c545d3c,0xed95a5464443b553,0x5354ab336cd3cdc4, 
0x4d32cbbd43033a9b,0xc351bab3b3341c91,0xdca5ba494ccc334d,0x45db3cb23bd4cbdb, 
0x3cac4c5ca103c455,0x5bb51db354344353,0xea46435bba65094e,0x54234443344b45d2, 
0x391222332b12241a,0xc93b230930339c0a,0x43342b33b1c22ab4,0xba4231212134ca42, 
0x4b33d45cdd345cd4,0xccb44cb3cb0b24c9,0xcb4b33dcb559b52b,0x935cc1bb52b25649, 
0xc495bec4ce9d14cd,0xed3c5dc9a90b2dc2,0x24314abcc1cdb5c0,0x94cdccc3d32ac2c3, 
0xdbc0ac4b053cc6bd,0x5b52b544b5a6343c,0xdb24b55c4a442c5b,0x46d4344245442cb4, 
0xdda50eb39cba3343,0xdb5369a2b4c2abc4,0x323a34499b34c5bb,0x25b0a540b43b33c1, 
0x3dbc2553b0435422,0x1c54b4b0bb54d304,0x6445bba433d4b344,0x9a3bb34b1244c25c, 
0x541544db25cdcedc,0xdcdddb59da5d0bc4,0xcbb5c4e4cccdd6d5,0xc59cda6aedd414c3, 
};

static int bbox_head_multi_level_share_convs_2_0_quant1_threshold[64 * 14] =
{ // torch.Size([64, 14])
-1187, -816, -630, -491, -398, -305, -212, -119, -26, 66, 159, 298, 484, 855,
-1464, -999, -767, -592, -476, -360, -243, -127, -11, 105, 221, 395, 628, 1093,
-1538, -1066, -829, -652, -534, -416, -298, -180, -62, 55, 173, 350, 587, 1059,
-655, -382, -245, -142, -74, -6, 62, 130, 198, 267, 335, 438, 574, 848,
-1175, -810, -627, -490, -399, -307, -216, -125, -33, 57, 148, 285, 468, 834,
-1252, -863, -669, -524, -427, -330, -232, -135, -38, 58, 155, 300, 495, 883,
-1097, -764, -597, -472, -389, -306, -222, -139, -56, 27, 110, 235, 402, 735,
-738, -425, -268, -151, -72, 5, 84, 162, 240, 319, 397, 514, 671, 985,
-1107, -766, -596, -468, -383, -297, -212, -127, -42, 43, 128, 256, 426, 767,
-800, -457, -286, -157, -71, 14, 99, 185, 271, 357, 443, 571, 743, 1086,
-879, -511, -327, -189, -97, -5, 86, 178, 271, 363, 455, 593, 777, 1145,
-1181, -791, -596, -450, -352, -255, -157, -60, 37, 134, 232, 378, 573, 963,
-1549, -1089, -860, -687, -572, -458, -343, -228, -113, 1, 116, 288, 518, 977,
-1249, -710, -441, -239, -104, 29, 164, 299, 433, 568, 702, 904, 1174, 1712,
-835, -474, -293, -157, -67, 22, 113, 203, 293, 384, 474, 610, 790, 1152,
-1368, -922, -699, -532, -421, -310, -198, -87, 24, 135, 246, 413, 636, 1082,
-1280, -796, -554, -373, -252, -131, -10, 110, 231, 352, 473, 654, 896, 1380,
-923, -595, -430, -307, -225, -143, -61, 21, 103, 185, 267, 390, 555, 883,
-990, -683, -529, -414, -338, -261, -184, -107, -31, 45, 122, 237, 390, 697,
-1284, -854, -639, -478, -371, -263, -156, -48, 58, 166, 273, 434, 649, 1079,
-1157, -816, -646, -518, -433, -348, -263, -177, -92, -7, 77, 205, 375, 716,
-713, -413, -263, -151, -76, -1, 73, 148, 223, 298, 373, 485, 635, 935,
-1400, -970, -754, -593, -485, -377, -270, -162, -54, 52, 160, 321, 537, 967,
-722, -413, -258, -142, -65, 11, 89, 166, 243, 321, 398, 514, 669, 978,
-215, -117, -67, -31, -6, 18, 42, 67, 91, 116, 140, 177, 227, 325,
-640, -437, -336, -260, -210, -159, -109, -58, -7, 42, 93, 168, 270, 472,
-1004, -618, -424, -280, -183, -86, 9, 106, 202, 299, 395, 540, 733, 1120,
-945, -544, -343, -193, -92, 7, 107, 208, 308, 408, 509, 659, 860, 1261,
-903, -533, -349, -210, -118, -25, 66, 159, 251, 343, 436, 574, 759, 1129,
-1377, -831, -557, -352, -216, -79, 56, 193, 330, 466, 603, 808, 1081, 1628,
-1261, -867, -671, -523, -425, -327, -229, -130, -32, 65, 164, 311, 508, 901,
-1128, -758, -572, -433, -341, -248, -155, -63, 29, 121, 214, 353, 538, 909,
-763, -479, -337, -230, -159, -88, -17, 53, 124, 195, 266, 372, 515, 799,
-971, -581, -386, -240, -142, -45, 52, 149, 247, 344, 442, 588, 783, 1173,
-683, -465, -356, -275, -220, -166, -111, -57, -2, 51, 106, 187, 296, 514,
-1617, -1137, -897, -717, -597, -477, -357, -237, -117, 2, 123, 303, 543, 1023,
-871, -585, -441, -334, -262, -191, -119, -47, 23, 95, 167, 274, 417, 704,
-647, -440, -337, -259, -207, -155, -104, -52, 0, 51, 102, 180, 284, 491,
-290, -152, -83, -31, 3, 37, 72, 106, 141, 176, 210, 262, 331, 469,
-1041, -656, -463, -319, -223, -127, -31, 65, 161, 257, 353, 498, 690, 1075,
-902, -565, -397, -270, -186, -102, -18, 65, 150, 234, 318, 444, 612, 949,
-910, -557, -380, -248, -160, -71, 16, 104, 192, 281, 369, 501, 678, 1031,
-709, -432, -294, -190, -121, -52, 16, 86, 155, 224, 293, 397, 535, 812,
-1047, -655, -459, -311, -213, -115, -17, 80, 178, 276, 374, 522, 718, 1110,
-1336, -899, -680, -517, -407, -298, -189, -80, 29, 138, 247, 411, 629, 1066,
-696, -383, -226, -109, -30, 47, 125, 203, 282, 360, 438, 556, 713, 1026,
-854, -499, -321, -188, -99, -10, 77, 166, 255, 344, 432, 566, 743, 1098,
-999, -589, -384, -230, -127, -25, 77, 179, 282, 384, 487, 641, 846, 1256,
-872, -489, -298, -154, -58, 36, 132, 228, 323, 419, 515, 658, 850, 1232,
-1390, -925, -693, -519, -402, -286, -170, -54, 61, 178, 294, 468, 701, 1166,
-806, -480, -317, -194, -113, -31, 49, 131, 212, 294, 375, 497, 661, 987,
-1151, -801, -625, -494, -406, -319, -231, -143, -56, 31, 119, 250, 425, 776,
-1413, -956, -727, -556, -442, -327, -213, -99, 14, 129, 243, 414, 643, 1100,
-1148, -684, -452, -278, -162, -46, 70, 186, 302, 418, 534, 708, 940, 1404,
-1135, -671, -439, -265, -149, -33, 82, 198, 314, 430, 546, 720, 952, 1416,
-1302, -803, -553, -366, -241, -116, 8, 133, 257, 382, 507, 694, 944, 1443,
-433, -198, -80, 7, 66, 125, 184, 243, 302, 361, 420, 508, 626, 862,
-904, -555, -381, -250, -163, -75, 11, 98, 185, 273, 360, 491, 665, 1014,
-1062, -687, -499, -359, -265, -171, -77, 15, 109, 203, 297, 437, 625, 1000,
-1164, -809, -632, -499, -410, -321, -232, -143, -55, 33, 122, 255, 433, 788,
-1171, -689, -448, -267, -147, -27, 93, 213, 334, 454, 575, 755, 996, 1478,
-692, -412, -272, -167, -97, -26, 43, 113, 183, 253, 323, 428, 568, 849,
-1080, -645, -428, -265, -156, -47, 61, 169, 278, 387, 496, 659, 876, 1311,
-1500, -1023, -785, -606, -487, -368, -248, -129, -10, 108, 228, 406, 645, 1122,
};

static uint64_t bbox_head_multi_level_share_convs_2_0_conv2_weight[64 * 9] =
{ // torch.Size([64, 3, 3, 1])
0x4, 0x4, 0xb, 0x3, 0x5, 0x2, 0xb, 0x4, 0x3, 
0x3, 0x5, 0x6, 0xc, 0xd, 0x6, 0x3, 0xc, 0x4, 
0xa, 0x2, 0x6, 0x0, 0x4, 0x5, 0x3, 0x3, 0x5, 
0x0, 0x4, 0x5, 0xd, 0xd, 0xd, 0x0, 0xb, 0xb, 
0xc, 0x5, 0x3, 0x5, 0x5, 0xb, 0x4, 0x1, 0xc, 
0xc, 0x0, 0x3, 0x3, 0x3, 0x5, 0x2, 0x5, 0x6, 
0x2, 0x5, 0xb, 0xb, 0x5, 0x5, 0xb, 0x3, 0x5, 
0x2, 0xc, 0xd, 0x1, 0xd, 0xd, 0x5, 0x3, 0x4, 
0x5, 0x5, 0x6, 0x3, 0x2, 0x3, 0x1, 0xc, 0x3, 
0x3, 0xd, 0x3, 0xd, 0xc, 0x3, 0xb, 0x1, 0x4, 
0x2, 0x3, 0x3, 0xc, 0x5, 0xa, 0xb, 0xe, 0xe, 
0xe, 0xd, 0x1, 0x3, 0xd, 0x5, 0x1, 0xb, 0x7, 
0x5, 0x6, 0x5, 0x3, 0xa, 0xb, 0x3, 0x0, 0xa, 
0xc, 0xb, 0xb, 0x9, 0xd, 0xd, 0x4, 0xb, 0xb, 
0xe, 0xd, 0xd, 0x0, 0x3, 0x2, 0x1, 0x9, 0xc, 
0x5, 0x4, 0xa, 0x4, 0x3, 0x9, 0x6, 0x3, 0x2, 
0x5, 0x2, 0x3, 0x4, 0xc, 0x2, 0x5, 0x3, 0x4, 
0x1, 0x0, 0xc, 0x5, 0x3, 0xb, 0xd, 0xd, 0xd, 
0xc, 0xd, 0x1, 0x5, 0x5, 0x5, 0x5, 0x5, 0x3, 
0xc, 0x4, 0x3, 0xd, 0xb, 0x4, 0xb, 0xe, 0xb, 
0xc, 0x1, 0xa, 0x4, 0x4, 0x4, 0x5, 0x5, 0x5, 
0xd, 0xb, 0xb, 0xd, 0x9, 0x9, 0xb, 0xc, 0x9, 
0xc, 0xa, 0xa, 0x3, 0x4, 0x4, 0x3, 0x5, 0x4, 
0x4, 0xb, 0xb, 0xc, 0xc, 0xb, 0xc, 0xc, 0xb, 
0xc, 0x3, 0x4, 0xd, 0xc, 0x4, 0xe, 0xd, 0x3, 
0xb, 0x4, 0xc, 0x4, 0x5, 0x4, 0xb, 0x3, 0xc, 
0x5, 0xc, 0xb, 0x4, 0x2, 0x3, 0x5, 0x5, 0x4, 
0xd, 0xe, 0xd, 0x1, 0x3, 0xb, 0x1, 0x4, 0x4, 
0xc, 0xb, 0x3, 0xb, 0xc, 0x2, 0xc, 0xc, 0x2, 
0xa, 0xb, 0x2, 0xb, 0xa, 0x3, 0xc, 0xc, 0xb, 
0x6, 0xb, 0x3, 0x5, 0xb, 0x0, 0x5, 0x4, 0x3, 
0xc, 0x9, 0x4, 0xb, 0x5, 0x5, 0x2, 0x4, 0xb, 
0xc, 0xc, 0x4, 0xd, 0xc, 0x3, 0xc, 0x4, 0x5, 
0x3, 0xb, 0xd, 0xa, 0x3, 0xa, 0x4, 0xb, 0xe, 
0xa, 0x3, 0x9, 0x4, 0x5, 0x3, 0xb, 0x2, 0x9, 
0xc, 0x5, 0x3, 0xc, 0x5, 0xb, 0xc, 0x5, 0x4, 
0x4, 0x4, 0xb, 0x3, 0x3, 0x0, 0xb, 0x2, 0x5, 
0x3, 0x4, 0x5, 0x4, 0x4, 0x4, 0xb, 0xd, 0xc, 
0x4, 0x5, 0x1, 0xc, 0xe, 0xd, 0xd, 0xe, 0xd, 
0xd, 0xd, 0xe, 0x3, 0x5, 0x4, 0xc, 0xc, 0xc, 
0xc, 0x4, 0xa, 0xc, 0x3, 0x0, 0xd, 0xb, 0xc, 
0xa, 0xb, 0xb, 0xa, 0xb, 0xb, 0x0, 0x9, 0xb, 
0xa, 0xb, 0xa, 0xa, 0xb, 0xb, 0x9, 0xa, 0x9, 
0x4, 0xa, 0xd, 0x4, 0xb, 0xc, 0x4, 0xa, 0xd, 
0x4, 0xa, 0xd, 0x5, 0x4, 0xd, 0x5, 0x5, 0xc, 
0x4, 0xd, 0xb, 0x3, 0xd, 0xa, 0x4, 0xd, 0xd, 
0xd, 0xd, 0xc, 0x2, 0x3, 0x3, 0xc, 0xa, 0x3, 
0xb, 0x9, 0xb, 0x9, 0xb, 0xc, 0xb, 0xb, 0x9, 
0xd, 0xc, 0xd, 0xa, 0x2, 0xc, 0xc, 0xc, 0xd, 
0x6, 0x5, 0x6, 0x3, 0xa, 0x3, 0xa, 0x4, 0x4, 
0x0, 0xc, 0xb, 0xa, 0xb, 0x0, 0xa, 0xb, 0xc, 
0x4, 0x3, 0x4, 0x3, 0xb, 0x3, 0x5, 0x4, 0x4, 
0x5, 0x2, 0x5, 0x4, 0x1, 0x5, 0x4, 0xb, 0x4, 
0x5, 0x4, 0x6, 0x3, 0xc, 0xb, 0x4, 0x4, 0x6, 
0x5, 0x5, 0x4, 0xc, 0xa, 0x6, 0xb, 0x2, 0x6, 
0x4, 0x4, 0x5, 0x1, 0xb, 0x3, 0x5, 0x3, 0x4, 
0xc, 0xd, 0xe, 0x5, 0x2, 0x9, 0x4, 0x9, 0xc, 
0xc, 0x1, 0x3, 0xc, 0xc, 0xb, 0x1, 0xa, 0xc, 
0xb, 0x1, 0x0, 0xb, 0x3, 0xc, 0xe, 0xd, 0xb, 
0x2, 0xa, 0x5, 0xc, 0x4, 0x5, 0x4, 0x5, 0x2, 
0x4, 0x5, 0x3, 0xd, 0x4, 0x9, 0xe, 0xe, 0x4, 
0x5, 0xd, 0xb, 0x1, 0xc, 0x2, 0xd, 0xc, 0x4, 
0xd, 0xd, 0xd, 0xd, 0xc, 0xb, 0x3, 0x5, 0xa, 
0x6, 0x9, 0x4, 0x4, 0x6, 0x5, 0x1, 0x4, 0xc, 
};

static int bbox_head_multi_level_share_convs_2_0_relu2_threshold[64 * 7] =
{ // torch.Size([64, 7])
2, 30, 58, 85, 127, 182, 293,
76, 138, 201, 263, 356, 481, 730,
22, 63, 104, 145, 206, 288, 452,
15, 35, 55, 75, 105, 146, 226,
9, 37, 65, 93, 135, 191, 303,
9, 51, 93, 134, 197, 280, 447,
-8, 25, 59, 93, 144, 213, 349,
-4, 29, 62, 96, 146, 214, 348,
19, 56, 93, 129, 184, 257, 403,
29, 61, 93, 125, 173, 237, 364,
69, 122, 175, 228, 307, 413, 625,
87, 190, 293, 397, 551, 757, 1170,
24, 65, 105, 146, 207, 288, 451,
-10, 21, 53, 85, 132, 196, 323,
34, 66, 97, 129, 177, 240, 366,
17, 61, 106, 151, 218, 307, 485,
-12, 12, 37, 62, 99, 149, 249,
-74, -12, 48, 110, 202, 325, 570,
-5, 35, 75, 116, 177, 259, 422,
22, 53, 83, 114, 160, 221, 343,
-4, 34, 73, 112, 170, 248, 404,
8, 38, 68, 98, 143, 202, 322,
8, 32, 57, 81, 118, 166, 264,
12, 40, 67, 94, 135, 190, 299,
0, 160, 321, 483, 725, 1047, 1692,
18, 39, 61, 82, 114, 157, 242,
-9, 23, 55, 88, 137, 202, 332,
72, 115, 159, 202, 267, 354, 527,
3, 25, 48, 71, 105, 150, 242,
0, 25, 50, 76, 114, 166, 268,
37, 88, 138, 189, 265, 366, 568,
4, 31, 59, 86, 127, 181, 290,
9, 35, 61, 88, 127, 179, 284,
26, 65, 104, 143, 202, 280, 435,
9, 27, 45, 63, 90, 126, 197,
41, 60, 79, 98, 126, 164, 240,
12, 32, 51, 71, 100, 140, 218,
-12, 23, 58, 93, 146, 217, 358,
238, 419, 599, 780, 1051, 1412, 2134,
-72, -4, 62, 130, 231, 365, 635,
-24, 16, 56, 96, 156, 237, 397,
3, 16, 30, 44, 65, 92, 147,
0, 10, 20, 29, 44, 64, 103,
-11, 24, 60, 97, 151, 224, 369,
17, 48, 79, 110, 157, 219, 343,
-7, 27, 63, 99, 152, 223, 366,
-11, 21, 55, 88, 138, 204, 337,
0, 21, 42, 63, 94, 136, 220,
39, 67, 96, 124, 167, 224, 338,
-10, 45, 101, 157, 241, 353, 578,
1, 17, 33, 49, 72, 104, 167,
23, 44, 66, 88, 121, 165, 252,
-5, 28, 62, 96, 146, 214, 348,
-43, -6, 30, 67, 122, 197, 345,
16, 58, 101, 143, 206, 290, 458,
-35, -10, 13, 38, 75, 124, 222,
28, 107, 186, 264, 383, 541, 856,
-1, 23, 48, 73, 111, 161, 261,
-14, 23, 62, 100, 157, 233, 386,
30, 68, 106, 145, 202, 279, 432,
59, 117, 176, 234, 322, 439, 673,
12, 48, 84, 120, 174, 246, 391,
-17, 30, 78, 126, 199, 295, 488,
52, 144, 236, 328, 467, 651, 1020,
};

static uint64_t bbox_head_multi_level_cls_0_conv1_weight[1 * 1*4] =
{ // torch.Size([1, 1, 1, 64])
0x05cbfef01d95ed6d,0xe4d457d4ddff6b20,0xcd4dfd1ed45ccce6,0x4d4dcb44e5c4a5e3, 
};

static int bbox_head_multi_level_cls_0_quant1_threshold[1 * 14] =
{ // torch.Size([1, 14])
-3879, -2585, -1938, -1453, -1129, -806, -482, -159, 164, 487, 811, 1296, 1943, 3237,
};

static uint64_t bbox_head_multi_level_cls_0_conv2_weight[1 * 9] =
{ // torch.Size([1, 3, 3, 1])
0xd, 0xf, 0xd, 0xd, 0xf, 0xd, 0xd, 0xe, 0xc, 
};

static int bbox_head_multi_level_cls_0_quant2_threshold[1 * 14] =
{ // torch.Size([1, 14])
-9418, -6033, -4341, -3072, -2226, -1379, -533, 312, 1158, 2004, 2851, 4120, 5812, 9197,
};

static uint64_t bbox_head_multi_level_cls_1_conv1_weight[1 * 1*4] =
{ // torch.Size([1, 1, 1, 64])
0x5f3d5d4c3d17deed,0xee25b63dfc65ce3e,0x6ee5ee69c4ddec5b,0xdce4b55d4dcedb56, 
};

static int bbox_head_multi_level_cls_1_quant1_threshold[1 * 14] =
{ // torch.Size([1, 14])
-4132, -2675, -1946, -1400, -1036, -671, -307, 56, 420, 784, 1149, 1695, 2423, 3880,
};

static uint64_t bbox_head_multi_level_cls_1_conv2_weight[1 * 9] =
{ // torch.Size([1, 3, 3, 1])
0xc, 0xe, 0xd, 0xb, 0xf, 0xd, 0xd, 0xf, 0xd, 
};

static int bbox_head_multi_level_cls_1_quant2_threshold[1 * 14] =
{ // torch.Size([1, 14])
-8158, -5205, -3728, -2621, -1882, -1144, -406, 332, 1070, 1809, 2547, 3654, 5131, 8085,
};

static uint64_t bbox_head_multi_level_cls_2_conv1_weight[1 * 1*4] =
{ // torch.Size([1, 1, 1, 64])
0x22339bb22333ae33,0x2cb30fdbc3a92e93,0x343a32d2d29251c1,0x129143a139232a4c, 
};

static int bbox_head_multi_level_cls_2_quant1_threshold[1 * 14] =
{ // torch.Size([1, 14])
-879, -574, -421, -307, -231, -155, -78, -2, 73, 149, 226, 340, 493, 798,
};

static uint64_t bbox_head_multi_level_cls_2_conv2_weight[1 * 9] =
{ // torch.Size([1, 3, 3, 1])
0x5, 0x6, 0x6, 0x7, 0x7, 0x7, 0x6, 0x6, 0x7, 
};

static int bbox_head_multi_level_cls_2_quant2_threshold[1 * 14] =
{ // torch.Size([1, 14])
-13887, -8865, -6354, -4470, -3215, -1959, -703, 551, 1807, 3062, 4318, 6201, 8713, 13735,
};

static uint64_t bbox_head_multi_level_bbox_0_conv1_weight[4 * 1*4] =
{ // torch.Size([4, 1, 1, 64])
0x4e45d3b5c0dddaa4,0xa5b93235143aaacd,0xd5ddbed633ca49bb,0xca4540bda3d45db4, 
0xbcca422d53124d45,0x3c4c3ac3242ace4c,0x59543c01545d3dcb,0xd5b55ab1a19bd092, 
0xed4bbd34cad3bbeb,0x24bece222422eab0,0x3955d535b3ca4ace,0x313bbb43be45ada9, 
0xee4abb25e1a4bceb,0x44ce4fcb3522c940,0x5154c93244cb41cd,0x5443dc50bf24b221, 
};

static int bbox_head_multi_level_bbox_0_quant1_threshold[4 * 14] =
{ // torch.Size([4, 14])
-1319, -866, -639, -469, -356, -242, -129, -15, 97, 210, 324, 494, 721, 1174,
-1350, -959, -764, -617, -520, -422, -324, -226, -129, -31, 66, 212, 408, 798,
-1907, -1335, -1050, -836, -693, -550, -407, -265, -122, 20, 163, 377, 662, 1233,
-2073, -1415, -1086, -840, -675, -511, -346, -182, -17, 146, 311, 558, 886, 1544,
};

static uint64_t bbox_head_multi_level_bbox_0_conv2_weight[4 * 9] =
{ // torch.Size([4, 3, 3, 1])
0xa, 0x7, 0x0, 0x2, 0x6, 0x3, 0x3, 0x4, 0x1, 
0xd, 0xf, 0xd, 0xa, 0xb, 0xa, 0x0, 0x2, 0x2, 
0x3, 0x5, 0x4, 0x3, 0x5, 0x3, 0x2, 0x4, 0x3, 
0x4, 0x4, 0x4, 0x3, 0x4, 0x4, 0x2, 0x4, 0x3, 
};

static int bbox_head_multi_level_bbox_0_quant2_threshold[4 * 14] =
{ // torch.Size([4, 14])
-770, -357, -151, 2, 106, 209, 312, 415, 518, 621, 724, 879, 1085, 1497,
-570, -269, -119, -6, 69, 144, 219, 295, 370, 445, 521, 634, 784, 1085,
-628, -430, -331, -257, -207, -158, -108, -59, -9, 39, 89, 163, 262, 460,
-841, -625, -517, -436, -382, -328, -274, -220, -166, -112, -58, 22, 130, 346,
};

static uint64_t bbox_head_multi_level_bbox_1_conv1_weight[4 * 1*4] =
{ // torch.Size([4, 1, 1, 64])
0x0324d94dd44b54dc,0xb3abb902a23ca143,0xac633b4d32db5514,0xc0cce34a6ba4c569, 
0x1054ac31bc3244d5,0xc455ca632d3c923b,0x2cc3432460c4acdd,0xad3d1a2cab532b01, 
0xeb3c0ab43303bd53,0x4bbd5e33c4e3b9b9,0xe45e0aba4bd4c41c,0x3bd34eda432934de, 
0xf3dd342b242b0a55,0x53cb1e55addcca3a,0xe42e3ccc31a4b24c,0xcbb3addd4341230d, 
};

static int bbox_head_multi_level_bbox_1_quant1_threshold[4 * 14] =
{ // torch.Size([4, 14])
-851, -522, -358, -234, -152, -70, 11, 94, 176, 258, 340, 464, 628, 957,
-658, -397, -267, -169, -104, -39, 25, 90, 155, 220, 285, 383, 513, 774,
-1601, -1066, -799, -599, -465, -332, -198, -65, 68, 201, 335, 535, 802, 1336,
-1666, -1121, -849, -644, -508, -372, -236, -99, 36, 172, 308, 512, 785, 1330,
};

static uint64_t bbox_head_multi_level_bbox_1_conv2_weight[4 * 9] =
{ // torch.Size([4, 3, 3, 1])
0xc, 0xd, 0xc, 0x4, 0xf, 0xc, 0x3, 0xe, 0xc, 
0x1, 0x4, 0xb, 0xe, 0xf, 0xd, 0xc, 0xc, 0xc, 
0x4, 0x5, 0x3, 0x4, 0x5, 0x4, 0x3, 0x5, 0x4, 
0x4, 0x5, 0x3, 0x5, 0x6, 0x4, 0x3, 0x4, 0x3, 
};

static int bbox_head_multi_level_bbox_1_quant2_threshold[4 * 14] =
{ // torch.Size([4, 14])
-1376, -754, -443, -209, -54, 101, 256, 412, 567, 723, 878, 1112, 1423, 2045,
-1254, -670, -378, -159, -13, 132, 279, 425, 571, 717, 863, 1082, 1374, 1958,
-1076, -734, -562, -434, -348, -262, -177, -91, -5, 79, 165, 293, 465, 807,
-1418, -1009, -805, -652, -550, -448, -346, -244, -142, -40, 62, 215, 419, 827,
};

static uint64_t bbox_head_multi_level_bbox_2_conv1_weight[4 * 1*4] =
{ // torch.Size([4, 1, 1, 64])
0x0044bc3ecde06dbc,0x3c654dacdcabfde4,0xd6a5a6b65c5344c4,0x71c53153bdd64ec5, 
0x26cc145e693b44ed,0x251b23455654b44c,0x5222d435c5d63e46,0x36de04cbdd5d62b4, 
0x154bbe5c42b4e4ce,0x55566553cd3474d4,0x5d55ce3e55c10b4b,0xed6c145f44d5af36, 
0x4ecd46d5bc4a7c66,0xdd4d2cdbc6351c3c,0xdcddd395de159ec3,0x5ee63db5dd6ce5ac, 
};

static int bbox_head_multi_level_bbox_2_quant1_threshold[4 * 14] =
{ // torch.Size([4, 14])
-1304, -821, -580, -399, -278, -157, -36, 83, 204, 325, 446, 627, 868, 1351,
-1105, -645, -415, -242, -127, -12, 102, 217, 331, 446, 561, 734, 964, 1424,
-1632, -1020, -713, -484, -331, -177, -24, 128, 281, 434, 587, 817, 1123, 1736,
-1626, -1071, -793, -585, -447, -308, -169, -30, 107, 246, 385, 593, 870, 1425,
};

static uint64_t bbox_head_multi_level_bbox_2_conv2_weight[4 * 9] =
{ // torch.Size([4, 3, 3, 1])
0xd, 0xe, 0xd, 0xd, 0xf, 0xe, 0xd, 0xe, 0xd, 
0x5, 0x5, 0x5, 0x6, 0x7, 0x7, 0x5, 0x5, 0x5, 
0xd, 0xd, 0xd, 0xd, 0xd, 0xd, 0xb, 0xd, 0xd, 
0x4, 0x5, 0x5, 0x5, 0x5, 0x5, 0x4, 0x5, 0x5, 
};

static int bbox_head_multi_level_bbox_2_quant2_threshold[4 * 14] =
{ // torch.Size([4, 14])
-1112, -535, -246, -30, 113, 258, 402, 546, 691, 835, 979, 1196, 1484, 2061,
-1136, -615, -354, -159, -28, 101, 231, 361, 492, 622, 752, 947, 1208, 1729,
-2060, -1402, -1073, -826, -661, -497, -332, -168, -3, 160, 325, 572, 901, 1559,
-2302, -1641, -1311, -1063, -898, -733, -568, -403, -238, -73, 92, 339, 670, 1330,
};

static uint64_t bbox_head_multi_level_obj_0_conv1_weight[1 * 1*4] =
{ // torch.Size([1, 1, 1, 64])
0x4cfc55d23e2b3d44,0x6c42006be6eecb4d,0xb24153c4aeb4d962,0xa5e53dec6c3ecc65, 
};

static int bbox_head_multi_level_obj_0_quant1_threshold[1 * 14] =
{ // torch.Size([1, 14])
-1898, -1152, -779, -499, -312, -126, 60, 247, 433, 620, 807, 1087, 1460, 2206,
};

static uint64_t bbox_head_multi_level_obj_0_conv2_weight[1 * 9] =
{ // torch.Size([1, 3, 3, 1])
0xb, 0xc, 0x9, 0xb, 0xf, 0xb, 0xb, 0xb, 0xa, 
};

static int bbox_head_multi_level_obj_0_quant2_threshold[1 * 14] =
{ // torch.Size([1, 14])
-2266, -1212, -684, -289, -26, 237, 501, 764, 1028, 1291, 1555, 1950, 2477, 3532,
};

static uint64_t bbox_head_multi_level_obj_1_conv1_weight[1 * 1*4] =
{ // torch.Size([1, 1, 1, 64])
0xc64c665646bed545,0xefdbd40de3ce6ffe,0xce445fd3ae2f42a4,0x625fcdc4cfc6edb9, 
};

static int bbox_head_multi_level_obj_1_quant1_threshold[1 * 14] =
{ // torch.Size([1, 14])
-1903, -1253, -927, -683, -521, -358, -196, -33, 129, 291, 454, 698, 1023, 1674,
};

static uint64_t bbox_head_multi_level_obj_1_conv2_weight[1 * 9] =
{ // torch.Size([1, 3, 3, 1])
0x4, 0x4, 0x9, 0x2, 0x7, 0x1, 0xa, 0xa, 0xc, 
};

static int bbox_head_multi_level_obj_1_quant2_threshold[1 * 14] =
{ // torch.Size([1, 14])
-2912, -2005, -1552, -1212, -985, -758, -532, -305, -78, 147, 374, 714, 1167, 2074,
};

static uint64_t bbox_head_multi_level_obj_2_conv1_weight[1 * 1*4] =
{ // torch.Size([1, 1, 1, 64])
0x74565db5deee35e5,0xcccd49cee624a45d,0xb54b6d54430bebed,0xc535765adbcccc63, 
};

static int bbox_head_multi_level_obj_2_quant1_threshold[1 * 14] =
{ // torch.Size([1, 14])
-757, -485, -349, -248, -180, -112, -44, 23, 91, 159, 227, 328, 464, 736,
};

static uint64_t bbox_head_multi_level_obj_2_conv2_weight[1 * 9] =
{ // torch.Size([1, 3, 3, 1])
0x4, 0x5, 0x3, 0x4, 0x7, 0x4, 0x2, 0x3, 0x4, 
};

static int bbox_head_multi_level_obj_2_quant2_threshold[1 * 14] =
{ // torch.Size([1, 14])
-4661, -3114, -2341, -1761, -1374, -988, -601, -214, 171, 558, 945, 1525, 2298, 3845,
};

static uint64_t bbox_head_multi_level_kps_0_conv1_weight[10 * 1*4] =
{ // torch.Size([10, 1, 1, 64])
0xd40d4b4a235e4b21,0x240bdb3e2394cae4,0x4e54b453c3391ac1,0x549ddb359b6bda43, 
0xcdcc4a3b40a40c44,0x334c5b3b221acf2b,0x2b5db433634e0dcb,0xa63559441c0bc332, 
0x354c420d406d5242,0xcc33623eccb93264,0x4ec11cacb130c023,0x3bbdb3a6946bc226, 
0x4454c2c0c93b35cc,0xbbc4c391aa3246c3,0xc3d43c9becd61544,0x3ebdd2bc249b41ba, 
0xc21a429d316e4941,0xb431599faa13b9e4,0x0e3bbd45b40a99a2,0x52cdc216b47bc336, 
0xbb3c433d539aac45,0x9c4b31320c9bbf4b,0xbb5d14c2644ecdba,0xc63551c513caba02, 
0x4c24c3b4bcd5d1b3,0xa9a353b6bcbc436b,0xc6d23bdb9bb2a14b,0xda3553bd03eb4acb, 
0x4349439e532d4b45,0xbd4313321b3aaebb,0xca4c3bc0545ebd39,0xd53560c4a4cbbbac, 
0x9da2ca35c3e3dbc4,0x44ccda3643922adb,0xb63324c41ac049bb,0xb4353b4eace4413e, 
0xcbc1cba6dbb5b3cd,0x15cb2cbb93a326a3,0x3ac2c242dcd645a3,0x5dbce94c2c434323, 
};

static int bbox_head_multi_level_kps_0_quant1_threshold[10 * 14] =
{ // torch.Size([10, 14])
-1637, -1044, -748, -526, -378, -230, -81, 66, 214, 362, 510, 732, 1028, 1621,
-1597, -1070, -806, -608, -476, -344, -212, -80, 51, 183, 315, 513, 777, 1305,
-1512, -922, -628, -406, -259, -112, 35, 182, 330, 477, 624, 845, 1140, 1730,
-1405, -827, -539, -322, -177, -33, 110, 255, 399, 544, 688, 905, 1194, 1771,
-1632, -1040, -744, -522, -374, -226, -78, 70, 218, 366, 514, 736, 1032, 1624,
-1864, -1256, -951, -723, -571, -419, -267, -115, 37, 189, 341, 569, 873, 1482,
-1532, -986, -713, -508, -372, -235, -99, 37, 173, 310, 446, 651, 924, 1470,
-1844, -1223, -913, -680, -525, -370, -215, -60, 94, 249, 405, 637, 947, 1568,
-1813, -1157, -829, -583, -419, -255, -91, 72, 236, 400, 564, 810, 1138, 1794,
-1687, -1024, -693, -444, -278, -113, 52, 218, 383, 549, 715, 963, 1295, 1958,
};

static uint64_t bbox_head_multi_level_kps_0_conv2_weight[10 * 9] =
{ // torch.Size([10, 3, 3, 1])
0xa, 0xf, 0xb, 0xa, 0xe, 0xb, 0x9, 0xc, 0xa, 
0xd, 0xf, 0xd, 0xb, 0xb, 0xb, 0x9, 0x1, 0x2, 
0xb, 0xf, 0xa, 0xa, 0xe, 0xb, 0xb, 0xd, 0xb, 
0x5, 0x7, 0x5, 0x3, 0x3, 0x3, 0x2, 0x9, 0x1, 
0xb, 0xe, 0xb, 0xb, 0xe, 0xb, 0xb, 0xd, 0xb, 
0xd, 0xf, 0xd, 0xb, 0xb, 0xb, 0xa, 0x3, 0x0, 
0x3, 0x6, 0x3, 0x1, 0x6, 0x3, 0x3, 0x5, 0x3, 
0xd, 0xf, 0xd, 0xb, 0xb, 0xb, 0x9, 0x3, 0x0, 
0x3, 0x6, 0x2, 0x3, 0x6, 0x3, 0x3, 0x5, 0x3, 
0x5, 0x7, 0x5, 0x3, 0x3, 0x3, 0x1, 0xb, 0x1, 
};

static int bbox_head_multi_level_kps_0_quant2_threshold[10 * 14] =
{ // torch.Size([10, 14])
-1953, -1122, -706, -395, -187, 19, 227, 435, 643, 850, 1058, 1369, 1785, 2616,
-2169, -1277, -832, -497, -275, -52, 170, 393, 616, 839, 1061, 1396, 1841, 2733,
-3191, -2157, -1640, -1252, -993, -735, -476, -218, 40, 298, 557, 944, 1461, 2495,
-2300, -1355, -883, -529, -293, -57, 178, 415, 651, 887, 1123, 1477, 1949, 2894,
-2096, -1321, -934, -644, -450, -256, -63, 130, 323, 517, 711, 1001, 1388, 2163,
-2654, -1730, -1268, -922, -691, -460, -229, 1, 232, 463, 694, 1041, 1503, 2427,
-1906, -1121, -728, -433, -237, -40, 155, 351, 548, 744, 941, 1235, 1628, 2414,
-2817, -1950, -1517, -1192, -975, -758, -542, -325, -108, 107, 324, 649, 1082, 1949,
-2294, -1533, -1153, -868, -678, -488, -298, -108, 82, 272, 462, 747, 1127, 1887,
-2835, -1965, -1530, -1203, -986, -768, -550, -333, -115, 101, 319, 645, 1081, 1951,
};

static uint64_t bbox_head_multi_level_kps_1_conv1_weight[10 * 1*4] =
{ // torch.Size([10, 1, 1, 64])
0x2c2a4b6c6cd392a0,0xbc33c3cc39222ab9,0x3aa9c9a6b952ce22,0xb23433b29ca33cb2, 
0x20acb0ab23b4b91d,0x2aade3cc1c243122,0x24b0d93b423b3255,0x1633a323baebba29, 
0x33a3625aeb6399dc,0x0a92c1abbc3ba232,0x0cb3bb4c42cb54a4,0xa323d24313bcb359, 
0x3b3b9ac323b1b2aa,0x2bade2cc2c2339b2,0x33a0e93c30403156,0xa694b3a3bbf99230, 
0x020362d4f4739bc2,0x32b03b32bba132b0,0xb9c3aaad22cb4613,0x193c3339d3bcb541, 
0x094db3c234c39b43,0xb9cdd93b9cb3333a,0x24a0e11d423a3464,0xa60b4aa2a2e9a339, 
0x0333c2e5e55c43b4,0x43b94b05a213313a,0xb33241aeb2c346ab,0x1bbbab292320a53a, 
0xc9dd443b34bbcc59,0x30dddc32bbc333b2,0x04aac32d213b1465,0xb5bb3ab933d0b29a, 
0xb1cce3db6be1cb59,0x341b412113bab0b1,0xa32b44269943cdbc,0x4b2b51aaba344cd9, 
0xcbcd441034bbcb53,0x2bdddb33bbc432c2,0x042bd2aeb14a9465,0xc5bb2ab933d3b30a, 
};

static int bbox_head_multi_level_kps_1_quant1_threshold[10 * 14] =
{ // torch.Size([10, 14])
-1210, -783, -570, -410, -304, -197, -91, 15, 121, 228, 335, 494, 708, 1134,
-1144, -746, -547, -398, -299, -200, -100, -1, 97, 197, 296, 445, 644, 1041,
-1270, -812, -583, -412, -297, -183, -68, 45, 160, 274, 389, 561, 790, 1248,
-1419, -933, -690, -508, -386, -264, -143, -21, 99, 221, 342, 525, 768, 1254,
-1381, -882, -632, -445, -321, -196, -71, 53, 178, 302, 427, 614, 864, 1363,
-1108, -711, -512, -363, -264, -164, -65, 34, 133, 232, 332, 481, 679, 1077,
-1031, -628, -426, -274, -173, -72, 28, 129, 230, 331, 432, 583, 785, 1189,
-1236, -810, -597, -437, -330, -223, -117, -10, 95, 202, 309, 469, 682, 1108,
-1386, -868, -609, -415, -285, -156, -26, 103, 232, 362, 491, 686, 945, 1463,
-1291, -847, -625, -459, -348, -237, -126, -16, 94, 205, 316, 482, 704, 1148,
};

static uint64_t bbox_head_multi_level_kps_1_conv2_weight[10 * 9] =
{ // torch.Size([10, 3, 3, 1])
0x4, 0x6, 0x5, 0x2, 0x6, 0x5, 0x1, 0x6, 0x5, 
0x4, 0x0, 0x3, 0x6, 0x7, 0x5, 0x5, 0x5, 0x5, 
0xc, 0xe, 0xd, 0xc, 0xf, 0xc, 0xb, 0xe, 0xc, 
0x3, 0x1, 0x4, 0x6, 0x7, 0x6, 0x5, 0x5, 0x6, 
0xd, 0xe, 0xc, 0xc, 0xf, 0xd, 0xc, 0xe, 0xd, 
0x3, 0x2, 0x4, 0x6, 0x7, 0x6, 0x5, 0x5, 0x5, 
0xa, 0xd, 0xd, 0x9, 0xe, 0xd, 0xb, 0xf, 0xd, 
0x4, 0x0, 0x4, 0x6, 0x7, 0x6, 0x4, 0x5, 0x6, 
0x4, 0x6, 0x3, 0x4, 0x7, 0x5, 0x4, 0x7, 0x4, 
0x4, 0x0, 0x4, 0x6, 0x7, 0x6, 0x4, 0x5, 0x5, 
};

static int bbox_head_multi_level_kps_1_quant2_threshold[10 * 14] =
{ // torch.Size([10, 14])
-2510, -1481, -966, -581, -323, -66, 190, 448, 705, 962, 1219, 1605, 2120, 3149,
-3335, -1976, -1297, -787, -447, -108, 231, 571, 911, 1250, 1590, 2100, 2779, 4138,
-3472, -2323, -1749, -1318, -1031, -744, -457, -170, 116, 403, 691, 1121, 1696, 2844,
-3784, -2240, -1468, -889, -503, -117, 268, 654, 1040, 1426, 1812, 2391, 3164, 4708,
-3335, -2103, -1487, -1025, -717, -409, -101, 206, 514, 822, 1130, 1592, 2208, 3440,
-4279, -2747, -1981, -1406, -1023, -640, -257, 125, 508, 891, 1274, 1848, 2614, 4146,
-3480, -2081, -1382, -857, -507, -158, 191, 541, 890, 1240, 1590, 2114, 2813, 4212,
-3875, -2635, -2015, -1550, -1240, -930, -620, -310, 0, 309, 619, 1084, 1704, 2944,
-4126, -2731, -2034, -1512, -1163, -814, -466, -117, 230, 579, 927, 1450, 2147, 3541,
-3813, -2587, -1974, -1514, -1207, -901, -594, -288, 18, 324, 631, 1091, 1704, 2930,
};

static uint64_t bbox_head_multi_level_kps_2_conv1_weight[10 * 1*4] =
{ // torch.Size([10, 1, 1, 64])
0x03cc6d949323b29e,0xa51ba3344c4c43a9,0x54bcae4e33da3b3a,0x3c3d904d264cbc11, 
0xa4c5cc3dc19994dc,0xbc239134bc62049b,0x4003c21b34c61b44,0xcdbca3bfcb4c4ca5, 
0x3154d43cba9bc4be,0x315444440c06a432,0xb925b4395c723144,0xbc2a92bdbde43db5, 
0x1cb0a1b210493b54,0x3b0a49bc34e32b0b,0xd0314ababc5d03c2,0x15462cb744a4a33c, 
0xa2dc6db192b4532c,0x9aabb2ab4a3e10ca,0x35ac9d2dc4fabac3,0x59001a43066bac33, 
0xa24b2b39a9aad34d,0x343133334bec0449,0xb4235c3d9c6eb434,0x423a2bb655c4c29a, 
0x91d45e2cb432239e,0xb12a33344cb3423c,0x332c9e3e33d32b44,0xac41bbbc366c1b34, 
0x914b9c24a9a9f53e,0x24a1b4554dbda5b4,0x13a34a4c3b4ec54b,0x034c204554d4c22b, 
0xbbd33dccb4434c16,0xadcc9ccca5dd4ccc,0x990c3cbce5e1cac3,0x231409c5367c053b, 
0x111b45c441226d96,0x9329bccdc5540d4b,0x3aacd1c5a4d63ccb,0x1acba22ddd4c2aa0, 
};

static int bbox_head_multi_level_kps_2_quant1_threshold[10 * 14] =
{ // torch.Size([10, 14])
-969, -632, -464, -337, -253, -169, -85, 0, 83, 167, 251, 378, 546, 883,
-1039, -669, -484, -345, -253, -160, -68, 24, 116, 209, 301, 440, 625, 994,
-978, -608, -424, -285, -192, -100, -7, 84, 176, 269, 361, 500, 685, 1055,
-857, -532, -369, -247, -166, -85, -3, 77, 158, 240, 321, 443, 606, 931,
-838, -539, -390, -279, -204, -129, -55, 19, 93, 168, 242, 354, 503, 801,
-929, -584, -411, -281, -195, -109, -22, 63, 149, 236, 322, 452, 624, 970,
-1019, -663, -485, -352, -263, -174, -85, 2, 91, 180, 269, 402, 580, 936,
-968, -612, -434, -301, -212, -123, -34, 54, 143, 232, 321, 454, 632, 988,
-1130, -724, -521, -368, -267, -165, -63, 37, 139, 240, 342, 494, 698, 1104,
-941, -598, -426, -298, -212, -126, -40, 45, 130, 216, 302, 431, 602, 946,
};

static uint64_t bbox_head_multi_level_kps_2_conv2_weight[10 * 9] =
{ // torch.Size([10, 3, 3, 1])
0x6, 0x7, 0x6, 0x5, 0x7, 0x6, 0x5, 0x6, 0x6, 
0x5, 0x6, 0x5, 0x7, 0x6, 0x6, 0x6, 0x5, 0x5, 
0xd, 0xf, 0xd, 0xe, 0xe, 0xd, 0xd, 0xe, 0xd, 
0xe, 0xe, 0xe, 0xe, 0xe, 0xe, 0xd, 0xd, 0xe, 
0x6, 0x6, 0x5, 0x5, 0x6, 0x5, 0x5, 0x6, 0x6, 
0xd, 0xe, 0xd, 0xf, 0xf, 0xf, 0xd, 0xd, 0xd, 
0x3, 0x6, 0x5, 0x5, 0x6, 0x6, 0x5, 0x7, 0x6, 
0xd, 0xd, 0xd, 0xe, 0xf, 0xe, 0xe, 0xf, 0xe, 
0x5, 0x6, 0x5, 0x5, 0x6, 0x5, 0x6, 0x7, 0x6, 
0x5, 0x5, 0x5, 0x6, 0x6, 0x6, 0x5, 0x6, 0x6, 
};

static int bbox_head_multi_level_kps_2_quant2_threshold[10 * 14] =
{ // torch.Size([10, 14])
-4862, -2862, -1862, -1112, -613, -113, 386, 886, 1386, 1886, 2386, 3136, 4136, 6135,
-4443, -2655, -1761, -1091, -644, -197, 249, 696, 1143, 1590, 2037, 2707, 3601, 5389,
-5189, -3456, -2589, -1939, -1505, -1072, -638, -205, 227, 661, 1094, 1745, 2611, 4345,
-4136, -2472, -1640, -1016, -600, -183, 232, 648, 1064, 1480, 1896, 2520, 3352, 5016,
-4728, -2979, -2105, -1449, -1012, -575, -137, 299, 736, 1173, 1611, 2266, 3141, 4890,
-6803, -4397, -3194, -2292, -1690, -1089, -488, 113, 714, 1316, 1917, 2819, 4022, 6428,
-4352, -2594, -1715, -1056, -617, -177, 261, 700, 1140, 1579, 2019, 2678, 3557, 5314,
-5179, -3508, -2672, -2045, -1627, -1210, -792, -374, 43, 461, 879, 1505, 2341, 4012,
-5421, -3591, -2676, -1990, -1532, -1075, -617, -160, 297, 754, 1212, 1898, 2813, 4643,
-4675, -3160, -2403, -1834, -1456, -1077, -698, -319, 59, 437, 816, 1384, 2142, 3657,
};
