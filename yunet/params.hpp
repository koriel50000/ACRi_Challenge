static uint64_t backbone_model0_conv1_weight[16 * 9] =
{ // torch.Size([16, 3, 3, 3])
0x04c, 0xb5c, 0x04d, 0x05c, 0xc5c, 0xc5c, 0xb4d, 0xc5c, 0xb59, 
0x44a, 0xb4b, 0x38c, 0xc2b, 0xd2a, 0x942, 0xd33, 0xd22, 0xb33, 
0xc23, 0xc34, 0xc14, 0xc34, 0xd44, 0xd44, 0xb34, 0xc44, 0xc34, 
0x20a, 0x332, 0x932, 0x439, 0xcbb, 0xecc, 0x431, 0x232, 0xb08, 
0x132, 0x8ba, 0xcdc, 0x444, 0x330, 0xccc, 0x343, 0x133, 0x9ba, 
0x3b3, 0x3ca, 0x3b0, 0x4b1, 0x4b2, 0x4ba, 0x4b0, 0x3b2, 0x3b2, 
0x233, 0x234, 0x343, 0xb2a, 0xb0a, 0xb29, 0xbaa, 0xbab, 0xc8a, 
0x1b4, 0x9d3, 0x2da, 0x4c4, 0x0d3, 0xbd0, 0xac4, 0x4c4, 0x4c4, 
0xb22, 0x1a3, 0x3a0, 0x300, 0x3bb, 0x3cc, 0x3aa, 0x4cc, 0x3cd, 
0x2b8, 0x433, 0x433, 0x223, 0x0a2, 0x223, 0x922, 0xddc, 0xdcc, 
0xbbb, 0xddc, 0xccc, 0x330, 0xb8a, 0x822, 0x433, 0x444, 0x443, 
0x401, 0x444, 0x443, 0xa80, 0x033, 0xa32, 0x221, 0xdcc, 0xcbc, 
0xccc, 0xacb, 0x343, 0xccd, 0xbbb, 0x444, 0x282, 0x324, 0x343, 
0x233, 0x223, 0x323, 0xcdd, 0xbcb, 0x343, 0xbcc, 0xa9b, 0x423, 
0x343, 0x445, 0x345, 0x319, 0x03b, 0x311, 0xbdc, 0xcec, 0x8cc, 
0x344, 0x444, 0x333, 0x444, 0x922, 0xacc, 0x002, 0xccc, 0xddd, 
};

static int backbone_model0_relu1_threshold[16 * 7] =
{ // torch.Size([16, 7])
-126, 106, 339, 572, 922, 1389, 2322,
-860, -640, -419, -199, 130, 571, 1452,
-626, -189, 247, 685, 1341, 2215, 3965,
-901, -702, -502, -302, -3, 395, 1194,
-529, -356, -183, -10, 248, 593, 1284,
889, 1253, 1617, 1981, 2527, 3255, 4711,
234, 409, 585, 761, 1025, 1377, 2080,
-843, -573, -303, -33, 372, 912, 1992,
-1106, -767, -427, -87, 421, 1101, 2459,
-802, -593, -384, -174, 138, 557, 1394,
-662, -473, -284, -95, 188, 566, 1321,
-130, 169, 469, 770, 1220, 1820, 3021,
-597, -413, -229, -45, 230, 598, 1334,
-674, -501, -327, -154, 105, 452, 1146,
-496, -327, -159, 9, 262, 599, 1274,
-633, -462, -291, -120, 136, 478, 1162,
};

static uint64_t backbone_model0_conv2_conv1_weight[16 * 1] =
{ // torch.Size([16, 1, 1, 16])
0xa1b209c01451d1c3, 
0x8a3aaa86305a0dc0, 
0xb3433c32bbbcc030, 
0xbc84b4cb44332233, 
0xabba00bce0b93bb8, 
0xb898a8b5b34accc4, 
0x0300a9bc424acccd, 
0x33bb3b43bca340a2, 
0xbbc9b3c9422432a8, 
0x11b029bb22529555, 
0x43cc2c438ab3300a, 
0xcbcbc4b024143aba, 
0xb245b2bbb00bc121, 
0xb4454b49b09bb20a, 
0x43cc4a31933442b0, 
0x552c4b49c03bb3a2, 
};

static int backbone_model0_conv2_quant1_threshold[16 * 14] =
{ // torch.Size([16, 14])
-729, -504, -392, -308, -252, -196, -140, -84, -28, 28, 84, 168, 280, 504,
-676, -426, -301, -207, -144, -82, -19, 42, 105, 168, 230, 324, 449, 699,
-272, -173, -124, -87, -62, -37, -13, 11, 36, 60, 85, 122, 171, 270,
-522, -345, -256, -190, -145, -101, -57, -13, 31, 75, 119, 186, 274, 451,
-949, -729, -620, -537, -482, -427, -372, -318, -263, -208, -153, -71, 38, 258,
-580, -388, -292, -220, -172, -124, -76, -28, 19, 67, 115, 187, 284, 476,
-667, -475, -379, -308, -260, -212, -164, -116, -68, -20, 27, 99, 195, 386,
-342, -192, -117, -61, -23, 13, 51, 88, 126, 163, 201, 257, 332, 482,
-600, -419, -329, -261, -216, -171, -126, -81, -36, 9, 54, 121, 212, 392,
-355, -154, -53, 21, 71, 122, 172, 222, 273, 323, 373, 449, 549, 750,
-462, -270, -173, -101, -53, -5, 42, 91, 139, 187, 235, 307, 404, 596,
-575, -388, -295, -225, -178, -131, -84, -37, 8, 55, 102, 172, 266, 453,
-499, -324, -236, -171, -127, -83, -40, 3, 47, 90, 134, 200, 287, 462,
-494, -286, -182, -104, -52, 0, 51, 103, 155, 207, 259, 337, 441, 649,
-283, -153, -89, -40, -8, 24, 56, 88, 121, 153, 185, 234, 299, 428,
-566, -335, -220, -134, -77, -19, 37, 95, 152, 210, 267, 354, 469, 699,
};

static uint64_t backbone_model0_conv2_conv2_weight[16 * 9] =
{ // torch.Size([16, 3, 3, 1])
0x3, 0x2, 0x4, 0x2, 0xb, 0xc, 0x3, 0xc, 0xe, 
0x4, 0x4, 0x4, 0x4, 0xc, 0xc, 0x4, 0xc, 0xe, 
0xa, 0x5, 0x8, 0xc, 0x3, 0x5, 0xc, 0xc, 0x5, 
0x3, 0x4, 0x3, 0xb, 0xe, 0xe, 0x8, 0x0, 0x4, 
0x3, 0x9, 0x3, 0x2, 0xc, 0xc, 0x9, 0xc, 0xd, 
0xb, 0xc, 0xc, 0xb, 0x3, 0x4, 0x0, 0x5, 0x5, 
0xa, 0xb, 0xa, 0xa, 0x4, 0x4, 0x0, 0x5, 0x5, 
0x8, 0x2, 0x4, 0x3, 0x5, 0xd, 0x2, 0xd, 0xe, 
0x3, 0x4, 0x2, 0xb, 0x2, 0x5, 0xb, 0xe, 0xe, 
0x3, 0x1, 0x8, 0x3, 0xc, 0xd, 0x3, 0xd, 0xe, 
0xb, 0xc, 0xb, 0xb, 0xc, 0x4, 0xb, 0x5, 0x6, 
0x2, 0xb, 0x9, 0x4, 0x4, 0xd, 0x0, 0x6, 0x5, 
0x2, 0xb, 0xb, 0x4, 0xd, 0xb, 0x5, 0xd, 0x2, 
0x2, 0xc, 0xa, 0x3, 0x8, 0xe, 0x3, 0x4, 0xd, 
0x3, 0x0, 0xc, 0x4, 0xc, 0xc, 0x4, 0xe, 0x3, 
0x3, 0x3, 0x0, 0xc, 0xe, 0xd, 0xb, 0xa, 0xa, 
};

static int backbone_model0_conv2_relu2_threshold[16 * 7] =
{ // torch.Size([16, 7])
-210, -126, -42, 41, 167, 336, 672,
-123, -63, -3, 56, 146, 266, 506,
0, 108, 218, 327, 492, 711, 1150,
-70, 41, 153, 265, 433, 657, 1105,
-82, -27, 26, 81, 162, 271, 488,
-99, -42, 14, 71, 157, 271, 498,
-163, -89, -16, 57, 168, 316, 612,
54, 145, 236, 327, 464, 646, 1010,
15, 125, 235, 345, 510, 730, 1169,
-38, 76, 192, 307, 480, 711, 1173,
24, 103, 182, 260, 378, 536, 850,
17, 123, 228, 334, 493, 704, 1128,
90, 162, 233, 305, 413, 557, 844,
10, 80, 149, 218, 322, 461, 738,
2, 103, 205, 306, 457, 660, 1064,
-212, -102, 7, 117, 282, 501, 941,
};

static uint64_t backbone_model1_conv1_conv1_weight[16 * 1] =
{ // torch.Size([16, 1, 1, 16])
0xbd44349ac1aa3ba3, 
0xba01995cb13211da, 
0x6aab33a4b03a993a, 
0xc843ac0cd223e40a, 
0x0a9abba0a44c1c2d, 
0xc1c23b39c9b235b4, 
0xa9621c05c3329239, 
0x23a02342154939db, 
0x12320bba92dc9242, 
0x8929a0ab0448893d, 
0xb9b1a3b23bc33a85, 
0x2492a31e5020bc9a, 
0xb3b2e52a33390c31, 
0xa556b39b3990a4a9, 
0x081913a324c6905b, 
0x9a2a886b06c4a81b, 
};

static int backbone_model1_conv1_quant1_threshold[16 * 14] =
{ // torch.Size([16, 14])
-502, -331, -245, -181, -138, -96, -53, -10, 32, 74, 117, 181, 267, 437,
-715, -493, -382, -298, -243, -187, -132, -76, -21, 34, 89, 172, 283, 505,
-415, -203, -97, -17, 35, 89, 142, 195, 248, 301, 354, 434, 540, 753,
-1079, -764, -606, -488, -410, -331, -252, -174, -95, -16, 61, 179, 337, 651,
-691, -481, -376, -297, -244, -192, -139, -87, -34, 17, 70, 149, 254, 464,
-436, -270, -187, -125, -83, -41, 0, 41, 82, 124, 165, 228, 311, 477,
-522, -258, -126, -27, 38, 104, 170, 236, 302, 368, 434, 534, 666, 930,
-485, -253, -136, -49, 8, 66, 124, 183, 241, 299, 357, 444, 561, 793,
-644, -439, -337, -260, -209, -158, -107, -56, -5, 45, 96, 173, 275, 479,
-587, -387, -287, -212, -162, -112, -62, -12, 37, 87, 137, 212, 312, 512,
-501, -289, -183, -103, -50, 2, 56, 109, 162, 215, 268, 348, 454, 667,
-550, -359, -264, -192, -144, -97, -49, -1, 45, 93, 141, 212, 308, 499,
-588, -385, -283, -207, -156, -105, -54, -4, 46, 97, 148, 224, 326, 529,
-601, -303, -154, -42, 32, 106, 181, 255, 330, 404, 479, 591, 740, 1038,
-363, -132, -16, 70, 128, 185, 243, 301, 359, 417, 474, 561, 677, 908,
-572, -293, -153, -48, 20, 90, 160, 230, 300, 370, 440, 544, 684, 963,
};

static uint64_t backbone_model1_conv1_conv2_weight[16 * 9] =
{ // torch.Size([16, 3, 3, 1])
0xa, 0x2, 0xa, 0x3, 0xd, 0xa, 0xb, 0xd, 0x4, 
0xb, 0x2, 0x1, 0x0, 0xe, 0x9, 0x0, 0xb, 0x3, 
0x1, 0x0, 0x1, 0x2, 0x2, 0x9, 0x3, 0xc, 0xe, 
0x0, 0xb, 0x0, 0x1, 0xc, 0x1, 0x2, 0xe, 0xc, 
0xb, 0x0, 0x3, 0xc, 0x3, 0x5, 0xc, 0xa, 0x1, 
0x2, 0x8, 0x2, 0x3, 0x0, 0xa, 0xa, 0x6, 0x0, 
0x0, 0x8, 0xa, 0xb, 0x3, 0x0, 0x9, 0x2, 0x6, 
0x3, 0x2, 0xb, 0xb, 0x6, 0xa, 0xa, 0x0, 0xa, 
0x3, 0x4, 0x4, 0x3, 0x9, 0xa, 0xa, 0xc, 0xc, 
0x3, 0x5, 0x3, 0x3, 0xb, 0x0, 0xb, 0xc, 0xb, 
0x0, 0x1, 0x2, 0xa, 0x5, 0x3, 0x0, 0xb, 0xc, 
0x2, 0x8, 0x1, 0xb, 0x5, 0x5, 0xa, 0x3, 0x0, 
0xa, 0x0, 0xa, 0x2, 0xc, 0xe, 0xa, 0xa, 0x9, 
0x0, 0x8, 0x9, 0x8, 0x3, 0x6, 0xa, 0x0, 0x3, 
0x9, 0x9, 0xa, 0xa, 0x4, 0x9, 0xa, 0x5, 0x3, 
0x2, 0x2, 0x2, 0x0, 0xb, 0x2, 0x2, 0xe, 0xb, 
};

static int backbone_model1_conv1_relu2_threshold[16 * 7] =
{ // torch.Size([16, 7])
-192, -123, -53, 15, 119, 258, 535,
-233, -141, -48, 43, 181, 366, 735,
-220, -140, -61, 18, 138, 298, 618,
-191, -107, -23, 60, 187, 355, 691,
-99, -49, 1, 51, 127, 228, 431,
-240, -160, -79, 0, 121, 282, 604,
-138, -67, 3, 74, 181, 323, 608,
-157, -90, -24, 42, 143, 277, 544,
51, 73, 95, 117, 151, 195, 284,
-46, -10, 26, 63, 118, 191, 337,
-39, -8, 23, 54, 101, 164, 290,
-254, -179, -104, -29, 82, 232, 532,
-294, -199, -104, -10, 131, 320, 698,
-157, -77, 2, 82, 202, 363, 683,
-111, -62, -13, 35, 109, 207, 403,
-201, -120, -39, 41, 162, 323, 646,
};

static uint64_t backbone_model1_conv2_conv1_weight[64 * 1] =
{ // torch.Size([64, 1, 1, 16])
0x20212592cb9b2c82, 
0xbbb0bb8339128bdb, 
0x00e1b0bb3bb32232, 
0x9a4c33bcbb20cbb9, 
0x0a8c439a8ddb49ab, 
0x0a309331aacbcd13, 
0x140031934a1000d8, 
0x02180249032a5caa, 
0x45332c3194203b4a, 
0xc0b4b39c3c3c4bcb, 
0x5c899199d112abaa, 
0x9034b3b3b531c443, 
0x303a13abdb990258, 
0x4339bd483340141c, 
0x20955432b38b4b42, 
0x2143411088dcac02, 
0x5c31912132a2b9b8, 
0xa31c40244bcb43a3, 
0xba0143c4b2931da4, 
0x814c3cb201bb0224, 
0xc449b9b34b3019c8, 
0xbd334ccc3a3094c1, 
0x333115b3db32424b, 
0xcb8aac3b5334b2b3, 
0xc09349bb32a3ebb2, 
0xbbb430c0b3dcca3b, 
0xb1388a4b649a22b0, 
0xbb2cb454988c333c, 
0xbbc0dca93449b4bc, 
0x3014a223001d321d, 
0x314029a3a3559136, 
0x53cb40b3c980d431, 
0x216b43babaa0b223, 
0x9890a02b933a12cd, 
0xa9c843ca0db2cabb, 
0x33db3942c31cbbb1, 
0x321c214a2b452834, 
0x919cdb898a1b21ba, 
0xcb4332bb393caabc, 
0x455aab3034443a4b, 
0x10bc304b3202332b, 
0xab0bda29aaba9e28, 
0x2c94c04124935c31, 
0x30b3bb2cb244e2b2, 
0x54d2b23109b33843, 
0x331b1023b22ae1aa, 
0x135c1d1b130bb8a3, 
0xcba232cb33dbcda4, 
0xcca9b93b55c22222, 
0xb504c3abc33bbbb3, 
0x29445bd03a0b32a1, 
0x22888da352aab2d3, 
0x303d43032bc12532, 
0xcdb222ba2b43aac3, 
0xdd33a43b43004d23, 
0x9a2a222baacc021d, 
0xa020221421b35c44, 
0x8226bbbba50b0b22, 
0x9abcc254bb541b13, 
0x54314b4415cac343, 
0x24a2a8343431c432, 
0x38d51ac434223a33, 
0x823cbc423c1d248c, 
0x02c24ab32cd04b13, 
};

static int backbone_model1_conv2_quant1_threshold[64 * 14] =
{ // torch.Size([64, 14])
-656, -414, -293, -202, -142, -81, -21, 39, 99, 160, 221, 311, 432, 674,
-923, -675, -550, -457, -395, -333, -271, -209, -147, -85, -22, 70, 194, 442,
-1178, -804, -617, -477, -383, -290, -196, -103, -9, 83, 177, 317, 504, 878,
-671, -468, -366, -290, -239, -189, -138, -87, -36, 13, 64, 140, 242, 445,
-954, -684, -549, -448, -380, -313, -245, -178, -110, -43, 23, 125, 260, 529,
-741, -532, -427, -349, -296, -244, -192, -140, -87, -35, 16, 95, 199, 408,
-562, -344, -235, -153, -99, -44, 10, 64, 119, 173, 228, 309, 419, 637,
-590, -351, -232, -142, -82, -22, 36, 96, 156, 216, 276, 365, 485, 724,
-562, -276, -134, -26, 44, 115, 187, 258, 330, 401, 472, 580, 722, 1008,
-1063, -734, -569, -445, -363, -281, -198, -116, -33, 48, 130, 254, 419, 748,
-864, -575, -430, -322, -250, -178, -105, -33, 38, 110, 183, 291, 435, 724,
-505, -254, -129, -35, 26, 89, 152, 214, 277, 340, 402, 496, 621, 872,
-724, -446, -307, -202, -133, -63, 5, 75, 144, 214, 283, 387, 526, 804,
-1135, -747, -553, -407, -310, -213, -116, -19, 77, 174, 271, 417, 611, 999,
-388, -149, -29, 60, 120, 180, 240, 300, 360, 420, 480, 570, 689, 929,
-741, -497, -376, -284, -223, -162, -102, -41, 19, 80, 141, 232, 354, 598,
-533, -321, -215, -135, -82, -29, 24, 77, 130, 183, 236, 316, 422, 635,
-612, -381, -265, -178, -120, -63, -5, 52, 110, 168, 225, 312, 428, 659,
-646, -413, -297, -210, -152, -94, -35, 22, 80, 138, 196, 283, 400, 632,
-529, -327, -227, -151, -101, -51, 0, 49, 100, 150, 200, 276, 376, 578,
-780, -512, -378, -278, -211, -144, -77, -10, 56, 123, 190, 290, 424, 692,
-727, -459, -324, -224, -156, -89, -22, 44, 111, 179, 246, 346, 481, 750,
-723, -399, -237, -116, -35, 45, 126, 207, 288, 368, 449, 571, 732, 1056,
-882, -558, -397, -275, -194, -114, -33, 47, 128, 209, 290, 411, 573, 897,
-870, -572, -423, -312, -237, -163, -88, -14, 59, 134, 208, 320, 469, 767,
-913, -635, -496, -392, -322, -253, -183, -114, -45, 24, 93, 198, 337, 615,
-607, -352, -224, -129, -65, -1, 62, 126, 190, 253, 317, 413, 541, 796,
-667, -438, -324, -238, -181, -124, -66, -9, 47, 104, 161, 247, 362, 590,
-846, -582, -450, -351, -285, -219, -153, -87, -21, 44, 110, 209, 341, 605,
-843, -571, -435, -333, -265, -197, -129, -61, 6, 74, 142, 244, 380, 652,
-350, -90, 38, 136, 201, 265, 330, 395, 460, 525, 590, 687, 817, 1076,
-616, -340, -202, -98, -29, 39, 108, 176, 245, 314, 383, 487, 625, 901,
-636, -357, -218, -114, -44, 25, 94, 164, 234, 304, 373, 478, 617, 896,
-699, -486, -379, -299, -246, -192, -139, -85, -32, 20, 74, 154, 260, 474,
-805, -559, -437, -344, -283, -222, -160, -99, -38, 23, 84, 176, 299, 544,
-768, -522, -399, -307, -246, -184, -123, -61, 0, 60, 122, 214, 337, 582,
-506, -236, -101, 0, 67, 134, 202, 269, 336, 404, 471, 573, 708, 977,
-682, -510, -423, -359, -315, -272, -229, -186, -143, -99, -56, 8, 94, 267,
-718, -487, -371, -285, -227, -169, -112, -54, 3, 61, 118, 205, 320, 551,
-598, -269, -105, 17, 100, 182, 264, 346, 428, 510, 592, 716, 880, 1209,
-463, -274, -180, -109, -61, -14, 32, 79, 126, 174, 221, 292, 386, 575,
-1060, -804, -676, -580, -516, -452, -388, -324, -260, -196, -132, -35, 92, 348,
-842, -499, -328, -199, -114, -28, 57, 142, 228, 314, 399, 528, 699, 1042,
-811, -507, -355, -240, -164, -88, -12, 63, 139, 215, 291, 405, 558, 862,
-578, -309, -174, -73, -6, 60, 128, 195, 262, 330, 397, 498, 632, 902,
-1257, -849, -645, -492, -389, -287, -185, -83, 18, 120, 222, 375, 580, 988,
-740, -487, -360, -265, -202, -139, -75, -12, 50, 114, 177, 272, 399, 652,
-960, -683, -545, -441, -372, -303, -234, -165, -96, -27, 41, 145, 283, 560,
-1083, -671, -465, -310, -207, -104, -1, 101, 204, 307, 410, 565, 771, 1183,
-788, -498, -353, -244, -171, -99, -26, 45, 118, 191, 263, 372, 517, 807,
-716, -417, -268, -156, -81, -6, 67, 142, 217, 291, 366, 478, 627, 926,
-986, -660, -498, -376, -295, -213, -132, -51, 30, 111, 192, 314, 477, 802,
-584, -338, -215, -123, -61, 0, 61, 122, 184, 245, 307, 399, 522, 768,
-1051, -732, -572, -452, -372, -292, -212, -132, -52, 27, 107, 226, 386, 706,
-987, -629, -450, -316, -226, -136, -47, 42, 131, 221, 310, 445, 624, 982,
-735, -535, -435, -360, -310, -260, -210, -160, -110, -60, -10, 65, 165, 365,
-649, -386, -254, -155, -89, -23, 42, 107, 173, 239, 305, 404, 536, 799,
-754, -411, -240, -111, -25, 60, 145, 231, 317, 403, 488, 617, 789, 1132,
-855, -521, -355, -229, -146, -63, 20, 103, 186, 270, 353, 478, 645, 978,
-524, -240, -98, 8, 79, 150, 221, 292, 363, 434, 505, 611, 753, 1037,
-362, -151, -46, 32, 84, 137, 190, 242, 295, 347, 400, 479, 584, 794,
-486, -242, -119, -28, 32, 93, 154, 215, 276, 337, 398, 490, 612, 856,
-801, -545, -417, -322, -258, -194, -130, -66, -2, 61, 125, 220, 348, 604,
-666, -437, -323, -237, -180, -122, -65, -8, 48, 106, 163, 249, 363, 592,
};

static uint64_t backbone_model1_conv2_conv2_weight[64 * 9] =
{ // torch.Size([64, 3, 3, 1])
0xb, 0x9, 0x3, 0xc, 0xc, 0x5, 0xb, 0x3, 0x3, 
0x5, 0x4, 0x4, 0x4, 0xa, 0x8, 0xc, 0xc, 0xc, 
0x3, 0xc, 0x8, 0x3, 0xc, 0x1, 0x8, 0xd, 0x2, 
0x4, 0xa, 0xc, 0x5, 0xa, 0xc, 0x4, 0x0, 0x9, 
0xc, 0x3, 0x3, 0x8, 0xd, 0x4, 0x3, 0x0, 0xc, 
0x4, 0x5, 0x4, 0xc, 0xd, 0xc, 0x3, 0x3, 0x2, 
0xc, 0xa, 0x4, 0xd, 0x1, 0x4, 0xc, 0x2, 0x4, 
0xb, 0x0, 0xc, 0xb, 0x2, 0x4, 0xa, 0x4, 0x5, 
0x3, 0x1, 0xb, 0x4, 0x5, 0xb, 0xb, 0xa, 0xb, 
0x2, 0xb, 0xa, 0x0, 0xb, 0x9, 0xc, 0xc, 0xb, 
0xc, 0xd, 0xd, 0xb, 0xc, 0xb, 0x4, 0x5, 0x4, 
0xc, 0xb, 0x9, 0xa, 0xd, 0x3, 0x0, 0xc, 0x9, 
0x0, 0x4, 0x5, 0x8, 0xb, 0x4, 0xc, 0xd, 0xc, 
0xb, 0xd, 0x0, 0xb, 0x2, 0xb, 0x9, 0x4, 0x1, 
0x2, 0x3, 0x1, 0x1, 0x3, 0x2, 0xb, 0xe, 0x8, 
0x9, 0x9, 0x0, 0x9, 0xb, 0xd, 0x1, 0x4, 0x4, 
0x4, 0x5, 0x4, 0x0, 0x2, 0x1, 0xc, 0xc, 0xb, 
0x2, 0x1, 0x2, 0x8, 0xa, 0xc, 0x3, 0xc, 0xd, 
0x8, 0x9, 0x2, 0xa, 0x9, 0x4, 0x3, 0x6, 0xb, 
0xc, 0xb, 0x2, 0xc, 0x4, 0xa, 0x1, 0x5, 0xc, 
0x4, 0x5, 0x2, 0x3, 0x4, 0x0, 0xc, 0xb, 0xc, 
0x3, 0xb, 0x4, 0x3, 0x5, 0x2, 0xb, 0x2, 0xc, 
0x2, 0x2, 0x8, 0x9, 0x4, 0xb, 0x8, 0x5, 0x8, 
0xa, 0x3, 0x5, 0xc, 0x3, 0x5, 0xd, 0xc, 0x8, 
0x9, 0x4, 0x3, 0x8, 0x6, 0x3, 0x2, 0xb, 0xc, 
0x2, 0xa, 0x9, 0x3, 0x5, 0x4, 0xb, 0xa, 0x4, 
0xd, 0xc, 0xb, 0xc, 0xc, 0xb, 0xa, 0x5, 0x5, 
0xa, 0xb, 0x0, 0xb, 0xb, 0x4, 0x4, 0x5, 0x9, 
0xb, 0x1, 0x0, 0xb, 0xb, 0x4, 0x9, 0x4, 0x5, 
0xb, 0xc, 0x1, 0xb, 0xd, 0x3, 0x9, 0xb, 0x3, 
0x2, 0x9, 0xb, 0x8, 0xb, 0xe, 0xa, 0x2, 0xb, 
0xc, 0xb, 0x5, 0xc, 0xb, 0x4, 0xc, 0xb, 0x4, 
0x9, 0xa, 0x2, 0xb, 0xa, 0x2, 0xd, 0xd, 0x3, 
0xa, 0xa, 0x4, 0xc, 0x5, 0x0, 0xa, 0x4, 0xc, 
0x9, 0xb, 0xa, 0x0, 0x3, 0xb, 0x3, 0x6, 0x4, 
0xc, 0xb, 0xb, 0xc, 0xa, 0x3, 0xa, 0x4, 0x4, 
0xc, 0x1, 0x3, 0xc, 0xc, 0x4, 0x3, 0xc, 0xa, 
0xc, 0xb, 0x1, 0x5, 0x5, 0x2, 0xb, 0xc, 0x0, 
0x3, 0xb, 0x3, 0x2, 0x4, 0x4, 0xc, 0xb, 0x4, 
0x4, 0x5, 0x0, 0x2, 0xb, 0x4, 0xc, 0xd, 0xa, 
0xc, 0xb, 0xc, 0x3, 0x1, 0x9, 0x4, 0x3, 0x2, 
0x9, 0xc, 0x1, 0x4, 0x5, 0x1, 0xb, 0xb, 0xa, 
0xc, 0xc, 0xb, 0x3, 0xb, 0xb, 0x5, 0x4, 0x0, 
0x3, 0xa, 0xc, 0x4, 0x4, 0xc, 0x4, 0x5, 0xc, 
0x3, 0x4, 0x2, 0x1, 0x1, 0xb, 0xb, 0xd, 0xc, 
0x3, 0xd, 0xd, 0x2, 0xb, 0xa, 0x3, 0x2, 0xc, 
0xa, 0xb, 0xa, 0xc, 0xc, 0x9, 0x8, 0xc, 0x3, 
0x9, 0x3, 0xa, 0x9, 0xb, 0xa, 0x4, 0x6, 0x3, 
0xa, 0x4, 0x4, 0x2, 0x3, 0x2, 0x2, 0x3, 0x4, 
0x2, 0x8, 0xb, 0x3, 0x8, 0xc, 0x3, 0xc, 0xd, 
0xb, 0xc, 0xa, 0xc, 0xc, 0xb, 0x4, 0x4, 0x0, 
0x3, 0x2, 0xc, 0x4, 0xb, 0xc, 0x5, 0x9, 0xc, 
0x3, 0x9, 0xb, 0x3, 0xb, 0xb, 0xc, 0xd, 0x3, 
0xc, 0x9, 0x3, 0xb, 0x5, 0x4, 0xd, 0x5, 0x5, 
0x2, 0x3, 0x9, 0x9, 0x5, 0x2, 0x8, 0x4, 0x2, 
0x3, 0x3, 0xb, 0xa, 0x5, 0xd, 0x2, 0x4, 0xc, 
0x3, 0xb, 0xd, 0x2, 0xa, 0xd, 0x3, 0x4, 0xb, 
0x3, 0x9, 0x2, 0xc, 0x3, 0x4, 0xe, 0xc, 0x4, 
0x3, 0x2, 0x0, 0x3, 0x3, 0xa, 0xb, 0x4, 0x5, 
0xb, 0x2, 0xb, 0x1, 0xb, 0xb, 0x1, 0xd, 0x0, 
0xc, 0xd, 0xb, 0x8, 0x3, 0x3, 0x1, 0x4, 0x4, 
0xa, 0xb, 0xa, 0x3, 0xb, 0xb, 0x3, 0x5, 0x3, 
0x2, 0x5, 0x3, 0x5, 0x8, 0xb, 0x2, 0xc, 0x9, 
0xa, 0x9, 0x8, 0x5, 0x5, 0xc, 0x8, 0xa, 0x2, 
};

static int backbone_model1_conv2_relu2_threshold[64 * 7] =
{ // torch.Size([64, 7])
8, 39, 71, 102, 148, 210, 335,
32, 77, 122, 167, 234, 324, 504,
-36, 6, 49, 92, 156, 242, 413,
21, 61, 101, 141, 201, 281, 442,
14, 46, 78, 109, 157, 221, 348,
25, 80, 135, 190, 272, 382, 602,
41, 68, 94, 120, 159, 212, 316,
3, 51, 99, 147, 219, 315, 507,
19, 59, 99, 139, 199, 279, 438,
0, 33, 65, 98, 147, 213, 343,
11, 82, 153, 224, 331, 473, 757,
-25, 23, 72, 122, 195, 294, 490,
31, 71, 112, 153, 214, 295, 458,
-75, -47, -19, 8, 50, 106, 218,
-44, 17, 78, 140, 232, 355, 601,
-23, 14, 52, 90, 147, 222, 374,
68, 105, 143, 181, 237, 313, 464,
-39, 12, 64, 116, 193, 297, 505,
1, 59, 116, 174, 260, 375, 605,
42, 76, 110, 143, 194, 261, 395,
59, 93, 127, 161, 211, 279, 415,
-50, 0, 49, 99, 173, 272, 471,
-21, 18, 59, 99, 160, 241, 403,
42, 99, 156, 213, 299, 413, 641,
-128, -55, 17, 89, 198, 344, 635,
-5, 31, 67, 104, 159, 233, 379,
-81, -5, 71, 148, 263, 416, 723,
48, 92, 137, 181, 248, 337, 515,
0, 56, 112, 169, 253, 366, 592,
-11, 30, 71, 113, 176, 259, 426,
-75, -3, 68, 140, 248, 392, 680,
6, 49, 92, 135, 199, 285, 457,
-83, -20, 41, 103, 196, 321, 570,
7, 47, 86, 126, 185, 264, 422,
-21, 44, 109, 174, 272, 403, 664,
-1, 42, 87, 132, 198, 287, 466,
22, 57, 93, 128, 181, 251, 392,
39, 89, 140, 190, 266, 367, 568,
11, 48, 86, 124, 180, 255, 406,
57, 88, 120, 151, 197, 259, 383,
25, 55, 86, 116, 162, 224, 346,
20, 55, 91, 126, 179, 250, 392,
20, 51, 82, 113, 160, 223, 348,
-14, 31, 76, 122, 191, 282, 465,
-9, 38, 85, 133, 204, 299, 489,
38, 91, 144, 197, 276, 382, 594,
-2, 32, 68, 104, 158, 230, 374,
-68, 7, 84, 160, 274, 427, 732,
41, 84, 126, 169, 233, 319, 490,
-48, 9, 66, 123, 209, 323, 552,
58, 98, 138, 179, 240, 320, 482,
36, 62, 88, 114, 153, 205, 309,
-87, -27, 31, 91, 180, 299, 538,
127, 185, 243, 300, 387, 503, 734,
27, 70, 113, 157, 222, 308, 482,
33, 83, 132, 182, 256, 354, 552,
-42, 2, 47, 93, 161, 251, 432,
-51, 11, 75, 138, 234, 361, 615,
-15, 17, 50, 83, 132, 198, 330,
-28, 17, 63, 109, 178, 271, 455,
38, 81, 123, 166, 230, 315, 485,
4, 39, 75, 110, 163, 234, 376,
31, 73, 114, 155, 217, 300, 465,
5, 43, 81, 119, 176, 252, 404,
};

static uint64_t backbone_model2_conv1_conv1_weight[64 * 1*4] =
{ // torch.Size([64, 1, 1, 64])
0x3a32340ac1cbb42b,0x2220c944434032c3,0xaaca983ddb0bd4a4,0x9434abbaac3bdcaa, 
0x3943cba083cc239c,0x24bab9194cb3b4bc,0x2c0b342b24c35343,0x5bd11c4599a3b48b, 
0xab404b4cac1b9333,0xdcb11200233a3bb2,0xbcc4b8b4a30181b3,0xb4c9b802b8a2ca9b, 
0x4441b3a4b301983c,0x510ca4348bb314bb,0x1330335340ba4523,0x4a4220448b322943, 
0xa4b2303219a1b2c2,0xb4380abc8a33333a,0xca8a3d0b042b3b4c,0x3b9e43bbbcc3034a, 
0xcb34331134c99dcc,0xab0cca9bc91c323b,0x5b4cbdbdca42333b,0x3b4cb33d39b3b424, 
0x31ac4ba9c332b355,0xa14bb34b393d0b04,0xa32432993b838bb3,0xcaab3344ab32ab3c, 
0x3b4ada382d8c1bbc,0xa0ac31100aabcba4,0xb01b3439b5d32383,0xb0cbab433a19b1a2, 
0xccd9c0955b3b3331,0xbbb49bcbcb9bbb5d,0x394b3bc8390c5bab,0xb4baa8b0b3b50582, 
0xa344c24bbc0c3b43,0xbcad1893da3b0ca3,0x1a430c0b52352b33,0x04bc154304422b48, 
0x3422993a104c3c40,0xca4caa29b33b49ad,0x2a1b03cc0933b8b1,0xc42240a9533c1219, 
0x5434bc3dcc0aa484,0xa0b8bb942a438ba3,0xb4c4224401aaa030,0x3444c3bbcb4bad4c, 
0x43aa2b95aa3dcb43,0xd3b4dbb332b23c12,0x33a34b80b323b893,0xb42b82a3b1abcca4, 
0xb344b438a43b44b1,0xbca34bab42838c0b,0x34a3a44b2c3bab10,0x0354c32a22233b2b, 
0xc2cb3dccc3420b18,0xcb432c5ab3bab328,0xa333c2bcbbbbcd80,0xc340bbb3bbbc4cbc, 
0xca103a422334ab2a,0x4b2931bb9b329144,0xaacc9bbc3bb1c4b8,0x3c4a0838ca141883, 
0xb20a0bb354411b4b,0x49a3423cc803393d,0x1b4c34c40baa44c9,0xba2b3922a41135b1, 
0xbb824cc3b3b90333,0xbaa3a849234aa9ab,0x4b00c9b23bd3a1a9,0x2800a223c8aa9a3c, 
0x93293bbd4abb324b,0x39408a4cb2423a8b,0x2abbb3cd300313b2,0x42c1a4ccc440bb13, 
0xbbab3ac2c3228b43,0xcb354a39240a3a09,0x33aaccabcc3bbdca,0xc40a23a9131a2caa, 
0x4b02a42cccc3b893,0x132c8b4a223323a5,0xccc03b1c43b2a033,0x2ba943b33a410c30, 
0x902b3493dbb9c359,0xb43a033a5b3b33c4,0x49b33c2a3234cb14,0x04c2b5a2b2093c0a, 
0x9bc88cd483a2b233,0xa0c2c301cc3b043b,0x433bc9cd0acabcab,0x0d409ba34a0b84aa, 
0x32b2330a4282c3ca,0xb484aab04903c424,0xcdcb33ca282a9b20,0x8a38430b2b0bb801, 
0x4034a42ac80b13ab,0x34c3d59b3c3bc933,0xc3c4554b1acb34aa,0x414312091c431b4b, 
0xa2b4b44bb23c5424,0x33b38bb4abb1b43a,0x24323342c93c3329,0xb4430da2cb31b944, 
0x433bc318abcb3b3b,0xa0c2aa008c3c238c,0xccc142a3c4d324a3,0x9ccd51132aa2b484, 
0x3bb90a3333c303bb,0x38c2b3b239a1ca84,0x32dc3b3bccb12211,0x0c1331a3bba3b422, 
0x441b433aa3bd2219,0x932bbb9ccc2b3a32,0xabb242dcb0ba03bb,0x33b84abc4a3ca380, 
0xcdacb4b44415bba0,0x302c3a4a22b3aab3,0x89cb8c342331c4a3,0x0bcaa9c14ca2b3b0, 
0x3b41ca322cba3b3c,0x3bc4a5c2bb213a23,0x2894a59c38c444b3,0x3525b43b04332a21, 
0xacabbcb40c01bc54,0x394224babac8aca2,0xb439bbc5c143aaca,0xc8cc403b03bcc2a1, 
0x4b329282493a1b30,0xc242313992b3ccb8,0x2a943884a3abb3c9,0xc33b2b23b8b93b02, 
0x02c20848bb0c2b49,0xb34499cab3bbbc84,0x249b2012b3089ab2,0xd43c314433333904, 
0x2342c2ba0b33332c,0xc2abc32a3c13122c,0x4b49334c24d9ab41,0x3b1ac3a4b3a930b0, 
0x3330cc04a322aa12,0xabc8c443b493bca8,0x35c11943ba0bccac,0xb913bcc4aa4b8ba3, 
0x422b3c322323cbb4,0x3400aa34a20a2413,0xb40ba004c24218ac,0x2c4c3a9a3b8d1b2c, 
0x15bbc953304ca023,0xa3c4a391b43c845b,0xa32ba3acabb8a142,0x9c3a328cc3ab9323, 
0x331ab1502cbbb10a,0xbca2b5b334892ba8,0x05c92a94c4323a90,0xd523ba2ac933c134, 
0xb42b34a2b023cc8b,0x3b3a5a0acb23b313,0xb0bcabbd38b0bc2b,0x4cc911bb44b94aa3, 
0x9daa10ca2c303c4c,0x3ccb3838b8c4c9bc,0x4b2c20c0322033c3,0x83c38ab243b9a432, 
0x0a40b3bbb9d4cc5c,0x9340b0321b9c3bb1,0xc0cb213cc24dba45,0xac0bcbbc2d1ab4c9, 
0xbb343c3a0b943c23,0x3b1341b243c344b3,0xab84d904940bb24b,0xb432bc23dac42ab8, 
0x4a448c2cc2c43bcb,0x4b9ca438d3a319d4,0x1ac1c03a3c23b384,0x03c303a94a12cb34, 
0x3b4ac341caa24381,0x03c240ab31c5abc1,0x42c4cb5342baac49,0x42353031b004aa04, 
0x44a3ab4a3b1d2aba,0x2cc2cbc344c18cab,0xa44239b4ca429398,0xcb2b202b4acc2383, 
0x24a3324dcc4c2c39,0x2302cc8cbcbc424c,0x1b4a34cccb2433c0,0xb03b491c33bd3a90, 
0x3008492ccbb0c491,0x9ab0b344bb4daa35,0xc4da28ab9a0aa1c0,0xa349011b4b4ccc4b, 
0x94aa2cbc14a4a0b3,0x4448bb412312c42a,0xbadc239cc3b334c2,0x0b9b31b45b3b041a, 
0x320345450b9b302b,0xc5aa04c25cb433b3,0x3c14422424c40033,0x03b3023429b28aab, 
0xd3a3441c8243bbbb,0x3439b4adccbca3bc,0xcc40b2b4b83ba30a,0x938b9bdccb1b2dbb, 
0x3bb00bb5bbbb53b3,0xba2c303490334a34,0x509ccd2b1ba43c0b,0xc03a4553ba3a9b44, 
0xb302ac50b222a8b0,0xc2104ba9b83cac80,0xc40a944180829091,0xb240c2900ba43390, 
0xacba4ccbd5b3cc94,0x385ccc5ac23c2bcb,0x1bd2c3cccb33c90b,0xbbc81bcb4aabcccc, 
0xacb04cbc29a2b443,0xbbc1c343b19c3b21,0x9c24cb24cb3b0bcb,0x942b2bb2cc4bcc1c, 
0xa811aa42b392821b,0x1cb821aaa218acb3,0xb5412031c1a31031,0x3234c9a1b2912331, 
0x1323c3acc20b0c3c,0x443b344b323a23c8,0xbbab3303c323c4c4,0xca4353bb3a1c1b20, 
0x2224403c038cc589,0xb34c0c443a63b422,0x02943a4c0cca9003,0x3448ba3ac153bcbb, 
0xa381849423233ba1,0x43221b3bac44b841,0x255c2a2a1bcb3239,0x4c8a3b1b43bc4303, 
0x3b11c3b43c9c4c4c,0x324a43bac4c34ba2,0x392acba234339332,0x8bbbb8a0d4d323c3, 
0x4454c240bcbaab3b,0x444c49b84a992524,0xc93a48a4a4c43415,0x3b3b4432bba3aa53, 
0x4923dc3b8dc92aca,0xbabc1982ac131a1b,0xc28b3a32b5c333b0,0xb881a0342429b548, 
0x4d142bc9b3c3cb43,0x4a3ac2432ca052cb,0x1ca3c9b04b49a49b,0x994bbbb3bcb3bc9d, 
0x4bb9b9c3a8adb3ba,0x2ab42bb1a31a2cc2,0x8530b0c02312443a,0x43abc1ab339ab39a, 
};

static int backbone_model2_conv1_quant1_threshold[64 * 14] =
{ // torch.Size([64, 14])
-1064, -722, -552, -424, -338, -253, -168, -82, 2, 88, 173, 301, 472, 813,
-1288, -862, -649, -490, -383, -277, -170, -64, 41, 148, 254, 414, 627, 1053,
-930, -630, -480, -368, -293, -217, -142, -67, 7, 82, 157, 269, 419, 720,
-717, -366, -191, -59, 28, 116, 204, 291, 379, 467, 555, 686, 862, 1213,
-1034, -677, -498, -364, -274, -185, -96, -6, 82, 172, 261, 395, 574, 932,
-975, -671, -519, -405, -329, -253, -176, -100, -24, 51, 127, 241, 393, 697,
-1106, -707, -507, -357, -257, -157, -57, 42, 142, 242, 342, 492, 692, 1091,
-1096, -716, -526, -384, -289, -194, -99, -4, 90, 185, 280, 422, 612, 992,
-1307, -868, -649, -485, -375, -266, -156, -46, 62, 172, 281, 446, 665, 1103,
-933, -601, -435, -310, -227, -144, -61, 21, 104, 187, 270, 395, 561, 894,
-1113, -752, -572, -437, -347, -256, -166, -76, 13, 103, 193, 329, 509, 870,
-930, -580, -406, -275, -187, -100, -12, 74, 161, 249, 336, 467, 642, 992,
-1007, -647, -468, -333, -243, -153, -63, 26, 116, 206, 296, 431, 610, 970,
-593, -347, -224, -132, -71, -9, 51, 112, 174, 235, 297, 389, 512, 757,
-1142, -789, -613, -481, -392, -304, -216, -128, -40, 48, 136, 268, 444, 797,
-631, -390, -270, -180, -120, -59, 0, 60, 120, 180, 240, 331, 451, 692,
-874, -511, -330, -193, -103, -12, 78, 169, 259, 350, 441, 577, 758, 1121,
-819, -556, -425, -326, -261, -195, -129, -63, 1, 67, 133, 231, 363, 626,
-1052, -709, -538, -409, -323, -238, -152, -66, 19, 104, 190, 319, 490, 833,
-1220, -812, -607, -454, -352, -250, -148, -46, 55, 157, 260, 413, 617, 1026,
-834, -527, -374, -259, -183, -106, -30, 46, 123, 199, 276, 391, 544, 850,
-1049, -624, -412, -253, -147, -41, 64, 170, 276, 382, 488, 647, 859, 1283,
-1084, -770, -614, -496, -417, -339, -261, -182, -104, -25, 52, 170, 327, 640,
-847, -537, -383, -267, -190, -112, -35, 41, 119, 196, 273, 389, 544, 853,
-890, -492, -293, -144, -45, 54, 153, 253, 352, 451, 551, 700, 899, 1297,
-867, -510, -332, -198, -108, -19, 69, 159, 248, 337, 426, 560, 739, 1096,
-970, -621, -447, -316, -229, -142, -55, 32, 119, 206, 293, 424, 598, 947,
-872, -579, -433, -323, -250, -177, -104, -31, 42, 115, 188, 298, 444, 736,
-1046, -703, -532, -403, -318, -232, -146, -61, 24, 110, 195, 324, 495, 838,
-889, -566, -405, -284, -203, -122, -42, 38, 119, 200, 280, 401, 563, 886,
-904, -517, -323, -177, -81, 15, 112, 209, 306, 403, 500, 645, 839, 1227,
-1039, -667, -481, -342, -249, -156, -63, 29, 122, 215, 308, 447, 633, 1005,
-606, -381, -268, -184, -128, -71, -15, 40, 97, 153, 209, 294, 406, 632,
-846, -522, -360, -238, -157, -76, 4, 85, 166, 247, 328, 450, 612, 936,
-1012, -661, -485, -353, -265, -178, -90, -2, 85, 172, 260, 392, 568, 919,
-977, -613, -432, -296, -205, -114, -23, 67, 157, 248, 339, 475, 657, 1020,
-954, -577, -389, -247, -153, -59, 35, 129, 223, 317, 412, 553, 742, 1119,
-755, -455, -305, -193, -118, -43, 31, 106, 180, 255, 330, 443, 592, 892,
-901, -537, -355, -218, -127, -36, 54, 145, 236, 327, 418, 555, 737, 1101,
-905, -594, -439, -322, -245, -167, -90, -12, 65, 142, 220, 337, 492, 803,
-941, -638, -487, -373, -297, -221, -146, -70, 5, 81, 156, 270, 422, 725,
-1035, -693, -521, -393, -307, -222, -136, -50, 34, 120, 206, 334, 505, 848,
-777, -443, -277, -152, -68, 14, 97, 181, 264, 347, 431, 556, 722, 1055,
-1098, -715, -523, -379, -283, -187, -91, 4, 100, 196, 292, 436, 628, 1011,
-1074, -611, -379, -205, -90, 25, 141, 257, 373, 489, 604, 778, 1010, 1473,
-899, -589, -434, -317, -240, -162, -85, -7, 69, 147, 225, 341, 496, 807,
-1066, -718, -544, -414, -327, -240, -153, -66, 20, 107, 194, 324, 498, 846,
-1042, -695, -522, -391, -305, -218, -131, -44, 41, 128, 215, 345, 519, 866,
-1047, -665, -474, -330, -235, -139, -44, 51, 146, 242, 337, 480, 671, 1053,
-786, -421, -239, -102, -11, 79, 170, 261, 352, 444, 535, 671, 854, 1218,
-1136, -731, -529, -377, -276, -175, -73, 27, 128, 229, 331, 483, 685, 1090,
-974, -609, -427, -290, -199, -108, -17, 73, 164, 255, 346, 483, 665, 1030,
-752, -459, -312, -202, -129, -55, 17, 90, 164, 237, 310, 420, 567, 861,
-1539, -1083, -855, -684, -570, -456, -342, -228, -114, -1, 112, 283, 511, 967,
-934, -637, -488, -376, -302, -227, -153, -78, -4, 69, 144, 256, 404, 702,
-500, -280, -171, -88, -33, 21, 76, 131, 185, 240, 295, 378, 488, 707,
-813, -498, -340, -222, -143, -64, 14, 93, 172, 251, 330, 448, 606, 921,
-956, -593, -412, -275, -185, -94, -3, 87, 178, 268, 359, 495, 677, 1040,
-645, -356, -212, -104, -32, 39, 111, 183, 255, 327, 399, 507, 651, 940,
-928, -603, -441, -319, -238, -156, -75, 5, 86, 167, 248, 370, 533, 857,
-665, -326, -157, -30, 54, 138, 223, 308, 393, 477, 562, 689, 858, 1197,
-1115, -727, -533, -387, -290, -193, -96, 0, 97, 194, 291, 437, 631, 1019,
-1052, -687, -505, -368, -276, -185, -94, -2, 88, 179, 270, 407, 590, 955,
-677, -435, -314, -223, -163, -102, -42, 18, 78, 139, 199, 290, 411, 653,
};

static uint64_t backbone_model2_conv1_conv2_weight[64 * 9] =
{ // torch.Size([64, 3, 3, 1])
0x4, 0xa, 0xb, 0x5, 0x2, 0x0, 0x5, 0x4, 0xa, 
0xb, 0x3, 0xb, 0xc, 0xd, 0x3, 0x3, 0xd, 0x4, 
0xc, 0xc, 0xc, 0x3, 0x3, 0x4, 0x3, 0x3, 0x4, 
0x2, 0x9, 0xa, 0xa, 0xd, 0xc, 0x3, 0xc, 0x0, 
0x2, 0x2, 0x3, 0x3, 0x4, 0x4, 0x3, 0x5, 0x3, 
0x8, 0x8, 0x0, 0x3, 0xc, 0x2, 0x1, 0x3, 0x6, 
0x4, 0xb, 0xc, 0x4, 0xb, 0xc, 0x4, 0xc, 0xc, 
0x4, 0x0, 0xc, 0x4, 0x3, 0xd, 0x5, 0x3, 0xc, 
0x0, 0xb, 0xa, 0x3, 0xd, 0xe, 0x2, 0x2, 0x1, 
0xa, 0x0, 0x1, 0x3, 0x9, 0xc, 0xc, 0xb, 0xe, 
0x2, 0xd, 0xc, 0x3, 0xc, 0xc, 0x5, 0x4, 0xa, 
0xb, 0x4, 0x5, 0xd, 0x3, 0x2, 0xc, 0xa, 0xb, 
0x2, 0x0, 0x3, 0x2, 0x4, 0x8, 0x5, 0x3, 0xc, 
0xb, 0x4, 0x0, 0xc, 0x3, 0x5, 0xb, 0xd, 0x4, 
0x9, 0x3, 0xc, 0x2, 0x6, 0x2, 0xc, 0x2, 0xc, 
0xc, 0x2, 0x0, 0x4, 0x5, 0xc, 0x4, 0xd, 0x0, 
0xd, 0xc, 0xb, 0xc, 0xc, 0x0, 0x4, 0x4, 0x4, 
0xb, 0x3, 0x4, 0xb, 0xc, 0xc, 0x1, 0x4, 0x5, 
0xb, 0xb, 0xb, 0xc, 0xc, 0xd, 0x1, 0x8, 0x9, 
0xc, 0x4, 0x4, 0xc, 0x3, 0x4, 0xc, 0xc, 0x1, 
0x2, 0xa, 0x5, 0x1, 0xb, 0x4, 0xd, 0xd, 0x9, 
0x0, 0x3, 0x3, 0x9, 0x4, 0x2, 0x4, 0x4, 0x9, 
0xb, 0xd, 0x9, 0x2, 0x5, 0x5, 0xb, 0xb, 0x2, 
0x4, 0xb, 0xc, 0x5, 0xb, 0xb, 0x4, 0x1, 0xc, 
0xc, 0xd, 0xd, 0xb, 0x9, 0x3, 0x4, 0x4, 0x4, 
0x2, 0xb, 0x9, 0x8, 0x8, 0xb, 0xa, 0x0, 0xd, 
0x2, 0x5, 0x3, 0x4, 0xb, 0xc, 0x4, 0xd, 0xb, 
0x3, 0x4, 0xc, 0xa, 0x4, 0xc, 0x2, 0x0, 0xd, 
0x3, 0x4, 0x5, 0x0, 0x0, 0x0, 0xc, 0xd, 0xb, 
0x4, 0x4, 0x1, 0x1, 0xc, 0xc, 0xd, 0xc, 0x2, 
0x3, 0x4, 0x3, 0x4, 0x4, 0x0, 0x2, 0x4, 0xa, 
0x3, 0x5, 0x4, 0xc, 0xb, 0x3, 0xc, 0xd, 0xb, 
0xb, 0xc, 0xc, 0x5, 0x1, 0x4, 0x0, 0xc, 0x0, 
0x2, 0x3, 0x0, 0xd, 0x0, 0x4, 0x1, 0xd, 0xc, 
0xd, 0xc, 0x4, 0xd, 0xb, 0x5, 0xb, 0x3, 0x4, 
0x4, 0xa, 0xc, 0x5, 0x4, 0xc, 0xa, 0x4, 0xa, 
0xa, 0xc, 0xc, 0x4, 0x1, 0xd, 0x5, 0x9, 0xb, 
0x8, 0x2, 0x2, 0xc, 0xb, 0x4, 0xc, 0x5, 0x5, 
0xc, 0x4, 0x4, 0xe, 0x9, 0x4, 0x4, 0x8, 0x3, 
0xb, 0xc, 0xc, 0x0, 0xb, 0xc, 0x4, 0x5, 0x4, 
0x3, 0x5, 0x3, 0x2, 0x3, 0xc, 0x3, 0xc, 0xc, 
0xb, 0x3, 0xa, 0x2, 0x3, 0x1, 0x4, 0x4, 0x4, 
0x2, 0x2, 0x0, 0x0, 0x3, 0x3, 0x3, 0x5, 0x4, 
0x4, 0x4, 0x4, 0x2, 0x4, 0x3, 0xa, 0xc, 0xb, 
0x3, 0xa, 0xa, 0x4, 0x0, 0x0, 0x4, 0x4, 0x4, 
0xc, 0xc, 0xa, 0xc, 0x1, 0x4, 0xb, 0x5, 0x5, 
0x5, 0x4, 0xa, 0x4, 0x4, 0xb, 0x2, 0x3, 0xc, 
0xc, 0x3, 0x4, 0xb, 0x9, 0x4, 0xb, 0x3, 0x5, 
0xc, 0xb, 0x5, 0xd, 0xc, 0x5, 0xc, 0xc, 0x4, 
0x9, 0xb, 0x1, 0x3, 0xd, 0xc, 0x2, 0xc, 0xb, 
0x5, 0x3, 0xc, 0x4, 0x3, 0xc, 0x4, 0x2, 0x3, 
0xa, 0x0, 0xd, 0x0, 0xc, 0xc, 0xb, 0xc, 0xb, 
0x4, 0xc, 0x4, 0x5, 0xb, 0xc, 0x9, 0x5, 0xd, 
0xb, 0x2, 0xb, 0xb, 0xb, 0xc, 0xc, 0xc, 0xc, 
0x8, 0x4, 0x1, 0x4, 0x4, 0x6, 0xd, 0xa, 0x4, 
0xa, 0xc, 0x4, 0x4, 0xd, 0x4, 0x1, 0xb, 0x1, 
0xc, 0xb, 0xb, 0xb, 0x4, 0x4, 0x4, 0x5, 0x8, 
0xa, 0xc, 0xb, 0x1, 0xd, 0xc, 0x8, 0x9, 0xc, 
0x2, 0x1, 0x3, 0x3, 0x4, 0x3, 0xb, 0xd, 0xe, 
0x9, 0xd, 0x9, 0x8, 0xd, 0xb, 0x3, 0xa, 0x4, 
0x0, 0x3, 0x1, 0x3, 0xc, 0xc, 0xb, 0xc, 0xd, 
0x2, 0xb, 0xd, 0x4, 0xb, 0xc, 0x3, 0x5, 0x5, 
0x2, 0x3, 0x4, 0x8, 0x4, 0x9, 0x4, 0x4, 0xb, 
0x2, 0x4, 0xd, 0x4, 0x3, 0xd, 0x3, 0xc, 0xb, 
};

static int backbone_model2_conv1_relu2_threshold[64 * 7] =
{ // torch.Size([64, 7])
-6, 72, 150, 229, 346, 504, 818,
-11, 38, 88, 139, 214, 314, 514,
38, 79, 119, 159, 219, 300, 460,
-45, 4, 55, 105, 181, 282, 484,
-29, 44, 118, 193, 305, 453, 751,
13, 71, 129, 187, 275, 391, 623,
17, 58, 99, 139, 200, 281, 443,
42, 76, 110, 144, 196, 264, 401,
-7, 57, 122, 187, 285, 415, 676,
-3, 71, 147, 222, 334, 485, 785,
-50, 5, 62, 118, 203, 316, 542,
23, 65, 107, 149, 211, 295, 462,
6, 56, 106, 157, 232, 333, 535,
-59, 1, 62, 123, 214, 336, 580,
54, 101, 148, 195, 266, 360, 549,
26, 68, 110, 152, 215, 298, 466,
12, 61, 109, 158, 231, 328, 522,
43, 79, 115, 152, 206, 279, 424,
33, 78, 123, 169, 237, 328, 509,
66, 100, 133, 167, 217, 284, 417,
-26, 33, 93, 154, 244, 365, 606,
5, 51, 97, 143, 213, 305, 490,
49, 88, 128, 167, 227, 306, 465,
53, 98, 143, 188, 255, 345, 526,
-40, 25, 91, 157, 255, 387, 650,
28, 63, 97, 131, 182, 250, 387,
-11, 36, 85, 133, 205, 302, 495,
-38, 24, 88, 152, 248, 375, 630,
-17, 44, 106, 169, 262, 387, 636,
42, 83, 124, 165, 227, 309, 473,
87, 124, 161, 198, 254, 328, 476,
40, 84, 128, 172, 238, 325, 501,
18, 60, 103, 146, 210, 296, 467,
28, 75, 122, 169, 240, 334, 522,
43, 92, 140, 189, 262, 359, 553,
46, 92, 139, 186, 256, 349, 536,
15, 67, 119, 171, 249, 352, 560,
33, 81, 130, 178, 251, 348, 542,
50, 99, 149, 198, 272, 370, 567,
21, 72, 124, 175, 252, 354, 559,
45, 85, 124, 164, 223, 302, 459,
4, 52, 100, 148, 221, 317, 509,
-8, 47, 103, 159, 243, 355, 580,
46, 88, 130, 172, 235, 318, 486,
59, 86, 112, 139, 179, 232, 338,
23, 82, 141, 200, 289, 407, 643,
-7, 43, 95, 146, 223, 326, 531,
-21, 32, 85, 139, 219, 327, 541,
30, 86, 142, 198, 282, 394, 618,
-6, 47, 102, 156, 237, 346, 563,
-57, -11, 35, 82, 152, 245, 432,
-9, 51, 113, 175, 268, 392, 639,
40, 90, 140, 189, 264, 363, 562,
73, 116, 158, 201, 264, 349, 519,
34, 105, 175, 245, 350, 490, 771,
46, 87, 128, 168, 230, 312, 476,
-2, 39, 81, 123, 186, 270, 439,
9, 74, 138, 202, 299, 427, 684,
31, 109, 186, 264, 380, 535, 846,
-7, 50, 108, 166, 252, 367, 598,
1, 65, 129, 194, 290, 418, 675,
49, 96, 143, 190, 261, 355, 544,
-16, 29, 75, 121, 190, 281, 465,
56, 105, 155, 205, 279, 378, 577,
};

static uint64_t backbone_model2_conv2_conv1_weight[64 * 1*4] =
{ // torch.Size([64, 1, 1, 64])
0x434cbc3494414a33,0x44344ab44c52c484,0x442434444da435cc,0x3b524cc5ac4449cb, 
0x44cba9dccbba1abc,0x04ab0bb5324b059b,0x3469342c9bc22cca,0x1bc3489c5cb433cd, 
0xc1a12b9c82b5ac10,0xb48002ab0d353bba,0xcbbab43cbbac92ac,0x4cd03410ac8a9c4b, 
0xc442902245a3abbc,0xbd4a3a1b95c44255,0x4bac4a13304b2b40,0x083013bb343cb105, 
0xbcbbbbccccb31244,0xdcaa9aca4b44c5a3,0xcbbb58a344cb8144,0x2b4dbccc983cba33, 
0xa3243bbc2b2a34b1,0x3ba21a3133593232,0x3a0834453aa32041,0xd3952382202c4919, 
0x41cc2445432b5039,0x534cdc304b5d94c5,0xd24a58c44430cb5b,0x50d54dac884bb2ac, 
0xdd4c3424d32bc2cb,0x4a3a1cd034329b55,0x40b4cc44c34a3c55,0xb3ddc305a334c141, 
0xba3343a43b449c4c,0xb3cc5c434bd34484,0x54a4235c35c53453,0xb3bcb3540bc3b1d3, 
0x442cbd4541354cc5,0xc25a33b44c35323b,0x443544555d3244c3,0x4c24c255bb32bb34, 
0x4da55bc934b5b029,0x91c1bdc352c2c4b5,0x8ada044d45dbc26b,0x4adc9cbb4c4caa3c, 
0xd449cb41bdabb491,0x354344a4d453432d,0x322440cbd25c4084,0x55a45c0344440cc9, 
0x2a2822438a322a03,0x9443a923ad8c12e4,0x3a1a32ba4333a3b9,0xa2ca0b0428a89143, 
0xbb59c32c2459cc81,0x4bb44b5101b4350c,0x45244c54a4bb32bc,0xb1bb3bd85bc54bac, 
0x1140bba4a343bda1,0xba133cbb4c244c34,0x344abb55cc4c54d2,0x93b4a4c4b0455345, 
0x1cdcac2919b43acc,0xc9aa4a32bb04bb2b,0x13aab0430b44c492,0x2cc22853ccdccbd0, 
0x32bcbcbbccc33b45,0xcc41bdab134bc18c,0xccdc2bc3baad8dba,0x3a849bc392524c4a, 
0xbcd0c3cc9ad92b04,0x4b43cd8b445bcd33,0x80bcccc5dc4d0b9c,0xb024b1cb23a34453, 
0xbab53c4c444dc143,0xc453914bdbbbbbda,0x20a44c0cacc54cc3,0xd41b52cb34824c0c, 
0xda3a224acda43235,0x3cc15444ccc3314d,0x34444142a01444b5,0xc4c4cd35a11a3b33, 
0x2d4b4acc00d0a31b,0xb4caccbb4dc22b02,0x4a91c3bcc0421b04,0xa143c943ab444bbc, 
0x0b19c5d90a14b3b2,0x4bacb483bc3b1b29,0xacc243cb3bc4bcac,0xb5b8ca24ac8dc54c, 
0x5c2ca53c1b95cb53,0x24a3ca18bcccb822,0x40c4a3bb3bd932bb,0xa3c0cc33a9bbd33c, 
0x0cd295553c5c3923,0xc5455255c243c4c2,0xb4cb44a4ca14d434,0x333b2b33cb2924b5, 
0x2cd5db1a40944b44,0xd5a4c3bac2334a0a,0xdbc3aa234cc93ccb,0x1b04c32d853a4c8a, 
0xcb43244b0dbc251b,0x44a204acb43c201c,0x0bb214ccb422dc4c,0xab444bb3bacaddca, 
0xaaa38b41bd4330bc,0x949244334333224c,0x321413c34b35c440,0x3d325a34acc3ddc0, 
0x443a5413244c424a,0x54a53532bb40d4bb,0x04a5b535b5a3a13d,0xc55b4b144c2424cc, 
0x2b01d1bb33c4aa04,0xddcb4db123833a32,0x399a4c3b4a3b2904,0x9b3bdccc443ca3a5, 
0xacb34b2b2b1ac233,0x4234131a29a4bbc0,0xa9cac20ca444cb22,0xc5bba331c1414350, 
0xb034ba3cccd2cd4c,0xc93c2bc3bc2a4a34,0xdc24c2ccbcc3ac2c,0x3ad31453241ddc4b, 
0xa9ab1cacbb3bb31c,0x28ba0a80cba1bbcc,0xc0b8ab92bbcbc4c0,0xcb01c221bba03cb1, 
0xac184cbb9c3bddb4,0x3cb83c5ca33438b3,0xa44bca39343b344a,0xc5b13344b2155b54, 
0x45c14cab153234dc,0x32a50010d405d442,0x54b9484441349429,0xa3bb2cb3dc234bcb, 
0xb542cb23a34c4b5b,0xbb4b043b19ac9c34,0xccb2acb3caca4dac,0x3bbb23420abdc394, 
0x954991b944c4cacc,0x0b5ab41c354b9c2b,0xcb3cbcac3a1c9cbb,0x44ba542c241bd3c3, 
0x94c55b3b833049c5,0x4232bb4ba03b3cab,0x3a0c053cb3544433,0xb5d4133a5b593b5a, 
0xb28d43c3cbc3d24d,0xdb09bccd24528584,0xacb3abdba5adac4c,0x5b1cccbac444c243, 
0xd33ad99ccacba045,0x4cb2ca4c22b2dd43,0x8cb2dc23e24a3dac,0xb2bc4ce4bd3bb343, 
0xa444a5ac8b3db00d,0xa4a383b2c5433c24,0x43a94bc43b54c431,0xb244244b34bac4c3, 
0x1bcdd3b13bc2ccb8,0xa24cacc13234323a,0xb1ba4d423cc2ccbb,0x9cc1a8b0c4d431b3, 
0x0dc1a32313413c05,0x41b543334b423483,0x2435bc35c342b485,0x4d334c543bd432ba, 
0x4dbb14ccb0a3dc43,0xcded03ac4d03b94b,0x3a1530cac4a43234,0xcb8b0944b403a33b, 
0xab84c13c22c35803,0x0013cbd404245409,0xba0232bb42034c3b,0x2092bcbc543c19dc, 
0x438b34c15bc1cd52,0xcc3d444bc43bd983,0x1444bb4b41a49c83,0x42c2b94dbc04c4ca, 
0x3c8b44d3cccb43ca,0x48ba9b1453432953,0x5342b3c9c241b424,0x3aaab3a1cc944493, 
0xc4dc3082d43dbcab,0x422244443ac1dbda,0xb35cb1acd4c30d92,0x04c34cd528cb2444, 
0x44c19bdc23aa2cbc,0xc34cd3c3ba3a43a8,0xb44c25bc3ac38cb1,0x2b95b4ad34330aa0, 
0x429acc54934cb4c4,0x5442ac34caa032dc,0x49abb335abb34ab1,0xa4ba35c3c44acc2c, 
0x1b1b34335b94bd53,0xccbc1334c54a3c3c,0x45342944444b2945,0x48b4d14bc8b533b5, 
0x4b4bc32c5445c494,0xccc34b3ca4c44b65,0x42d31c4952144331,0xc44c4494b4cb030b, 
0x4c3d24cc0cc4c345,0x3bccc40d0acaac4a,0xacb4c88c44c94b8c,0xa9aacba39b9ac34d, 
0xd09c9c44d3393bb4,0xc3c44b345d34523b,0x34324553c2403404,0xc3324cc5bb444c94, 
0x4b4da2ab4312bb5a,0x3bab44aa94ab8a40,0x20433d1312bb9d42,0x3c3b9cbb30d5c2eb, 
0xb0c34abca4dab483,0x42cad2cbaabc2bd1,0xdccdb3cdb4bbac3c,0xd43c49dd9b8c445d, 
0xacc334ac43bbd44a,0xb2b9cb4cc4cbd4d4,0xdcdccc31b4cc1dcc,0xc5ccbbcc124c44bb, 
0x04054adab4c4cc2d,0xcccbbdab29b4a4b2,0xaccb13bd34230b4d,0xb3cd342c314c1b2d, 
0x432c31403b22ab51,0x410541bccb4d45c3,0xc2433213a4b3055d,0x4ac4b3344aacd4bc, 
0xa8c253c22c3a422a,0xb5a442438c04c4c9,0xda4c8501ca3bc323,0xa453095ac334210a, 
0xb243331acb3b455b,0x39b5bbac2b3b94d2,0xdbc9c5cbb2bcb14b,0xb45cbc2b5c5b312d, 
0x94bccb1cc42bd9ab,0x3b43b44b43c32c92,0xb9ac3c0233a833bb,0xc3bb34d2c3b3224c, 
0xc3c353cc4a1b5bbb,0xb3c9b2442204cd40,0xc35d48439433224a,0xa3c4ac345c4353b3, 
0xa23239d2cacc938c,0x36cb4db04bccb2a4,0xbc82d42cd233cc4d,0x43b15244dd33a4ac, 
0x324ddccb32b3342b,0x3bbdcccdb92b4c4c,0xdcbc30344ccb5c8c,0xb031dccc54b4bdbc, 
};

static int backbone_model2_conv2_quant1_threshold[64 * 14] =
{ // torch.Size([64, 14])
-896, -464, -248, -86, 21, 129, 237, 345, 453, 561, 669, 831, 1047, 1479,
-1284, -842, -621, -455, -344, -233, -123, -12, 97, 208, 319, 485, 706, 1148,
-1064, -722, -551, -422, -336, -251, -165, -80, 5, 91, 176, 305, 476, 818,
-1299, -785, -529, -336, -208, -80, 48, 176, 304, 433, 561, 753, 1010, 1523,
-1268, -861, -658, -505, -404, -302, -200, -98, 2, 104, 206, 358, 562, 969,
-670, -360, -205, -88, -11, 66, 143, 221, 299, 376, 454, 570, 725, 1036,
-1353, -852, -601, -413, -288, -163, -37, 87, 212, 338, 463, 651, 902, 1403,
-1362, -840, -580, -384, -254, -123, 6, 137, 267, 398, 528, 724, 984, 1506,
-1205, -720, -478, -296, -174, -53, 67, 189, 310, 431, 552, 734, 977, 1462,
-1181, -652, -387, -189, -57, 75, 207, 339, 471, 604, 736, 934, 1199, 1728,
-1722, -1055, -721, -471, -304, -137, 28, 195, 362, 529, 696, 946, 1279, 1946,
-948, -567, -376, -233, -138, -42, 52, 147, 243, 338, 433, 576, 767, 1148,
-1168, -735, -519, -356, -248, -140, -32, 75, 183, 291, 400, 562, 778, 1211,
-1461, -948, -692, -500, -371, -243, -115, 12, 141, 269, 397, 589, 846, 1359,
-1023, -603, -393, -235, -130, -25, 79, 184, 289, 394, 499, 657, 867, 1287,
-1787, -1065, -703, -433, -252, -71, 108, 289, 469, 650, 830, 1101, 1462, 2185,
-1285, -871, -665, -509, -406, -303, -199, -96, 7, 110, 214, 369, 576, 989,
-1367, -860, -606, -416, -289, -162, -35, 91, 217, 344, 471, 661, 915, 1423,
-1516, -961, -684, -476, -338, -199, -60, 77, 216, 354, 493, 701, 978, 1532,
-1226, -756, -520, -344, -226, -109, 8, 125, 243, 360, 478, 654, 889, 1360,
-1165, -754, -549, -395, -292, -189, -86, 16, 118, 221, 324, 478, 683, 1094,
-1378, -915, -683, -510, -394, -278, -163, -47, 68, 184, 299, 473, 704, 1167,
-1310, -861, -637, -469, -357, -244, -132, -20, 91, 203, 316, 484, 708, 1157,
-1103, -626, -387, -209, -89, 29, 148, 267, 387, 506, 625, 804, 1042, 1519,
-1532, -963, -678, -465, -322, -180, -38, 104, 246, 388, 530, 744, 1028, 1598,
-1051, -680, -494, -355, -262, -170, -77, 15, 108, 201, 294, 433, 618, 990,
-1115, -657, -429, -257, -143, -28, 85, 200, 314, 428, 543, 714, 943, 1401,
-840, -437, -235, -83, 16, 117, 218, 319, 420, 521, 622, 773, 975, 1378,
-1263, -851, -645, -490, -387, -284, -181, -78, 24, 127, 230, 385, 591, 1003,
-1166, -738, -523, -362, -255, -148, -41, 65, 173, 280, 387, 548, 762, 1191,
-1510, -1028, -787, -606, -485, -365, -244, -124, -3, 116, 237, 417, 658, 1140,
-1414, -959, -731, -561, -447, -333, -220, -106, 7, 120, 234, 405, 632, 1087,
-1155, -732, -521, -362, -256, -151, -45, 60, 165, 271, 377, 535, 746, 1169,
-1526, -972, -695, -488, -349, -211, -73, 65, 203, 342, 480, 688, 965, 1518,
-1314, -845, -611, -436, -319, -202, -85, 31, 148, 265, 382, 558, 792, 1260,
-1585, -996, -702, -481, -333, -186, -39, 107, 255, 402, 549, 770, 1065, 1654,
-966, -545, -334, -176, -71, 34, 139, 244, 350, 455, 560, 718, 929, 1350,
-1526, -1020, -767, -577, -451, -324, -198, -71, 54, 181, 307, 497, 750, 1256,
-1603, -1091, -834, -642, -514, -386, -258, -130, -2, 125, 254, 446, 702, 1214,
-944, -554, -359, -213, -115, -18, 79, 176, 274, 371, 469, 615, 810, 1200,
-1093, -760, -594, -469, -386, -303, -220, -136, -53, 29, 112, 237, 403, 736,
-857, -436, -225, -67, 38, 143, 248, 354, 459, 564, 670, 828, 1039, 1460,
-1262, -835, -621, -461, -354, -247, -140, -33, 72, 179, 286, 446, 660, 1088,
-1205, -766, -546, -381, -271, -162, -52, 57, 167, 277, 387, 551, 771, 1210,
-1264, -829, -612, -449, -341, -232, -123, -15, 93, 201, 310, 473, 690, 1124,
-1128, -646, -405, -225, -104, 15, 136, 256, 377, 497, 618, 799, 1040, 1521,
-1518, -986, -720, -521, -388, -255, -122, 10, 143, 276, 409, 609, 874, 1406,
-1244, -820, -608, -449, -343, -237, -131, -25, 80, 186, 292, 452, 664, 1088,
-1217, -724, -477, -292, -169, -45, 77, 200, 324, 447, 570, 755, 1002, 1495,
-1115, -670, -447, -280, -169, -58, 52, 163, 275, 386, 497, 664, 886, 1331,
-1283, -763, -503, -308, -178, -48, 82, 212, 342, 472, 602, 797, 1057, 1577,
-1231, -842, -648, -502, -405, -308, -210, -113, -16, 80, 177, 323, 517, 906,
-1146, -680, -447, -273, -156, -40, 75, 192, 308, 424, 541, 715, 948, 1414,
-1181, -778, -576, -425, -324, -224, -123, -22, 78, 178, 279, 430, 632, 1035,
-1731, -1158, -872, -657, -514, -371, -228, -85, 57, 201, 344, 558, 845, 1417,
-1656, -1138, -878, -684, -554, -425, -295, -166, -36, 93, 222, 416, 676, 1194,
-1509, -1053, -825, -654, -540, -426, -312, -198, -84, 29, 143, 314, 542, 998,
-1467, -939, -675, -477, -345, -213, -81, 50, 182, 314, 446, 644, 908, 1437,
-1000, -583, -374, -217, -113, -9, 95, 199, 304, 408, 512, 669, 878, 1295,
-1151, -730, -519, -361, -256, -150, -45, 59, 164, 270, 375, 533, 744, 1165,
-1361, -900, -669, -496, -381, -266, -150, -35, 79, 195, 310, 483, 714, 1175,
-1018, -618, -417, -267, -167, -67, 33, 133, 233, 333, 433, 584, 784, 1185,
-1424, -928, -681, -495, -371, -247, -123, 0, 123, 247, 371, 557, 804, 1300,
-1456, -1008, -784, -615, -503, -391, -279, -167, -55, 57, 169, 337, 561, 1010,
};

static uint64_t backbone_model2_conv2_conv2_weight[64 * 9] =
{ // torch.Size([64, 3, 3, 1])
0x3, 0x1, 0xc, 0x4, 0x4, 0xd, 0xc, 0xc, 0xd, 
0xd, 0x4, 0x4, 0xb, 0x5, 0x0, 0x5, 0x3, 0xc, 
0x8, 0x5, 0xc, 0x9, 0x2, 0x5, 0x4, 0xc, 0x4, 
0xc, 0xc, 0xc, 0xc, 0xc, 0xb, 0xc, 0x3, 0x9, 
0x4, 0x4, 0xd, 0x4, 0x3, 0xc, 0x5, 0xb, 0xc, 
0xc, 0x4, 0x4, 0x5, 0x3, 0xd, 0xc, 0xd, 0x1, 
0xc, 0xb, 0xc, 0x0, 0xc, 0xd, 0x4, 0x9, 0xd, 
0x4, 0x3, 0xa, 0x5, 0x4, 0x2, 0x4, 0x4, 0x3, 
0xc, 0xc, 0xa, 0xc, 0xc, 0x3, 0xd, 0xc, 0x3, 
0x8, 0xc, 0xb, 0x2, 0xd, 0xe, 0xa, 0x4, 0xb, 
0x4, 0x4, 0x4, 0x4, 0x5, 0x3, 0x4, 0x5, 0x2, 
0x2, 0x4, 0xc, 0x3, 0xc, 0xd, 0xc, 0xd, 0xb, 
0xb, 0xa, 0x5, 0x4, 0xb, 0xd, 0xa, 0x0, 0x3, 
0x9, 0xc, 0xc, 0xa, 0xc, 0xc, 0x3, 0xb, 0xd, 
0xb, 0xb, 0x2, 0xc, 0x0, 0x3, 0xe, 0xd, 0xc, 
0x4, 0x5, 0x5, 0x3, 0x2, 0x4, 0x3, 0xd, 0xd, 
0xa, 0xb, 0x4, 0x3, 0x5, 0x5, 0x2, 0x5, 0x4, 
0x1, 0xa, 0xa, 0x8, 0x9, 0x4, 0x4, 0x5, 0x6, 
0xa, 0x0, 0x2, 0x4, 0x3, 0x3, 0x5, 0x4, 0x5, 
0xd, 0xc, 0x9, 0x1, 0xd, 0xa, 0x2, 0xc, 0xd, 
0x5, 0x4, 0x4, 0x5, 0x3, 0xb, 0x9, 0xc, 0xc, 
0x1, 0x3, 0xa, 0x4, 0x4, 0x0, 0x5, 0x5, 0x3, 
0x3, 0x5, 0x4, 0xc, 0x4, 0x5, 0xa, 0xd, 0xd, 
0x9, 0xa, 0xc, 0xd, 0xb, 0x3, 0xd, 0xb, 0x2, 
0x4, 0x4, 0x4, 0x4, 0x4, 0x2, 0x4, 0x4, 0x1, 
0x4, 0x3, 0xc, 0x4, 0x5, 0x2, 0xb, 0xc, 0xc, 
0x1, 0x5, 0x1, 0xb, 0xd, 0xd, 0xb, 0xd, 0x1, 
0x9, 0xd, 0xc, 0x2, 0xd, 0xb, 0x5, 0xd, 0xb, 
0x4, 0x4, 0xc, 0x2, 0x4, 0xc, 0xa, 0x6, 0x3, 
0xb, 0x1, 0x4, 0xc, 0x3, 0x5, 0xd, 0xc, 0x3, 
0x4, 0x4, 0xc, 0x4, 0x5, 0x2, 0x9, 0x3, 0x4, 
0x3, 0x3, 0x3, 0x2, 0x2, 0x2, 0x3, 0x3, 0x3, 
0x4, 0xb, 0xc, 0x0, 0xc, 0xb, 0xc, 0xd, 0x4, 
0xc, 0xc, 0xc, 0x1, 0xc, 0xd, 0x0, 0xb, 0xc, 
0x3, 0x3, 0x3, 0x3, 0x4, 0x4, 0x4, 0x4, 0x4, 
0x4, 0x5, 0x2, 0x4, 0x4, 0x3, 0x4, 0x8, 0xa, 
0x3, 0x5, 0xb, 0x3, 0xb, 0xd, 0xc, 0xd, 0xc, 
0x3, 0x5, 0x4, 0x4, 0x5, 0x2, 0x4, 0x4, 0x4, 
0x4, 0x3, 0x3, 0x4, 0x4, 0x2, 0x0, 0x5, 0x5, 
0xc, 0x5, 0x1, 0xc, 0xd, 0x0, 0xd, 0xd, 0x9, 
0xd, 0x5, 0x4, 0xd, 0x5, 0xb, 0x4, 0x4, 0xb, 
0x3, 0x1, 0xc, 0x4, 0xc, 0xd, 0xb, 0xd, 0xb, 
0xc, 0x4, 0x5, 0xc, 0x3, 0x5, 0xd, 0xc, 0x4, 
0xc, 0x4, 0x5, 0xc, 0x3, 0x4, 0xb, 0x4, 0x4, 
0xd, 0xc, 0xc, 0xb, 0x3, 0x3, 0x4, 0x4, 0x5, 
0xc, 0xc, 0xc, 0xc, 0x1, 0x4, 0x3, 0x5, 0x5, 
0x3, 0x3, 0x4, 0x4, 0x4, 0x3, 0x4, 0x3, 0x3, 
0x5, 0x4, 0xb, 0x4, 0x2, 0xd, 0x4, 0xb, 0xc, 
0x3, 0x4, 0x3, 0x3, 0x4, 0x2, 0x3, 0x4, 0x4, 
0xc, 0xd, 0xd, 0xc, 0xc, 0xb, 0xb, 0x1, 0x4, 
0xb, 0xb, 0xc, 0xc, 0xb, 0xc, 0xc, 0xc, 0xb, 
0xa, 0x3, 0x2, 0xa, 0x5, 0x4, 0x3, 0x5, 0x3, 
0x8, 0x2, 0x1, 0xd, 0xd, 0xd, 0xa, 0xc, 0xb, 
0xa, 0xc, 0xb, 0x2, 0xd, 0xc, 0x4, 0x5, 0x4, 
0x3, 0x1, 0x1, 0x2, 0x5, 0x4, 0x2, 0x6, 0x4, 
0x4, 0x6, 0x5, 0x1, 0x3, 0x2, 0xb, 0x3, 0x2, 
0xa, 0x0, 0x2, 0xc, 0x4, 0x5, 0xc, 0x3, 0x5, 
0xc, 0xc, 0x9, 0xb, 0xc, 0xc, 0xa, 0xc, 0xc, 
0x0, 0xd, 0x2, 0x5, 0x2, 0xd, 0x4, 0x4, 0xd, 
0xb, 0x9, 0xb, 0x5, 0x4, 0xd, 0x3, 0x5, 0xc, 
0x1, 0x2, 0xb, 0x8, 0xc, 0xd, 0x1, 0xd, 0xc, 
0x0, 0xb, 0xb, 0xc, 0xc, 0xb, 0xc, 0xc, 0xc, 
0x4, 0x5, 0x5, 0x3, 0x4, 0x3, 0x2, 0x4, 0xb, 
0x4, 0x5, 0x4, 0x1, 0x5, 0x4, 0xa, 0x0, 0x3, 
};

static int backbone_model2_conv2_relu2_threshold[64 * 7] =
{ // torch.Size([64, 7])
120, 182, 245, 308, 402, 527, 778,
117, 184, 251, 317, 417, 550, 817,
24, 87, 150, 213, 308, 434, 686,
27, 76, 126, 175, 249, 348, 545,
124, 188, 251, 315, 410, 537, 790,
90, 166, 242, 317, 431, 582, 885,
-18, 58, 135, 211, 326, 479, 785,
54, 124, 194, 264, 369, 509, 789,
-11, 57, 126, 196, 300, 439, 717,
95, 155, 214, 274, 363, 483, 721,
-165, -86, -6, 72, 191, 350, 668,
99, 156, 212, 269, 353, 466, 692,
62, 119, 177, 234, 320, 436, 666,
-27, 36, 99, 163, 258, 386, 640,
23, 100, 177, 253, 368, 521, 828,
17, 58, 98, 138, 199, 280, 442,
56, 125, 195, 265, 369, 509, 787,
98, 163, 228, 293, 391, 522, 783,
55, 113, 171, 229, 317, 433, 666,
53, 125, 197, 269, 377, 521, 809,
62, 132, 203, 273, 378, 518, 798,
70, 128, 185, 242, 327, 441, 670,
142, 205, 269, 333, 428, 555, 810,
-18, 37, 92, 147, 229, 339, 560,
-40, 25, 91, 157, 256, 388, 652,
142, 184, 226, 268, 332, 416, 585,
142, 205, 268, 331, 425, 550, 801,
44, 123, 202, 282, 400, 559, 876,
86, 157, 227, 297, 403, 543, 825,
98, 148, 198, 247, 322, 421, 620,
12, 64, 117, 169, 247, 352, 561,
11, 35, 59, 83, 119, 167, 263,
31, 80, 129, 178, 251, 348, 544,
-31, 23, 78, 133, 215, 325, 545,
56, 117, 178, 240, 332, 454, 700,
21, 70, 118, 166, 239, 335, 528,
134, 192, 250, 309, 396, 512, 744,
10, 91, 172, 253, 375, 537, 861,
16, 94, 173, 251, 369, 525, 839,
153, 216, 280, 344, 439, 567, 822,
125, 180, 236, 291, 375, 486, 708,
56, 118, 181, 243, 337, 462, 712,
192, 243, 295, 346, 423, 526, 731,
43, 110, 178, 245, 346, 481, 750,
108, 165, 222, 278, 363, 476, 703,
97, 154, 211, 267, 352, 466, 692,
71, 122, 172, 223, 299, 401, 604,
47, 101, 154, 207, 288, 394, 608,
54, 99, 145, 190, 258, 348, 530,
58, 121, 184, 247, 341, 467, 718,
-11, 48, 108, 168, 259, 379, 620,
51, 112, 172, 232, 323, 444, 685,
46, 117, 187, 257, 363, 503, 784,
110, 173, 237, 300, 396, 523, 777,
-18, 71, 162, 252, 387, 568, 929,
41, 112, 183, 254, 360, 502, 785,
94, 158, 222, 286, 382, 510, 766,
27, 76, 124, 172, 244, 340, 533,
100, 158, 215, 273, 359, 475, 705,
107, 176, 245, 314, 417, 555, 832,
71, 154, 236, 319, 443, 608, 938,
12, 71, 129, 187, 275, 391, 625,
-15, 72, 161, 249, 382, 559, 912,
-4, 78, 162, 245, 370, 537, 870,
};

static uint64_t backbone_model3_conv1_conv1_weight[64 * 1*4] =
{ // torch.Size([64, 1, 1, 64])
0xb3b00c3930ba9134,0x2ccb4b23a8cabbb4,0xba334a159dcb34b3,0xc49b1433c1c354c3, 
0x259013803539894a,0xc4b0abcc3399c91b,0xb33bb45c313cb310,0x34b0034944b20311, 
0xbcbd29a3c4430a5c,0x4cb444cab22c0c44,0x301a3c2513cb4c8c,0xd4c0a4a5c325a314, 
0x1a9ab013331a492b,0xacc19b3c0ba405c5,0xbb4b13323043bbb3,0x2548bb28baacbacb, 
0xbc5ca554c82b2db2,0xc92949cc923b8949,0x92a43b099449a0ab,0x0028a0918504c222, 
0xb3bbbd2c23443c4c,0xbb24c2cc24ba2bbc,0xca0cca3c434c343a,0x53322b3a3ac9cbd9, 
0x412ab21a33b9c1c9,0xc40a08bb82b203ac,0x4b13caa3b20a04a8,0x9cac0b0b43d82ccb, 
0xa48c4139c23dbaaa,0x8b1c204393084400,0x34b34dc802aab08a,0x8323c9db3bba38c4, 
0xd4b942a4151cc913,0xac3b0b4022d89a22,0x844a34403abba233,0x4b2bb3422ac294bb, 
0x4c32b24b48b2b2ca,0x332cb441c4905b11,0xac3132b30a90d053,0x3c3bcdb4a0ab4889, 
0x9c1394a2abb4c9c3,0x3aaa44424ccb54c3,0x9ba1bba30dd451bd,0x8b40403c83abc89a, 
0x4cb3a9233c2c04a3,0xc433503abb43b122,0xccba2bbbda23bac3,0xbab00bbb3a1cab9a, 
0x0240c0aa8cbb2b44,0x4548bbb322c132c3,0x4c441cc1924bbcab,0xc3caa9bb4cb43b0b, 
0xb404abb303bb3645,0x24bbbb2a44323a94,0xcc0da3b11cbc34a2,0x312c8300b44c3333, 
0x1bb43ab9a3a3c430,0x44128a45b94443c5,0x3c03b2bcca422194,0x490caba3cd44bc5c, 
0xc4003331c4ca2c02,0xac2b0bbabaac2a9b,0x3409414cc331922c,0x3594b34a15a2b405, 
0x33d33420cbc98281,0x812b40233d493ba3,0x2c243ab3b333533b,0x031c25c3c343419c, 
0x4c9b2a344bcac0ca,0x33cc5d03b293c225,0x49b3a224c98cbc93,0xc3c2b930cc94a3a4, 
0x1b9dbcac33b13330,0x4831a2cb23bc1cbb,0x1bbc3b032b1b433a,0xc3ba2b34ba030032, 
0xbd320bab3ca3a514,0xa44294b02c43332b,0x0acc9ca3c21132b4,0xabab18d39a2cba4b, 
0xba43bcc302cc3524,0x5248c5cc344b2aa3,0x2a3cdcb4b2bcc5b2,0x133a2c0434b44b4c, 
0x9cb42bb8aac5448a,0x4cb3354bccbb3433,0x43023a34d24339bb,0x033a3828c0aa42a2, 
0xb320dc4cdabad144,0xb4551cbc1bbc93cc,0xb3b43ccca033b33a,0xb2a113bc5a28cca9, 
0x3802aad3393032bb,0x3b3345a03cb0bc41,0x49c409150bbbabbb,0x33ab43033d044822, 
0x22ccb35848ab40a3,0x023b212b34b0acd3,0xcd9329aac435b224,0xc1d129aa01ab2a3a, 
0xcbabbca5a3c423aa,0x0dc2c33d149c94bc,0x0bacc28cb2ca4ccc,0x4048344b9c3bccb3, 
0x9ba3334b22bb83b3,0xc4cbac90c1d4a30b,0x1a203ab4c302d3ba,0x83c2cba1d4bc9baa, 
0xc4442b3b2bb2d344,0xd3304214bc33c894,0x3cc8abb4d4031323,0xb3ac231393c44c29, 
0x5832baab2caa2234,0xb4324ca21344bd8b,0x4da3b3404bdcc293,0xcbd3a34b3233b33b, 
0x4a23cc9c1d42334a,0x444014d3a8043243,0x3a9cdcc43449bb30,0x9a302dd4113b313c, 
0x2b029a4cb33384ba,0x3b3cc4c341db8232,0xb2bdba8112c232bc,0x3b1b4c34c32c00b0, 
0x4d399433ac924ccc,0x241233bb3a0b034b,0xc223cbc22a0babcc,0xbcca1b1bcc23a09a, 
0x93039b9bb922d434,0xc9c03242b2345a40,0x3b0c4a291c3b4204,0x2b30dd944a4caaa0, 
0xaca92333bc43cccb,0x3a8abc24aca22423,0xb5c3139413ab2a9c,0x3bc524ab222bc4b4, 
0x3c4113a31ab34cb2,0x4aaa553495b34330,0x33330bb434ac4235,0x1ccc8cb4db12a340, 
0xbaa9433ca143322d,0xac38c3b49ca5cc4c,0xc4cc531c41c40d39,0x9b4b339cbb1ca3c4, 
0x09b3ccab3cc324c8,0xb1bdcc8bc352c434,0xd3ddca24c2cc3c04,0xc985031cc25dc5b3, 
0x2b5ca34a8dc2b030,0x1a4cc323ab42ccb3,0xb30cbccab53b4bdb,0xc9c4bcc4a533b98c, 
0xb3c49ccb081b328c,0x0242cdcc843bc43b,0xc4bad43cc35acb38,0x4103032c832c12b9, 
0x4dbb244c1d234cc3,0xb03044cb93bc3a4b,0xb4b90bc4243b441c,0xca1429dc442b81ba, 
0x3aac3c5b4b5b8a1c,0xcbc3a3a4bc250b22,0x9c4bc0cb4cb14cb4,0x3ba0bba8c32800bb, 
0xa32bbbc043241111,0x92a9bc3c4423939c,0xad9b034b2cba4433,0x4c4c543b2c12dbc4, 
0x093c34b332bb0dc3,0x44bd22b43bb2a32a,0x9443c0a4039bb4c4,0x2ba4b933d3b4213b, 
0xc31aaa32ba34ba3b,0xbb84d5a12bbbbacc,0xcbc0dacca42b4bca,0x3cb052abcabcbaab, 
0x4b1c439cccb43302,0x49a2b842ac40331b,0x34cc4cbc412383cb,0xc2c31adc9c2aa843, 
0x4a940241ab4b3aba,0x2c4224c02cc2bd20,0x49300b8444c2ab3c,0x11c424b3a3a9423a, 
0xc9b3bc8382c35c4a,0x1dc404145a9b3d3a,0xcbbb2a0ac5443d35,0xa30444a5cc383182, 
0x09b34392ba442ab4,0x4c548281ac423bb3,0x4a34423c23b13440,0x442324ab1144ba41, 
0x2c9c23a42409c4ac,0xd3bc3c9c04cb5b2c,0x11344bb23ccc4b53,0x9b03c3b4c33bb4db, 
0xd24c442aa222ccb3,0x01b2b9a13cabb12b,0xb403320c3ab385dc,0x3b12343c0439c319, 
0xa4cc2b3bc29cc023,0x0baa0cc24cbbdcdb,0xcc021b30bac924c4,0x2bc94400303943ba, 
0xbca3990bda252a1b,0x3c34b43ac80a4b3b,0x23802452c440b23c,0x3a322c4c39032ab3, 
0x4ac02333329b9133,0xca03413b9429c8e3,0x3c11dbbca12b42cb,0xc2c9342bcb932b0c, 
0x41893b3bb4ac3b4b,0x320cab40dbda42b5,0xca40b2aa84438a3b,0x4442cd12832c39cc, 
0x301102403c434131,0xc344a1bc34d104c1,0x9a4bc30d3039bb30,0x2c913a9b211ac92c, 
0xb9a1c64bc30b2521,0xcbcaccc230003b05,0x54acaa3b45b84d33,0x2c35ab44c65c556b, 
0x4c9a231c34bb3b33,0x4c1cb42a24dccc3b,0x33432ba33a1d83cb,0x343b0c12c5c230da, 
0x3c5322b0cb332b13,0x22c33120cc43b324,0x31aabcb93b2104dc,0x9308bbcb2b2abb9c, 
0x4db3b43aabc99ac2,0x3ddc33318bb0a330,0x44b32bb8bccb3bc3,0xbcb23b14c21b3141, 
0x18a3a34bca3b3022,0x43319213d1444823,0x01ba3ca0a032ca52,0x2434ddd524024a83, 
0x0a14ca28db394252,0xb934243ad0bbb903,0x23244b13bc32bb3c,0x25a8ca3c32313395, 
0xc4c43084b311014b,0x9b323bb03bc23334,0x3a00a42c02b3b834,0x333405b3d24b4250, 
0x3c313a3b0b31ada1,0xcc4390b8a4c8b20c,0x34a80a2343328c2b,0x0a94002b31cbb2c8, 
0x204beb3d4bcbb413,0x34ab2bdc84bcb0bb,0x3c1b9c1acb0b029b,0xd0ab2d5133c93a13, 
};

static int backbone_model3_conv1_quant1_threshold[64 * 14] =
{ // torch.Size([64, 14])
-871, -535, -366, -240, -156, -72, 11, 95, 180, 264, 348, 474, 642, 979,
-952, -581, -395, -256, -164, -71, 21, 113, 206, 299, 391, 530, 716, 1086,
-810, -484, -321, -199, -117, -35, 45, 127, 208, 290, 371, 494, 657, 983,
-891, -568, -406, -285, -204, -123, -42, 38, 118, 199, 280, 401, 563, 886,
-653, -415, -295, -206, -146, -86, -27, 32, 92, 152, 211, 301, 420, 659,
-1115, -761, -585, -452, -363, -275, -186, -98, -10, 78, 166, 299, 476, 830,
-1026, -672, -495, -362, -274, -185, -97, -8, 79, 168, 256, 389, 566, 920,
-738, -477, -346, -248, -182, -117, -51, 13, 78, 144, 209, 307, 438, 700,
-857, -524, -358, -233, -149, -66, 16, 99, 182, 266, 349, 474, 640, 973,
-798, -493, -340, -226, -149, -73, 2, 79, 155, 231, 308, 422, 575, 880,
-925, -621, -469, -355, -279, -203, -127, -51, 24, 100, 176, 290, 442, 746,
-860, -554, -400, -285, -208, -132, -55, 21, 98, 174, 251, 366, 520, 826,
-908, -580, -416, -293, -211, -129, -46, 35, 117, 199, 281, 404, 568, 896,
-1121, -673, -449, -281, -169, -57, 54, 166, 278, 390, 502, 670, 894, 1341,
-1044, -646, -447, -298, -199, -99, 0, 98, 198, 297, 397, 546, 744, 1142,
-999, -608, -412, -265, -167, -69, 27, 125, 223, 321, 419, 566, 761, 1153,
-667, -393, -256, -154, -85, -17, 51, 119, 188, 256, 325, 427, 564, 838,
-1167, -761, -557, -405, -303, -202, -100, 1, 102, 204, 306, 458, 661, 1068,
-1002, -649, -473, -341, -253, -165, -77, 10, 98, 186, 274, 406, 583, 935,
-994, -640, -462, -329, -241, -152, -64, 24, 113, 201, 290, 423, 600, 955,
-978, -598, -409, -266, -171, -77, 17, 112, 207, 302, 397, 539, 729, 1109,
-863, -512, -336, -204, -116, -28, 59, 147, 235, 323, 411, 542, 718, 1070,
-1098, -723, -536, -395, -301, -207, -114, -20, 73, 167, 260, 401, 589, 964,
-732, -444, -301, -193, -121, -49, 22, 93, 165, 237, 309, 417, 560, 848,
-806, -509, -361, -250, -175, -101, -27, 46, 121, 195, 269, 381, 529, 826,
-1131, -789, -618, -490, -404, -319, -234, -148, -63, 22, 107, 236, 406, 748,
-1057, -710, -537, -407, -320, -234, -147, -60, 26, 112, 199, 329, 502, 849,
-857, -531, -367, -245, -163, -81, 0, 81, 163, 244, 326, 449, 612, 939,
-1137, -745, -550, -403, -305, -207, -109, -11, 85, 183, 281, 428, 624, 1015,
-981, -611, -426, -287, -194, -102, -9, 82, 175, 267, 360, 499, 684, 1054,
-995, -655, -484, -356, -271, -186, -101, -15, 69, 154, 239, 367, 538, 878,
-968, -661, -508, -393, -317, -240, -163, -87, -10, 65, 142, 257, 410, 716,
-833, -509, -347, -225, -144, -63, 17, 98, 179, 260, 341, 463, 625, 949,
-1064, -680, -488, -344, -248, -152, -56, 39, 135, 231, 327, 471, 663, 1047,
-1106, -662, -440, -273, -162, -51, 59, 171, 282, 393, 504, 671, 893, 1338,
-899, -598, -448, -335, -260, -184, -109, -34, 41, 116, 191, 304, 455, 756,
-1420, -943, -704, -525, -406, -286, -167, -48, 71, 190, 309, 488, 727, 1204,
-903, -578, -415, -293, -212, -130, -49, 31, 113, 194, 275, 397, 560, 885,
-1217, -809, -605, -453, -351, -249, -147, -45, 56, 158, 260, 413, 616, 1024,
-953, -615, -445, -318, -233, -149, -64, 20, 104, 189, 274, 401, 570, 909,
-881, -577, -424, -310, -234, -158, -82, -6, 69, 145, 221, 335, 487, 792,
-1038, -687, -511, -379, -292, -204, -116, -28, 58, 146, 234, 366, 541, 892,
-949, -613, -444, -318, -234, -150, -65, 18, 102, 186, 270, 397, 565, 902,
-1028, -728, -578, -465, -391, -316, -241, -166, -91, -16, 58, 170, 320, 620,
-829, -535, -388, -278, -205, -131, -58, 15, 88, 162, 235, 345, 492, 786,
-873, -525, -351, -221, -134, -47, 39, 125, 212, 299, 386, 516, 690, 1037,
-893, -559, -392, -267, -183, -100, -17, 66, 149, 233, 316, 441, 608, 942,
-767, -426, -256, -128, -43, 41, 126, 211, 296, 381, 466, 594, 764, 1105,
-1050, -680, -495, -356, -263, -171, -78, 13, 106, 198, 291, 430, 615, 985,
-949, -631, -471, -352, -272, -192, -112, -33, 46, 126, 206, 325, 485, 803,
-809, -559, -433, -339, -277, -214, -151, -88, -26, 36, 99, 193, 318, 569,
-760, -500, -370, -272, -207, -142, -77, -12, 52, 117, 182, 280, 410, 670,
-999, -663, -494, -368, -284, -200, -116, -31, 52, 136, 220, 346, 515, 852,
-856, -531, -369, -248, -167, -86, -5, 75, 156, 237, 318, 440, 602, 926,
-924, -600, -439, -317, -236, -156, -75, 5, 86, 167, 248, 369, 531, 854,
-955, -493, -261, -88, 27, 143, 258, 374, 490, 605, 721, 894, 1126, 1589,
-1072, -686, -492, -347, -250, -154, -57, 39, 135, 232, 329, 474, 667, 1054,
-799, -517, -376, -270, -199, -128, -58, 12, 82, 153, 224, 330, 471, 753,
-1041, -676, -493, -357, -265, -174, -83, 7, 99, 190, 281, 418, 600, 965,
-819, -484, -316, -191, -107, -23, 60, 143, 227, 311, 395, 520, 688, 1023,
-689, -405, -263, -157, -86, -15, 55, 126, 197, 268, 339, 445, 587, 871,
-776, -443, -277, -153, -70, 12, 95, 179, 262, 345, 428, 552, 718, 1051,
-507, -336, -250, -186, -143, -100, -58, -15, 27, 70, 113, 177, 262, 433,
-1677, -1169, -914, -724, -597, -469, -342, -215, -88, 38, 165, 356, 610, 1119,
};

static uint64_t backbone_model3_conv1_conv2_weight[64 * 9] =
{ // torch.Size([64, 3, 3, 1])
0xb, 0xc, 0xa, 0x4, 0x4, 0x4, 0x3, 0x4, 0x4, 
0x3, 0x9, 0x4, 0x3, 0x2, 0x5, 0x3, 0x8, 0x0, 
0x4, 0x5, 0x2, 0x2, 0x2, 0x2, 0x0, 0x3, 0xa, 
0xb, 0xa, 0x1, 0xb, 0x4, 0x2, 0x0, 0x5, 0x3, 
0xc, 0x4, 0x5, 0xc, 0x1, 0x4, 0x8, 0xc, 0x0, 
0x3, 0x5, 0xb, 0x8, 0x5, 0xa, 0xb, 0x2, 0x9, 
0x4, 0x2, 0x1, 0x4, 0x4, 0x3, 0x0, 0x3, 0x9, 
0x1, 0x8, 0xb, 0x3, 0x5, 0xa, 0xd, 0xb, 0x3, 
0x8, 0x6, 0x0, 0x9, 0xd, 0x9, 0x2, 0x2, 0x1, 
0xb, 0x9, 0x3, 0xd, 0x9, 0x4, 0x0, 0x3, 0x3, 
0xd, 0x3, 0x3, 0xc, 0x3, 0x3, 0xb, 0xc, 0xc, 
0x3, 0xc, 0xb, 0x4, 0xd, 0xb, 0x4, 0xa, 0x9, 
0xb, 0x4, 0x3, 0xc, 0x5, 0x3, 0xb, 0x2, 0x1, 
0x3, 0x4, 0x3, 0x3, 0x4, 0x1, 0x3, 0x3, 0xa, 
0x4, 0x0, 0xc, 0x0, 0xc, 0xb, 0xb, 0xc, 0x2, 
0x5, 0xa, 0xa, 0xc, 0xb, 0xa, 0xb, 0x3, 0x3, 
0x3, 0x3, 0x4, 0xa, 0xc, 0x3, 0xc, 0xd, 0x0, 
0xd, 0xd, 0x8, 0xc, 0xb, 0x9, 0xb, 0x1, 0x0, 
0x4, 0x4, 0xa, 0xb, 0xc, 0x2, 0xc, 0xa, 0xb, 
0x3, 0xb, 0xc, 0x3, 0xc, 0x2, 0x5, 0x3, 0x0, 
0x9, 0x2, 0xd, 0x9, 0xb, 0xd, 0x1, 0xc, 0x9, 
0x0, 0xb, 0xa, 0x8, 0xc, 0x3, 0x4, 0x5, 0x4, 
0xa, 0xe, 0x0, 0x2, 0xb, 0xa, 0xb, 0x3, 0x9, 
0xa, 0xd, 0xb, 0xc, 0xb, 0x4, 0xb, 0x2, 0x4, 
0x0, 0x5, 0x3, 0xc, 0x3, 0x4, 0xc, 0xd, 0x2, 
0xb, 0x1, 0xa, 0xb, 0x3, 0xc, 0xb, 0xc, 0xb, 
0x3, 0xc, 0xc, 0x4, 0xa, 0xb, 0x3, 0x0, 0xc, 
0x9, 0xc, 0xa, 0xd, 0x3, 0xa, 0xc, 0x3, 0x2, 
0xb, 0xa, 0xc, 0xb, 0xd, 0x1, 0x0, 0x3, 0x0, 
0x8, 0xd, 0x2, 0x2, 0x4, 0x9, 0x0, 0xa, 0xb, 
0x3, 0x4, 0xb, 0x3, 0x1, 0xc, 0x2, 0xb, 0xd, 
0x5, 0xb, 0xc, 0x2, 0x4, 0xb, 0xc, 0x4, 0x1, 
0xc, 0x3, 0x3, 0xb, 0x5, 0x1, 0xa, 0x4, 0x3, 
0x5, 0x3, 0xb, 0x3, 0x4, 0x8, 0x0, 0x0, 0x9, 
0xb, 0xb, 0x8, 0xd, 0xb, 0x1, 0xc, 0x9, 0x1, 
0x9, 0x3, 0x3, 0xb, 0x6, 0x8, 0x1, 0xa, 0x1, 
0x3, 0x3, 0x3, 0x3, 0x3, 0x3, 0x1, 0x3, 0x3, 
0xc, 0x0, 0x3, 0xc, 0x3, 0xa, 0x3, 0x5, 0x3, 
0x0, 0x2, 0x3, 0xb, 0x4, 0x4, 0xa, 0x3, 0x4, 
0xc, 0x3, 0xb, 0xd, 0xb, 0x9, 0x3, 0xb, 0x0, 
0x0, 0xc, 0xa, 0x8, 0x6, 0x1, 0xa, 0xa, 0x1, 
0x4, 0x2, 0x8, 0x5, 0xa, 0x2, 0x3, 0xa, 0x9, 
0x3, 0x4, 0x2, 0x9, 0x0, 0x1, 0xb, 0xe, 0xb, 
0x3, 0x3, 0xd, 0x3, 0x5, 0xc, 0x2, 0x4, 0x0, 
0xb, 0xd, 0x1, 0x4, 0xd, 0x2, 0x9, 0x5, 0x4, 
0x4, 0x4, 0x8, 0xa, 0xc, 0xa, 0xd, 0xc, 0x9, 
0x2, 0x0, 0x8, 0x3, 0x5, 0x0, 0x3, 0x4, 0x4, 
0x3, 0xc, 0xd, 0x4, 0xc, 0xc, 0x4, 0x3, 0x0, 
0xa, 0xb, 0x3, 0x0, 0xa, 0x3, 0x3, 0x5, 0x2, 
0x2, 0xd, 0xd, 0x3, 0xc, 0xb, 0x2, 0x4, 0x4, 
0xb, 0xc, 0xc, 0x2, 0x0, 0x8, 0x5, 0x4, 0x4, 
0xa, 0xb, 0x2, 0x4, 0x4, 0x2, 0xb, 0xd, 0x3, 
0x3, 0xc, 0xc, 0x4, 0xa, 0xc, 0x9, 0x3, 0x2, 
0x5, 0x0, 0xb, 0x3, 0xc, 0xb, 0x2, 0xb, 0x1, 
0xc, 0xc, 0x2, 0x3, 0xb, 0x4, 0xa, 0x9, 0x4, 
0xb, 0xc, 0xb, 0x0, 0xc, 0xc, 0x9, 0xc, 0xb, 
0x4, 0xb, 0xb, 0x5, 0x3, 0xa, 0x4, 0x4, 0xb, 
0xa, 0xc, 0x9, 0xc, 0xb, 0x3, 0x4, 0x4, 0x2, 
0xa, 0x4, 0x4, 0xc, 0x4, 0x3, 0xc, 0x3, 0x3, 
0x8, 0x3, 0x3, 0xb, 0xd, 0x3, 0xa, 0x8, 0x4, 
0x4, 0x4, 0x3, 0xb, 0xd, 0x1, 0x0, 0x0, 0xa, 
0xd, 0xc, 0x3, 0xb, 0xa, 0x1, 0x3, 0x3, 0x3, 
0x4, 0xb, 0xb, 0xd, 0xb, 0x4, 0xc, 0x2, 0x4, 
0xa, 0xa, 0x3, 0x0, 0xe, 0x2, 0xa, 0x2, 0x2, 
};

static int backbone_model3_conv1_relu2_threshold[64 * 7] =
{ // torch.Size([64, 7])
-12, 42, 98, 154, 237, 348, 571,
38, 78, 118, 157, 217, 296, 455,
12, 63, 114, 165, 241, 343, 548,
40, 72, 104, 137, 185, 249, 377,
-30, 52, 135, 218, 342, 508, 840,
-13, 38, 90, 142, 220, 324, 533,
14, 42, 71, 99, 142, 199, 312,
55, 86, 117, 147, 193, 254, 376,
9, 54, 100, 145, 214, 305, 487,
67, 104, 140, 177, 231, 304, 450,
19, 60, 100, 141, 202, 283, 445,
47, 84, 121, 157, 213, 286, 434,
-19, 23, 67, 110, 175, 262, 435,
59, 94, 130, 165, 219, 290, 433,
-33, 12, 58, 104, 172, 263, 446,
16, 40, 64, 88, 124, 172, 267,
-2, 45, 94, 143, 216, 313, 508,
40, 90, 141, 191, 267, 367, 569,
20, 53, 86, 120, 169, 236, 369,
16, 48, 80, 112, 160, 224, 352,
-36, 33, 103, 173, 278, 418, 697,
-46, 3, 54, 105, 181, 283, 486,
-9, 51, 113, 175, 267, 390, 637,
-59, -3, 52, 108, 193, 305, 529,
24, 78, 131, 185, 265, 373, 587,
6, 42, 77, 112, 165, 236, 377,
6, 42, 77, 112, 166, 237, 378,
4, 50, 96, 142, 211, 303, 487,
-43, 5, 55, 105, 180, 279, 478,
2, 27, 51, 75, 112, 160, 257,
22, 72, 122, 172, 246, 345, 544,
27, 61, 95, 129, 180, 248, 384,
34, 73, 113, 152, 211, 290, 448,
-12, 38, 90, 141, 218, 322, 528,
8, 57, 107, 156, 231, 330, 528,
-73, -7, 58, 123, 222, 353, 615,
44, 74, 104, 133, 178, 237, 356,
34, 67, 100, 134, 184, 251, 384,
-13, 28, 70, 111, 174, 258, 425,
-38, 10, 60, 110, 184, 284, 483,
14, 64, 113, 163, 238, 337, 537,
13, 50, 87, 124, 180, 255, 403,
-10, 35, 82, 128, 198, 291, 477,
41, 76, 110, 144, 196, 265, 403,
-18, 40, 100, 159, 249, 368, 606,
41, 84, 127, 170, 234, 320, 492,
79, 141, 204, 266, 359, 484, 733,
8, 50, 92, 134, 197, 282, 451,
12, 43, 74, 105, 152, 214, 338,
-54, 6, 67, 128, 220, 342, 586,
-3, 49, 101, 154, 233, 339, 550,
32, 69, 106, 142, 198, 272, 420,
50, 79, 107, 136, 179, 237, 352,
25, 59, 92, 126, 176, 243, 377,
-14, 22, 59, 97, 152, 227, 376,
59, 100, 141, 183, 244, 327, 491,
-12, 45, 102, 160, 247, 363, 594,
19, 51, 84, 116, 165, 230, 360,
-25, 20, 65, 110, 178, 268, 449,
40, 68, 96, 123, 165, 220, 331,
40, 73, 107, 141, 192, 260, 396,
-41, -1, 38, 78, 138, 218, 379,
22, 89, 156, 223, 324, 458, 726,
-37, 22, 83, 144, 235, 356, 598,
};

static uint64_t backbone_model3_conv2_conv1_weight[64 * 1*4] =
{ // torch.Size([64, 1, 1, 64])
0x58cbcb3cca1394bc,0xbba3b104cb3c1342,0xa4c4244401c3a54d,0x3a3bb233cbaa04ab, 
0x0b234329ab3830a4,0xc323328ac0c2c4bb,0x40cac23b2b344193,0xc31c422d38241023, 
0xc2bb80b133438392,0x4c8a322b41aa3acc,0xca93bc2b84dc9c8b,0x833b0bc92c30233b, 
0x330bac15344cbb3b,0xcb99ccb1a4b2923c,0x223bc52ab23933c4,0x2333449b452a3a43, 
0xbb20332b0ab232b4,0xb4b045b130d941c2,0x03b432834a43ca33,0xc3ad83aa94443b93, 
0x4803b3b343910940,0x43882cba24202233,0x2ca13321d12a024a,0x3a33834233bdcb4c, 
0x204bb2c3b4bbca83,0x238b215b3a32ba33,0x92c408801caab4ab,0x4b22932d90c93a42, 
0x391541b4b4aa4344,0xa34a2a21b304cc33,0x4c98334ca5bb4b23,0x4c1c21b8b31b943a, 
0x3a3b30b3a8b3b029,0xc2a2bb2ac1b9c2bb,0x428bd32c11a14bda,0xbbc94cb3c23b330a, 
0x3db33c3d3cbc2130,0xa3b84cb3128231ba,0xa03392ca4d33c41a,0xbdb3ca32243d2caa, 
0x3c3b22c432bc41b5,0x358c393c43b4c33a,0xbaa4ab1383940332,0xa444a34b14c2ab44, 
0x3b350b4a302a4438,0xa4098b423b440c82,0xc4ab305b33aac02a,0x3c34c2abcb1b33b3, 
0x2bab4a8c8992acbb,0x49b934b235022b3a,0x34ba3a29d3a4ba2a,0xd422adaba0a4233b, 
0xaa14aa933334c44b,0x03c01424c2380b2a,0x1b4922b9a34bbc41,0x4b40cba3d03ba5ba, 
0xb242ca4444441a34,0x5333343b3449c4c4,0x43c493049d9c9243,0x4085432b3532443a, 
0x4cba1ab334430b2b,0xc4bb0a2a33ba3cd2,0x33b2b44cc31bd9a2,0x2da4221ab3cd340b, 
0x33acd3400488cb0b,0x2c43d4b41433b444,0x3c2bb322395c40a3,0x80380ab142c00b59, 
0xa8244ab191dc2534,0xa13c42b0b3b1bc41,0x9c4401b4a5c2a2c4,0x3cc3b5bb49c93cc2, 
0xbbc1ab24a3222b22,0xa2cb8c99b5223dc2,0x48b3cb22c09b2333,0xa21103c1b09bbb4a, 
0x4ab3829294333a9b,0x4188cc3ac3acbb43,0x4ca9b4c3dcb02bcc,0x2ab44b403cacb30b, 
0x024bb02aa3acd24b,0x3b13c435a43a81a9,0xa2343bb33a5ba490,0x1293d2b243ca2c4a, 
0xc1318b14b0a2ba33,0x3a32aaa31038a2b3,0x4babbc5b3bbcbb93,0xa43443929432ab34, 
0x22bdd3c9b8ba931c,0x0b3b849224b21333,0x080ac2a13a22bbc0,0xb2d2b38449c32d34, 
0x4b3b9524448cbb4b,0x2b109881cca3ba59,0x4939332295ab38b2,0x3cc149bc351c23b1, 
0xa3845cc2104b80b5,0x933b40c843bba54c,0xb3c8ba320bb530aa,0x2540235ba42bb3c5, 
0x8a3b203cd31ca24b,0x338a0a0223014222,0xb0bb249012a2b4c1,0xcb03b20840bc92bd, 
0x32832b3239903834,0xa11c23c049345b32,0xc9232a94392cd233,0x83442a1a4a31a1c3, 
0x3850333ba3118b2a,0xac34bb33bc1ccbb0,0x43213cbab4c143b2,0x4dcb29c3b34b3cad, 
0xe933343233323033,0x2438123c32a1a3a2,0x322b42c21320bc3a,0x2034a824b4382441, 
0xc3c2b3a439451402,0xbb2314849b9c91c4,0x410a344d3aac9d43,0x42990433b433c42a, 
0xc24c9244c4aa005c,0xbc3893c0d32a20a9,0x23ccb433aa0c33c4,0xb9b209baab291b8c, 
0xb233bb4cc3435541,0x433349a4ac3b1b2c,0xbcc5bdb3334c3422,0x8b431cc094194a82, 
0x4cb432bbb04242b8,0x14cb4cb94d0c49ba,0xcaa33cbc0bc3bbac,0xc8b90a323a32b3a0, 
0x2438a40a0a44ab43,0x44d8a2ab3c1c34a3,0x330c445ab32b314d,0x30244b3bb23aa490, 
0x318ba024bc43c332,0x34d9ccba2c333cb3,0x4bb02bb4204b322c,0x334b491bb1a041b4, 
0x83814b030c9b322c,0x0ad3393b34b24b9d,0x44b30281c813a042,0x341a13b9320bbbb1, 
0xa0d21b3a08bb49c0,0x4ba103c223104193,0x8ba409148c1343a2,0xc43c32a341944bb4, 
0xbc4024b342412143,0x9a2b3393cc243342,0xb94c4200242c1b33,0x3342bb21944cc58c, 
0x43a10c3bc00b03bd,0x03b38bb1bb3a3c1c,0xa412a443c38921b0,0x09cc34200bb89bac, 
0xc93133c15aa3ca40,0x43b3b3bbc4d3bb14,0x28c9032cb498b328,0xba4baa20b94cc148, 
0x85c8333b144bac3b,0x8033a13b434403d4,0x00b0c2b2b43d2ba0,0x134a1c93bcdb2b44, 
0x9c9444bc390abac4,0x35bb23524b23b0bb,0xac2ad24c1b34332c,0x4b42ba4ab4c4bb03, 
0x344339b44a334a32,0xa4139a3333a341bc,0xba3d333c21c10943,0xb43aa313224bd3bb, 
0xb041ac9c4089928b,0x893b193003a2a41b,0xababbb3039b88aa2,0x1a34aaba9310ba31, 
0x34caacba08c42303,0x1c5381b3bc9cb434,0xac0343ba4b11aa1c,0x9c3a4c4ab02222bb, 
0x3dba35b443033ca4,0x33a03abbbb34c543,0x2a342b4a54034834,0xc0484cbb34499b4a, 
0x23bbc41cbb9cab20,0xab3bca8c2b403b2c,0x01b40a243cb313b1,0x54c4323c4bc8cc41, 
0xa43c448324d59322,0x3b48425289230b45,0x5cbbab84bc444bbc,0xb0a94c2845abbb23, 
0x00b39800a44331ca,0x0b2d02143b0a5342,0x284b0ac0aa3a9ba0,0x90013a0132a1929a, 
0xb9bcb42cbb33d0cb,0x2b0944c94c1028b9,0x3431cba84c333bc3,0xa4cab3bb4b24acb1, 
0x3033333aabbc9cbc,0x42a1c523a123804b,0x930a14c3c123b33c,0x03b29c3983c3b4ac, 
0x3a83314a412bad3a,0x2ab00baa4243a481,0xb33b12843c43833a,0x34343b3ca32b1121, 
0x214bc4ab01b3492c,0x51ba309a2b8a433c,0xac34dcb49b4394bc,0x13a3bca823c240cb, 
0x4c943394b3bb292c,0x84b332b2c0430333,0x3299b423c2349281,0x21b204320202c0cb, 
0xc4bb3bb2d999b4ac,0x1cbc8bb9baab9c3b,0x28cca13b3bccb8ca,0xa31acb4c9dcbbb04, 
0xbb23434bcc03991b,0xcc83bbd4cc8b201c,0x384a823433a448d4,0x13bb3cb4c403ac33, 
0x3cb84c2bc0d4b134,0x3bc184b3b9ccac33,0x1bc42bb2c0d2cb0b,0xaccc3c5b0d4cc41a, 
0xc140a129532a014b,0x5c2b4b3b00cbc8b1,0xb430bc593b3024b3,0x0a20239aac40ba93, 
0x394bba89812ba0ab,0xcc34b9b4ccba10c8,0x3340abb2b4334bb2,0xc80caaa3b3a9420b, 
0x4cc9abb331923b8b,0xa4b248b3a2ab32aa,0x84bd33bbcc43a23a,0x8133cb43b22ab4bc, 
0xabbabcb43b0932cc,0xbacb3dbcbbcc4cdb,0xbb43a3cb1cba1141,0x409ba5c18c3888cc, 
0xdb2ba9c222cbba2c,0x313b8bbcba3bb84c,0x24cdc3431b392cb2,0x4b93813cba30a3b2, 
0xbc4a0440bcaa235c,0xac3a353409db4492,0xb22bbaa94cbba313,0x2c3c91c48c3d2bab, 
0x4bb4b24bb43b0bbb,0xbbacbb335a4b3b80,0xac4c4ccbbaa9cbbb,0x2cb38abb1acab241, 
};

static int backbone_model3_conv2_quant1_threshold[64 * 14] =
{ // torch.Size([64, 14])
-1160, -730, -515, -354, -246, -139, -31, 75, 182, 290, 397, 558, 773, 1203,
-784, -491, -344, -235, -161, -88, -15, 57, 130, 204, 277, 387, 533, 826,
-847, -549, -399, -287, -213, -138, -64, 10, 85, 159, 234, 346, 495, 793,
-895, -541, -363, -230, -142, -53, 34, 123, 212, 300, 389, 522, 699, 1054,
-857, -481, -293, -153, -59, 34, 128, 222, 316, 409, 503, 644, 832, 1207,
-808, -510, -362, -250, -176, -102, -27, 46, 121, 195, 269, 381, 530, 827,
-957, -624, -457, -332, -249, -165, -82, 1, 84, 167, 251, 376, 543, 876,
-1043, -642, -442, -292, -192, -92, 8, 108, 208, 308, 408, 558, 758, 1159,
-943, -637, -485, -370, -294, -218, -141, -65, 10, 87, 163, 277, 430, 735,
-1488, -1030, -800, -628, -513, -399, -284, -169, -54, 59, 174, 346, 575, 1034,
-742, -423, -264, -144, -64, 14, 94, 174, 253, 333, 413, 532, 692, 1010,
-934, -593, -423, -295, -210, -125, -39, 45, 130, 215, 300, 428, 599, 940,
-892, -596, -449, -338, -264, -190, -116, -43, 30, 104, 178, 289, 436, 732,
-805, -490, -333, -215, -137, -58, 19, 98, 176, 255, 334, 451, 609, 923,
-713, -356, -178, -44, 44, 133, 222, 312, 401, 490, 579, 713, 891, 1248,
-1206, -827, -638, -496, -402, -307, -212, -118, -23, 70, 165, 307, 496, 875,
-980, -597, -405, -261, -165, -69, 26, 122, 218, 314, 409, 553, 745, 1129,
-1049, -673, -484, -343, -249, -155, -61, 32, 126, 220, 314, 455, 644, 1020,
-864, -586, -447, -343, -274, -204, -135, -66, 3, 72, 142, 246, 384, 662,
-1012, -700, -545, -428, -350, -272, -194, -117, -39, 38, 116, 233, 388, 700,
-891, -532, -352, -218, -128, -38, 51, 140, 230, 320, 410, 544, 724, 1083,
-762, -434, -270, -147, -65, 16, 98, 180, 262, 344, 426, 550, 714, 1042,
-1231, -832, -632, -482, -382, -282, -182, -82, 17, 117, 217, 367, 567, 966,
-937, -553, -361, -217, -121, -25, 70, 166, 262, 358, 454, 598, 790, 1174,
-866, -507, -328, -193, -104, -14, 75, 164, 254, 343, 433, 568, 747, 1106,
-894, -584, -429, -313, -236, -158, -81, -3, 73, 151, 228, 345, 500, 810,
-608, -334, -197, -94, -26, 42, 110, 179, 247, 315, 384, 487, 624, 897,
-969, -615, -438, -305, -216, -128, -39, 48, 137, 225, 314, 447, 624, 978,
-805, -480, -317, -196, -114, -33, 47, 129, 210, 291, 373, 494, 657, 982,
-897, -546, -370, -238, -150, -62, 25, 113, 200, 288, 376, 508, 684, 1035,
-976, -617, -437, -302, -213, -123, -33, 56, 146, 235, 325, 460, 639, 999,
-740, -442, -293, -181, -106, -32, 42, 116, 191, 266, 340, 452, 601, 899,
-1151, -754, -556, -408, -309, -210, -111, -12, 86, 185, 284, 433, 631, 1027,
-1042, -610, -394, -233, -125, -17, 90, 198, 306, 414, 521, 683, 899, 1330,
-1005, -629, -442, -301, -207, -113, -20, 73, 167, 261, 355, 495, 683, 1058,
-782, -483, -334, -222, -147, -73, 1, 76, 150, 225, 300, 412, 561, 860,
-906, -587, -427, -308, -228, -148, -68, 10, 90, 170, 250, 369, 529, 848,
-782, -465, -306, -187, -107, -28, 50, 130, 209, 288, 368, 487, 646, 963,
-1149, -792, -613, -479, -390, -300, -211, -121, -32, 56, 146, 280, 459, 816,
-828, -523, -370, -256, -180, -103, -27, 48, 124, 201, 277, 391, 544, 849,
-1262, -799, -568, -394, -279, -163, -47, 67, 183, 299, 414, 588, 819, 1282,
-1034, -675, -496, -361, -272, -182, -92, -3, 86, 175, 265, 399, 579, 937,
-631, -349, -208, -102, -31, 38, 109, 179, 250, 320, 390, 496, 637, 919,
-920, -581, -411, -284, -200, -115, -30, 54, 138, 223, 308, 435, 604, 943,
-829, -536, -390, -280, -206, -133, -60, 13, 86, 159, 233, 343, 489, 782,
-794, -455, -286, -159, -74, 10, 95, 179, 264, 349, 434, 561, 730, 1069,
-886, -561, -398, -276, -195, -114, -32, 48, 129, 210, 292, 414, 576, 901,
-973, -596, -407, -265, -170, -76, 18, 112, 207, 301, 396, 537, 726, 1104,
-654, -409, -286, -194, -133, -71, -10, 50, 111, 173, 234, 326, 448, 693,
-833, -520, -363, -245, -166, -88, -10, 68, 146, 225, 303, 421, 578, 892,
-861, -547, -390, -273, -194, -116, -37, 40, 119, 197, 276, 393, 550, 864,
-665, -374, -229, -120, -47, 25, 97, 170, 243, 316, 388, 497, 643, 933,
-1046, -647, -447, -298, -198, -98, 0, 100, 200, 300, 400, 549, 749, 1148,
-799, -485, -328, -210, -132, -53, 24, 103, 181, 260, 338, 456, 613, 927,
-1209, -854, -677, -544, -455, -366, -278, -189, -100, -11, 76, 209, 387, 742,
-1057, -658, -458, -308, -209, -109, -9, 90, 190, 290, 390, 539, 739, 1138,
-1156, -790, -606, -469, -377, -286, -194, -102, -11, 80, 172, 309, 492, 859,
-780, -449, -284, -161, -78, 4, 86, 169, 251, 334, 416, 540, 705, 1035,
-688, -440, -316, -223, -162, -100, -38, 23, 85, 147, 209, 302, 426, 674,
-792, -534, -404, -308, -243, -178, -114, -49, 14, 79, 144, 240, 370, 628,
-1113, -790, -628, -507, -426, -346, -265, -184, -103, -22, 57, 179, 340, 663,
-1130, -764, -581, -444, -352, -261, -169, -78, 13, 104, 196, 333, 516, 882,
-1096, -675, -464, -306, -201, -96, 9, 114, 219, 324, 430, 588, 798, 1219,
-1071, -716, -538, -405, -317, -228, -139, -51, 37, 126, 214, 348, 525, 880,
};

static uint64_t backbone_model3_conv2_conv2_weight[64 * 9] =
{ // torch.Size([64, 3, 3, 1])
0x2, 0x4, 0x4, 0x2, 0x4, 0x4, 0xb, 0x4, 0x3, 
0x5, 0xa, 0xd, 0xb, 0xd, 0x0, 0xb, 0x4, 0x4, 
0x4, 0x4, 0x4, 0x3, 0x3, 0x4, 0xb, 0xc, 0xc, 
0xc, 0xc, 0xb, 0xc, 0x8, 0xb, 0xd, 0xb, 0x9, 
0x4, 0x4, 0xc, 0x3, 0x4, 0xc, 0x3, 0x0, 0xd, 
0xc, 0xc, 0x1, 0xa, 0xc, 0xd, 0x2, 0x2, 0xb, 
0x2, 0x3, 0xb, 0x4, 0xa, 0x4, 0x2, 0xe, 0x2, 
0xc, 0xb, 0xa, 0xc, 0xd, 0xb, 0x4, 0x3, 0x0, 
0x4, 0x5, 0xb, 0x0, 0x4, 0xd, 0x2, 0x5, 0xb, 
0xa, 0xc, 0xc, 0x1, 0xc, 0xb, 0x1, 0xb, 0xb, 
0x0, 0x3, 0x0, 0xb, 0xd, 0xc, 0xa, 0xb, 0x0, 
0xb, 0xc, 0xc, 0xc, 0x4, 0x4, 0xd, 0x2, 0x3, 
0xb, 0xc, 0x0, 0xc, 0xc, 0x4, 0xc, 0x3, 0x4, 
0x2, 0xb, 0xb, 0x0, 0xd, 0xc, 0xb, 0x4, 0x4, 
0x3, 0x1, 0x2, 0xb, 0xd, 0xa, 0xb, 0xc, 0xc, 
0xc, 0xb, 0xb, 0xc, 0xc, 0xb, 0xa, 0xb, 0xc, 
0x3, 0x3, 0x2, 0x2, 0xc, 0xe, 0x3, 0xc, 0xb, 
0xc, 0xc, 0xc, 0xb, 0xc, 0xb, 0x3, 0x4, 0x4, 
0x4, 0xb, 0xc, 0x5, 0x4, 0xc, 0x8, 0x4, 0x0, 
0xc, 0x5, 0x4, 0xb, 0x4, 0x9, 0xc, 0x4, 0x4, 
0xb, 0xe, 0x9, 0xb, 0x0, 0x3, 0x0, 0x0, 0x1, 
0x3, 0x2, 0x3, 0x4, 0x3, 0x2, 0x3, 0x4, 0x2, 
0xa, 0x4, 0x4, 0x3, 0x3, 0x4, 0x2, 0xd, 0xd, 
0xb, 0xd, 0xd, 0x0, 0xb, 0xb, 0x3, 0xa, 0x0, 
0x2, 0x4, 0x9, 0x4, 0x3, 0xb, 0xc, 0xe, 0xc, 
0x3, 0x4, 0x4, 0xa, 0xa, 0xb, 0xc, 0xc, 0xc, 
0x8, 0xc, 0x4, 0x3, 0xd, 0x3, 0xa, 0xa, 0x0, 
0x4, 0x4, 0x4, 0x2, 0x2, 0x2, 0xc, 0xc, 0xb, 
0x2, 0x2, 0xa, 0x0, 0xe, 0x0, 0x9, 0x2, 0x0, 
0xb, 0xb, 0xc, 0xb, 0xa, 0xa, 0xc, 0xd, 0xb, 
0x3, 0x4, 0x2, 0x4, 0x5, 0x4, 0x0, 0x3, 0x3, 
0x9, 0x2, 0x3, 0x8, 0xc, 0xc, 0xc, 0xd, 0xd, 
0x0, 0x6, 0x3, 0xb, 0x3, 0xb, 0xb, 0xb, 0x9, 
0x9, 0xb, 0x9, 0x9, 0xb, 0xb, 0xc, 0xc, 0xc, 
0xa, 0xb, 0x3, 0xc, 0xc, 0xa, 0xc, 0xc, 0xa, 
0x3, 0x3, 0xb, 0x4, 0xc, 0xc, 0x4, 0xd, 0xb, 
0xc, 0xc, 0x9, 0xc, 0x4, 0x4, 0xc, 0x5, 0x1, 
0xd, 0xc, 0x9, 0xc, 0x4, 0x2, 0xb, 0x3, 0x9, 
0xc, 0x1, 0x3, 0xc, 0x2, 0x5, 0xa, 0x4, 0x4, 
0xb, 0x4, 0x4, 0xc, 0xb, 0x4, 0x8, 0xd, 0x4, 
0xb, 0x4, 0x3, 0x2, 0x3, 0x4, 0x3, 0x4, 0x2, 
0x9, 0x3, 0x4, 0xc, 0xa, 0x3, 0xd, 0xd, 0xb, 
0xc, 0xc, 0x2, 0xc, 0xc, 0x3, 0xc, 0x2, 0x4, 
0x2, 0x0, 0x3, 0x3, 0x3, 0x4, 0x0, 0x0, 0xa, 
0x4, 0x4, 0xa, 0x3, 0x4, 0xc, 0x4, 0x4, 0xb, 
0xc, 0xd, 0xc, 0xd, 0xb, 0x1, 0xa, 0x2, 0x3, 
0x2, 0x5, 0x4, 0x0, 0xc, 0x5, 0x0, 0xc, 0x3, 
0xc, 0xc, 0x0, 0x8, 0xd, 0xb, 0xb, 0xd, 0xb, 
0x3, 0xc, 0xb, 0xc, 0x4, 0xc, 0x9, 0x5, 0xb, 
0xb, 0x5, 0x5, 0xc, 0xa, 0xb, 0xa, 0x0, 0x0, 
0x2, 0xc, 0xb, 0x4, 0xb, 0xc, 0x4, 0x4, 0xc, 
0xa, 0x4, 0x3, 0xa, 0xc, 0x3, 0xa, 0xd, 0xb, 
0xc, 0xd, 0xd, 0x1, 0xa, 0xa, 0x2, 0xa, 0xa, 
0x1, 0xa, 0xc, 0xb, 0xa, 0xa, 0xb, 0xa, 0xb, 
0x4, 0x3, 0xb, 0x4, 0x4, 0x9, 0x3, 0x1, 0x3, 
0x1, 0x4, 0x5, 0xb, 0x9, 0x5, 0x0, 0xc, 0x3, 
0x3, 0x9, 0x0, 0x4, 0x5, 0xa, 0x1, 0x4, 0x2, 
0x0, 0x3, 0xa, 0x3, 0x5, 0x2, 0x3, 0x4, 0x2, 
0x4, 0x9, 0xc, 0x3, 0x5, 0xb, 0xb, 0xb, 0x3, 
0xb, 0xc, 0xc, 0x9, 0x3, 0x3, 0x3, 0x5, 0x4, 
0x4, 0x4, 0x4, 0x5, 0xb, 0xb, 0x4, 0x4, 0xc, 
0xc, 0x4, 0x3, 0xc, 0x5, 0x2, 0x9, 0x4, 0x2, 
0xb, 0x2, 0x1, 0x1, 0x3, 0x4, 0x4, 0x4, 0x5, 
0xb, 0x2, 0x0, 0xb, 0x5, 0x2, 0x2, 0x3, 0x9, 
};

static int backbone_model3_conv2_relu2_threshold[64 * 7] =
{ // torch.Size([64, 7])
-38, 17, 72, 128, 211, 321, 543,
23, 75, 126, 178, 255, 358, 564,
62, 97, 132, 167, 220, 290, 430,
35, 85, 135, 185, 260, 361, 561,
77, 120, 164, 207, 273, 360, 534,
46, 84, 122, 160, 217, 292, 444,
-4, 62, 128, 195, 295, 429, 696,
-19, 23, 66, 109, 173, 259, 430,
2, 59, 117, 175, 262, 378, 609,
14, 54, 94, 134, 194, 274, 433,
24, 62, 100, 137, 194, 269, 420,
-19, 30, 79, 128, 202, 301, 498,
77, 114, 151, 189, 245, 320, 469,
21, 59, 96, 133, 189, 263, 412,
0, 43, 85, 127, 191, 276, 445,
7, 53, 100, 147, 218, 311, 499,
159, 217, 274, 331, 416, 531, 759,
67, 107, 147, 187, 247, 327, 487,
108, 151, 193, 235, 299, 384, 553,
55, 99, 143, 188, 254, 343, 521,
6, 49, 92, 135, 200, 286, 459,
4, 43, 83, 123, 182, 261, 419,
90, 125, 161, 196, 250, 321, 462,
22, 81, 140, 199, 287, 405, 641,
46, 102, 159, 216, 301, 414, 640,
53, 88, 122, 156, 208, 277, 414,
44, 81, 118, 155, 210, 283, 430,
22, 53, 84, 115, 162, 224, 349,
-5, 45, 96, 147, 223, 325, 528,
-35, 16, 67, 119, 196, 300, 506,
-146, -63, 18, 101, 226, 391, 723,
38, 91, 145, 198, 278, 385, 598,
64, 105, 146, 186, 247, 329, 491,
7, 52, 97, 142, 209, 299, 478,
0, 44, 89, 134, 201, 291, 470,
80, 110, 140, 170, 215, 276, 396,
95, 136, 178, 219, 281, 364, 529,
-43, 0, 44, 87, 153, 241, 416,
56, 106, 156, 205, 280, 379, 578,
57, 97, 136, 175, 234, 313, 469,
16, 55, 93, 132, 190, 267, 421,
33, 80, 127, 174, 245, 339, 527,
15, 60, 105, 150, 218, 308, 488,
57, 84, 112, 139, 180, 235, 344,
34, 72, 111, 149, 207, 284, 438,
5, 54, 102, 151, 223, 320, 515,
3, 60, 118, 176, 262, 377, 608,
-4, 44, 93, 142, 216, 314, 510,
-57, -11, 34, 81, 150, 243, 429,
41, 77, 114, 150, 204, 276, 420,
62, 91, 120, 149, 193, 252, 369,
80, 118, 156, 194, 251, 327, 479,
53, 103, 154, 204, 280, 380, 582,
8, 44, 80, 116, 170, 242, 386,
-10, 24, 60, 95, 148, 218, 359,
34, 78, 122, 166, 232, 320, 496,
-24, 7, 39, 71, 118, 182, 309,
-27, 30, 87, 145, 231, 346, 576,
-3, 36, 77, 117, 178, 259, 422,
133, 186, 239, 292, 371, 477, 689,
86, 129, 172, 215, 279, 365, 538,
-36, 13, 63, 113, 188, 288, 488,
71, 124, 176, 228, 306, 411, 620,
21, 50, 79, 108, 152, 210, 327,
};

static uint64_t backbone_model4_conv1_conv1_weight[64 * 1*4] =
{ // torch.Size([64, 1, 1, 64])
0xa3a4bbbac39ab401,0xb213ad31132241c1,0x4bc2b0344ccbd51b,0x314523ac132b13ab, 
0xaba0bac332a4a23b,0x02b49244b22bbaa0,0x4ab9b949b0b34bb5,0x389a3a51bb084db4, 
0x23ba81b222a53b38,0x324ca434c43bc313,0xa029bb015214cb0b,0xb81ca3ca0b43cb13, 
0x153ab8ccbcbc9c0a,0xb190b82432b93b1c,0xd5429944c8cba3cc,0xb983942a2b334b1c, 
0x932a103233daa01b,0x3b3c3ac913100cd2,0x42c4a24248301282,0x44aba4c243028a24, 
0x2c4c34b340c91222,0x44abb5ab424bbcc8,0xc029a31bc9914c23,0xb9ac92329944bca3, 
0x13a38bb42034bc3b,0x42230a34232a2b34,0xa9014ac423b43984,0x8c0a33b349c53cb2, 
0x0aaccbabc53ac1ba,0x803b143433431ccb,0x4a2b5baa134bcbc0,0x44333a49c802bcbc, 
0xb4d22341c1340829,0x23343c24c2414442,0x3bb9c4ba3a13b143,0xc03a0222c8cb18b3, 
0xc1db4d29bccbc44c,0xbca3b333d48c4bb4,0x1434cc39a2335394,0x3cd2092c3c142be4, 
0xb4bb0ab08cbcbab2,0x20a92b439abba4a0,0x1434bb2b002bcabc,0x3c9c4b3c38ccb324, 
0xba92c3c33ac39328,0x89ab8bad49cac440,0x44b1333bca2333bb,0x491302919243a982, 
0xaaa48241bb310900,0xb2ca4c29bbcc034b,0x4b89a8313bc93282,0x0b00a20819432bbd, 
0x1b3223b233ca3231,0x321ac02a23223cc0,0x1023a3b181033303,0x040a30949222220a, 
0x9c3c334a349a34aa,0xcabb81d32ca2c14c,0xcc39991d08429138,0x03b4ac4baa4bc493, 
0x142c202b3bb934b3,0xc2028c4b3c01944c,0xc433245aab0c322d,0x4933930b23bb9334, 
0x3c3230b40ccb9034,0xc49bacac3c134424,0x31a48b93a4b92923,0x0b8c42b040a39395, 
0x2d44c832acbc99ba,0x4bb1a433b4aa4b24,0x9342bb228bc04234,0xdcb3bca93bc48baa, 
0xc4aa0b40b0a843c4,0xbbc4b0a3c39d4bab,0x3b35cb4bce4cbc4d,0x1bc3d34adbacc4a5, 
0xcabba23aa4123bb0,0xc0c01c3c3abc0a49,0x442323ba3b39a32b,0x53bcb9b3093cc213, 
0x3950c443c244b523,0xaa3a03ba5ac53bcc,0x43c0b4bbcb3354bc,0xdbb43b54c2b5cb3c, 
0x1a82bb4b394ca8b2,0xbba043d4bbb39430,0xbc423234124a3ba4,0xb323b8c2aa320cab, 
0xb2b32b33ca50b400,0x1a248ccb4abb8432,0x3acb3a9b493a8233,0x3c04b3a0b0a944a2, 
0x3c39b80b999904c9,0x08942ba344a43dac,0x0ca2b2bacb3c04bd,0x20249b4bc390bb3b, 
0x3c32c3a9123cb920,0x41104204cc928421,0x3950129aa0234bb8,0x832d3db3bac24d2c, 
0x239ac4342134c519,0xbbc4a43b2da8a1c0,0xcc10233a49b93c3b,0x332c3239a20943bb, 
0x0a9908920b92b2ab,0xabca3cac0cc9a33a,0xabab8b3ab92acc1a,0x0ab8a84ba93ac1b9, 
0x23352abcb1c210b1,0x414b0c08a2a2344c,0x48b3a1903b903348,0x2d13239a39a2ca35, 
0xc4b31c434392b132,0x9c2093ba34d283bd,0x0402b903802a2924,0x3c30bc20331a41c2, 
0x8abb92bcb3232cb3,0x3a84323422a34c02,0x841041334ba0b24a,0x200ca3c338c30325, 
0x9304b228bb80423a,0x39d04cb004dc33b3,0x18b282b1cb22282b,0x0383c33ab2044c23, 
0x2d39124d4bb1b100,0xb3b224941a2033ba,0xa112423b314c2222,0x29a92a2b3a04c224, 
0xb4ab2b4c93a92d1b,0x80a32bc5bc23844a,0xc39b1a5433b94399,0x4b2900a24b34139b, 
0xcb3cc95d4318b919,0xca3b1cc204b0b54c,0x130a43b0b1212082,0xb41aab4baa40ccab, 
0x23013b24bb22aba2,0x4a0b2494b482ac0a,0x3221a033d4803994,0xd0abbb32c200192d, 
0x821223823014a23b,0x2223b233cc1a3a19,0x23dd3b4a23ca321b,0x2e13333198333a4d, 
0x8b443454592b4321,0xa2cb444d43a99ba9,0xc4a3305dab3952b3,0xccb22b334203b4bc, 
0x4b3bc324a3323600,0xbbc39202bb9abc2b,0xdba928b82a20aa33,0x03c1333ba2a240ac, 
0xab1bb2cc2bdc09ba,0xbb3a223ba3124b34,0xa4422aa3dbb32401,0xc39321b001a90cb4, 
0x2a01bb9b31ccab29,0x315bcbacab442a1a,0x3a4229a35aa0248c,0x31b8bad038529bbc, 
0x93228b2c3bb4b48b,0xbccabc2222cc920c,0x23abac4acb4b41b8,0x33b38b5bbc233cc4, 
0x2c1a33bca95cbb91,0xbc1533c103a3bcd4,0x212b4939c9cb0db4,0x24b39389933a449c, 
0xb39cc31a9bcc4c92,0xa0b3b332bb1a403a,0xc132b94048cb2459,0x9c123c234a2acb1c, 
0x13301039bdba10b1,0x9bb4410222c04bdc,0x1130b3c0b8b04242,0xbbb02a4343d32b14, 
0x3aa32032cb34cba2,0xac32cadbc4abb343,0x2c42b2c9c3c43d02,0xd4abc3dab2d308ac, 
0xb4bc00acb9b0b3c2,0xbc4902a5ba24340c,0xb4393aab9bb02b4d,0xcccaa25a0b13c4a4, 
0xbbba2a34b4432ab1,0xc92a9930c2abc33b,0x4ba2b339399a82ba,0xc281cc33c3bdb9bb, 
0x24442c42dc0ca132,0x3038a8b4bab3919a,0x4b30dc333239a4a3,0x2c332ca9a3c353ba, 
0x9cbaa3c4329b343a,0xa354119c33154ba4,0xca3c51b144c2051b,0x3c3343a24a43243b, 
0xbcc243c433ca2cc2,0x4b325bba33c13c22,0xb842bbd3c3c9cb14,0x049bb4cbbb9d4905, 
0x2008133343b34883,0x9311b94833000923,0xa334230ac2133302,0x4441111313429923, 
0x1bb3c1332e403baa,0x0bba4849340b8b34,0xc95102b4c42332c3,0xcd3333b239c42c1a, 
0x3c39ba93c44ab0a1,0x925a19b51215a2cb,0xa1a24ab24a0a10ba,0xcb93833a32da1239, 
0x3433b21b3c04bbc3,0xbbab4b43abbac44b,0xa45141482329acb3,0x923accdc2bca9d2c, 
0x2b434c4c8bccb910,0xc84a3dcb33b484ab,0x40a223208a224342,0x8401b4b433b409a4, 
0x3402b2acbb430022,0x32024c20bb3b2a32,0x0c8a2ca2320bdabc,0x0112192c394cb1ab, 
0x348cda322143a421,0xbbb2a8242b2934bb,0xbb3b02b42012a1ac,0x443d0b0abab243bc, 
0x1bc44ac8bbbc3324,0x4b20abbc35024cbb,0xcba4b0cb2cbb004a,0xd284b3b24323d3c4, 
0xabb8c4994bc4b2a2,0x44dbbb441bacb3b2,0x4c4bd3cc41c330ca,0x41bd3d52c33b2bbc, 
0xb592b3033233ab98,0xa3bbcb5d12bbb93b,0xd42ba19c33bbb3c2,0xbbab24caa3b1939c, 
0x333b982bcc1333c0,0x3c92a3a2b3b9041c,0x3b931ab8cbb2a82d,0xda12c24bb0dcb044, 
0x2ba5d9b4b28342c3,0x2ab398aa02904b4b,0xb9b3822a998ab404,0xc0240a3ab1ba3da1, 
0xa33240b0bba4c3b0,0xabc2bc3888ad3b33,0x4c2bcd3bcc338b44,0x4bd2ba4cccbc3894, 
0x444cbbb1a11c4c04,0x14242cc42823ccc4,0xbcc3bcb4c9b19bac,0xa22b3340b2a25041, 
};

static int backbone_model4_conv1_quant1_threshold[64 * 14] =
{ // torch.Size([64, 14])
-1170, -742, -528, -368, -261, -154, -47, 59, 166, 273, 380, 540, 754, 1182,
-1228, -804, -592, -433, -327, -222, -116, -10, 95, 201, 307, 466, 678, 1101,
-1012, -623, -428, -282, -185, -88, 8, 106, 203, 300, 397, 543, 738, 1127,
-1112, -702, -497, -343, -240, -138, -35, 66, 169, 271, 374, 528, 733, 1143,
-1024, -616, -412, -259, -157, -55, 46, 148, 250, 352, 454, 607, 811, 1218,
-1131, -653, -413, -234, -114, 5, 124, 244, 364, 483, 603, 783, 1022, 1501,
-1126, -644, -403, -223, -102, 17, 138, 258, 379, 499, 620, 801, 1041, 1523,
-1455, -939, -681, -487, -358, -229, -100, 28, 157, 286, 415, 608, 866, 1383,
-1445, -971, -734, -557, -438, -320, -201, -83, 35, 153, 271, 449, 686, 1160,
-2389, -1700, -1355, -1096, -923, -751, -579, -406, -234, -61, 110, 369, 714, 1404,
-1437, -943, -696, -511, -388, -264, -141, -17, 105, 229, 352, 537, 784, 1278,
-976, -593, -401, -258, -162, -66, 29, 125, 220, 316, 412, 556, 747, 1130,
-1145, -729, -521, -364, -260, -156, -52, 51, 155, 260, 364, 520, 728, 1145,
-1198, -716, -475, -294, -174, -53, 66, 187, 307, 428, 548, 729, 970, 1452,
-1443, -959, -717, -536, -415, -294, -173, -52, 68, 189, 310, 492, 734, 1218,
-1059, -641, -432, -275, -171, -66, 37, 142, 246, 351, 455, 612, 821, 1239,
-1004, -571, -355, -193, -85, 23, 131, 239, 347, 455, 563, 725, 942, 1374,
-1208, -758, -533, -364, -251, -139, -26, 85, 198, 310, 423, 592, 817, 1267,
-2174, -1503, -1167, -916, -748, -580, -412, -245, -77, 90, 258, 509, 845, 1516,
-1011, -647, -465, -329, -238, -147, -56, 34, 125, 216, 307, 444, 626, 990,
-1244, -705, -435, -233, -98, 35, 170, 305, 440, 575, 710, 912, 1181, 1721,
-1062, -683, -494, -352, -258, -163, -68, 25, 120, 215, 309, 451, 641, 1019,
-1291, -866, -654, -495, -389, -282, -176, -70, 35, 141, 248, 407, 619, 1044,
-1450, -998, -771, -602, -489, -375, -262, -149, -36, 76, 189, 359, 585, 1038,
-1020, -629, -433, -287, -189, -91, 6, 104, 201, 299, 397, 544, 739, 1130,
-915, -573, -403, -275, -189, -104, -19, 66, 151, 236, 322, 450, 620, 962,
-1518, -1055, -823, -649, -533, -418, -302, -186, -70, 45, 161, 334, 566, 1029,
-968, -573, -376, -228, -129, -30, 68, 166, 265, 364, 463, 611, 808, 1203,
-1234, -825, -620, -467, -365, -263, -160, -58, 43, 145, 248, 401, 605, 1014,
-796, -439, -261, -127, -38, 50, 139, 228, 317, 406, 496, 629, 808, 1164,
-1050, -679, -493, -354, -261, -168, -75, 16, 109, 202, 295, 434, 620, 991,
-1058, -623, -406, -243, -134, -25, 82, 191, 300, 408, 517, 680, 898, 1332,
-1181, -731, -505, -336, -224, -111, 1, 113, 226, 339, 452, 621, 846, 1297,
-1008, -611, -413, -264, -165, -66, 32, 132, 231, 330, 429, 578, 776, 1173,
-1034, -684, -509, -378, -290, -203, -115, -28, 59, 146, 234, 365, 540, 890,
-1465, -955, -700, -509, -381, -254, -127, 0, 127, 255, 382, 574, 828, 1338,
-1211, -672, -403, -201, -66, 67, 202, 337, 471, 606, 741, 943, 1212, 1751,
-1131, -728, -527, -376, -275, -175, -74, 26, 126, 227, 328, 479, 680, 1083,
-1255, -808, -585, -417, -305, -194, -82, 29, 141, 252, 364, 531, 755, 1202,
-1132, -650, -409, -228, -107, 12, 133, 253, 373, 494, 614, 795, 1036, 1518,
-1496, -1014, -774, -593, -473, -353, -232, -112, 7, 128, 248, 428, 669, 1150,
-1173, -774, -575, -426, -326, -226, -127, -27, 72, 171, 271, 420, 620, 1018,
-956, -595, -414, -278, -188, -98, -7, 82, 173, 263, 353, 489, 670, 1031,
-1017, -634, -442, -298, -202, -106, -10, 85, 181, 277, 373, 517, 709, 1092,
-1837, -1285, -1010, -803, -665, -527, -390, -252, -114, 23, 161, 367, 643, 1194,
-1091, -696, -499, -351, -253, -154, -55, 42, 141, 239, 338, 486, 683, 1077,
-1350, -926, -714, -555, -449, -343, -236, -130, -24, 81, 187, 346, 558, 982,
-1275, -837, -618, -454, -344, -235, -126, -16, 92, 202, 311, 476, 694, 1132,
-1459, -762, -414, -152, 21, 195, 369, 543, 717, 892, 1066, 1327, 1675, 2372,
-1482, -1022, -792, -620, -505, -390, -275, -160, -45, 69, 184, 357, 587, 1047,
-1050, -552, -302, -115, 8, 133, 257, 382, 507, 631, 756, 943, 1192, 1691,
-1100, -685, -477, -321, -217, -114, -10, 93, 197, 301, 405, 561, 768, 1184,
-963, -557, -353, -201, -99, 2, 103, 205, 307, 408, 510, 662, 866, 1272,
-1301, -843, -613, -441, -327, -212, -97, 16, 131, 246, 360, 532, 762, 1220,
-1178, -699, -459, -279, -159, -39, 79, 199, 319, 439, 559, 739, 978, 1458,
-1286, -859, -645, -485, -379, -272, -165, -58, 47, 154, 261, 421, 634, 1061,
-969, -610, -430, -296, -206, -116, -26, 62, 152, 242, 332, 466, 646, 1005,
-1343, -838, -586, -397, -271, -145, -18, 107, 233, 359, 485, 674, 927, 1431,
-1371, -914, -686, -515, -401, -287, -172, -58, 55, 169, 283, 454, 683, 1139,
-1163, -739, -527, -368, -262, -156, -50, 55, 161, 267, 373, 532, 744, 1168,
-1555, -1040, -782, -589, -460, -331, -203, -74, 54, 183, 311, 505, 762, 1277,
-905, -583, -422, -302, -221, -141, -60, 19, 99, 180, 260, 381, 542, 863,
-1753, -1236, -977, -783, -654, -524, -395, -265, -136, -7, 122, 316, 574, 1092,
-1086, -653, -437, -275, -167, -58, 49, 157, 265, 373, 481, 644, 860, 1293,
};

static uint64_t backbone_model4_conv1_conv2_weight[64 * 9] =
{ // torch.Size([64, 3, 3, 1])
0x3, 0x4, 0x3, 0x4, 0x4, 0x3, 0x3, 0x4, 0xa, 
0x4, 0x5, 0x3, 0x0, 0x9, 0xa, 0xb, 0xc, 0xa, 
0x3, 0x5, 0x2, 0xb, 0x4, 0x3, 0xb, 0x3, 0x3, 
0xc, 0xc, 0xa, 0xb, 0x4, 0x4, 0x3, 0x4, 0x4, 
0x4, 0x4, 0x4, 0x0, 0xb, 0xb, 0xc, 0xc, 0xc, 
0x5, 0x3, 0xc, 0x3, 0xc, 0xb, 0x3, 0x3, 0xa, 
0x5, 0x4, 0xc, 0x4, 0xc, 0xb, 0xb, 0xa, 0xb, 
0x1, 0x4, 0x4, 0x4, 0x9, 0x0, 0x5, 0x2, 0x2, 
0x3, 0xc, 0xc, 0x1, 0x4, 0xd, 0x3, 0x3, 0xc, 
0xa, 0xb, 0xb, 0x8, 0xd, 0xd, 0x2, 0xb, 0x0, 
0xb, 0xb, 0xa, 0x2, 0x2, 0x3, 0x3, 0x4, 0x4, 
0xd, 0x5, 0x4, 0xc, 0xb, 0x3, 0xa, 0xc, 0x1, 
0x4, 0x4, 0x4, 0xa, 0x2, 0x4, 0xc, 0xc, 0x3, 
0x2, 0x1, 0x3, 0xb, 0xb, 0xb, 0xc, 0xb, 0xb, 
0x9, 0xc, 0xa, 0xa, 0xe, 0xb, 0x3, 0x2, 0x4, 
0xa, 0x3, 0xb, 0xc, 0xb, 0x0, 0x2, 0xd, 0xc, 
0x0, 0xa, 0x0, 0xb, 0x6, 0xa, 0x1, 0x3, 0x0, 
0xa, 0x8, 0xc, 0x3, 0x1, 0xc, 0x5, 0x5, 0xa, 
0x3, 0x3, 0xb, 0xd, 0xb, 0x4, 0xc, 0xa, 0x9, 
0x2, 0xc, 0xd, 0x3, 0x4, 0xc, 0xa, 0xa, 0xa, 
0xc, 0xd, 0x0, 0xb, 0xd, 0x9, 0x0, 0xa, 0x3, 
0x3, 0x1, 0xb, 0xc, 0xb, 0x2, 0xd, 0xb, 0x1, 
0x3, 0xb, 0xd, 0x4, 0x3, 0xc, 0x4, 0x3, 0xc, 
0x4, 0x2, 0x1, 0x2, 0xc, 0xb, 0x0, 0xd, 0xb, 
0xd, 0xd, 0x9, 0x2, 0x3, 0x8, 0x1, 0x3, 0x0, 
0x3, 0x1, 0xb, 0x4, 0xb, 0xc, 0x5, 0xc, 0xc, 
0x4, 0x3, 0xc, 0x3, 0x3, 0x3, 0x8, 0x2, 0x3, 
0xc, 0x3, 0x4, 0xc, 0x0, 0x5, 0xb, 0x0, 0x2, 
0x9, 0x3, 0x9, 0x3, 0xe, 0x2, 0x0, 0x2, 0x0, 
0x5, 0x4, 0x2, 0xa, 0xc, 0xc, 0xb, 0xa, 0xa, 
0x4, 0x8, 0xd, 0x4, 0xd, 0x2, 0x3, 0x8, 0x3, 
0xb, 0xb, 0x8, 0xa, 0x1, 0xb, 0xd, 0xc, 0xa, 
0xa, 0x4, 0x3, 0xb, 0xa, 0xb, 0xd, 0xd, 0xa, 
0x5, 0xb, 0xc, 0x5, 0xc, 0xc, 0x4, 0x4, 0xb, 
0xd, 0xc, 0x3, 0xa, 0xa, 0x4, 0x1, 0x4, 0x4, 
0x4, 0x3, 0x5, 0xc, 0xb, 0xb, 0xd, 0xc, 0xd, 
0x3, 0x3, 0x2, 0xc, 0xb, 0xb, 0xb, 0xc, 0xc, 
0x2, 0xb, 0xb, 0xa, 0x5, 0x4, 0xd, 0xb, 0x4, 
0xc, 0xc, 0xc, 0xa, 0xb, 0xb, 0x9, 0x2, 0xb, 
0x4, 0x5, 0x4, 0xa, 0xb, 0x9, 0x0, 0xb, 0x3, 
0xc, 0xa, 0x0, 0xd, 0x3, 0x0, 0xb, 0xb, 0xb, 
0xc, 0x2, 0x4, 0xd, 0xa, 0x5, 0x1, 0x2, 0x2, 
0x2, 0x9, 0x3, 0x4, 0x5, 0x2, 0x9, 0xc, 0xb, 
0xc, 0xc, 0xc, 0x1, 0xb, 0x3, 0x4, 0x2, 0x4, 
0x3, 0x4, 0x5, 0x2, 0x3, 0x4, 0xa, 0x0, 0x8, 
0x3, 0xd, 0xd, 0xa, 0x3, 0x1, 0xb, 0x9, 0xa, 
0x1, 0x3, 0x3, 0xd, 0x3, 0x3, 0xd, 0x3, 0x1, 
0xa, 0x3, 0x2, 0xb, 0xa, 0x4, 0x2, 0xe, 0xb, 
0x2, 0x5, 0x5, 0xb, 0x4, 0x3, 0x3, 0xa, 0x3, 
0xb, 0xb, 0xc, 0xa, 0xb, 0xb, 0xa, 0xc, 0xb, 
0x2, 0xc, 0xc, 0xc, 0xc, 0xb, 0xb, 0x3, 0x4, 
0x5, 0x4, 0x4, 0xb, 0xc, 0x0, 0xc, 0xc, 0xc, 
0x5, 0x4, 0xb, 0x4, 0xc, 0xc, 0x2, 0xb, 0x2, 
0x9, 0xe, 0x2, 0x2, 0xb, 0x2, 0x1, 0xc, 0x0, 
0xc, 0xc, 0xc, 0xa, 0xb, 0x0, 0xc, 0xa, 0xa, 
0x0, 0xc, 0x0, 0x4, 0xd, 0x3, 0x3, 0xd, 0x9, 
0xb, 0x9, 0x3, 0xd, 0x3, 0x1, 0xa, 0x4, 0x3, 
0x9, 0x6, 0x4, 0x8, 0x3, 0x1, 0xa, 0x1, 0xa, 
0x3, 0x3, 0x0, 0x3, 0x3, 0x4, 0x2, 0x3, 0x4, 
0xb, 0xa, 0xb, 0x3, 0xb, 0xc, 0x6, 0x4, 0x9, 
0xb, 0x4, 0x4, 0x4, 0xb, 0xc, 0x2, 0xc, 0xc, 
0x9, 0xb, 0xa, 0xa, 0xc, 0xc, 0x4, 0x4, 0x4, 
0x2, 0x3, 0x1, 0x3, 0xe, 0xa, 0xb, 0x9, 0x8, 
0x9, 0xb, 0xa, 0xb, 0x6, 0x9, 0x3, 0x4, 0x1, 
};

static int backbone_model4_conv1_relu2_threshold[64 * 7] =
{ // torch.Size([64, 7])
35, 84, 134, 184, 259, 359, 558,
-28, 25, 78, 131, 211, 317, 529,
17, 69, 121, 173, 251, 355, 563,
10, 50, 90, 130, 191, 271, 432,
34, 67, 100, 133, 182, 248, 380,
-5, 30, 67, 103, 158, 231, 377,
33, 65, 96, 127, 174, 237, 362,
-15, 45, 105, 166, 256, 377, 619,
-37, 0, 36, 73, 128, 201, 349,
28, 60, 92, 125, 173, 237, 366,
0, 32, 65, 98, 147, 213, 345,
-1, 47, 97, 146, 220, 318, 515,
-4, 24, 54, 83, 127, 186, 303,
11, 38, 65, 92, 133, 187, 296,
93, 149, 205, 261, 346, 458, 683,
-18, 23, 65, 107, 171, 255, 424,
-8, 53, 116, 178, 272, 397, 646,
-30, 23, 77, 132, 213, 321, 539,
29, 54, 79, 105, 143, 193, 294,
-11, 30, 73, 115, 178, 263, 431,
-51, 20, 92, 165, 273, 417, 705,
-3, 51, 105, 160, 243, 353, 573,
1, 37, 73, 109, 164, 236, 380,
-4, 27, 59, 92, 140, 205, 334,
42, 91, 141, 190, 265, 364, 562,
35, 77, 120, 163, 227, 313, 484,
4, 25, 47, 69, 101, 144, 231,
36, 77, 118, 159, 221, 303, 467,
2, 56, 110, 164, 245, 354, 570,
-12, 36, 84, 132, 204, 300, 493,
36, 82, 128, 174, 243, 335, 519,
42, 76, 110, 143, 194, 261, 396,
-8, 40, 88, 136, 208, 304, 497,
47, 93, 138, 184, 253, 344, 527,
7, 53, 99, 145, 213, 305, 487,
77, 123, 168, 214, 282, 374, 556,
0, 39, 80, 121, 182, 264, 427,
81, 121, 161, 202, 263, 344, 505,
53, 93, 133, 173, 233, 313, 473,
-79, -32, 14, 61, 131, 225, 412,
-6, 34, 75, 117, 179, 261, 426,
78, 115, 152, 189, 245, 319, 467,
4, 42, 79, 116, 172, 247, 396,
11, 49, 86, 123, 179, 254, 404,
31, 94, 157, 220, 314, 440, 692,
-37, 17, 71, 126, 208, 318, 537,
15, 57, 100, 142, 205, 289, 458,
-11, 48, 109, 169, 260, 381, 623,
-66, -17, 31, 80, 154, 252, 448,
35, 73, 111, 149, 206, 281, 432,
7, 41, 75, 109, 160, 228, 363,
58, 103, 148, 194, 261, 352, 533,
15, 58, 102, 145, 210, 297, 471,
62, 128, 193, 259, 357, 488, 750,
52, 94, 135, 177, 240, 323, 490,
32, 84, 137, 190, 268, 374, 584,
47, 78, 109, 140, 186, 247, 371,
-76, -9, 57, 124, 224, 358, 626,
13, 60, 107, 155, 225, 320, 509,
19, 81, 143, 205, 298, 421, 669,
14, 45, 77, 108, 155, 218, 343,
39, 80, 122, 163, 226, 309, 475,
32, 81, 130, 179, 252, 350, 545,
-6, 53, 113, 173, 263, 383, 623,
};

static uint64_t backbone_model4_conv2_conv1_weight[64 * 1*4] =
{ // torch.Size([64, 1, 1, 64])
0x483bbac9c2c3ab92,0xbc3c13923c9cb0ab,0x48b92c4ca4448cc9,0xa9b93a95dcbb00b2, 
0x38d325db3b29bb4b,0x2a1b1c3c84332843,0x813a2b93492a942b,0x34a03334242ab44a, 
0x33b83108bb0bba0b,0xb3342224b208b3db,0xaa23990222339140,0x0ba29b13bab9b3b3, 
0x94839a325c2b83b4,0x23cab88ba1accc3b,0xa4cb291c14ccaa32,0x4abccc34ba4c9abb, 
0xc59bbc3b430432c1,0x533c00aa3aacbb19,0xa0343cbb083b92cd,0xc39ab345314194cb, 
0xcd002133124a932b,0xc24b030bbb2ab110,0x210134333333483c,0x3c3921aca03b3344, 
0x8a4bb9320c342c1a,0xb9dcb0c10c1a2b2d,0x12b249b3505c80b4,0xd1c0332ccbbba34c, 
0x4bbc043a384cc323,0x41308b380a2bc101,0x0aa9339bb43a4cb0,0xc3abc2a0bb323233, 
0x000229bc33c43ba2,0x9a3c4c234aca13ab,0xa442cada4cbbc93b,0xad0b449ab3b1244c, 
0x2b44a3c22bc23b9b,0xa34b42c4210a3391,0xbcbb9b1b33a5c054,0x4b0340c592c129b1, 
0xa02c4281b381b304,0xbb2bc34230a31410,0xaa32c1d2ac04ba02,0x9b3c132289a52b32, 
0x4c3a344a14cc332c,0xb1232c8b322924b4,0x1b34344bc491ad2d,0xaca30b2b40421244, 
0xbaaa1b159c4aba33,0x1bca49ba9958ac39,0xcb4babb4bc293a94,0xbba3bcb1b9aa8cc1, 
0x0022043b4ba8220c,0x32bc2c304ccc3832,0xc8024b8ca4288042,0x32a143044142b33c, 
0x233219bb3c8433b2,0x4dcc10444aa20a33,0x34229aa14994cb0a,0x434c4424941a3323, 
0x4bc211ccaa20abbb,0xb943a8402bb2b51a,0x4b1bbb4cb3bac9cd,0xc3cb4cca33ba4c39, 
0x4b392033144cbb92,0xa44b02331338a3b0,0x3b2333c43a343144,0x332b2a22c9ca8442, 
0xcc423b01122d3ac4,0x505ca322223d2c93,0x3cb084b39b44c3b4,0xb043bab4cb21bbab, 
0x23a089c4033335c4,0xb4cd223b204cd44a,0x9232463ab83d92ba,0x93434344422039a3, 
0x39bd2311324ba1a9,0xa343bc82b2a32a22,0x3c933222c3343912,0xb42a022b3c012b54, 
0x92c8b33a324303a3,0x338130ba1a4c2c94,0xc0b03333cb39ba53,0x43c02c03429ca8a8, 
0x28282b244b4bc322,0x84caca5cb43c4313,0xb3ba3444412c49b3,0x8229b3a9b94acb2b, 
0x3b2b203ab0219a32,0xb9a28b9c432b9801,0x8bb6b11a390a9a02,0xa39b00923ccb0192, 
0x22123b321a3cc433,0x02253195b4aa03b4,0x4aa914034aba4943,0x3234b238d2413433, 
0x3ca8b2a3832ba34a,0xb23490abaa93ca41,0x312aa49cb1c2392a,0x43303092a3993c3c, 
0x30aabab52a1132a3,0xb32acab3b14a24bd,0xbbabdac433a1a834,0x8b3a321398b3bc32, 
0x44320102821033a4,0x433b02442a125824,0xb2a4b2aab32ba4a3,0x042c344434283c19, 
0x5414ba09c34354c5,0x2acb1a9313b341b3,0x21bab5b3ab43bac0,0x4a44a43943be43c9, 
0x2cb312babacccccb,0xc049cc95bbcccc99,0x21b3bbbcb22d46ac,0x3b13bc5c329bcb2a, 
0xbcb40b0b9249532b,0xcc422cccc30a88b2,0xa1439c0a0b3c3dbc,0x0bcaa01c053ba83b, 
0xb3b09a33bbb280a3,0x9b0bc44c4d5334c4,0x4342a3232cbca3cb,0x3ab2aa1b82b2b992, 
0x2ac9ab330c1bacb3,0xacadc1424b43a222,0xa8590b4bc2bac8ab,0x3bb3acc2c3b0cbb3, 
0x2d33a3bba31123aa,0xb42c202324033233,0x3b3811398c23b08a,0x920b34dca3409329, 
0xa0a00c394c1b22b3,0x21baab8aacbc2953,0xcbb9aaa9a49c4433,0xc2b2bb2caa4ba00c, 
0xcb0322442bb8c430,0x4435ca24b02001b4,0xb20a20b94d892233,0x2a3bbb9b3b4213c2, 
0x50a9b23babc199a0,0x38b2ab8c1ba92140,0xc295a1aba2a8b804,0xa3180a3a1a3bbc9b, 
0xc14c5a42cb80cc4c,0x1ccba2c2a9d9bcd3,0xaa035c840b419ab3,0xc3cb0bbb0cb3950a, 
0x8089ba089a298302,0x80a1901810828a29,0x09288400bb11a828,0x2039a2093090aa19, 
0xa0402b44ccc144cb,0x82bbb0a3ac049b0b,0xbcb23c134323b333,0x21c1142c39132abb, 
0x20028a9abcab434b,0x290a8aba42b15ba1,0x98bba4bca8b1bab8,0x0b13ab8b3cb99bba, 
0x82a4cbb31ba3329c,0x1414cc3cb2b32c9a,0xc544babb1cbca03a,0xc203b80c23539b3c, 
0xdca092c229a9c34c,0xc4c44b2aa4a33a30,0x930c14010b32bb43,0xcb3334cd0ba33aa2, 
0xb0b2a32ab45da443,0xb484bb0bd3213aa9,0xacb32332242b43ca,0x2324db5d394ccc32, 
0x3bcc43343a119bba,0x40b8cc1ccc942a42,0x93ab3894043c498b,0x24b9bbc3b43a4843, 
0x3a03901ab30b3325,0xab42cb9b3324ab39,0x3bc4340bc12341ca,0x93c3bb444402092b, 
0x9b9bb313c44bcb93,0xba2bb533cc4bbb35,0x3b133c3cc331bb00,0x4cbaaabaa134ccc3, 
0x293b34a82b4ccc2c,0xc020345b9b33a4bc,0xbcbacc91b3934ac4,0xbabb8bc4bbd24cb3, 
0xcc2a33324c201935,0xccbcb32c4d92c32c,0x013923b93494283b,0x191c4ac24333144a, 
0xb2ba5b32c9a3baa2,0xc2321b42a8b482c3,0x53aa3b332b4a82cb,0x12cb9ab9bccc49a4, 
0x0c41b1dc2431233a,0x21aa14a333c35814,0x22bb3a0b9b2a31bb,0x8aa329c91830b13c, 
0xc34b1c32acaba304,0x99ccb24029c0442a,0xb9b033a3bbb42a33,0xb1bca929b802b3b3, 
0xaacbcc2c24bb3ac1,0x4932ba2c0cba0c4b,0xdab3abcbc1984bbb,0xd5c2bbc244030b4b, 
0x12a3b3b3033b99c2,0x34042be0a3423c23,0x28cbc1432a3c02b4,0x9b3baaa29cac33a3, 
0x953ab22a1303b334,0x4c13241c24243c23,0x32aa351a32b30ca2,0x133c3242acc48433, 
0xc4952aa1bcbcb30b,0xa8a43abcc03aaccc,0x00bc203812aca1a1,0x3ab3cc4aabcbab29, 
0xab49d3b432834b24,0xa23b23c1824b8b35,0xc041b243bbaac8a3,0x4c32322044a2d1ab, 
0x2ccb302db459bcc9,0xb2cba430b2b19ba1,0x2a394b5bcb3b21ca,0x4cac3bc3aa3ab33a, 
0xcbacc3944b4bca22,0xa04334c3a03c4913,0xbb3b3233c32bbc42,0xbcb4cbb49c3cabc4, 
0x0bdcac44bb3aacb4,0xc9bcbbb3bb418a22,0xbb44ccc4ac3c09b2,0xbcc2ca40bb1a3cb4, 
0x8099a819932a9403,0x8292a91a08828c02,0x38199420ab21a109,0x303a91293908aa1a, 
0x3ba383238c3bc33a,0xb3441a30d4233bd9,0x3c4a2344b322baa0,0xb41bb042c3523b44, 
0x0b1132304c4cccca,0x32c2bb3cca29294b,0xb3bb3b9901dc2203,0x39b3bcaab389bc2c, 
0x3a2233a3503bbc2b,0x2334bac8bcbca239,0x40a2b22b14bb2200,0x2b3bbb14a03b1c3c, 
0xcba444cbb3cb3b8a,0x423a90bb149c0b49,0x0bb914a94832c201,0xcba0c43c0b30192b, 
};

static int backbone_model4_conv2_quant1_threshold[64 * 14] =
{ // torch.Size([64, 14])
-931, -603, -439, -316, -235, -153, -71, 10, 92, 174, 256, 379, 543, 871,
-770, -458, -301, -184, -106, -28, 49, 127, 205, 283, 362, 479, 635, 947,
-784, -496, -353, -245, -173, -101, -29, 41, 113, 185, 257, 365, 508, 796,
-975, -655, -495, -375, -295, -215, -135, -55, 24, 104, 184, 304, 464, 784,
-871, -557, -400, -283, -204, -126, -47, 30, 109, 187, 266, 383, 540, 854,
-768, -473, -325, -214, -141, -67, 6, 80, 153, 227, 301, 412, 559, 854,
-1059, -732, -569, -446, -364, -282, -201, -119, -37, 44, 125, 248, 411, 738,
-789, -482, -329, -214, -137, -60, 15, 92, 169, 245, 322, 437, 590, 897,
-809, -494, -336, -218, -139, -61, 17, 96, 175, 254, 332, 451, 608, 923,
-906, -527, -338, -195, -101, -6, 88, 182, 277, 372, 466, 609, 798, 1177,
-1256, -784, -548, -371, -253, -136, -18, 99, 217, 335, 453, 630, 866, 1338,
-879, -528, -352, -220, -132, -44, 43, 130, 218, 306, 394, 526, 702, 1053,
-915, -625, -480, -371, -299, -227, -154, -82, -9, 62, 134, 243, 388, 677,
-838, -508, -342, -218, -136, -53, 29, 111, 194, 277, 359, 483, 648, 979,
-789, -484, -332, -218, -141, -65, 10, 86, 162, 238, 315, 429, 581, 886,
-901, -584, -425, -307, -227, -148, -69, 9, 89, 168, 247, 366, 524, 841,
-642, -364, -225, -121, -51, 17, 87, 156, 226, 295, 365, 469, 608, 886,
-1088, -708, -518, -376, -281, -186, -91, 3, 98, 193, 288, 430, 620, 1000,
-1141, -715, -502, -342, -235, -129, -22, 83, 190, 297, 403, 563, 776, 1202,
-698, -417, -276, -171, -100, -30, 40, 110, 180, 251, 321, 427, 567, 849,
-876, -552, -390, -268, -187, -106, -25, 55, 136, 217, 298, 419, 581, 905,
-861, -556, -404, -290, -213, -137, -61, 14, 90, 166, 243, 357, 509, 814,
-732, -469, -338, -240, -174, -108, -42, 22, 88, 154, 219, 318, 449, 712,
-778, -441, -272, -146, -61, 22, 106, 191, 275, 359, 443, 570, 738, 1075,
-856, -511, -338, -209, -123, -36, 49, 135, 222, 308, 394, 524, 696, 1042,
-786, -513, -376, -274, -206, -138, -69, -1, 66, 134, 203, 305, 441, 714,
-906, -535, -350, -211, -118, -25, 66, 159, 252, 345, 437, 576, 762, 1133,
-972, -605, -421, -284, -192, -100, -8, 83, 175, 266, 358, 496, 680, 1047,
-1118, -749, -565, -426, -334, -242, -150, -58, 33, 125, 217, 356, 540, 908,
-1002, -667, -500, -375, -291, -207, -124, -40, 43, 126, 210, 335, 503, 837,
-725, -483, -362, -272, -211, -151, -91, -30, 29, 90, 150, 241, 361, 603,
-946, -645, -494, -381, -305, -230, -155, -79, -4, 71, 146, 259, 410, 711,
-804, -505, -355, -242, -168, -93, -18, 56, 131, 206, 281, 393, 543, 843,
-1013, -665, -492, -362, -275, -188, -102, -15, 71, 158, 245, 375, 548, 895,
-777, -468, -314, -199, -122, -45, 32, 109, 186, 263, 340, 455, 610, 918,
-766, -480, -337, -230, -159, -88, -16, 54, 126, 197, 269, 376, 518, 804,
-1150, -769, -578, -435, -339, -244, -149, -53, 41, 137, 232, 375, 566, 948,
-611, -379, -263, -176, -118, -60, -1, 56, 114, 172, 230, 317, 433, 665,
-737, -467, -333, -232, -164, -97, -30, 36, 104, 171, 238, 339, 474, 743,
-830, -535, -388, -277, -203, -129, -56, 17, 91, 165, 238, 349, 496, 792,
-920, -541, -352, -210, -116, -21, 73, 167, 262, 357, 451, 593, 782, 1161,
-989, -600, -406, -260, -163, -66, 30, 127, 225, 322, 419, 565, 759, 1148,
-1336, -910, -697, -537, -431, -324, -217, -111, -4, 101, 208, 368, 581, 1007,
-919, -579, -408, -281, -196, -111, -25, 59, 144, 229, 314, 442, 612, 952,
-687, -385, -234, -121, -46, 29, 104, 180, 255, 331, 406, 519, 670, 972,
-881, -570, -414, -298, -220, -142, -64, 13, 90, 168, 246, 363, 518, 829,
-1120, -732, -538, -392, -295, -198, -101, -4, 92, 189, 286, 432, 626, 1014,
-883, -549, -382, -257, -174, -90, -7, 76, 159, 243, 326, 451, 618, 952,
-943, -608, -441, -316, -232, -148, -65, 18, 102, 185, 269, 394, 562, 896,
-680, -414, -280, -180, -114, -47, 19, 85, 152, 219, 285, 385, 519, 785,
-860, -571, -427, -319, -247, -175, -103, -31, 41, 113, 185, 293, 437, 725,
-945, -631, -474, -357, -278, -200, -122, -43, 34, 113, 191, 309, 465, 779,
-926, -617, -462, -346, -269, -192, -115, -37, 39, 116, 193, 309, 464, 773,
-709, -408, -257, -144, -69, 5, 80, 156, 231, 306, 381, 494, 645, 946,
-943, -638, -485, -371, -294, -218, -141, -65, 10, 87, 163, 278, 431, 736,
-794, -495, -345, -233, -158, -83, -8, 66, 140, 215, 290, 403, 552, 852,
-955, -621, -454, -329, -246, -162, -79, 4, 87, 170, 254, 379, 546, 880,
-1003, -643, -463, -329, -239, -149, -59, 30, 120, 210, 300, 435, 614, 974,
-1051, -734, -576, -457, -378, -298, -219, -140, -61, 17, 97, 215, 374, 691,
-806, -498, -344, -229, -152, -75, 1, 78, 155, 232, 309, 424, 578, 886,
-812, -507, -354, -240, -163, -87, -11, 64, 141, 217, 293, 408, 560, 865,
-935, -623, -467, -350, -272, -194, -116, -38, 39, 117, 195, 312, 468, 780,
-1107, -692, -485, -329, -225, -121, -18, 85, 189, 293, 397, 552, 760, 1175,
-894, -572, -411, -290, -210, -129, -49, 31, 111, 192, 272, 393, 554, 876,
};

static uint64_t backbone_model4_conv2_conv2_weight[64 * 9] =
{ // torch.Size([64, 3, 3, 1])
0x9, 0x5, 0x4, 0xa, 0x5, 0x4, 0xa, 0xb, 0xc, 
0x4, 0x4, 0x3, 0x3, 0x3, 0x3, 0x2, 0x3, 0x2, 
0x1, 0xc, 0xc, 0x0, 0x2, 0xc, 0x8, 0x2, 0xc, 
0xa, 0x5, 0x8, 0x3, 0x4, 0xb, 0x3, 0x4, 0xb, 
0x2, 0xc, 0x9, 0x6, 0xc, 0x0, 0x3, 0x4, 0x2, 
0x9, 0x2, 0xb, 0x1, 0xe, 0xc, 0x3, 0x4, 0x0, 
0xa, 0xb, 0x3, 0xc, 0xb, 0x5, 0xc, 0x4, 0x5, 
0x4, 0x4, 0x2, 0xb, 0x2, 0xc, 0xd, 0xc, 0xc, 
0x5, 0x5, 0x4, 0x1, 0xc, 0xc, 0xa, 0xc, 0x1, 
0x4, 0x9, 0xa, 0x5, 0x4, 0x3, 0x3, 0x4, 0x4, 
0x3, 0x0, 0x3, 0x3, 0x3, 0x3, 0xa, 0x4, 0x4, 
0x8, 0xd, 0xd, 0x0, 0xb, 0x2, 0x3, 0x1, 0x9, 
0x3, 0x4, 0xd, 0x5, 0x3, 0xd, 0x3, 0x9, 0xc, 
0x1, 0xd, 0xd, 0x3, 0xa, 0xc, 0x3, 0x3, 0xc, 
0x3, 0xd, 0xc, 0x4, 0x3, 0xd, 0x4, 0x5, 0xc, 
0xb, 0xa, 0x5, 0x8, 0x3, 0x4, 0x4, 0x5, 0x4, 
0x4, 0x2, 0xc, 0x4, 0xc, 0xc, 0x2, 0xc, 0xc, 
0xb, 0xc, 0xc, 0xc, 0xb, 0xb, 0xb, 0xa, 0xb, 
0xb, 0xb, 0xb, 0xc, 0xb, 0xc, 0xa, 0xc, 0xc, 
0xc, 0x3, 0xc, 0x5, 0x3, 0xd, 0x3, 0xc, 0x9, 
0x2, 0x3, 0x2, 0xc, 0xa, 0xb, 0xc, 0xd, 0xc, 
0xd, 0xc, 0xb, 0xc, 0xb, 0xb, 0x9, 0x0, 0xa, 
0xa, 0xc, 0xa, 0x2, 0x6, 0xc, 0x9, 0xa, 0xb, 
0xc, 0x1, 0x4, 0xc, 0xa, 0x2, 0xd, 0xb, 0xb, 
0xa, 0x2, 0x0, 0x3, 0x4, 0x3, 0x4, 0x4, 0x1, 
0xc, 0x1, 0x4, 0xc, 0xc, 0x4, 0x1, 0xc, 0xc, 
0xc, 0xb, 0xc, 0xb, 0xb, 0xa, 0xb, 0xb, 0x4, 
0xb, 0xc, 0xb, 0xb, 0xc, 0xb, 0xc, 0xc, 0xb, 
0x4, 0xb, 0x4, 0x4, 0xc, 0x5, 0x2, 0x4, 0x2, 
0xd, 0xd, 0x3, 0x3, 0x4, 0x4, 0x4, 0x3, 0x3, 
0xc, 0xd, 0xc, 0x1, 0x4, 0x3, 0x2, 0x4, 0x2, 
0x5, 0x5, 0x4, 0xb, 0xc, 0x9, 0xa, 0xc, 0x4, 
0x1, 0x4, 0xd, 0x4, 0xd, 0xc, 0xa, 0x9, 0x3, 
0x4, 0x4, 0xa, 0xc, 0x4, 0x4, 0x9, 0xa, 0x5, 
0xa, 0xd, 0xc, 0x1, 0xc, 0xc, 0x0, 0xa, 0xb, 
0x3, 0x2, 0x2, 0x8, 0x6, 0xb, 0xa, 0x0, 0x9, 
0x3, 0x3, 0x3, 0x3, 0x4, 0x4, 0x1, 0x4, 0x4, 
0x0, 0x1, 0x3, 0x2, 0x1, 0x3, 0x9, 0x2, 0x3, 
0x5, 0x4, 0x4, 0xb, 0x3, 0x2, 0xc, 0xc, 0xa, 
0x5, 0x3, 0x3, 0x3, 0x9, 0x4, 0x3, 0x1, 0xb, 
0xc, 0xc, 0x5, 0xc, 0xd, 0x4, 0x8, 0x2, 0x5, 
0x4, 0x4, 0x4, 0x3, 0xd, 0xc, 0xb, 0xc, 0xd, 
0xb, 0xd, 0xd, 0x3, 0xa, 0xb, 0xb, 0x3, 0xb, 
0x4, 0x5, 0x4, 0x3, 0xa, 0x3, 0xa, 0x3, 0x9, 
0x4, 0x5, 0x4, 0xc, 0xc, 0xc, 0xb, 0xc, 0xb, 
0xc, 0xb, 0xa, 0x3, 0x5, 0x4, 0x3, 0x4, 0x4, 
0x3, 0x4, 0x4, 0xb, 0x4, 0x4, 0x9, 0x5, 0x3, 
0xe, 0xc, 0xb, 0xc, 0xb, 0x3, 0x4, 0x1, 0x3, 
0x3, 0xb, 0x1, 0x4, 0xb, 0x2, 0x6, 0x4, 0x8, 
0x4, 0x4, 0x5, 0x4, 0xc, 0xc, 0x4, 0xc, 0xd, 
0xc, 0xc, 0xb, 0x9, 0xa, 0xa, 0x5, 0x4, 0x3, 
0x0, 0xd, 0x9, 0x4, 0x3, 0xc, 0x4, 0x5, 0x4, 
0xc, 0xd, 0xc, 0x8, 0x2, 0xc, 0x5, 0x4, 0x4, 
0xc, 0x9, 0x5, 0xd, 0x0, 0x4, 0xc, 0xc, 0x3, 
0x4, 0x5, 0x3, 0x4, 0xb, 0xb, 0x3, 0xc, 0xb, 
0x2, 0x4, 0x3, 0x8, 0x2, 0xb, 0xb, 0xd, 0xd, 
0x4, 0x6, 0x3, 0x3, 0x3, 0xa, 0x9, 0xa, 0x3, 
0xa, 0x2, 0x3, 0x0, 0x2, 0x4, 0x2, 0x5, 0x4, 
0x4, 0x6, 0xa, 0x2, 0x3, 0x2, 0xb, 0x0, 0xb, 
0x1, 0x2, 0x3, 0x2, 0x2, 0x3, 0x9, 0x2, 0x4, 
0xa, 0xd, 0x1, 0xd, 0xb, 0x3, 0xc, 0x4, 0x4, 
0x5, 0xc, 0xd, 0x4, 0x0, 0xb, 0x4, 0x2, 0xb, 
0xb, 0xc, 0xc, 0x9, 0xa, 0xc, 0x0, 0xb, 0xb, 
0x3, 0xb, 0xb, 0x4, 0x3, 0x8, 0x4, 0x4, 0x5, 
};

static int backbone_model4_conv2_relu2_threshold[64 * 7] =
{ // torch.Size([64, 7])
19, 60, 101, 141, 203, 284, 447,
30, 78, 125, 173, 244, 339, 529,
36, 72, 108, 145, 199, 272, 417,
22, 63, 105, 146, 209, 292, 458,
9, 71, 134, 196, 289, 413, 661,
-38, 20, 80, 139, 229, 348, 587,
90, 138, 185, 233, 304, 400, 591,
-17, 30, 79, 128, 201, 299, 495,
29, 67, 105, 143, 199, 274, 425,
22, 68, 115, 162, 231, 324, 511,
14, 35, 57, 79, 111, 154, 241,
20, 65, 111, 157, 225, 317, 500,
74, 122, 170, 217, 289, 384, 575,
42, 89, 135, 181, 250, 342, 526,
71, 115, 159, 203, 269, 357, 533,
39, 85, 130, 175, 243, 334, 516,
-37, 10, 58, 107, 179, 275, 468,
-15, 36, 88, 140, 218, 321, 529,
3, 47, 91, 134, 200, 288, 463,
-11, 29, 71, 113, 175, 259, 426,
8, 52, 97, 141, 208, 298, 476,
48, 97, 147, 196, 270, 369, 567,
-87, -9, 69, 147, 265, 422, 736,
-6, 35, 78, 120, 184, 268, 438,
-31, 29, 90, 152, 244, 366, 612,
52, 89, 126, 163, 219, 293, 442,
-47, -10, 26, 63, 118, 192, 339,
-29, 17, 65, 113, 184, 279, 470,
2, 46, 89, 132, 197, 284, 457,
86, 126, 166, 205, 265, 345, 504,
64, 107, 150, 193, 258, 344, 516,
23, 66, 108, 151, 215, 300, 470,
26, 68, 110, 152, 215, 299, 467,
-2, 37, 76, 116, 175, 254, 412,
34, 84, 133, 182, 257, 355, 553,
-4, 51, 106, 162, 246, 358, 581,
48, 88, 129, 169, 230, 311, 473,
20, 40, 61, 81, 112, 153, 235,
14, 69, 125, 181, 264, 375, 598,
-59, -9, 40, 90, 165, 266, 467,
70, 113, 156, 200, 265, 351, 524,
70, 121, 172, 222, 298, 399, 602,
-66, -26, 13, 53, 112, 192, 351,
44, 90, 137, 183, 253, 346, 531,
55, 97, 140, 182, 246, 331, 500,
35, 79, 122, 166, 231, 318, 491,
21, 66, 110, 155, 221, 311, 489,
59, 132, 205, 278, 388, 535, 828,
56, 109, 162, 216, 296, 402, 616,
60, 103, 145, 187, 250, 334, 502,
43, 77, 111, 145, 196, 264, 401,
73, 124, 175, 226, 303, 405, 609,
73, 125, 176, 228, 306, 409, 616,
58, 112, 166, 219, 300, 407, 621,
-34, 4, 43, 82, 140, 218, 374,
56, 99, 143, 186, 250, 336, 508,
30, 82, 134, 186, 264, 368, 575,
8, 44, 80, 116, 171, 243, 387,
64, 114, 164, 214, 289, 389, 589,
24, 46, 68, 90, 123, 167, 255,
34, 77, 121, 165, 231, 319, 494,
38, 79, 120, 161, 222, 304, 468,
1, 38, 75, 112, 167, 241, 389,
38, 77, 117, 157, 216, 296, 454,
};

static uint64_t backbone_model5_conv1_conv1_weight[64 * 1*4] =
{ // torch.Size([64, 1, 1, 64])
0x3841ab1aaa41423b,0x29b3a233db0c8b98,0x034ab8babac42bc4,0x4443445429b13a24, 
0xbc40b3343b4b3c9c,0xda3b4b242b9c4a43,0x32ba40ca43b8c33a,0xcbb4baa13c8b542b, 
0x013b323a32e3c233,0xc32c3aa23131a248,0xb0ed43442c8b954b,0x3c92b409a3cca21b, 
0x332c43592da2d221,0x323c3cd48b4330cd,0x03cc4bb1ab9bc032,0xba42d4a1a3b2aa38, 
0x94522b93a2482233,0x3cc38cb330349d23,0x1409b4cb32c24054,0xb450aac333a352bb, 
0xb983322b44324843,0x2bd5b44333324233,0x834bb22141b14804,0x432b32b54034b299, 
0x0cd0c3c343bb43b4,0xb2340c3d0bc1c0c5,0x4245c291b5335dac,0x32bb5c124450ccb9, 
0xc13cc4291c0cdc49,0xb43b4d44bcc34c24,0x2ac44ccbd3b1c43c,0xbc2b3cccd2a93db2, 
0x33a33ca3133333c4,0xd40089dcc333cc2b,0x2411a4423c2a1c31,0x293a423334bd90a3, 
0xac23b990335b4a03,0x08332139b1a93b23,0x8b44222104bb42a0,0x13aa303231324398, 
0xbca0b403228b1990,0xb4ac2b24bba33ca3,0x9aa1b92318b43346,0x3ca0abca4a0932da, 
0xbb540a04444bbcb4,0xcb4a2bc94aba1a52,0xcc033343822b3339,0x30a3bcc3b5a253ab, 
0x4d422228a3a230b3,0xac403d023b8b2840,0x8003caa34acbb4c2,0xb135b38bab0b3421, 
0x0532a42bbb20b33c,0xb13423832394bc1b,0x22bb139c22cb2bdd,0xd3b45992a433484b, 
0xa0c18c1dd498b8cc,0xb3b194bc300aa503,0xc3b2bbcc4a42b239,0x2acb311a3103b21b, 
0xd3b3c4a0ccb3d23c,0x92930b44c0abb15a,0x333cc4b1d1c32b4b,0x22924b23351833ba, 
0x0ac43bc9325b50a9,0x3c952a5bb33c3b14,0xbb55a234b49a3883,0x140a44322832444c, 
0x34510d3c494292bb,0x31c2a3c4322bbabb,0xa33b43b4ca991143,0xb14aba323ac0535a, 
0x4c8342ca00212301,0x10413ba13b490cb1,0x34333392d9c4abc2,0xcb3393d333a122d4, 
0x3943225cb33c403c,0x0ba42b034c2c2a49,0x980223c120109bc1,0xb44383431cb2440b, 
0x1434a32ca3b0c8b0,0xbd30b53d3521acdb,0x4a9b0cab0958cb4b,0xbcd429213b408ac3, 
0x0a1b4b235bc504c4,0xc45d43d3ca35caad,0x34ccbd40bcaa15ba,0x3a343443c3cbb324, 
0x359c22ab311e340c,0x40003032ca24a44b,0xd3ba14ac2a331ca0,0xab13235b91b0a094, 
0x42c83080aa2bbc32,0xb4b2a3109304adb3,0x0b434952424a23b2,0xc1adb444a313bb2c, 
0x12b21bc444b415b3,0x59bbcb2bc20ab4ca,0xb49bda499bc8abbc,0xb11329cbb4b1d893, 
0x54cc23b12ad5d329,0x434dc04a400323b4,0x34cbcb434ab5ca33,0xac93c583a444c3ab, 
0x33cbb332abdc4d31,0x3d4c394eb0b4adcb,0xb2b2cc9bb33cc5ad,0xddbc3c3c0c32ca9b, 
0xbca11334039ba039,0x43c3243249382444,0x1b8ca9b2bacc0bc2,0xa3d23bbab2934089, 
0xc4bb2023394c3134,0x4c332a41ba8c81c3,0x20a3bad222249b41,0x9404d8223c0bc82b, 
0xa221833b3c33243c,0xc423a592c2a58241,0x332b4abc0a34acba,0xa104444b00343cca, 
0x083533a443404b22,0x4a342342cb3c3243,0xba44b033139b3cb3,0x9142384338934223, 
0xb2b3bc24b1a2234a,0x830bbb0210a4b3aa,0x441b294b480cbbac,0xd9ac3c3aa4bbbbb4, 
0xccbb8833aa3ac4a2,0x2aa11d2abc1ca3c1,0xaa334ccab31bb132,0x13cbbcbb2389cb4b, 
0x92c2bcb0da312abc,0x0bca4c8bb4ba24c2,0xb22cbacb5aab0933,0xcc3bbabc4893d324, 
0x3cbb30252d94ca82,0x3a0a3dbaca0402c1,0x09222a8318c2bccc,0x3b430ca1c103cc54, 
0xcbba0c38c3a813ac,0x1bb2dbba4a3c9cc2,0xa0232ca0b24cb4cb,0xb8cbc9aabb022cbb, 
0x6b2bb4cb4bac09b3,0xb1c0baaca3b42943,0x13b332bb0095b2cc,0xcb3a3ba83d03bba2, 
0x94bbbc3ab1da9c08,0x41b2ccb122bbbcc0,0xc91434a3b25b9838,0x3a4b3a413b1dbcc2, 
0xa223aab033a3a31a,0x1ab4a342a314a34b,0x139bb44b22bc4d9c,0xc0b959a2351323a3, 
0xb4c2a90bc24bc24c,0x52b0b24a4bb334c5,0x8c482593b424bb23,0x331a44c1b4338bbb, 
0x0cbb321ca2a23ca9,0xbbb2b39c5339b34c,0x0ca82bb22a2aa0db,0x04cc32503c0bc888, 
0xbb5a2954cb4b2dab,0x483b33b199ab335b,0xbcc23359412d1cc9,0x3333bb3ac4b14248, 
0xcbbb33ba2433404b,0x9c33c43a4333bcb8,0x435bc422b34191db,0xa22245aa30a3b0d0, 
0x40ad8b43a40aa543,0x3cb329a43014153a,0x34a9123c12c222da,0xc2984c31a1940241, 
0x2bccbbd2c314c4cc,0x20c32a8bb4b4219a,0xb142490b13d43b00,0xb4c939dc3423bb49, 
0xbb323443cb4b20ac,0xbb40432abc2c322b,0x22a43a014a3c0bb8,0xc283aa49bc13344b, 
0x40b442c50c3c89b2,0x1b43225c013b34bb,0xcb24cb34424a2d23,0x244aa448bb93c34b, 
0xc2a324b4390342eb,0x31b492d2c323bbbd,0x4b423a22bbb30821,0x333b438b53b80a23, 
0xcb1b353a3b849c12,0xa1b318293a3a4818,0x4a2b2c4b40cc8cc0,0x32442bc0853421ba, 
0xb408a1a30043abc3,0xd54a12b2b39480c2,0x2434343233ba2d44,0x4a2022ba3ab0a83a, 
0xb21a423a81b3c13a,0xa32a1a8a3932a1ba,0x43cc0bab0cabc989,0xbc23c80a00bac8a2, 
0x2a1384233abe2c4a,0xba3840bb0a85aa3b,0xcbc94bb3a924324b,0xcc4c42523bcd023a, 
0xc4133cb0c2432bab,0xa343a452a333293b,0x023cb24318da3cb8,0x34a3b54c84a433bb, 
0xcbc4ba2421c23934,0xa33a4435b4b2030a,0x413bcb290a4c3bc4,0x14babc4420a9abb2, 
0x35b39b5232012324,0x3ac31b2c3b9a12c9,0x2b49e038234da449,0x23434a4a9020c450, 
0xc2bbb1b3b833a21b,0x3341b04cb4a229b3,0xa445bc4893b30db9,0x42b0140a2344b9bb, 
0x44b3a3bc3bc2a341,0x1111231844913123,0x924bb9ac03232981,0xbbb044b40a339802, 
0xdc0912c94303c4a9,0xa3b9c84aad9c3adb,0x233abccb1bb4c333,0x450ab203cb2ccbbc, 
0xba39bc3d943a3c4b,0x42c4cc2342bbbc3b,0x3b0934883b3b25c4,0x354bba4b4b13bbcb, 
0xca000ab1c23bb32b,0x2da22caba90cbac0,0xbb2abab230bc4245,0x0cbbbdca23118bab, 
0xa3bc2ac039aa93a4,0x4b23cbaca282a1cb,0xaa319291d334b1bd,0x134b00c0040bcba4, 
0x39240c29ab4323ac,0x4d23c30cba0b3abb,0xba303b210940c99c,0xb43c3434c9929480, 
0xc32cac30b3a43dcb,0x4c2bc30934930a03,0x39231343382c3188,0x4ccbbab915aba2a3, 
0xa531bbb29bb93bcb,0xc20b23b234b9c2bc,0x23bc34992b231d43,0xab08b4b311bab0b3, 
};

static int backbone_model5_conv1_quant1_threshold[64 * 14] =
{ // torch.Size([64, 14])
-1314, -772, -501, -298, -162, -27, 108, 243, 379, 514, 650, 853, 1124, 1666,
-1619, -952, -618, -368, -201, -34, 132, 299, 465, 632, 799, 1050, 1383, 2051,
-1835, -1204, -888, -651, -493, -336, -178, -20, 137, 295, 453, 690, 1006, 1637,
-1616, -1102, -844, -651, -523, -394, -265, -137, -8, 120, 248, 441, 699, 1213,
-1138, -633, -380, -191, -65, 61, 187, 313, 439, 566, 692, 881, 1134, 1639,
-2054, -1244, -839, -535, -332, -130, 72, 274, 477, 679, 882, 1186, 1591, 2401,
-1843, -1113, -748, -474, -292, -110, 72, 254, 437, 619, 802, 1076, 1441, 2170,
-2079, -1413, -1079, -829, -662, -496, -329, -162, 3, 170, 337, 587, 920, 1587,
-1322, -831, -585, -401, -278, -155, -32, 90, 212, 335, 458, 642, 888, 1380,
-1623, -966, -638, -392, -228, -63, 100, 264, 428, 592, 756, 1003, 1331, 1988,
-1219, -750, -516, -340, -223, -106, 10, 127, 244, 361, 478, 654, 888, 1357,
-1529, -897, -581, -344, -186, -28, 129, 287, 445, 602, 760, 997, 1313, 1945,
-1250, -799, -574, -405, -292, -179, -67, 45, 158, 270, 383, 552, 777, 1228,
-1296, -817, -578, -398, -279, -159, -39, 79, 199, 319, 438, 618, 857, 1336,
-1586, -1064, -804, -608, -478, -347, -217, -86, 43, 174, 304, 500, 760, 1282,
-1227, -790, -571, -407, -298, -188, -79, 30, 139, 248, 358, 522, 740, 1178,
-1238, -693, -420, -216, -79, 56, 192, 329, 465, 601, 738, 942, 1215, 1760,
-1112, -617, -370, -185, -62, 61, 185, 308, 432, 555, 679, 864, 1111, 1605,
-1362, -873, -628, -445, -322, -200, -77, 44, 166, 289, 411, 595, 839, 1329,
-1415, -832, -540, -321, -175, -29, 115, 261, 407, 553, 699, 918, 1209, 1793,
-1466, -907, -628, -418, -278, -138, 1, 140, 280, 420, 560, 769, 1049, 1608,
-2228, -1508, -1148, -878, -698, -518, -338, -158, 21, 201, 381, 651, 1011, 1731,
-1185, -740, -518, -351, -240, -129, -18, 92, 203, 314, 425, 592, 814, 1259,
-1113, -683, -469, -308, -201, -93, 13, 120, 228, 335, 442, 603, 818, 1247,
-1803, -1251, -974, -767, -629, -491, -353, -215, -76, 61, 199, 406, 682, 1235,
-1702, -1087, -779, -548, -394, -241, -87, 66, 220, 374, 527, 758, 1066, 1681,
-2580, -1797, -1406, -1113, -917, -722, -526, -330, -135, 60, 255, 549, 940, 1722,
-1351, -871, -631, -451, -331, -211, -91, 28, 148, 268, 388, 568, 809, 1289,
-1307, -838, -603, -427, -310, -192, -75, 41, 159, 276, 393, 569, 804, 1273,
-1342, -806, -539, -338, -204, -70, 63, 196, 330, 464, 598, 799, 1066, 1601,
-1648, -977, -641, -390, -222, -54, 113, 280, 448, 616, 784, 1035, 1371, 2042,
-1297, -853, -630, -464, -353, -241, -130, -19, 91, 202, 313, 480, 703, 1147,
-1734, -1203, -937, -738, -605, -473, -340, -207, -74, 57, 190, 389, 655, 1186,
-1509, -999, -743, -552, -424, -296, -168, -41, 86, 214, 342, 533, 789, 1300,
-1858, -1326, -1060, -860, -727, -594, -460, -327, -194, -61, 71, 271, 537, 1070,
-1789, -1219, -934, -720, -578, -435, -293, -150, -8, 134, 276, 490, 775, 1345,
-1322, -865, -637, -466, -352, -238, -124, -10, 103, 218, 332, 503, 731, 1187,
-1721, -1152, -867, -653, -511, -368, -226, -84, 58, 200, 343, 556, 841, 1411,
-1295, -764, -498, -299, -166, -33, 99, 232, 365, 498, 631, 830, 1096, 1627,
-1241, -721, -462, -267, -137, -7, 122, 252, 382, 512, 642, 837, 1097, 1617,
-1495, -935, -656, -446, -306, -166, -26, 113, 252, 392, 532, 742, 1022, 1581,
-1542, -950, -654, -432, -284, -136, 11, 159, 307, 455, 603, 825, 1121, 1713,
-1313, -784, -520, -322, -190, -58, 73, 205, 337, 469, 601, 800, 1064, 1592,
-1166, -680, -437, -254, -133, -11, 109, 231, 353, 474, 596, 778, 1021, 1507,
-1699, -1147, -870, -663, -525, -386, -248, -110, 27, 166, 304, 511, 788, 1341,
-1323, -794, -530, -332, -200, -67, 64, 196, 328, 460, 593, 791, 1055, 1584,
-1374, -829, -556, -352, -215, -79, 57, 193, 329, 466, 602, 807, 1080, 1625,
-1728, -1136, -840, -618, -470, -322, -174, -26, 121, 269, 417, 639, 935, 1527,
-1303, -813, -568, -385, -262, -140, -18, 104, 226, 349, 471, 655, 900, 1389,
-1279, -769, -513, -322, -194, -67, 60, 188, 315, 443, 571, 762, 1017, 1528,
-1614, -1069, -796, -592, -456, -319, -183, -47, 89, 225, 361, 566, 839, 1384,
-1605, -1071, -804, -604, -471, -337, -203, -70, 63, 196, 330, 530, 797, 1331,
-1151, -612, -342, -140, -5, 129, 264, 399, 534, 669, 803, 1006, 1275, 1815,
-1498, -886, -581, -351, -199, -46, 106, 259, 412, 564, 717, 946, 1252, 1863,
-1407, -853, -576, -368, -229, -91, 47, 186, 324, 463, 602, 809, 1087, 1641,
-1694, -1096, -797, -573, -424, -275, -125, 23, 173, 322, 471, 695, 994, 1592,
-1065, -626, -406, -242, -132, -22, 86, 196, 306, 416, 526, 690, 910, 1349,
-1606, -1091, -834, -640, -512, -383, -254, -126, 2, 131, 259, 452, 710, 1224,
-1270, -732, -463, -261, -127, 7, 141, 276, 410, 545, 679, 881, 1150, 1688,
-1763, -1186, -897, -681, -537, -393, -248, -104, 39, 183, 328, 544, 832, 1409,
-2242, -1580, -1248, -1000, -834, -668, -502, -337, -171, -5, 159, 408, 739, 1402,
-1399, -942, -713, -542, -427, -313, -199, -84, 29, 143, 258, 429, 658, 1115,
-986, -617, -433, -294, -202, -110, -17, 74, 166, 259, 351, 489, 674, 1043,
-1712, -1027, -685, -428, -257, -86, 85, 256, 427, 598, 769, 1026, 1368, 2053,
};

static uint64_t backbone_model5_conv1_conv2_weight[64 * 9] =
{ // torch.Size([64, 3, 3, 1])
0x5, 0xb, 0xb, 0x4, 0xb, 0x9, 0xb, 0xb, 0xb, 
0xd, 0xb, 0xb, 0xa, 0x2, 0x0, 0xc, 0xa, 0xb, 
0xb, 0x3, 0x3, 0xe, 0x2, 0x2, 0x9, 0x3, 0x8, 
0x4, 0x3, 0xe, 0x4, 0x4, 0xc, 0x4, 0x2, 0x2, 
0x4, 0x0, 0xd, 0x3, 0xa, 0xc, 0x8, 0x8, 0xb, 
0x8, 0x1, 0x9, 0xb, 0xa, 0xb, 0xb, 0xb, 0xc, 
0x2, 0x2, 0x3, 0x1, 0x4, 0x3, 0x0, 0x4, 0x4, 
0x2, 0x2, 0x0, 0x3, 0x2, 0x3, 0x4, 0x3, 0x3, 
0xe, 0xb, 0x3, 0xc, 0x2, 0x4, 0x8, 0x1, 0x0, 
0xa, 0xa, 0xa, 0xb, 0xb, 0xa, 0xb, 0xb, 0xb, 
0xa, 0xc, 0xb, 0x0, 0xa, 0x4, 0xb, 0x3, 0x5, 
0xd, 0xc, 0x9, 0xc, 0xa, 0x2, 0xa, 0x3, 0x3, 
0xa, 0xc, 0xc, 0x3, 0x0, 0xb, 0x4, 0x4, 0xa, 
0x4, 0x3, 0xd, 0x4, 0x2, 0xb, 0x2, 0xb, 0xd, 
0x4, 0xc, 0xc, 0x4, 0xc, 0xb, 0x4, 0x2, 0x1, 
0xb, 0x2, 0x5, 0xb, 0x0, 0x3, 0xd, 0xb, 0x9, 
0xb, 0x8, 0xa, 0xb, 0x9, 0xb, 0xb, 0x9, 0xb, 
0x3, 0x2, 0x2, 0x3, 0x3, 0x0, 0x4, 0x4, 0x0, 
0x4, 0x0, 0x4, 0x3, 0xb, 0xb, 0x8, 0xb, 0xd, 
0xc, 0x8, 0x3, 0xa, 0x8, 0x2, 0xd, 0xb, 0x9, 
0x3, 0x5, 0x4, 0xa, 0x3, 0xa, 0x1, 0x8, 0xb, 
0x3, 0x2, 0x3, 0xa, 0xc, 0xc, 0xc, 0x8, 0xd, 
0x2, 0x4, 0x4, 0x0, 0x4, 0x3, 0xc, 0xc, 0xc, 
0xb, 0xa, 0x3, 0xb, 0xb, 0x3, 0xc, 0xc, 0xa, 
0x0, 0x3, 0x5, 0x0, 0x1, 0x3, 0x0, 0x2, 0x2, 
0xb, 0xc, 0x2, 0xa, 0x9, 0x8, 0xc, 0xb, 0xc, 
0x0, 0x2, 0x3, 0x1, 0x3, 0x3, 0x4, 0x3, 0x4, 
0xc, 0xb, 0x1, 0xc, 0xb, 0x4, 0x3, 0x3, 0x5, 
0xb, 0x9, 0xb, 0xc, 0x4, 0x3, 0xc, 0xb, 0x4, 
0x3, 0x3, 0x4, 0xb, 0x2, 0xb, 0xc, 0xc, 0xc, 
0xc, 0xc, 0xc, 0xb, 0xc, 0xc, 0x4, 0x3, 0x4, 
0x1, 0x2, 0x3, 0x2, 0x4, 0xb, 0x2, 0x0, 0xc, 
0x4, 0xb, 0xd, 0x3, 0xa, 0xd, 0xa, 0x3, 0x1, 
0xc, 0xc, 0xb, 0x3, 0x2, 0x3, 0x4, 0x4, 0x4, 
0xc, 0xc, 0xa, 0xc, 0x4, 0x3, 0xa, 0x4, 0x2, 
0xc, 0xc, 0xd, 0x3, 0x0, 0x3, 0x3, 0x4, 0x3, 
0xc, 0xb, 0x0, 0xa, 0x2, 0xa, 0x4, 0x5, 0x0, 
0x5, 0x3, 0x4, 0x3, 0x9, 0xb, 0x1, 0xb, 0x0, 
0xa, 0xa, 0x0, 0xc, 0xb, 0x4, 0xb, 0xb, 0x5, 
0x4, 0x3, 0x3, 0x8, 0xc, 0xc, 0x4, 0x2, 0x3, 
0x5, 0x5, 0x0, 0xb, 0x9, 0x0, 0xc, 0xb, 0x3, 
0xa, 0x3, 0x4, 0xa, 0x9, 0xb, 0xc, 0xc, 0xc, 
0xc, 0xa, 0xc, 0xa, 0x8, 0x9, 0xa, 0xb, 0xa, 
0xd, 0xb, 0x3, 0xc, 0x0, 0x3, 0x2, 0x4, 0x4, 
0x3, 0x3, 0x2, 0x3, 0xb, 0xb, 0xb, 0xc, 0xc, 
0x4, 0x9, 0xa, 0x3, 0xb, 0xc, 0x4, 0xb, 0xc, 
0xb, 0xc, 0xc, 0xa, 0xb, 0xa, 0x3, 0xb, 0x8, 
0x8, 0x1, 0xb, 0xc, 0xb, 0xd, 0x8, 0x4, 0x8, 
0xa, 0xb, 0xb, 0xa, 0x4, 0x2, 0x0, 0x5, 0x4, 
0x4, 0x4, 0x3, 0x4, 0x1, 0xb, 0xa, 0xc, 0xd, 
0x3, 0x3, 0x2, 0x2, 0x2, 0x2, 0x1, 0x3, 0x1, 
0xc, 0xa, 0xd, 0x3, 0x4, 0xb, 0x1, 0x1, 0x9, 
0xc, 0xb, 0xc, 0xb, 0xb, 0xa, 0x4, 0x4, 0x4, 
0x5, 0x3, 0xc, 0x4, 0x4, 0xb, 0x3, 0x2, 0xb, 
0x2, 0x4, 0x3, 0xb, 0xa, 0xb, 0xc, 0xc, 0xd, 
0xb, 0xa, 0xb, 0x5, 0x3, 0x4, 0x4, 0xa, 0x3, 
0xc, 0xc, 0x3, 0xa, 0xc, 0x2, 0x3, 0x2, 0x3, 
0x4, 0xb, 0x1, 0x8, 0x3, 0x8, 0xc, 0x4, 0x5, 
0x4, 0x4, 0x4, 0x2, 0xa, 0x4, 0xa, 0xb, 0x3, 
0xd, 0x1, 0x4, 0xb, 0x3, 0x3, 0x4, 0x3, 0xc, 
0x3, 0x3, 0xd, 0x4, 0x3, 0xb, 0x5, 0x2, 0xc, 
0xc, 0xb, 0x3, 0xc, 0x3, 0x2, 0xb, 0x2, 0xa, 
0xb, 0xc, 0x4, 0x2, 0x3, 0x3, 0x4, 0xa, 0xd, 
0xc, 0xc, 0xb, 0x2, 0x2, 0x2, 0x4, 0x4, 0x3, 
};

static int backbone_model5_conv1_relu2_threshold[64 * 7] =
{ // torch.Size([64, 7])
4, 34, 64, 94, 139, 200, 320,
117, 152, 188, 223, 277, 348, 490,
58, 109, 160, 211, 288, 390, 595,
82, 139, 197, 254, 341, 456, 686,
-7, 36, 79, 123, 189, 276, 451,
-75, -43, -11, 20, 68, 132, 260,
16, 57, 98, 138, 200, 282, 446,
-19, 15, 51, 87, 141, 213, 356,
78, 139, 199, 259, 350, 471, 712,
-1, 24, 50, 75, 114, 166, 270,
12, 55, 98, 141, 206, 292, 464,
21, 56, 92, 127, 180, 250, 391,
19, 67, 114, 161, 232, 327, 516,
48, 98, 148, 198, 273, 374, 574,
35, 68, 101, 134, 184, 250, 382,
-4, 43, 91, 139, 211, 308, 501,
24, 43, 62, 82, 110, 149, 225,
0, 38, 77, 116, 174, 252, 408,
9, 46, 83, 119, 175, 249, 396,
31, 67, 103, 139, 194, 266, 411,
-37, 8, 55, 101, 171, 264, 450,
-10, 38, 87, 135, 209, 307, 502,
32, 76, 119, 162, 227, 314, 488,
47, 76, 104, 132, 175, 232, 346,
57, 101, 145, 189, 256, 344, 520,
-21, 21, 64, 106, 171, 256, 428,
4, 50, 96, 142, 211, 303, 486,
24, 62, 99, 137, 193, 269, 419,
32, 59, 86, 114, 154, 209, 317,
28, 63, 97, 131, 183, 252, 389,
-9, 25, 60, 96, 149, 219, 360,
18, 43, 69, 94, 133, 183, 285,
32, 69, 106, 143, 198, 272, 420,
5, 50, 94, 138, 204, 293, 469,
-22, 15, 53, 91, 148, 224, 377,
25, 64, 103, 142, 201, 279, 435,
-3, 42, 88, 135, 204, 296, 481,
28, 68, 108, 147, 207, 286, 445,
24, 51, 78, 104, 145, 199, 306,
22, 50, 77, 105, 146, 201, 311,
-44, 0, 45, 90, 157, 246, 425,
11, 47, 82, 118, 172, 243, 386,
41, 74, 107, 140, 190, 256, 387,
14, 55, 96, 138, 199, 282, 447,
10, 36, 63, 89, 129, 183, 289,
23, 56, 90, 124, 174, 241, 375,
-13, 27, 69, 110, 172, 254, 420,
3, 41, 78, 116, 173, 248, 399,
75, 117, 158, 200, 262, 345, 512,
28, 66, 103, 141, 198, 274, 426,
3, 22, 41, 60, 88, 126, 203,
21, 52, 83, 114, 161, 223, 348,
49, 86, 123, 159, 214, 288, 434,
18, 59, 100, 141, 202, 284, 447,
28, 65, 101, 137, 192, 265, 410,
75, 115, 156, 196, 256, 336, 497,
-5, 32, 69, 107, 163, 238, 389,
38, 72, 107, 141, 193, 262, 399,
-7, 35, 77, 120, 184, 269, 440,
33, 64, 94, 125, 171, 233, 356,
42, 73, 104, 135, 182, 244, 368,
9, 33, 57, 81, 117, 165, 262,
56, 84, 112, 140, 181, 237, 347,
-12, 18, 49, 79, 126, 188, 311,
};

static uint64_t backbone_model5_conv2_conv1_weight[64 * 1*4] =
{ // torch.Size([64, 1, 1, 64])
0x49bc432bbc50c4c4,0x1ba5bcb8c0c24333,0x34b8bb4cbbbbabb5,0x338cb34ab34b23b5, 
0x3ccb0242104b31a3,0x3b4ca1140cc1a41c,0x393ba3a2c9391139,0x303cc22a04a0a3c4, 
0x380ac0b3bbb39bbc,0xb9b3ab20b43b3bb3,0x94a21c3bbbbaabb3,0x1bbbbbb3833c6bbc, 
0xcb422903c34bb23c,0xb04bb43bccc34b8c,0xa0c28b133b2c319c,0x023b10b03aaabbb2, 
0xac4b3bc34ca5d2b3,0x4bb44013ba5ccb2a,0x224bb34d1403b130,0xcac14a4b3341b3cb, 
0xc02cbb1c33cbaa13,0x2b4b1bccb0b3b5bc,0x3ba2baa043d5cbca,0x1c24c20bb34420b3, 
0xc2b3c14c222babb3,0x328aa9c014b384d3,0x2933384048c40a13,0x4b33341a83433132, 
0x4002b8b1a59c23ac,0x233a1b4a40a4bacb,0x8b9a9db2aaba4a93,0xa2bcbb330b9bab31, 
0xc3ad12442ab4082c,0xacc24c428b3319c4,0x204bc1b882a10a9c,0xcb934cccb192a81a, 
0x4c11d3d005ba5bd4,0x331dbccb4b02d3cc,0xb3bc4c1cbc3bbd35,0xcbbcccb4334a35c0, 
0xb340ab1bc0b20a33,0xcb3c09cdbb91b42c,0x1a94bbc331c3dbaa,0xb333cc8bcb8b9bdb, 
0xca4a42bb985cbbb3,0x8b339ad3cb2b2244,0x4adba8c3bbbbb4db,0x8489c092cadcacbb, 
0xa491a2432ba323c9,0xabb0425302a4b000,0x93c4ac322baba321,0xc0da2ba1b3ab8ab4, 
0xb40441c30b1c9144,0x2884c2424bca4234,0xb94929b03b90bb12,0x3ac0aa02348b91b3, 
0x91a25494bb4b2213,0x9a092c2a23033435,0xaa3b4bab313812b4,0x224b3c43cb4b4494, 
0x3c02b110b318cb0c,0xc244c34bacb34b43,0x0b0bc2b9b3b32b3b,0x413433bcca3a4b9c, 
0x24babb3babab4ac8,0xcb1aa9bbb3caa1cb,0x8c94cc23babcab1a,0x191acbcb939b4098, 
0x94bb41132ab4a12c,0xabc13a5a2333abc0,0x0a29b0ba81b82bbb,0xcbbb4aaa32abbb34, 
0xc0233201b24104d3,0xc824b3b4c9c82338,0x043abc4c41b42a24,0x104a334ccb444099, 
0x33932839c9a331bb,0xb33a233ba92b2a12,0xab12c13300eb413a,0x4339a91bbb434c14, 
0x44b043433c4443b8,0xac003b94354cb444,0x3403bdb329a224c4,0x4a42a85cdc205234, 
0x3c3303c3223a4bab,0x13babb3333bbb920,0xb91b12cc3a1c83ab,0x13092ba52cb8bbda, 
0x0cabaab40ba1ca0c,0x9b493acbb330aa18,0x9b4cb4bab1133bcb,0x5c95c8b3b2a0a21c, 
0x83333c040283bc39,0xbc3ca43da1314cb3,0x2da23ab4331d3bac,0x484331ac2b33cc42, 
0xc5ca8d2b2c132a82,0xccbc4ccb25bbcbcb,0x2b340d04bc1a0cb3,0xaac3c3bc949b392c, 
0x00c3cbaa4995cba2,0x931c3ab3042dc3cb,0x32ca19cb35b33ccb,0xbc39bbc2ca95bb3a, 
0xc48a3c9c839ca4a0,0xb1b8abba0db943b4,0x0b3a3239a423bab8,0x29aa4139cbcba2b2, 
0x3a0b2599b3b3bb40,0xb5c9ccc43041c302,0xb2bb39bcbb02c309,0xbac302b58ccacccc, 
0x2ac9a11a023ab0aa,0x23bb93330b544d28,0xaa3813b2300b4ac0,0x813b31a2a1a32b52, 
0xc223ab3a40ac10ba,0x110abaa4b2c1b40a,0x43b0a4ac82443ab8,0x233b08a043dacbd0, 
0xa012bb49acbc3094,0x4433b0cab4b4c2ab,0x411438833c390223,0x3b2a943ba34293a2, 
0x029ca9a23014438b,0xaaab1c0c14baccb2,0x13c3ba43a21b3ac4,0x9badbc34a3cb4202, 
0x821c3b243ac13425,0xa442c3b982b32ab2,0x5493a034b43bb313,0x230cbc2a2abd12a4, 
0x2a3d324b31c40239,0x3ba4ca0b3a112344,0xc233b3b24a43b412,0xc3492c12c3914ca4, 
0xb81823224a444519,0x4bc20cc293bac313,0x13b92950200ca135,0x0809bb0435ba5534, 
0xa2b33b31cc21849b,0xd33b2132b0c29b94,0x02a293b3c4da3244,0x110a3043ac01d444, 
0x024bb39bb3c33344,0x43431cccb2922439,0x24803a833935c302,0xa403b33abab8c8d3, 
0xa11a8412cbbca34b,0xb4c42aa1ab4ab21b,0x8c3b83bcb1c19412,0x9ab2aa3bbb108b89, 
0x83ae0c2a0ac2c32a,0xb03a323c902412b3,0x3c14d4b3a4a3b089,0x3b042cac082bc232, 
0x0cbbbbac8db23cab,0xbca3cc4bbdb4ac2b,0xbcc9bd334abccbcc,0x2b48c8ccc0da8434, 
0x4bbab1a2aa95c84b,0xb4039bc0030c20a0,0x81ca4b41b343a93a,0xb1923bbb3c40abc0, 
0x9a1158d49c43c23a,0x438342a4c84c4333,0x314b238b13b1804a,0x94d09b9d912333b1, 
0xb3abbb3abac132ca,0xbbaa332c9211232a,0x022a4925a0b49412,0x401b942224442142, 
0x1bb3ccb1b3ba31a2,0xb40bcabb244a1224,0x23a102343a3ac9b3,0x2109ca30000aa332, 
0xb394b93b2bb2c8b4,0xb04a2b14111a258b,0x2a249bbc31c33bab,0xc3808010b322bacb, 
0x4ab0a3ab52a08da8,0xaba2b3193a30a38b,0x1a3aaa1a813bb2bd,0xb0a289d4a3c1c6a2, 
0x14baab9a24284a4a,0x5b0b333b429403bc,0x38d23494b3582c9c,0x4bcb29cd23db1c3b, 
0x23babc0120033333,0x4a01243833444ba3,0x41404424cb0bcdb3,0x44313339242a313a, 
0xb0bb8339b2bb3882,0x3330a18b1c94a2bc,0x11a4230a51aa480a,0x3b4492bb3bc03c48, 
0x9a1b901adcca2c2d,0xc183323aab313a2c,0xcbbcb4a9bb9bb12c,0xa9ab9aab22aba1cb, 
0x92322033d3a9c40a,0xd1320aa9caab2102,0x22b233d902db40a3,0x231bb24dbd83ada1, 
0xb84abcaa91b30a3b,0x333100cd9b32a43a,0xc2b3123a4ba5bc2a,0xcc05bca8a3341a33, 
0xc3a1c0b2b232bbad,0xca8ca4b9a33bcbcb,0xb0c33b5bbba9bc3a,0xbcc022ccb3ca00b8, 
0xa8a10424aa23b349,0xa4a218cb454bab09,0x05335a4b9a40c234,0xaa33b94cbb4b24ba, 
0xb1cc93312ca200c3,0x2bb41009914aaa24,0x34caa92b994024b2,0x19b83301d9ca4b3b, 
0x2194a22c12404094,0x0ac12aa44ab8a994,0x5ac3ac2433833101,0x8423baabbb430b1b, 
0xcb30b232a22aaab3,0xba02444bbbb44594,0x3ba3b20432c3c1a9,0x35b4c3a30b2baacb, 
0xbb32acc2ab2b3bac,0x9c3b4bacc428044c,0x4aad39c3dbb2b0ba,0x45c3c4a2b2bbc3bb, 
0x31b41db1ab321444,0x384b244b33c04a3a,0x2813348941b22023,0x3b231c23493132b4, 
0xac32c32c2442b22a,0xcc421393bcc23533,0x0c01baa814c44b4b,0x34330219cc241baa, 
0xb34b32cbab10b313,0x233342c3c4234344,0x38b22a220cb3a331,0x20d4cd9bc9310239, 
0x924a3233ab321b93,0x3114430aa14ab9b3,0x2baa92a232a04b3b,0xba0223bc28a3b043, 
0xabc4c142cccb2cac,0xc44accbbc4d5b0bb,0x39b5c2cbba21300b,0x4b43140b2a8a92a2, 
0x9d33c342cb2342bd,0x83c32a3393a4ca28,0x23c303b01c241149,0xcb309020310803bc, 
};

static int backbone_model5_conv2_quant1_threshold[64 * 14] =
{ // torch.Size([64, 14])
-876, -546, -382, -258, -176, -93, -11, 70, 153, 235, 317, 441, 605, 935,
-826, -517, -362, -247, -169, -92, -15, 62, 139, 216, 293, 409, 564, 873,
-874, -570, -418, -304, -228, -152, -76, 0, 75, 151, 227, 341, 493, 797,
-822, -540, -398, -292, -222, -151, -81, -10, 60, 130, 201, 307, 448, 730,
-942, -589, -413, -281, -193, -105, -16, 71, 159, 247, 335, 467, 643, 996,
-1010, -659, -483, -351, -263, -176, -88, 0, 87, 175, 263, 395, 570, 922,
-906, -568, -400, -273, -189, -104, -20, 64, 148, 233, 317, 444, 613, 950,
-913, -596, -437, -318, -239, -160, -80, -1, 77, 156, 236, 355, 513, 831,
-834, -553, -413, -307, -237, -167, -97, -26, 43, 113, 183, 289, 429, 710,
-1257, -792, -560, -386, -270, -154, -38, 77, 193, 309, 425, 599, 831, 1295,
-941, -649, -503, -393, -320, -247, -173, -100, -27, 45, 118, 228, 374, 667,
-1152, -783, -599, -461, -369, -277, -185, -93, -1, 90, 183, 321, 505, 873,
-764, -494, -359, -258, -190, -123, -55, 11, 79, 146, 213, 315, 450, 720,
-703, -439, -306, -207, -141, -75, -8, 57, 123, 189, 255, 354, 487, 751,
-780, -453, -290, -168, -86, -5, 76, 157, 239, 321, 402, 525, 688, 1014,
-1007, -636, -451, -311, -219, -126, -33, 59, 151, 244, 337, 476, 661, 1032,
-975, -683, -537, -427, -354, -281, -208, -135, -62, 10, 83, 193, 339, 631,
-960, -625, -457, -331, -247, -163, -79, 4, 88, 172, 256, 382, 550, 886,
-715, -425, -279, -170, -97, -25, 47, 120, 192, 265, 338, 447, 592, 883,
-1019, -636, -445, -301, -206, -110, -14, 80, 176, 272, 367, 511, 702, 1085,
-898, -521, -332, -191, -97, -3, 91, 185, 279, 373, 468, 609, 797, 1174,
-898, -548, -373, -242, -155, -68, 19, 106, 194, 281, 368, 499, 674, 1024,
-842, -543, -393, -281, -206, -131, -56, 18, 93, 168, 243, 355, 505, 804,
-1131, -754, -566, -425, -330, -236, -142, -48, 45, 140, 234, 375, 563, 940,
-991, -689, -538, -425, -349, -274, -198, -123, -47, 27, 103, 216, 367, 669,
-896, -582, -425, -307, -229, -150, -72, 6, 84, 163, 241, 359, 516, 830,
-933, -627, -474, -359, -283, -206, -130, -54, 22, 98, 175, 289, 442, 748,
-1011, -645, -461, -324, -232, -141, -49, 42, 133, 225, 317, 454, 638, 1004,
-807, -511, -364, -253, -179, -105, -31, 42, 116, 190, 264, 375, 523, 818,
-835, -546, -402, -294, -221, -149, -77, -5, 66, 138, 211, 319, 463, 752,
-675, -413, -282, -184, -118, -53, 11, 77, 142, 208, 273, 371, 502, 764,
-1006, -677, -512, -389, -307, -224, -142, -60, 21, 104, 186, 309, 474, 803,
-728, -475, -348, -253, -190, -126, -63, 0, 62, 126, 189, 284, 410, 664,
-836, -520, -363, -245, -166, -87, -8, 69, 148, 227, 306, 424, 582, 897,
-976, -608, -424, -285, -193, -101, -9, 82, 174, 266, 359, 497, 681, 1050,
-889, -576, -419, -302, -224, -145, -67, 10, 89, 167, 245, 363, 519, 832,
-758, -451, -298, -183, -106, -30, 46, 123, 199, 276, 352, 467, 621, 927,
-779, -499, -359, -253, -183, -113, -43, 26, 96, 166, 236, 342, 482, 762,
-1137, -748, -553, -408, -310, -213, -116, -19, 78, 175, 272, 418, 612, 1001,
-1079, -762, -603, -484, -404, -325, -246, -166, -87, -7, 71, 190, 349, 666,
-808, -486, -324, -204, -123, -42, 37, 118, 198, 279, 360, 480, 642, 964,
-769, -461, -306, -191, -114, -37, 39, 117, 194, 271, 348, 463, 618, 926,
-714, -431, -289, -183, -113, -42, 28, 99, 170, 240, 311, 417, 559, 842,
-711, -440, -304, -203, -135, -67, 0, 67, 135, 203, 270, 372, 508, 779,
-1245, -847, -647, -498, -398, -299, -199, -99, 0, 99, 199, 348, 547, 946,
-788, -506, -365, -260, -189, -119, -48, 21, 91, 162, 232, 338, 479, 761,
-832, -541, -396, -287, -214, -141, -68, 3, 76, 149, 221, 331, 476, 767,
-779, -485, -338, -227, -154, -80, -7, 66, 139, 213, 287, 397, 544, 838,
-744, -481, -349, -251, -185, -119, -53, 12, 77, 143, 209, 307, 439, 702,
-1048, -710, -540, -414, -329, -244, -160, -75, 8, 93, 177, 304, 474, 812,
-940, -607, -440, -315, -232, -148, -65, 17, 101, 184, 267, 392, 559, 892,
-796, -516, -377, -272, -202, -132, -63, 6, 76, 146, 216, 320, 460, 739,
-1075, -740, -572, -447, -363, -279, -195, -111, -28, 55, 139, 265, 432, 768,
-814, -462, -286, -153, -65, 22, 110, 198, 286, 374, 462, 594, 770, 1123,
-909, -603, -449, -335, -258, -181, -105, -28, 47, 124, 200, 315, 469, 775,
-801, -509, -363, -254, -181, -108, -35, 37, 110, 183, 255, 365, 511, 802,
-970, -614, -436, -303, -213, -124, -35, 53, 142, 231, 320, 453, 632, 988,
-750, -485, -352, -253, -186, -120, -53, 12, 78, 145, 211, 311, 444, 709,
-678, -398, -257, -152, -82, -12, 57, 128, 198, 268, 338, 443, 584, 864,
-911, -562, -388, -257, -170, -82, 4, 91, 178, 266, 353, 484, 658, 1007,
-784, -487, -338, -227, -153, -78, -4, 69, 143, 218, 292, 403, 552, 849,
-674, -421, -295, -200, -136, -73, -10, 52, 116, 179, 242, 337, 463, 716,
-980, -632, -458, -328, -241, -154, -67, 19, 106, 193, 279, 410, 584, 931,
-776, -482, -335, -225, -151, -78, -4, 68, 142, 215, 288, 399, 546, 839,
};

static uint64_t backbone_model5_conv2_conv2_weight[64 * 9] =
{ // torch.Size([64, 3, 3, 1])
0x5, 0x3, 0x1, 0x5, 0x2, 0xb, 0x4, 0x8, 0x3, 
0x4, 0x1, 0xc, 0x3, 0xa, 0xc, 0x1, 0xb, 0xd, 
0x3, 0x2, 0x4, 0xb, 0xa, 0x5, 0xb, 0x2, 0x3, 
0x5, 0x4, 0x3, 0x3, 0x0, 0xb, 0x1, 0xb, 0xb, 
0xd, 0xc, 0xc, 0x9, 0xb, 0x9, 0xa, 0x9, 0x9, 
0xa, 0x5, 0x4, 0xb, 0x5, 0x1, 0xc, 0x0, 0x1, 
0x4, 0x4, 0xb, 0xa, 0x3, 0xc, 0xd, 0xb, 0xc, 
0x1, 0xa, 0x3, 0x2, 0x2, 0x3, 0x4, 0x4, 0x4, 
0x2, 0x1, 0x4, 0x2, 0xb, 0x3, 0x3, 0x2, 0x5, 
0x4, 0x3, 0x4, 0x3, 0xb, 0x3, 0x3, 0x2, 0x4, 
0x5, 0xb, 0xa, 0x4, 0xa, 0xb, 0x4, 0x4, 0x9, 
0x4, 0x8, 0x8, 0x4, 0x4, 0x2, 0x4, 0x4, 0x3, 
0x4, 0xc, 0xd, 0x4, 0x3, 0xc, 0x0, 0x3, 0x0, 
0xd, 0xb, 0xc, 0x0, 0x3, 0x3, 0x3, 0x4, 0x9, 
0x5, 0x4, 0x4, 0x2, 0x8, 0x2, 0xd, 0xb, 0xc, 
0x2, 0xb, 0x2, 0x3, 0x4, 0x2, 0x5, 0x3, 0x3, 
0x5, 0x3, 0x3, 0x3, 0x3, 0x3, 0xb, 0xb, 0xb, 
0x4, 0x2, 0x1, 0x3, 0xc, 0x0, 0x5, 0x9, 0x3, 
0x8, 0xc, 0xd, 0x4, 0x2, 0xc, 0x2, 0x4, 0x9, 
0x4, 0x4, 0x4, 0xb, 0xb, 0x3, 0xd, 0xc, 0xc, 
0xc, 0xb, 0xa, 0xc, 0x9, 0x9, 0xd, 0x8, 0xb, 
0x4, 0xa, 0xa, 0x5, 0xc, 0xd, 0x5, 0x3, 0x0, 
0x4, 0x1, 0xa, 0x3, 0x1, 0xa, 0x5, 0x4, 0x8, 
0x5, 0x3, 0x5, 0x3, 0xb, 0xa, 0x3, 0x2, 0x9, 
0x0, 0xa, 0x3, 0x8, 0x9, 0x2, 0x4, 0x4, 0x5, 
0x3, 0x3, 0x2, 0x4, 0x4, 0x5, 0x0, 0x1, 0x4, 
0x4, 0x2, 0x4, 0x0, 0x1, 0x3, 0xd, 0xc, 0xb, 
0x4, 0x3, 0x4, 0x4, 0xa, 0x0, 0x2, 0x3, 0x0, 
0xc, 0xb, 0x0, 0xd, 0x4, 0x3, 0xd, 0x1, 0x3, 
0x4, 0x4, 0x4, 0xb, 0xb, 0xb, 0xc, 0xb, 0xb, 
0x5, 0x5, 0xc, 0x0, 0x3, 0xb, 0xc, 0xb, 0xa, 
0xa, 0xa, 0xb, 0xb, 0xc, 0xb, 0xb, 0xb, 0xb, 
0xc, 0xd, 0xd, 0x2, 0x3, 0xa, 0x4, 0x3, 0xb, 
0x0, 0xa, 0xc, 0x1, 0xc, 0xc, 0x3, 0xb, 0xb, 
0xb, 0xb, 0xa, 0xb, 0xb, 0xc, 0xb, 0xb, 0xa, 
0x4, 0x4, 0xd, 0x4, 0x3, 0xd, 0xb, 0xb, 0xc, 
0xa, 0xc, 0x4, 0x0, 0xb, 0x5, 0x2, 0xa, 0x5, 
0x4, 0x3, 0x5, 0x3, 0x1, 0x3, 0xb, 0xb, 0xc, 
0x4, 0x3, 0x4, 0x3, 0xa, 0x3, 0x8, 0x3, 0x4, 
0x4, 0x9, 0x2, 0x4, 0x8, 0x8, 0x5, 0x3, 0x3, 
0x1, 0x8, 0xa, 0x2, 0x9, 0x2, 0x5, 0x3, 0x5, 
0x3, 0x3, 0x0, 0xc, 0xb, 0x3, 0xc, 0xd, 0x4, 
0x3, 0xb, 0xd, 0x3, 0x3, 0xc, 0x4, 0x2, 0xc, 
0xc, 0x2, 0x4, 0xb, 0xa, 0x3, 0xc, 0xb, 0xb, 
0xb, 0xc, 0xc, 0x3, 0x4, 0x4, 0x1, 0x9, 0x9, 
0x5, 0xc, 0xc, 0x6, 0x2, 0xc, 0x4, 0xb, 0xc, 
0xc, 0x8, 0x4, 0xc, 0x4, 0x5, 0xb, 0x2, 0x5, 
0x2, 0xb, 0xc, 0x4, 0xc, 0xc, 0x3, 0xb, 0xd, 
0x4, 0x0, 0xa, 0x5, 0x3, 0xb, 0xc, 0xb, 0xb, 
0x3, 0x3, 0x2, 0x3, 0x3, 0xb, 0xc, 0xc, 0xc, 
0x4, 0x3, 0x3, 0x3, 0x3, 0x1, 0x3, 0x3, 0x1, 
0x5, 0x4, 0xd, 0x4, 0x4, 0xb, 0xb, 0xa, 0x0, 
0xa, 0x8, 0xa, 0x3, 0x3, 0x1, 0x5, 0x4, 0x4, 
0x4, 0x2, 0x3, 0x5, 0x3, 0x5, 0x3, 0xb, 0xb, 
0x2, 0x2, 0xc, 0x3, 0x9, 0xc, 0xa, 0xc, 0xc, 
0x4, 0x4, 0xa, 0x4, 0xb, 0xc, 0x4, 0x9, 0xc, 
0xd, 0x2, 0x5, 0xb, 0x0, 0x3, 0x1, 0x2, 0x3, 
0x3, 0x5, 0x0, 0xa, 0x5, 0x2, 0x3, 0x3, 0x5, 
0xc, 0xc, 0xc, 0x0, 0x2, 0x1, 0xc, 0x0, 0xb, 
0xc, 0xd, 0xc, 0xb, 0xa, 0x4, 0xc, 0x8, 0x4, 
0x0, 0x1, 0xb, 0x8, 0x3, 0xb, 0xa, 0xb, 0xe, 
0x8, 0xc, 0xc, 0x4, 0x2, 0xa, 0x5, 0x2, 0x3, 
0x2, 0xb, 0xb, 0x2, 0xa, 0x3, 0x3, 0x5, 0x4, 
0xc, 0xc, 0xb, 0xb, 0x1, 0x4, 0x9, 0x3, 0x4, 
};

static int backbone_model5_conv2_relu2_threshold[64 * 7] =
{ // torch.Size([64, 7])
31, 90, 148, 206, 294, 411, 644,
1, 53, 104, 155, 232, 335, 541,
5, 53, 101, 149, 222, 318, 511,
-3, 48, 100, 152, 230, 334, 542,
55, 104, 152, 201, 274, 371, 566,
49, 94, 139, 184, 252, 342, 522,
22, 72, 121, 171, 245, 345, 543,
30, 73, 116, 159, 223, 308, 480,
52, 88, 123, 159, 212, 283, 425,
-56, -13, 29, 72, 137, 224, 396,
19, 61, 103, 144, 207, 290, 458,
25, 81, 137, 193, 277, 389, 612,
59, 92, 124, 156, 205, 270, 399,
33, 67, 102, 136, 188, 256, 394,
49, 95, 141, 187, 255, 347, 531,
27, 68, 110, 151, 213, 296, 462,
25, 72, 118, 165, 235, 328, 514,
34, 66, 99, 132, 181, 246, 376,
19, 90, 161, 231, 338, 479, 763,
29, 86, 144, 201, 287, 402, 633,
29, 86, 144, 201, 288, 403, 632,
-4, 36, 76, 116, 177, 258, 419,
46, 85, 124, 163, 221, 299, 455,
53, 117, 181, 246, 342, 471, 728,
28, 80, 131, 183, 260, 363, 569,
31, 82, 133, 183, 259, 361, 563,
7, 49, 91, 132, 195, 279, 446,
14, 64, 115, 165, 241, 343, 545,
-5, 45, 96, 147, 224, 326, 530,
45, 89, 134, 179, 246, 336, 515,
74, 116, 158, 200, 263, 348, 516,
26, 58, 91, 123, 172, 237, 366,
11, 54, 98, 141, 205, 292, 464,
34, 66, 99, 131, 179, 243, 372,
48, 76, 103, 131, 172, 227, 337,
-21, 32, 85, 139, 219, 326, 540,
5, 48, 91, 134, 199, 285, 457,
24, 64, 104, 144, 205, 285, 446,
13, 66, 119, 172, 251, 357, 568,
29, 96, 162, 228, 327, 460, 725,
-15, 20, 56, 92, 147, 219, 363,
47, 89, 131, 173, 235, 319, 486,
28, 70, 111, 153, 216, 299, 466,
21, 58, 95, 131, 187, 260, 408,
36, 55, 74, 93, 121, 159, 235,
59, 142, 225, 308, 432, 597, 928,
44, 114, 184, 254, 359, 499, 778,
-25, 19, 63, 107, 174, 262, 439,
23, 55, 87, 119, 167, 231, 359,
18, 52, 87, 122, 175, 245, 385,
50, 76, 103, 129, 168, 221, 326,
80, 125, 169, 214, 281, 370, 548,
13, 74, 135, 196, 288, 410, 654,
7, 53, 99, 146, 215, 308, 493,
-27, 27, 82, 137, 220, 330, 551,
26, 75, 124, 174, 248, 346, 543,
26, 78, 130, 181, 259, 362, 568,
32, 103, 174, 245, 351, 493, 777,
61, 108, 156, 204, 276, 371, 562,
9, 79, 150, 220, 325, 465, 746,
66, 132, 199, 266, 365, 499, 765,
0, 61, 122, 183, 275, 397, 642,
39, 72, 106, 139, 190, 257, 391,
45, 73, 101, 129, 172, 228, 342,
};

static uint64_t neck_lateral_convs_0_conv1_weight[64 * 1*4] =
{ // torch.Size([64, 1, 1, 64])
0xa9021393b901012a,0x23901331091a0029,0x1a04130821131823,0x0a0021240498b1a9, 
0x3801a1aa21b00109,0xa0229a11a12a12a1,0x203922039c129ab1,0x03a2229ab300a390, 
0xb3b42223a0120032,0x34a29938aa081133,0x1204aba24903b223,0x120a2aa215a3b00a, 
0x1998188830922308,0x001a290131012093,0x9109090004919b18,0x0021129090000002, 
0xa300a908c02bbc82,0x1ab2c299cb0aaa1c,0x120281191d2a02b0,0x3abbba002991908b, 
0x29934b228843b393,0x1b2024300abca983,0x1ab3bc1432b32a81,0x0c3353a2141439cb, 
0x0091a099902a1020,0x21b810b910021002,0x1a92829910a890b9,0x802a801010080000, 
0xc204cba3b21aa92b,0x3cb990b1a8ac0803,0x2bb2aa003cb2ca32,0x21b28a00ca2cabb2, 
0xa3aabba2392232c2,0x4183112a3223108b,0xa2232930ab2ac3cb,0x203a03bb288a0a32, 
0x1934a8a3bb3b1033,0x3abbbac99abc1b42,0x0bb1bb0d3cb9ca43,0x28c32b1cbcac2aa2, 
0x2a82ba2b22b202bb,0xb2409b9222b3229a,0x382a1232a2333894,0x2223ba339998303a, 
0xa0acac828209ab49,0x21a010b22a8ba0ab,0x9ab8aa29a31d2322,0x0b494ba1a183abca, 
0x1a92319b59824499,0x814b4030542430a5,0x0922909915a2aa30,0xb2412490a2200a25, 
0x4aa2202a12320215,0x13094323199a10b3,0x83b49b0020a42130,0x2ba24311132329bb, 
0xbab0a291199aaa39,0x80b12abaab1b3b28,0x3ba3a03c3a11b823,0x12983c22abac31b8, 
0x142a9a1ab221bc22,0x32298948b10121b0,0x3b931a933b2ab4ab,0x33282129842aabbb, 
0x9b33aa3012a1110b,0x1aa0bb9a22a218bb,0xa3bdbcb983b9acb2,0xabb0baac0c2aa12b, 
0x3a9c332222bb291b,0x04842b04133baaaa,0x10090b28b48342bb,0x8a2b88233824b020, 
0xa9130a12b900a903,0x3aab221ca200cb50,0x30b31b1b208b8024,0x98a33ba0298cbb10, 
0x3bba13ccb44319c0,0x3082aa41b83c30b0,0xb2cb3cb8c3cb8c4b,0xb3b1b2b99ac0ab43, 
0x338baba11399a3ba,0xaa213b0b880203c2,0xa2132ba48311b2b9,0x3b3aa49ca22bb192, 
0x4aabbbacab8aa2ab,0x5aaaa303213cb829,0x1baccb92938a23c2,0xba182b089303cb9b, 
0xcc0304ac2332340b,0x21292383334b2aa3,0xa2323b2234200a3a,0x9b1a33a3a9923833, 
0x493ba9a23a2b2a29,0xb4b299b823b293ca,0x8029b3abbb494a0b,0x2080ba38bab34222, 
0xb3baaab1cba1bb4b,0x21b09cb2bb0d9382,0x9bbbab13311ab343,0x831a3a2bbba2bba0, 
0x2bacabb8b3a912cb,0xaa939bbabbbcb3aa,0xa23bb8bababbbcba,0x93329cbc9a3bb88c, 
0xa2890cb12a0bba84,0xc883abb838122a9a,0xacc3ac0433bca9ba,0x2c312bbc08aa1ab2, 
0x082b332c22933922,0xc21993903b34b34b,0x8422333ca339b22a,0xa14402ba392a4342, 
0x3b2bbbbb2abb390b,0x28ab11b091048ab3,0x0a31a3abb39b3808,0x103a32b221b2a118, 
0xca103b99032a2aa2,0x1bb023cb21bbba3a,0xa3a29b2b04bb8b31,0xa841ba11280a92b9, 
0x3aa948805ab4451a,0x904b5930541431b5,0xa00baaa9a6a2bb39,0xa2334490a3801025, 
0xa004bb03bbbb8bc9,0xbb020c399dab3a12,0x0caa1b143ab4c299,0x20b031baba8acab8, 
0x84820129292a1840,0x240ba033ba0aaa10,0xa022bb233030a303,0xa2a13a2c22121288, 
0xb91b8c0230b30a82,0x9d03baaa0a291abb,0xb4cd8bbab3cbaa29,0x9a88b00bbdab9139, 
0xc0903a9cc840a148,0x3bcc093cb3acdca1,0x19babaac923cc234,0x00a32929321b9ba1, 
0x213319220a1b1233,0xa419b8a121b31218,0x0a00221a032b2309,0x9222aa9b30b34332, 
0x33ac21b940ab3a5b,0xb4abb0c03923b3cb,0xb139223ab39cab54,0x8b18331b321bc239, 
0x0a82a99101281120,0x21b8119111032081,0x0a9291a920b01ab0,0xa02992a010902191, 
0x034a1a43b932a921,0x8b90b380321a2a11,0xb39dab2a32429221,0x4aabab3b1c9b423c, 
0x12b9b4d8a4ca2ba1,0x31b2399b22430cb2,0x30b293c2b3c32ba2,0xc43c230493abba32, 
0xa9233b13329810a3,0xd4230ba32a03311a,0x012333001a8aacab,0x21130a82189a4331, 
0xb122bb04282b2b33,0xd4140cb9b9810989,0xaababb133ab31b8c,0x0a1b2213bab938a2, 
0x498ac8bb2aabaa94,0xa0022ba0321308b2,0xb80b2b12b9aa20bb,0xb9a9b39b0c029230, 
0x95422952b334b0aa,0xac12a3a4bcb9323b,0x343d23433340c2b0,0x4b23b140cc2a14bc, 
0xb3220aa3a24ab104,0x329811013a240193,0x30329ca21b2aa3b1,0x213b430ba491bbcb, 
0x3322c342b1b394c1,0x3d0abaa24bb3222b,0x3020334bb2323824,0xa311b343233cb24b, 
0x211aa3220a391b33,0xa3309a412a08a13a,0xb2aa9899ba4322b1,0xa2023b39323a3a2a, 
0xb843ba3291a2b34c,0x2b3a93329abba203,0x11bda3a308240234,0x3ba3332a0a91bb92, 
0x2444a339234433b3,0xb2a3aa1341cb3829,0x32224332bc341b2c,0x44b1b3300ab2323b, 
0x2a3c340330c93823,0xb1a3a3b93a34b9ab,0x2332091b03321b2a,0xab392314234b3049, 
0x231bc3cbbbbaacbb,0xa0b0cbbacb2bbcaa,0x1cbbb3a22bb0a58b,0x31b8ab88c8baba3b, 
0x8922232ca3539303,0x4b2bb3304a3322b2,0x2233240c922b1034,0xa311abbb422823aa, 
0x21a384129343224a,0x25822130aa2c2104,0xa9b24a2942130320,0x0c103233ba12a231, 
0x92a2ba0302b90a1a,0x3a88039a23a310b0,0x312a011332b1a292,0x1a80a31ab8bbd230, 
0xaba392401032828c,0x9020ab2b229318ba,0x134d03b2aa93a89a,0xbab9b0981c90a333, 
0xb3c30318a1b0ba02,0x3b909321b43399bb,0x3932b32b2aa1a320,0xb02ab324b58cc9aa, 
0x2ba9a2b8221b29bb,0xb0ba10aa212431b3,0x2003a3b099b93189,0x1a3b24b01298aa90, 
0x3b039b08334a84b3,0x920132bb42b82ab0,0xa3a3bb13342bac1b,0xaa392bba234a88a4, 
0x418aabb82a3b1081,0xb8b31b8202ab2ba3,0x8b28a3a3ca203b0b,0x01a9089b9ca33831, 
0x2b330a03aa2ba2c0,0x3032bac892aa8a08,0x3cb09bac0c928bd2,0x0bb22b92b9908bc8, 
0x3b23b03a23322aca,0xa3b23a288abcb9a4,0x92abaac38ba5139c,0x09ca9411c98318a0, 
0x3923b83b320222c8,0xbb30a93132a382a2,0x239020a49884aabc,0x03a1b421b2aba132, 
0x99aaa8ab20028280,0xa0aa30a092131210,0x8131220033aaa0ab,0x9231a2b1228a0290, 
0xbabb223923232803,0x9b3330a2b22c992c,0xa30231aca8bb0c2b,0x1838c2b02b3a49c2, 
};

static int neck_lateral_convs_0_quant1_threshold[64 * 14] =
{ // torch.Size([64, 14])
-519, -307, -202, -122, -69, -17, 35, 88, 141, 194, 247, 326, 432, 643,
-470, -294, -205, -139, -95, -51, -7, 36, 80, 124, 169, 235, 323, 500,
-526, -295, -180, -94, -36, 21, 78, 136, 194, 251, 309, 396, 511, 742,
-497, -313, -221, -152, -106, -60, -14, 31, 77, 123, 169, 239, 331, 515,
-442, -294, -220, -165, -128, -91, -54, -17, 19, 56, 93, 148, 222, 370,
-840, -528, -371, -254, -176, -98, -20, 57, 135, 214, 292, 409, 565, 878,
-899, -582, -423, -304, -224, -145, -65, 13, 92, 172, 251, 370, 529, 847,
-1019, -735, -593, -487, -415, -344, -273, -202, -131, -60, 10, 116, 258, 542,
-801, -501, -351, -238, -163, -88, -12, 62, 137, 212, 287, 400, 550, 851,
-684, -544, -473, -421, -386, -350, -315, -280, -245, -210, -175, -122, -52, 87,
-579, -334, -212, -120, -58, 2, 63, 124, 185, 247, 308, 400, 522, 767,
-804, -552, -426, -332, -269, -206, -143, -80, -17, 45, 108, 202, 328, 580,
-872, -578, -431, -321, -247, -174, -100, -27, 46, 119, 193, 303, 450, 744,
-557, -300, -171, -75, -11, 52, 117, 181, 245, 309, 374, 470, 598, 855,
-875, -617, -488, -391, -327, -262, -198, -133, -69, -4, 59, 156, 285, 543,
-729, -444, -301, -194, -123, -51, 19, 90, 161, 233, 304, 411, 553, 839,
-1010, -711, -562, -450, -376, -301, -227, -152, -78, -3, 70, 182, 331, 630,
-603, -339, -207, -107, -41, 24, 90, 156, 222, 288, 354, 453, 586, 850,
-834, -541, -394, -284, -211, -138, -64, 8, 81, 154, 228, 338, 484, 777,
-1011, -693, -534, -415, -335, -256, -176, -97, -17, 61, 141, 260, 419, 737,
-889, -570, -410, -291, -211, -131, -51, 27, 107, 187, 267, 386, 546, 865,
-826, -560, -428, -328, -262, -196, -129, -63, 2, 69, 135, 234, 367, 632,
-831, -470, -290, -155, -65, 24, 114, 204, 294, 384, 474, 610, 790, 1150,
-841, -518, -356, -235, -154, -73, 6, 87, 168, 249, 329, 450, 612, 935,
-934, -643, -498, -389, -316, -243, -170, -98, -25, 47, 119, 228, 374, 664,
-1328, -951, -762, -621, -526, -432, -338, -244, -149, -55, 38, 180, 368, 745,
-877, -606, -470, -368, -300, -232, -164, -97, -29, 38, 106, 208, 344, 615,
-642, -344, -196, -84, -10, 64, 138, 212, 287, 361, 435, 547, 696, 993,
-1038, -676, -494, -358, -268, -177, -86, 3, 94, 185, 275, 411, 593, 955,
-848, -567, -427, -322, -252, -181, -111, -41, 28, 98, 169, 274, 414, 695,
-603, -338, -205, -106, -40, 26, 92, 158, 225, 291, 358, 457, 590, 855,
-1066, -746, -587, -467, -387, -308, -228, -148, -68, 11, 90, 210, 370, 689,
-828, -503, -341, -219, -138, -57, 24, 105, 186, 267, 348, 470, 632, 957,
-1116, -783, -616, -491, -408, -324, -241, -158, -74, 8, 92, 217, 383, 717,
-990, -705, -562, -456, -384, -313, -242, -171, -100, -28, 42, 149, 291, 576,
-497, -264, -148, -61, -3, 54, 113, 171, 229, 287, 345, 432, 549, 781,
-918, -604, -447, -329, -251, -172, -94, -15, 62, 141, 219, 337, 494, 808,
-817, -531, -389, -282, -210, -139, -68, 3, 74, 145, 217, 324, 466, 752,
-796, -474, -313, -193, -112, -32, 47, 128, 208, 288, 369, 489, 650, 971,
-1209, -770, -551, -386, -277, -167, -58, 51, 161, 270, 380, 544, 764, 1202,
-535, -298, -180, -91, -31, 27, 86, 146, 205, 264, 323, 412, 531, 768,
-812, -531, -391, -286, -215, -145, -75, -5, 64, 135, 205, 310, 450, 731,
-573, -351, -240, -156, -101, -45, 9, 65, 120, 176, 231, 315, 426, 648,
-1259, -783, -544, -365, -246, -127, -8, 111, 230, 349, 468, 647, 886, 1362,
-818, -524, -378, -267, -194, -121, -47, 25, 99, 172, 246, 356, 503, 796,
-387, -173, -66, 14, 67, 121, 174, 228, 282, 335, 389, 469, 576, 791,
-770, -430, -260, -132, -47, 37, 122, 207, 292, 378, 463, 590, 760, 1101,
-750, -470, -330, -225, -155, -85, -15, 54, 124, 194, 264, 369, 509, 789,
-965, -578, -384, -239, -142, -45, 51, 148, 245, 341, 438, 584, 777, 1165,
-665, -353, -196, -79, -1, 76, 154, 232, 310, 388, 467, 584, 740, 1052,
-1420, -1010, -805, -651, -548, -446, -343, -240, -138, -35, 66, 220, 425, 835,
-638, -357, -217, -111, -41, 28, 98, 169, 239, 309, 379, 485, 625, 906,
-628, -338, -192, -83, -11, 61, 133, 206, 279, 351, 424, 533, 678, 968,
-639, -414, -301, -217, -161, -104, -48, 7, 63, 120, 176, 260, 373, 598,
-650, -397, -271, -176, -112, -49, 13, 77, 140, 203, 266, 361, 488, 741,
-925, -610, -452, -334, -256, -177, -98, -19, 58, 137, 216, 334, 491, 806,
-1185, -765, -555, -398, -293, -188, -83, 21, 126, 231, 336, 494, 704, 1124,
-877, -536, -365, -237, -152, -66, 18, 103, 189, 274, 359, 487, 658, 999,
-729, -476, -349, -254, -190, -127, -64, 0, 62, 125, 189, 284, 411, 664,
-883, -640, -519, -427, -367, -306, -245, -184, -124, -63, -2, 88, 209, 453,
-925, -605, -445, -325, -245, -165, -85, -5, 74, 154, 234, 354, 514, 833,
-612, -361, -236, -142, -79, -17, 45, 108, 170, 233, 296, 390, 515, 766,
-834, -525, -370, -254, -176, -99, -21, 55, 133, 210, 287, 404, 558, 868,
-937, -628, -474, -358, -281, -204, -127, -50, 26, 104, 181, 296, 451, 759,
};

static uint64_t neck_lateral_convs_0_conv2_weight[64 * 9] =
{ // torch.Size([64, 3, 3, 1])
0xd, 0xa, 0x2, 0xd, 0x5, 0xa, 0xc, 0xc, 0x2, 
0x2, 0x1, 0x2, 0xc, 0xc, 0xc, 0x2, 0x3, 0x3, 
0x3, 0xd, 0x3, 0x3, 0xc, 0x3, 0xa, 0xc, 0x2, 
0x9, 0x8, 0x9, 0x9, 0x8, 0x9, 0x9, 0x8, 0x9, 
0x2, 0x1, 0x2, 0x1, 0x1, 0x1, 0x2, 0x2, 0x2, 
0x0, 0xa, 0xb, 0xc, 0xd, 0xb, 0x2, 0x3, 0x9, 
0x9, 0xa, 0x9, 0x9, 0xa, 0x8, 0x9, 0xa, 0x9, 
0x8, 0x4, 0x5, 0xa, 0x3, 0x3, 0xa, 0x0, 0xa, 
0xb, 0x8, 0x0, 0xc, 0xc, 0xa, 0xa, 0x8, 0xa, 
0x4, 0x1, 0xa, 0x5, 0x3, 0x1, 0x1, 0x0, 0xb, 
0xd, 0xb, 0x2, 0xc, 0x9, 0x1, 0x1, 0x1, 0x0, 
0x9, 0x2, 0x8, 0x5, 0x5, 0x4, 0xb, 0xc, 0xa, 
0xc, 0xb, 0xb, 0xa, 0x0, 0xa, 0xc, 0xb, 0xb, 
0xc, 0xb, 0xb, 0xc, 0x5, 0xc, 0xb, 0xd, 0x9, 
0xa, 0x9, 0x0, 0xb, 0x3, 0x5, 0x2, 0x4, 0x1, 
0x4, 0x2, 0x9, 0x4, 0x5, 0xb, 0xa, 0xa, 0x3, 
0x3, 0x4, 0x0, 0x4, 0x4, 0xb, 0x3, 0xb, 0xb, 
0x8, 0xb, 0xd, 0x3, 0x2, 0xc, 0x2, 0xa, 0x0, 
0x9, 0xb, 0x3, 0xb, 0x8, 0x4, 0x8, 0x4, 0x5, 
0xc, 0x9, 0x2, 0x3, 0x5, 0xa, 0x4, 0x4, 0xc, 
0xb, 0xa, 0x2, 0xb, 0xa, 0xb, 0xc, 0xb, 0xc, 
0x0, 0x2, 0xb, 0x3, 0x5, 0x8, 0xb, 0x1, 0x2, 
0xa, 0xd, 0xb, 0x3, 0xa, 0xb, 0x2, 0x2, 0xc, 
0x3, 0xb, 0xc, 0x2, 0x1, 0xc, 0x8, 0xb, 0xc, 
0x2, 0x6, 0xa, 0xa, 0x3, 0x3, 0xb, 0x2, 0x9, 
0x3, 0x4, 0x0, 0x2, 0x1, 0x1, 0x3, 0x2, 0xa, 
0x2, 0xb, 0x1, 0x3, 0x6, 0x9, 0xb, 0x9, 0x3, 
0x1, 0x3, 0x8, 0x0, 0xa, 0x1, 0xc, 0xd, 0xc, 
0x8, 0xb, 0xc, 0x1, 0xa, 0xb, 0x8, 0xa, 0xa, 
0xc, 0xc, 0x3, 0xa, 0x2, 0x4, 0x4, 0x4, 0x2, 
0xb, 0xa, 0xb, 0xa, 0x9, 0xa, 0xb, 0xa, 0xb, 
0xb, 0xb, 0x2, 0x6, 0x2, 0xa, 0x4, 0x9, 0xb, 
0x9, 0x1, 0x8, 0x3, 0x3, 0x2, 0x5, 0xa, 0xa, 
0x4, 0xc, 0x1, 0x4, 0x5, 0x3, 0xb, 0x4, 0x0, 
0x9, 0x2, 0x4, 0x9, 0x5, 0x0, 0x2, 0x4, 0xc, 
0x1, 0xc, 0xb, 0x2, 0xb, 0xc, 0x0, 0x2, 0xa, 
0xd, 0xd, 0xb, 0x1, 0x3, 0x8, 0x0, 0xa, 0x2, 
0xa, 0x9, 0x9, 0x9, 0x9, 0x9, 0x9, 0x9, 0xa, 
0xb, 0x3, 0x3, 0xe, 0xa, 0x3, 0xb, 0x3, 0x3, 
0xc, 0xa, 0xb, 0x3, 0x4, 0x9, 0x2, 0x5, 0x3, 
0x3, 0xb, 0xd, 0x3, 0x9, 0xb, 0x1, 0x2, 0xb, 
0x5, 0x2, 0xa, 0x4, 0x2, 0xa, 0x0, 0x9, 0x9, 
0x5, 0xb, 0x9, 0x4, 0xc, 0x2, 0x3, 0x9, 0xa, 
0xb, 0xe, 0xc, 0x3, 0xb, 0x3, 0x0, 0x0, 0xa, 
0xd, 0x4, 0x2, 0xb, 0x4, 0xb, 0xc, 0xc, 0xb, 
0x3, 0xc, 0xd, 0x3, 0xa, 0xb, 0x2, 0x1, 0xa, 
0x3, 0x3, 0x1, 0x3, 0x3, 0x1, 0x3, 0x4, 0x3, 
0xa, 0xd, 0x3, 0x3, 0xd, 0x2, 0x3, 0x4, 0xb, 
0xe, 0x0, 0x4, 0xa, 0x1, 0x3, 0x3, 0x3, 0xa, 
0xb, 0xa, 0x2, 0xd, 0xa, 0x9, 0xb, 0xa, 0x3, 
0x1, 0xb, 0x3, 0x3, 0x3, 0x4, 0x4, 0x3, 0x3, 
0x0, 0xa, 0x3, 0x0, 0xd, 0xb, 0xa, 0x8, 0x2, 
0xb, 0xa, 0xb, 0xc, 0xb, 0x4, 0x3, 0xd, 0xa, 
0xd, 0x2, 0x2, 0xc, 0xb, 0x0, 0x1, 0xc, 0xa, 
0x4, 0x6, 0x3, 0x2, 0xc, 0x3, 0x1, 0xb, 0xa, 
0xd, 0xa, 0x2, 0xc, 0xa, 0x0, 0xc, 0xb, 0x1, 
0xa, 0xa, 0xa, 0xa, 0x8, 0x8, 0xb, 0xa, 0xa, 
0x2, 0x3, 0x2, 0xb, 0xb, 0xb, 0xc, 0xc, 0xc, 
0x3, 0xc, 0x9, 0x2, 0xc, 0x5, 0xa, 0xa, 0x4, 
0x0, 0xa, 0x8, 0xb, 0xb, 0x8, 0x5, 0x5, 0x4, 
0x5, 0x5, 0x3, 0x2, 0xa, 0x1, 0x0, 0x3, 0xa, 
0x1, 0x8, 0x2, 0x0, 0x3, 0xb, 0xc, 0xd, 0xb, 
0x1, 0xc, 0x8, 0xb, 0xa, 0x0, 0xa, 0xb, 0x0, 
0x4, 0xa, 0xd, 0x4, 0x4, 0xa, 0x2, 0x2, 0x3, 
};

static int neck_lateral_convs_0_relu2_threshold[64 * 7] =
{ // torch.Size([64, 7])
-31, 10, 52, 94, 158, 242, 412,
32, 59, 86, 114, 155, 210, 319,
-37, 2, 41, 80, 139, 217, 374,
21, 31, 42, 53, 69, 90, 133,
37, 55, 74, 93, 121, 159, 235,
-33, 14, 61, 108, 178, 273, 461,
3, 10, 17, 23, 33, 46, 73,
27, 56, 84, 113, 155, 212, 326,
-10, 18, 46, 75, 118, 175, 289,
55, 118, 180, 242, 336, 461, 710,
62, 99, 136, 173, 228, 302, 450,
22, 75, 128, 181, 260, 366, 578,
-228, -179, -130, -80, -7, 91, 287,
3, 41, 79, 117, 175, 251, 404,
30, 62, 93, 124, 170, 233, 357,
32, 64, 97, 129, 177, 241, 370,
-5, 23, 52, 82, 125, 184, 300,
48, 75, 102, 129, 169, 223, 331,
59, 89, 119, 150, 195, 256, 377,
75, 118, 160, 202, 266, 351, 520,
20, 51, 82, 113, 160, 222, 347,
-2, 29, 60, 92, 139, 202, 328,
-50, 14, 79, 144, 242, 371, 631,
20, 51, 82, 114, 161, 223, 348,
-62, 0, 62, 124, 218, 343, 593,
-22, 10, 43, 76, 126, 192, 324,
1, 63, 124, 185, 277, 400, 645,
26, 63, 100, 138, 193, 268, 417,
3, 26, 48, 70, 104, 148, 238,
-12, 32, 76, 121, 188, 277, 455,
105, 123, 141, 159, 186, 222, 294,
58, 98, 138, 178, 238, 318, 478,
16, 44, 71, 98, 139, 194, 303,
-4, 35, 75, 115, 174, 254, 413,
11, 42, 73, 104, 151, 213, 337,
2, 25, 49, 73, 108, 156, 250,
35, 67, 99, 131, 179, 243, 372,
4, 12, 20, 29, 41, 58, 91,
31, 109, 187, 265, 382, 538, 849,
40, 86, 132, 178, 247, 339, 523,
41, 71, 101, 131, 176, 236, 356,
45, 75, 106, 136, 181, 242, 363,
-45, -4, 35, 75, 136, 216, 378,
-26, 70, 166, 262, 406, 599, 983,
20, 53, 87, 121, 171, 238, 373,
121, 174, 227, 280, 360, 467, 680,
13, 33, 52, 71, 100, 138, 215,
18, 67, 116, 165, 238, 336, 532,
50, 92, 133, 175, 237, 320, 486,
29, 56, 84, 111, 152, 207, 317,
-33, 22, 78, 133, 217, 328, 551,
25, 53, 80, 108, 150, 205, 316,
-37, 9, 56, 104, 174, 269, 458,
31, 61, 90, 120, 165, 225, 344,
-68, -17, 32, 83, 159, 260, 462,
-4, 30, 65, 100, 153, 223, 364,
-3, 12, 28, 44, 68, 100, 165,
-33, 10, 53, 97, 162, 249, 424,
39, 81, 123, 165, 229, 313, 482,
46, 78, 110, 142, 191, 255, 383,
38, 84, 130, 175, 244, 335, 518,
16, 41, 66, 90, 128, 177, 277,
9, 27, 45, 63, 90, 126, 197,
77, 115, 153, 190, 247, 322, 473,
};

static uint64_t neck_lateral_convs_1_conv1_weight[64 * 1*4] =
{ // torch.Size([64, 1, 1, 64])
0x3344403a4bb494b2,0xc3424cb4b344c432,0x32bc5bb34c4cb248,0x2a43c334b3cbc333, 
0x339332404204c93b,0x4a2bccaba4a983b3,0x3ac2a332bb30c23c,0x1213cbcad2ba3229, 
0x82a9c1ab0b2bbbb3,0xacbbb22bad023c1a,0xaab2abbb390bc9ab,0xaaaabbab2bb3bbc2, 
0x43c32c31c223b1b5,0x3b430023b3bab310,0xb338a3c932a4292b,0xb0cb0393823c344a, 
0x82bb0c98c3b4baa3,0x04a1a214830a1439,0xc9210abaa9b8412a,0xb3c08138b0493343, 
0x8395233121b3228a,0x223b9a1024024ab9,0x83c80b382390a1ab,0xaa335a2990423a29, 
0x13932222132a22a8,0xa1231141bb223921,0x2293a400b438ada9,0x22201bb329a23122, 
0xb10b0381da93b8ab,0x13aaacbaba3bc1b2,0xa32bb2ca2b3b1aa3,0x9389ab2c23cab3c2, 
0x8aabbbbcb3233288,0x9943b033b0aa4b22,0x0421a0b89a393bc8,0x0ab03a1291b220c2, 
0xac3bb99a492b428c,0x2bc380ab90b4ab4b,0x9c0b2b4b99b309ab,0xb14c93213a332c39, 
0xbba314bbac00aab1,0x8cb3cbbb14c232a3,0x0b9bad9abdbbc4cb,0xb2c9acbac055bb9c, 
0x33bb4444a423c09b,0x41b44cac9350b303,0x91030a938124c941,0xb34a341c2138124c, 
0x32a33c1084bcc4b0,0x803c00124bb23bbb,0xba92a3a440333331,0x91aa813a324bbaa8, 
0xacbbb3ac883aa012,0x0ba39b0229cad224,0xa112aa18ae0b0cb2,0x93b1b1bbb23a282b, 
0xaa1ba2b3a0021a2a,0x0ba31133cc33d143,0xa3349292aa230ba2,0x324231c8b132410c, 
0xba3329bab3b083a2,0x3a2c9b2444c3cb21,0x03b3a943233123bb,0xb3244c3c3020ac13, 
0x3314bb32b324b30c,0x2b32221b00003930,0xc42392a0189192a4,0xc38c0024a44b432b, 
0x38203b8012bab388,0xba2b1a913110092b,0x3492222309083b00,0x220194ab0b9baab0, 
0x9404c142333b4b4a,0x22d32232ab4c3342,0x13a0c3ccb4444bb3,0x241382423ca443c4, 
0xa0a223242bb19a13,0x933133a4c3392482,0x200b4a18b03a223a,0x8a13990282952234, 
0x392c34bb3a9939b9,0xb39b92228b0c149c,0x291b2bd480b08a33,0x4085399b2a90b923, 
0xcb44bb2ab3103bbb,0xab230b9332b89b4c,0xac4b2ab432c23bb0,0x0922a09ab2986abc, 
0x445352844bd0344b,0x853ca4c48355c2bc,0x33bb4c3acb424423,0xbb2a3545521cb4c5, 
0xa94022b94cbc383c,0xb0acb31c2cc13cc8,0x22bb9332bbabba99,0x4c24bbb3cac2bcb4, 
0xb230c3330c904b28,0x03ab3bb4b8133033,0xba282c8b04408329,0x0c423a0383043332, 
0x343433a323a2b3b9,0xa23c103d394200bc,0x93a384b43a12b832,0x3b431233ba09aa31, 
0xbaacbaacabb00c48,0x2c399acc04b92aab,0x9bb248a99babc5b0,0xbcc223ab02acc9bb, 
0x15b234c339b20a3b,0xa3c2cbadab492ac4,0x44a11a2b09caab82,0x3b2029ccb3c0c2a3, 
0x330339bb43ba30c8,0xb300a41090a39b9b,0xab983a3a029addbb,0x3a1a3a24bbc1b2c4, 
0xcabbbb2abb2bbc18,0x38b4bc2bbbb0300c,0x1a9a3bbd03432b3c,0xac12abbb4bb12c12, 
0x22112bb3ba9a2939,0x333b44413a4a2c32,0xa3a32b23252a340a,0x88434a314152a223, 
0x39cb181bc334c3b4,0x41b3b98a219b3332,0x832490ba20249332,0x13bb338a1229b53b, 
0x33a3414314b4b23c,0x44a094c13432a4c3,0x3ab41242b234b43b,0xbb0234c31a483145, 
0xacbb34c342bc2ca4,0xb4ccbcb4ac1299b3,0x4cd2132ca32bb1cb,0x4bc492cc9bc2b0a4, 
0xbb2c02bbc1a992a9,0x3b914b81c2093a3c,0xbb2babab020140ba,0x2abb902b3ad4ba22, 
0xb082bc3c2398a04b,0x0c49922a33ca5430,0xaabb2b88a41bb01b,0xb92a3a28b0313102, 
0x9bbdbb3cbbbacb6b,0x4c8c3bb024bb320a,0xc9db3c80aca205a3,0xcbcbc03ba2ab18bc, 
0xbc3a0290430b3231,0x810bb992b0b12a3b,0x0a2cb2020b283081,0xb33320290125ca02, 
0x2bb8a2bba832a14c,0xbccbab3a09ba3b24,0xb9c1cb1c3ab4a33b,0xcbb2baaa9a4cabbb, 
0x44331a3cb4cb82bb,0x02429ac24ba3baac,0x0a4b453549424833,0x43bc454032c333ac, 
0x3512849b49aa384a,0xab2a00bd31384cb0,0x3492b9038b9bb2b3,0xa04032a83a13c3b3, 
0x3bcb42231bbb3b33,0xb32a21a43a3023b3,0x34b9a218a11b3a98,0x91b2a9b03abac3c4, 
0x1a9cb20ca222a3c8,0x2a89323ba3bb133a,0xcba10bc299a32313,0x42b5302b2a3a4142, 
0xbbb4ccb9bc0bbcb3,0xcb94344c3dc9b39c,0x4343cb3b3ccc4bcc,0x2bcb4bac2caca193, 
0x9204443343c33001,0x8b4b2244b2303132,0x3422bc03b303a311,0xb3333333a85432a3, 
0x12c339994bcba923,0xb91b9bc31032aba3,0x4592131aa9004b8a,0x180c23cba2b9cacb, 
0x02c4c43839300b23,0x22a23cb923b31c42,0x23a4924023a0c30a,0x4293434ab2b5838d, 
0x2ac41cb41cb02b8a,0xbbc9cc841a240ab2,0x2b2ba0cb490acbbb,0xcb1dcbc1a2c4abb3, 
0xa023bd3c1aaaba30,0xb42bcb31aa4b12b3,0xd40a1bbb020caa9b,0xbc2238b49bbba9c3, 
0x330a24b43993b9c0,0xb8cb29c2cb43baa4,0x5db4993003ba81a3,0x4a301b2b13b114b0, 
0xbb4d439ba3bac4ba,0xb413c2c23c2132ca,0x3bb13b124a89bb03,0x3c39b3abb24db2b4, 
0xa33243232ab830aa,0xa429b0a2bb3a5aa2,0x0390342221309322,0x1928c0b29253b2b4, 
0xb9a3b3abc032acb3,0xbbb4a218b33b3889,0xbb323bcb1abaa3b3,0xa2b1291002ba222b, 
0xb0449c9c3aa01aac,0xc83ba48cc0c349bc,0x0c3a8b9b223ccacc,0x0cabbbb4cba4bac4, 
0x8b33bbc1aa2b4bac,0xcbb1b303aa92babb,0xbc4b134410b94ab3,0x39bb38b229b00ab3, 
0x2b143c3ca43a4331,0xd3a302c44241ab43,0x82bb445353303244,0x8bac142343bbb3cc, 
0xc233b19010322a1b,0x2cb49abc34132cab,0x2aa8a2329bb03a91,0x394a3399bbb42b4b, 
0x03caca3bb343b0c2,0x1bb3c41b23c32131,0x9d433bbcba02319c,0x949b923bb13b2322, 
0x0934bc3b29a00311,0xb34ab9323a3aa9ba,0xc4bb90933a3bcaa1,0xb992ab14bac0b0a2, 
0xb0b8c308aa334b00,0x42828340a2b92103,0xaca2aaabb2b3c391,0xb2903c3302233239, 
0xaa42ac3c9ccbc2a1,0xb30cb433c03bb3d2,0xb3ababbb93ab9c0b,0x8cc2bbc4b99b0ac4, 
0x2ab23cb42bcbb134,0x032cac2332a33b34,0x39933349b29cb32d,0xcc8c3abac33dac8a, 
0xba213bc33bcb23ba,0xc3cc524944342aab,0x1cca5a1b33ccc23c,0xbb32c30c442aba4b, 
0x9239a0a20a09208a,0x2b9a319c0a12da20,0x2ba098119ca2b212,0x8b412a3b23b1313a, 
};

static int neck_lateral_convs_1_quant1_threshold[64 * 14] =
{ // torch.Size([64, 14])
-1208, -710, -460, -273, -149, -24, 99, 224, 349, 473, 598, 785, 1034, 1533,
-1306, -854, -628, -459, -346, -233, -120, -7, 105, 218, 331, 500, 726, 1178,
-1560, -1141, -932, -775, -670, -565, -461, -356, -252, -147, -42, 114, 323, 742,
-918, -560, -382, -247, -158, -69, 20, 109, 199, 288, 378, 512, 691, 1048,
-1005, -634, -448, -309, -216, -123, -31, 61, 154, 247, 340, 479, 664, 1036,
-902, -515, -322, -177, -80, 16, 112, 209, 306, 402, 499, 644, 837, 1224,
-949, -551, -352, -203, -104, -4, 94, 194, 293, 392, 492, 641, 840, 1238,
-1147, -818, -653, -530, -448, -365, -283, -201, -118, -36, 45, 169, 333, 662,
-1247, -816, -601, -439, -331, -223, -116, -8, 99, 207, 314, 476, 691, 1123,
-1086, -731, -554, -421, -332, -244, -155, -66, 21, 110, 199, 332, 509, 864,
-1616, -1143, -906, -729, -611, -492, -374, -256, -137, -19, 98, 276, 512, 985,
-919, -507, -302, -147, -45, 57, 160, 263, 366, 469, 571, 726, 931, 1343,
-1197, -715, -474, -293, -173, -53, 67, 187, 308, 428, 549, 729, 970, 1452,
-1200, -847, -671, -538, -450, -362, -274, -186, -97, -9, 78, 210, 386, 739,
-1036, -666, -480, -341, -249, -156, -64, 28, 121, 213, 306, 445, 630, 1000,
-953, -569, -377, -233, -137, -41, 54, 150, 246, 342, 438, 582, 774, 1158,
-772, -449, -288, -167, -87, -6, 74, 154, 235, 315, 396, 517, 678, 1000,
-971, -597, -410, -270, -176, -83, 10, 103, 197, 290, 384, 524, 711, 1085,
-1368, -733, -415, -177, -18, 139, 298, 457, 616, 774, 933, 1171, 1489, 2124,
-1783, -1173, -867, -639, -486, -333, -181, -28, 123, 276, 429, 657, 963, 1573,
-958, -616, -444, -316, -230, -145, -59, 26, 111, 197, 283, 411, 582, 925,
-1346, -787, -507, -297, -157, -17, 122, 262, 402, 542, 682, 892, 1172, 1732,
-1721, -1025, -677, -416, -242, -68, 105, 279, 453, 627, 801, 1062, 1411, 2107,
-1471, -1017, -789, -619, -505, -392, -278, -165, -51, 62, 175, 346, 573, 1027,
-919, -540, -351, -209, -114, -19, 74, 169, 264, 358, 453, 595, 785, 1163,
-1301, -794, -540, -350, -223, -96, 30, 156, 283, 410, 537, 727, 981, 1488,
-1513, -1080, -864, -702, -594, -486, -378, -270, -162, -53, 54, 216, 432, 864,
-633, -466, -383, -320, -278, -237, -195, -153, -112, -70, -28, 33, 117, 283,
-1107, -722, -530, -386, -289, -193, -97, -1, 95, 191, 287, 431, 624, 1008,
-1745, -1227, -968, -774, -644, -515, -385, -256, -127, 2, 131, 326, 584, 1102,
-718, -350, -165, -27, 64, 156, 248, 341, 433, 525, 617, 755, 940, 1308,
-935, -539, -342, -193, -94, 3, 102, 201, 300, 399, 498, 646, 844, 1240,
-844, -431, -224, -69, 33, 137, 240, 343, 447, 550, 654, 809, 1015, 1429,
-1504, -1020, -778, -597, -476, -355, -234, -113, 7, 128, 249, 431, 673, 1157,
-962, -670, -525, -415, -342, -269, -196, -124, -51, 21, 94, 203, 349, 641,
-876, -525, -350, -218, -130, -43, 44, 132, 220, 307, 395, 527, 702, 1053,
-1886, -1268, -959, -728, -573, -419, -264, -109, 44, 199, 353, 585, 894, 1512,
-654, -408, -286, -194, -132, -71, -9, 51, 112, 174, 235, 327, 450, 695,
-1306, -940, -758, -621, -529, -438, -346, -255, -164, -72, 18, 155, 338, 704,
-881, -440, -219, -53, 56, 166, 277, 387, 497, 608, 718, 884, 1104, 1546,
-1187, -734, -508, -339, -226, -113, 0, 113, 226, 339, 452, 621, 848, 1300,
-1118, -708, -502, -348, -245, -143, -40, 62, 164, 267, 370, 524, 729, 1140,
-1003, -625, -436, -294, -199, -105, -10, 83, 178, 272, 367, 509, 698, 1076,
-1432, -991, -771, -605, -495, -385, -274, -164, -54, 55, 165, 331, 551, 992,
-886, -469, -260, -104, 0, 104, 208, 313, 417, 521, 625, 782, 990, 1408,
-1260, -828, -613, -451, -343, -235, -127, -19, 87, 195, 303, 465, 681, 1112,
-984, -594, -398, -252, -155, -57, 39, 137, 234, 332, 430, 576, 771, 1161,
-1332, -948, -756, -612, -516, -420, -324, -228, -132, -36, 59, 203, 395, 778,
-1254, -861, -665, -517, -419, -321, -223, -125, -27, 70, 169, 316, 512, 905,
-622, -398, -286, -202, -146, -90, -33, 22, 78, 134, 190, 274, 386, 610,
-1541, -983, -704, -495, -355, -216, -76, 62, 202, 341, 481, 690, 969, 1527,
-667, -380, -237, -129, -57, 14, 85, 157, 229, 301, 372, 480, 624, 911,
-1550, -1031, -771, -577, -447, -317, -187, -57, 72, 201, 331, 526, 786, 1305,
-1377, -961, -752, -596, -492, -388, -284, -180, -76, 27, 131, 287, 495, 911,
-964, -606, -427, -292, -203, -113, -24, 65, 155, 244, 334, 468, 647, 1005,
-945, -465, -224, -44, 75, 195, 315, 435, 555, 675, 795, 976, 1216, 1696,
-1157, -748, -544, -390, -288, -186, -84, 17, 120, 222, 324, 477, 682, 1091,
-1553, -1037, -779, -585, -456, -327, -198, -69, 60, 189, 318, 511, 770, 1286,
-981, -634, -460, -330, -243, -156, -69, 17, 103, 190, 277, 407, 581, 929,
-1132, -727, -525, -373, -272, -170, -69, 31, 132, 233, 335, 486, 689, 1094,
-1443, -1018, -805, -646, -539, -433, -327, -220, -114, -8, 98, 257, 470, 895,
-1376, -923, -697, -527, -414, -301, -187, -74, 38, 151, 265, 434, 661, 1114,
-1751, -1176, -889, -673, -530, -386, -242, -98, 44, 188, 332, 547, 835, 1410,
-718, -480, -361, -272, -213, -153, -94, -34, 24, 83, 143, 232, 351, 589,
};

static uint64_t neck_lateral_convs_1_conv2_weight[64 * 9] =
{ // torch.Size([64, 3, 3, 1])
0xc, 0xb, 0xb, 0xe, 0x3, 0xc, 0xb, 0x2, 0x3, 
0x8, 0x0, 0x9, 0x4, 0x1, 0x3, 0x4, 0x4, 0x5, 
0xa, 0xb, 0x9, 0x0, 0xc, 0xc, 0x3, 0xc, 0xb, 
0x2, 0x3, 0xb, 0xd, 0x4, 0x2, 0xe, 0xb, 0x3, 
0x3, 0x2, 0xd, 0xc, 0x2, 0xc, 0xc, 0x0, 0xc, 
0xc, 0xc, 0x4, 0xc, 0xc, 0x4, 0xa, 0x2, 0x2, 
0xa, 0xb, 0xa, 0xa, 0xc, 0xa, 0x9, 0xb, 0x8, 
0x3, 0x5, 0x2, 0x9, 0x5, 0x8, 0xc, 0xc, 0x3, 
0xc, 0xc, 0xb, 0xb, 0xa, 0xb, 0xa, 0xa, 0x1, 
0x8, 0x3, 0x9, 0xc, 0xa, 0xb, 0xc, 0xd, 0xb, 
0x0, 0x4, 0x4, 0x4, 0xc, 0x4, 0x4, 0x4, 0x4, 
0x2, 0x4, 0x2, 0xc, 0xc, 0xb, 0xc, 0xc, 0xc, 
0x3, 0x0, 0x0, 0x3, 0x3, 0x2, 0x3, 0x3, 0x4, 
0x0, 0xb, 0x2, 0x9, 0x6, 0xa, 0x3, 0x3, 0x3, 
0xd, 0xc, 0xd, 0xa, 0x3, 0xa, 0x3, 0x4, 0x0, 
0x9, 0xd, 0xc, 0x9, 0xc, 0xb, 0x3, 0x0, 0x9, 
0xe, 0xc, 0x3, 0xb, 0x2, 0x1, 0x3, 0x0, 0x0, 
0x4, 0x2, 0x8, 0x4, 0x0, 0xa, 0x4, 0x2, 0xa, 
0xc, 0x2, 0xd, 0xb, 0x3, 0xa, 0xc, 0xa, 0xd, 
0x0, 0x2, 0xd, 0x2, 0x3, 0xd, 0x3, 0x3, 0xb, 
0x0, 0x5, 0xa, 0x4, 0x4, 0xb, 0x5, 0xb, 0xa, 
0xd, 0xc, 0x8, 0xd, 0xb, 0x3, 0xd, 0xa, 0x3, 
0xb, 0x0, 0xa, 0xb, 0xc, 0xc, 0xc, 0xb, 0xd, 
0x0, 0x3, 0x9, 0xa, 0x6, 0x3, 0xa, 0x4, 0x1, 
0xa, 0x3, 0x2, 0xc, 0x9, 0xc, 0xc, 0xc, 0xb, 
0x8, 0x4, 0x5, 0x2, 0x3, 0x4, 0x0, 0x3, 0x4, 
0x3, 0x3, 0x4, 0x3, 0x3, 0x4, 0x1, 0x3, 0x3, 
0x0, 0x5, 0x3, 0x3, 0x4, 0x4, 0xa, 0xc, 0xa, 
0xa, 0x3, 0x4, 0x0, 0x5, 0x3, 0x3, 0x2, 0xb, 
0xc, 0xb, 0xc, 0xa, 0x2, 0xa, 0xb, 0xb, 0xb, 
0x1, 0x4, 0x0, 0xd, 0xd, 0xb, 0xb, 0xc, 0x9, 
0x4, 0xc, 0xd, 0x2, 0x0, 0xc, 0x3, 0x2, 0xb, 
0x3, 0x4, 0xd, 0x3, 0x3, 0xd, 0xc, 0xc, 0xc, 
0x3, 0xb, 0xb, 0xb, 0xb, 0x4, 0xb, 0x4, 0x6, 
0xc, 0x4, 0x0, 0x5, 0x4, 0xa, 0x2, 0xb, 0x9, 
0x8, 0x3, 0x2, 0xa, 0xc, 0x4, 0x3, 0x6, 0x9, 
0x2, 0x2, 0x3, 0x4, 0x4, 0x4, 0x4, 0x3, 0x3, 
0x2, 0xb, 0x5, 0xb, 0xc, 0x3, 0xb, 0x0, 0xc, 
0xa, 0x3, 0x4, 0xb, 0x4, 0x5, 0xb, 0x3, 0x8, 
0xb, 0xa, 0xc, 0x3, 0x4, 0xc, 0xa, 0xc, 0xd, 
0x1, 0x3, 0x3, 0xa, 0x3, 0x4, 0x1, 0x4, 0x5, 
0x4, 0x3, 0xc, 0x4, 0x4, 0xb, 0x4, 0x3, 0x9, 
0xa, 0x0, 0xc, 0x3, 0xa, 0xd, 0x3, 0xd, 0xc, 
0x3, 0xb, 0xa, 0x4, 0x3, 0x9, 0x2, 0x6, 0x4, 
0xa, 0xd, 0xb, 0xb, 0xd, 0x3, 0x3, 0xb, 0x1, 
0x5, 0x3, 0x0, 0x4, 0x0, 0x2, 0x4, 0x2, 0xa, 
0xb, 0x0, 0x3, 0xb, 0xd, 0x2, 0x1, 0xd, 0xc, 
0x2, 0x1, 0x0, 0xa, 0x5, 0x4, 0x4, 0x4, 0x9, 
0x2, 0x3, 0x3, 0x3, 0x5, 0x4, 0xb, 0xc, 0x8, 
0x5, 0x5, 0x5, 0x3, 0x0, 0x3, 0x3, 0xa, 0x2, 
0xb, 0xc, 0x8, 0xc, 0xa, 0xa, 0x2, 0xc, 0xc, 
0xb, 0x3, 0x2, 0x3, 0xe, 0xa, 0x8, 0x3, 0xa, 
0xc, 0xb, 0x8, 0xc, 0xb, 0xa, 0xb, 0xb, 0x9, 
0x6, 0x4, 0xb, 0x4, 0xb, 0xb, 0x2, 0x9, 0x1, 
0x2, 0x5, 0x5, 0xa, 0xa, 0x2, 0x3, 0xc, 0xb, 
0xa, 0xb, 0xa, 0xc, 0xc, 0x1, 0xd, 0xc, 0x2, 
0xb, 0x1, 0x2, 0xc, 0x0, 0xc, 0xd, 0xc, 0x9, 
0xb, 0xd, 0xa, 0x2, 0xa, 0xa, 0xb, 0xa, 0xb, 
0xa, 0xa, 0x8, 0x9, 0x0, 0x4, 0x4, 0x5, 0x4, 
0xc, 0xa, 0x0, 0xc, 0xa, 0x3, 0xc, 0xb, 0x2, 
0x3, 0x6, 0x4, 0xc, 0xb, 0x4, 0x0, 0xa, 0x3, 
0x1, 0x2, 0x2, 0x4, 0x5, 0xa, 0x4, 0x5, 0x1, 
0x5, 0x4, 0x5, 0x4, 0x1, 0x8, 0x0, 0xb, 0xb, 
0xa, 0x4, 0x3, 0xd, 0x4, 0x2, 0xb, 0xb, 0x3, 
};

static int neck_lateral_convs_1_relu2_threshold[64 * 7] =
{ // torch.Size([64, 7])
27, 136, 244, 353, 516, 733, 1167,
-126, -39, 48, 135, 267, 442, 792,
-2, 50, 104, 157, 237, 344, 558,
75, 133, 192, 251, 340, 457, 693,
-5, 40, 85, 131, 199, 290, 472,
-2, 38, 79, 120, 181, 262, 425,
55, 86, 118, 149, 197, 260, 386,
-96, 3, 103, 203, 354, 554, 955,
17, 53, 90, 126, 181, 254, 400,
35, 76, 116, 157, 217, 298, 460,
15, 78, 142, 205, 300, 426, 680,
62, 117, 172, 228, 311, 422, 644,
-25, 8, 43, 78, 130, 199, 338,
-3, 66, 135, 204, 308, 447, 724,
0, 61, 123, 184, 277, 400, 646,
41, 84, 128, 172, 237, 325, 500,
97, 156, 214, 273, 360, 477, 711,
24, 51, 78, 104, 145, 198, 305,
47, 121, 195, 270, 381, 529, 825,
-104, -56, -9, 38, 109, 204, 395,
-11, 73, 158, 244, 372, 542, 884,
48, 126, 204, 282, 399, 555, 867,
-73, -6, 59, 126, 226, 360, 627,
5, 69, 133, 197, 292, 420, 675,
-72, 15, 103, 191, 323, 499, 852,
-7, 57, 121, 186, 282, 411, 669,
-12, 57, 127, 196, 301, 440, 719,
35, 162, 288, 415, 604, 857, 1363,
13, 81, 148, 215, 316, 451, 720,
23, 50, 78, 105, 146, 200, 309,
43, 104, 166, 227, 318, 440, 685,
33, 71, 108, 145, 202, 276, 426,
43, 104, 166, 227, 319, 442, 688,
113, 166, 219, 272, 352, 458, 669,
-6, 37, 82, 126, 193, 281, 459,
-2, 77, 156, 235, 354, 512, 829,
-50, -5, 39, 84, 152, 242, 423,
-25, 64, 154, 244, 379, 558, 918,
73, 127, 182, 236, 317, 426, 644,
35, 92, 149, 207, 292, 406, 635,
28, 74, 120, 166, 235, 327, 512,
46, 87, 127, 168, 230, 311, 475,
43, 94, 145, 195, 271, 373, 576,
18, 80, 142, 203, 296, 420, 667,
-78, -7, 63, 135, 242, 384, 670,
40, 79, 117, 156, 214, 290, 444,
93, 140, 188, 235, 306, 401, 591,
34, 82, 130, 177, 249, 344, 535,
82, 129, 175, 222, 291, 384, 570,
287, 407, 527, 647, 827, 1067, 1548,
59, 107, 156, 204, 276, 373, 566,
-18, 50, 119, 188, 292, 430, 707,
50, 87, 125, 162, 218, 292, 442,
65, 122, 179, 236, 322, 436, 665,
17, 59, 102, 145, 210, 295, 467,
46, 122, 199, 275, 390, 543, 848,
-41, 11, 64, 117, 197, 304, 516,
4, 47, 89, 132, 196, 281, 452,
11, 54, 98, 141, 205, 292, 464,
29, 52, 74, 96, 129, 174, 263,
60, 127, 195, 263, 364, 500, 770,
52, 116, 179, 243, 338, 465, 718,
44, 97, 150, 204, 283, 390, 603,
-56, 39, 134, 230, 374, 566, 950,
};

static uint64_t neck_lateral_convs_2_conv1_weight[64 * 1*4] =
{ // torch.Size([64, 1, 1, 64])
0x1ac884dccd985cc8,0x5bb5bba9210bc9b4,0xda3b42bca40ccb9b,0xc182b3c0a13acb0c, 
0x0a4b05cb1b3c443b,0xbcb504b32c38b3a3,0xba4a433bd3bc8c3b,0xc3aa3cc3431b1445, 
0xa42baa4baa5a1a2c,0x942abbccb32bc15b,0xb3ba4b8c354a93c3,0x4cbc4b39b242b21b, 
0x443ab8343c833c8b,0x1ad32cd435b32cb3,0x2cc2133344b3bc44,0x434444c4ca44b38b, 
0xab1c89b31983b998,0xcb8b3cb2a4aba9ab,0x3bbaa32b48cb3b28,0x2033bac4ba004a1a, 
0xcb3b93038833aa3b,0xc4234bcca2113329,0xac353aa4cb4384c2,0xc0ba25432c3b2300, 
0x4433b3ac32a3bb12,0xabc234340db2ac34,0xb3a091324ac3bb3b,0xb010a0ad32b4433b, 
0x42233ba9ac34cc2c,0xc33b2b4b948a0a98,0x2c02945412403494,0x0433cc339ccc23cb, 
0x3192bb3aaa1b14bc,0xcb9bb3b0ab0ab83b,0xb393d3c3929ccd22,0x03bb00b221901243, 
0x093abc2933210390,0x3191a431cdabb241,0x0418c032283aab02,0x83ca39bdba4a1031, 
0x9b20482bcaab2e3a,0xc2303bb23421bca1,0x2c3b3313013344a9,0x3dcabbc3c24d3ccb, 
0x3bbcab23323b4003,0x34b1333b3b83ac89,0xb3201ab3bb3a4088,0x9244313b3233a1a2, 
0x342bbb345452d43c,0x1ca23431b484a24d,0xb3934313022bbb10,0x12324c934cc3b344, 
0x344439cb8113b334,0x83423452b20ca3c3,0x4cb4233323a134aa,0x24138a441cdb9335, 
0xac2cc03a434c4222,0xccc34bb22223cbb0,0x333c0c3d0c1b04b3,0x51cb4abca3a220a4, 
0xb20ccacac994c43c,0xab348bb40a0b24a2,0x2bb0c138c1ba2c12,0x1c3bbab33aaab322, 
0x420bc8932142bcb0,0xb2344bbd32b3339d,0x383bbac2c23233b2,0x3ab43a83aa243911, 
0xdc43a2bc89344344,0x3cbb3a95d232b334,0x40339442b3bbb43c,0x1c4cc384c34d3c33, 
0x540233849a2a03cc,0x210b94431b392a40,0x821a330aacb34032,0x2ab4c2929bb40aca, 
0x3b30494a23b3ac34,0xc45a332b4bb93caa,0x2331a3a4aa442593,0xba034b5ba219b3ba, 
0x02c2a24890433453,0xa4ab28b1c45445a3,0x44a413b2143332ba,0x32a2232428391a24, 
0xc428b330305c544b,0x4a10223cbbb33b34,0xc3b23c54ab3cb20d,0xcb9c44bc234d4aa2, 
0x0b3dc44339dc3c3a,0x0c2a33c93c943cc9,0xb4133ccb2cbb8ccb,0x9cbb32db940b3939, 
0xb0bc21b43323b014,0xabcac0c5c2132a0b,0x93208bcc3dbabb0a,0x0bcb8abc920c3444, 
0xbc3a33a9a3432401,0x423b45ba4d354488,0x3bab3ad9a3cc383b,0x30bc3c3854cba313, 
0x931bcbdccab2abca,0xcaacbbb3cabcba4c,0x2cb1c8ccbcc333ab,0xacdccabc33bb4b4c, 
0xc4b0b943b3b3944b,0x0bc3bbb3ba11a834,0x2bcabc44cb1bbccb,0xbc9bc9bb9c2a32aa, 
0x4232cc2530933acb,0x4ab2229c82cc9d3c,0xb2c3c3da50342c8b,0xd5c343c0a3a45034, 
0xa14acaa180cbbb9a,0x81c5b83c2b8cc103,0x1b51c003e0b3cba0,0x8bcacb332b92bb0c, 
0x9ba3c22349cb3c43,0x03c34343c3444c02,0x930bb1423034423d,0xc43321b4344d3c09, 
0x2bbb2ab80bb8bab2,0xb2d2acb3a30ac4ca,0xb29cc2aa2adb3aab,0x903bacc022c4ab22, 
0xa339c21b42388030,0x5123c4430b342b44,0x83554b13c042ac82,0xcbbc43538234a031, 
0xc8c2d23cbadb4c3b,0xc330331ac2bcba44,0xcbb89b23a4123abc,0x9b5ba5a9c3bccaac, 
0x33b9032492223bc2,0x4c3aa923b294ac3c,0xcabb40cb444cb923,0x433432ba2144180b, 
0x33942454cbc2cb2c,0xb93823cab4b8144c,0x1b43b32324b8a248,0x33035cb5cbccb183, 
0xb3498b2bc8bbcb9b,0x2aa5ba2099389002,0xb9abcab0982acaa9,0xaaa131c90191192b, 
0xbc3b123333bb2ba2,0xcbca49c3cb28ccc2,0x2c343444bbb3d423,0xc833b4c3ccbccc2d, 
0x9a93d4a019d0529b,0x81a3a4a0b02bbd44,0xaa34a323c20cbcbc,0xc1ba33b9a45acbcb, 
0x3a4133203d4413ba,0x4c431b2c4bbc35a2,0x84cbba9c33cdcc4c,0xb5a35114b2b4a534, 
0x3193a93403830cca,0xa0ab9b3c3bbb8a2b,0x3bbbc9cb4cc33b8a,0xa4b4aa0aa8c44c0c, 
0x0b0b9aa00249b22b,0xcbc92cc2a39198bb,0x9caa019b3bb3022a,0x8033ba332cb23383, 
0xcb2b84bccbd13d32,0xcc3ba89c3bbb33a4,0x1db4cc344cccbb93,0x0b3ca4bbdc2d34bb, 
0xbcc32a4210bb9538,0xa4a2248bdba32031,0x393aba33344332b9,0x3ccb314c021aa40d, 
0xcb13b3cc541ab0a3,0x3c4ba4484b8453c2,0x33aa0cac3c309b32,0xbbb5434ab10223a4, 
0x44333244accd4d34,0xbbca4139c24b29b4,0x423234bb4540912b,0x4b2434b5b44b4bb3, 
0x34c5a44a4a4c142b,0x4303c43c4b223392,0x13133c222b2c2a9b,0x0a09444b2124c2c3, 
0x3b1252209393cd41,0xa54223322ccc3911,0x342b5393cab54483,0x84212a3800b0b42b, 
0x93c392dbcacb2a34,0xbc480b504a2ccb13,0x394b4143cb155d49,0x4bbac9a232b2a3ac, 
0x2bacb0321ca3bb0c,0xcb1a2cc8310299bc,0x0a203aa4cc403ac4,0xbbbc3c3cca43131c, 
0x023348334b4a3a03,0x4c433a4b13d9aa34,0xb314bb42323c1c14,0x084b4432c210b411, 
0xb9cac3409832a12a,0xbc4cab03a4344490,0x11a55bb3b05d43d2,0xa8ba4550a151ba24, 
0xbb353a0834124c13,0x4411c22baba43ba4,0x333a3b49943a29c0,0xbac20a3cb4338cb3, 
0xabb9b113bca00ca3,0x4c1a0428adc4a30b,0x32abb1ab4b2cbc8b,0xa0ba4ccdc3cc142b, 
0x331ccb85443b3509,0x4c4b9233a444eb43,0xbbd2444db239acac,0xc434343223902c42, 
0x44044bd03a8c34b9,0x9c8823423329a389,0x039222b08caab34a,0xb39594238412b000, 
0xb405b3b22cba3c4d,0xcac34c3a3b3cbbc2,0xbc0b822bcbcaaa1b,0x3ac42bd4bcb0bbcb, 
0xa4c9db3c00c90cab,0x0bbcb42898c9cb34,0xbcbbc23342adc82b,0x8b2ac9c9b9aaabbc, 
0x43c52040a10b30b2,0x243ca233a2a0aa2b,0xb3b13bdb324bd3a2,0x43c2831044943131, 
0x24b1a0ca43aac8cb,0xbc81bc42329a19c1,0xa922bb3b2dbcac8b,0x8ac5b5b3ba4b100b, 
0x03b3cb2c33dc3cd4,0x2bd0a42b4acbbd3a,0xb84cdabc3384cb24,0x4cabcaccc4a93ddd, 
0x24bab542cbb94bcc,0xd413c3cacbcbc344,0xdcb32bb3b22d9ca9,0xc20c02b211b102ac, 
0x3a33bac3bbbcc4a8,0x4cc9abbdaa192b8c,0xbbacb3babb3bbc2a,0xb0233ccaab52a242, 
0x25340a8b03b32bab,0xba044c39b10b0940,0x8bb23b34b322930b,0x33c13244bd5b42b4, 
0xcd3a4944a3394b30,0x8a3cb4494aa44203,0x323dba302bb33b50,0x91bbbd3b3baa20b4, 
};

static int neck_lateral_convs_2_quant1_threshold[64 * 14] =
{ // torch.Size([64, 14])
-1125, -749, -561, -420, -325, -231, -137, -43, 50, 144, 238, 379, 567, 943,
-903, -563, -392, -265, -180, -94, -9, 75, 160, 245, 330, 458, 628, 969,
-739, -465, -327, -224, -156, -87, -18, 49, 118, 187, 255, 358, 496, 770,
-1400, -931, -696, -520, -402, -285, -167, -50, 66, 184, 301, 477, 712, 1182,
-972, -629, -458, -329, -243, -158, -72, 13, 98, 184, 270, 398, 569, 912,
-1052, -653, -453, -303, -203, -103, -3, 96, 195, 295, 395, 545, 745, 1144,
-894, -578, -421, -302, -223, -144, -65, 13, 91, 170, 249, 368, 526, 841,
-690, -426, -294, -195, -129, -62, 3, 69, 135, 201, 267, 366, 498, 762,
-1048, -702, -530, -400, -314, -227, -141, -55, 31, 117, 203, 333, 506, 851,
-752, -486, -353, -253, -187, -120, -54, 12, 78, 144, 211, 311, 443, 709,
-977, -637, -467, -340, -255, -170, -85, 0, 84, 169, 254, 382, 552, 891,
-936, -593, -422, -293, -207, -121, -36, 49, 135, 221, 307, 435, 607, 950,
-872, -535, -366, -240, -155, -71, 12, 96, 181, 265, 349, 476, 644, 981,
-793, -475, -316, -196, -117, -37, 41, 121, 200, 280, 359, 478, 637, 955,
-828, -535, -388, -278, -205, -132, -58, 14, 87, 160, 234, 343, 490, 783,
-969, -631, -462, -336, -251, -167, -82, 1, 86, 170, 255, 381, 550, 888,
-741, -465, -327, -223, -154, -85, -16, 52, 122, 191, 260, 363, 502, 778,
-905, -552, -376, -243, -155, -67, 20, 108, 197, 285, 373, 505, 682, 1034,
-686, -434, -308, -213, -150, -87, -24, 38, 101, 164, 227, 321, 447, 699,
-937, -565, -379, -240, -147, -54, 38, 131, 224, 317, 410, 549, 735, 1107,
-969, -550, -340, -182, -77, 27, 132, 237, 341, 446, 551, 709, 919, 1338,
-919, -569, -394, -263, -175, -88, -1, 86, 173, 261, 348, 479, 654, 1004,
-944, -616, -453, -330, -248, -166, -84, -2, 78, 160, 242, 365, 529, 856,
-895, -568, -405, -282, -201, -119, -37, 43, 125, 207, 288, 411, 574, 901,
-894, -550, -377, -248, -162, -75, 10, 96, 182, 269, 355, 484, 657, 1001,
-1042, -723, -563, -443, -364, -284, -204, -124, -45, 34, 114, 234, 393, 712,
-913, -603, -448, -331, -254, -176, -99, -21, 55, 133, 210, 326, 481, 791,
-1067, -692, -505, -365, -271, -177, -84, 9, 103, 197, 290, 431, 618, 993,
-1037, -708, -544, -421, -339, -257, -175, -93, -10, 71, 153, 276, 440, 769,
-709, -418, -272, -163, -90, -18, 54, 127, 199, 272, 345, 454, 599, 890,
-1039, -696, -525, -397, -311, -225, -140, -54, 30, 116, 202, 330, 501, 844,
-1030, -604, -392, -232, -125, -19, 86, 193, 299, 406, 512, 672, 885, 1310,
-993, -651, -480, -352, -266, -181, -95, -10, 74, 160, 245, 374, 544, 886,
-688, -419, -285, -184, -116, -49, 17, 84, 152, 219, 286, 387, 522, 791,
-759, -467, -321, -211, -138, -65, 7, 80, 153, 226, 299, 409, 555, 847,
-777, -518, -388, -291, -226, -161, -97, -32, 32, 97, 162, 259, 389, 648,
-937, -631, -479, -364, -287, -211, -135, -58, 17, 94, 170, 285, 438, 744,
-960, -645, -487, -369, -290, -211, -132, -53, 25, 104, 183, 301, 459, 774,
-835, -528, -374, -259, -182, -105, -29, 47, 124, 201, 278, 393, 546, 854,
-806, -526, -387, -282, -212, -142, -72, -3, 66, 136, 206, 311, 450, 730,
-859, -550, -395, -279, -202, -125, -47, 29, 106, 183, 261, 376, 531, 840,
-1071, -718, -542, -410, -321, -233, -145, -57, 30, 119, 207, 339, 515, 868,
-773, -465, -311, -195, -118, -41, 35, 112, 189, 267, 344, 459, 614, 922,
-792, -486, -333, -218, -142, -65, 10, 86, 163, 239, 316, 430, 583, 889,
-964, -563, -362, -211, -111, -11, 89, 189, 289, 390, 490, 640, 841, 1242,
-899, -549, -374, -243, -155, -68, 19, 106, 194, 282, 369, 500, 676, 1026,
-1044, -654, -460, -314, -217, -119, -22, 74, 172, 269, 366, 512, 707, 1096,
-923, -614, -460, -344, -267, -189, -112, -35, 41, 118, 196, 312, 466, 775,
-877, -567, -412, -296, -219, -141, -64, 12, 90, 167, 245, 361, 516, 825,
-803, -487, -329, -210, -131, -52, 26, 105, 185, 264, 343, 461, 620, 936,
-862, -504, -325, -191, -101, -12, 77, 167, 256, 346, 435, 570, 749, 1107,
-795, -479, -321, -203, -124, -45, 33, 112, 191, 270, 349, 467, 625, 941,
-905, -596, -442, -326, -248, -171, -94, -16, 60, 137, 214, 330, 485, 794,
-923, -585, -416, -290, -205, -121, -36, 47, 131, 216, 300, 427, 596, 933,
-643, -398, -276, -184, -123, -62, -1, 60, 121, 182, 243, 335, 457, 702,
-976, -679, -531, -420, -345, -271, -197, -123, -49, 24, 98, 210, 358, 655,
-1165, -796, -611, -472, -380, -288, -195, -103, -11, 81, 173, 312, 496, 866,
-889, -549, -379, -251, -166, -81, 3, 88, 173, 258, 343, 471, 641, 981,
-902, -607, -460, -349, -275, -202, -128, -54, 19, 93, 166, 277, 424, 719,
-1294, -856, -636, -472, -362, -253, -143, -33, 75, 185, 295, 459, 679, 1117,
-930, -619, -463, -347, -269, -191, -114, -36, 41, 118, 196, 313, 468, 779,
-1044, -705, -535, -408, -323, -238, -154, -69, 15, 100, 184, 312, 481, 820,
-674, -412, -281, -182, -117, -51, 13, 79, 144, 210, 276, 374, 505, 767,
-788, -482, -330, -215, -139, -62, 13, 89, 166, 242, 319, 433, 586, 891,
};

static uint64_t neck_lateral_convs_2_conv2_weight[64 * 9] =
{ // torch.Size([64, 3, 3, 1])
0x3, 0x9, 0x3, 0x3, 0x5, 0x4, 0x0, 0x1, 0x3, 
0xd, 0xb, 0xc, 0xb, 0x0, 0xb, 0xb, 0x1, 0xb, 
0xa, 0xc, 0x8, 0x3, 0xc, 0xb, 0x6, 0x1, 0x9, 
0xb, 0x2, 0x9, 0xd, 0xb, 0xb, 0xc, 0x8, 0xb, 
0xb, 0x9, 0x2, 0x3, 0x3, 0x4, 0x3, 0x3, 0x4, 
0xa, 0xb, 0xc, 0xc, 0xb, 0xa, 0xc, 0xb, 0xa, 
0x4, 0x4, 0xb, 0x4, 0x4, 0xa, 0x4, 0x2, 0xc, 
0xc, 0xd, 0xd, 0xc, 0xc, 0x0, 0x4, 0x3, 0x3, 
0x2, 0x4, 0x4, 0xb, 0x9, 0x3, 0xb, 0x2, 0x4, 
0xb, 0x1, 0x4, 0xc, 0xb, 0x4, 0xc, 0xb, 0x5, 
0xc, 0xc, 0xc, 0xd, 0xc, 0xc, 0xc, 0x3, 0x1, 
0x1, 0x0, 0xa, 0x9, 0xa, 0xb, 0x9, 0xb, 0xd, 
0x3, 0xa, 0xa, 0x4, 0x0, 0xd, 0x8, 0xb, 0xd, 
0xc, 0xa, 0x4, 0xb, 0xd, 0xc, 0x2, 0xa, 0xc, 
0x4, 0x1, 0xa, 0xa, 0xb, 0x0, 0xd, 0xd, 0xb, 
0x3, 0x2, 0x2, 0x4, 0x2, 0x3, 0x0, 0x3, 0x2, 
0xb, 0xb, 0xd, 0x8, 0x4, 0xa, 0x0, 0x3, 0x8, 
0x3, 0x1, 0x2, 0x4, 0x8, 0x1, 0x3, 0x5, 0x5, 
0xa, 0xc, 0xa, 0xc, 0xb, 0x5, 0xb, 0x4, 0x3, 
0xd, 0xa, 0x3, 0xc, 0x0, 0xb, 0xd, 0xa, 0x2, 
0x4, 0x4, 0x4, 0x2, 0x4, 0x4, 0x0, 0x2, 0x9, 
0x9, 0xb, 0xb, 0x4, 0x3, 0x2, 0x5, 0x5, 0x4, 
0x9, 0x4, 0x3, 0x3, 0x4, 0x3, 0x4, 0x4, 0x1, 
0x2, 0x2, 0x0, 0x2, 0xa, 0x0, 0x5, 0x4, 0x4, 
0x1, 0xb, 0xd, 0x3, 0x1, 0xc, 0xb, 0xc, 0xc, 
0x4, 0x3, 0x4, 0x2, 0x9, 0x3, 0x4, 0x2, 0x4, 
0xa, 0x2, 0x8, 0x0, 0x4, 0x4, 0x4, 0x4, 0xb, 
0x5, 0x3, 0x6, 0xa, 0xb, 0x9, 0x3, 0xb, 0x3, 
0x5, 0x4, 0x5, 0x8, 0xb, 0x2, 0xb, 0xc, 0x0, 
0xd, 0xc, 0xc, 0xb, 0x1, 0x8, 0x9, 0x3, 0xb, 
0x3, 0x3, 0x1, 0x4, 0x3, 0x1, 0x3, 0x3, 0xa, 
0xc, 0xc, 0xc, 0xa, 0xb, 0x9, 0x8, 0xb, 0x9, 
0x5, 0x4, 0x0, 0x5, 0x2, 0xb, 0x3, 0xb, 0xb, 
0xc, 0x9, 0x0, 0xd, 0x9, 0xb, 0xb, 0x9, 0xb, 
0xb, 0xc, 0x4, 0xa, 0xc, 0x3, 0xc, 0xd, 0xa, 
0xb, 0xa, 0x9, 0x4, 0x4, 0x4, 0x0, 0x8, 0x8, 
0x1, 0xb, 0xb, 0x0, 0x0, 0x8, 0x5, 0x5, 0x4, 
0x4, 0x6, 0x3, 0x4, 0x3, 0xa, 0x9, 0xb, 0x8, 
0x1, 0x0, 0x8, 0xb, 0xb, 0xa, 0xd, 0xd, 0xd, 
0x5, 0x3, 0x5, 0xa, 0xb, 0x0, 0xb, 0xb, 0x8, 
0x9, 0xa, 0x9, 0x4, 0x4, 0x3, 0x2, 0x9, 0xa, 
0x3, 0x0, 0x1, 0x4, 0x4, 0x4, 0x2, 0x2, 0x5, 
0xc, 0x2, 0x0, 0xc, 0x0, 0x1, 0xd, 0xb, 0x2, 
0xb, 0x0, 0xd, 0x2, 0x2, 0xc, 0xb, 0xc, 0xc, 
0xc, 0x0, 0xa, 0xc, 0x9, 0x0, 0xd, 0x9, 0xc, 
0x0, 0x1, 0xc, 0xa, 0x2, 0xb, 0xc, 0xc, 0xd, 
0xb, 0xc, 0xc, 0x1, 0xa, 0xb, 0xb, 0xa, 0xc, 
0x4, 0x1, 0xb, 0x5, 0x2, 0xb, 0x5, 0x2, 0x1, 
0x2, 0x3, 0x4, 0xa, 0x1, 0x3, 0x1, 0x3, 0x5, 
0xb, 0xb, 0xc, 0x0, 0xb, 0xd, 0x3, 0xb, 0xb, 
0xd, 0x1, 0xb, 0xc, 0x9, 0x2, 0xd, 0xc, 0xc, 
0x2, 0xa, 0xd, 0x8, 0x8, 0xd, 0x3, 0xa, 0xc, 
0x3, 0xb, 0xc, 0x3, 0x9, 0xc, 0x2, 0xb, 0xd, 
0x4, 0x3, 0xb, 0x4, 0xb, 0xe, 0xb, 0x9, 0xd, 
0x2, 0x9, 0xb, 0x3, 0x1, 0xb, 0x5, 0x4, 0x8, 
0xb, 0x1, 0x3, 0x2, 0x8, 0x0, 0x4, 0x4, 0x5, 
0x4, 0x5, 0x4, 0x2, 0xb, 0x2, 0x2, 0x1, 0x1, 
0x4, 0x4, 0x5, 0x0, 0xb, 0x3, 0x3, 0x9, 0x3, 
0x3, 0x5, 0x3, 0x3, 0x4, 0x9, 0x0, 0xa, 0xb, 
0x1, 0x1, 0x3, 0x4, 0x4, 0x3, 0x5, 0x4, 0x4, 
0x2, 0x1, 0x4, 0x9, 0x5, 0x9, 0x4, 0x4, 0xb, 
0x0, 0x4, 0x3, 0x2, 0x5, 0x2, 0x8, 0x2, 0x2, 
0x1, 0x0, 0x2, 0x3, 0x5, 0xb, 0xa, 0xb, 0xe, 
0xd, 0x3, 0x3, 0xd, 0xb, 0x9, 0xb, 0xb, 0x1, 
};

static int neck_lateral_convs_2_relu2_threshold[64 * 7] =
{ // torch.Size([64, 7])
4, 48, 92, 136, 202, 290, 466,
15, 74, 133, 193, 281, 400, 637,
32, 97, 162, 226, 323, 453, 711,
-93, -47, -1, 44, 113, 205, 389,
28, 72, 115, 158, 223, 310, 482,
36, 76, 116, 155, 215, 294, 453,
27, 73, 120, 166, 235, 328, 512,
48, 113, 179, 245, 343, 475, 738,
18, 52, 86, 119, 170, 237, 372,
36, 75, 115, 154, 213, 292, 450,
49, 101, 152, 204, 281, 384, 591,
-19, 20, 60, 100, 160, 240, 400,
-10, 45, 102, 158, 243, 355, 581,
13, 65, 117, 169, 247, 351, 559,
0, 68, 137, 205, 308, 444, 718,
-25, 15, 55, 95, 156, 237, 398,
17, 56, 95, 134, 192, 269, 424,
1, 59, 117, 175, 262, 378, 610,
56, 90, 125, 160, 211, 280, 419,
19, 56, 93, 129, 185, 258, 406,
8, 58, 108, 158, 233, 333, 532,
5, 61, 117, 173, 257, 369, 593,
-48, 21, 90, 159, 263, 402, 680,
-79, 0, 79, 159, 279, 438, 758,
10, 66, 121, 177, 260, 372, 595,
-47, 18, 83, 148, 247, 378, 639,
-5, 29, 64, 99, 151, 221, 362,
24, 105, 187, 268, 391, 554, 880,
36, 84, 133, 181, 254, 352, 546,
-23, 40, 104, 167, 263, 390, 645,
6, 33, 59, 86, 125, 178, 284,
23, 64, 104, 145, 206, 286, 448,
8, 67, 126, 186, 275, 394, 631,
0, 61, 121, 182, 273, 394, 637,
-7, 53, 113, 174, 265, 387, 630,
50, 73, 95, 118, 153, 198, 290,
8, 68, 128, 187, 277, 396, 635,
59, 158, 258, 357, 507, 706, 1103,
-73, 27, 128, 228, 379, 580, 983,
-17, 27, 71, 115, 182, 270, 448,
-4, 41, 88, 135, 205, 299, 486,
-25, 42, 109, 176, 277, 412, 681,
2, 61, 120, 179, 267, 385, 621,
-4, 51, 106, 162, 245, 356, 579,
-10, 56, 123, 191, 292, 427, 696,
-1, 61, 125, 188, 283, 410, 664,
-58, -14, 30, 75, 143, 232, 412,
41, 104, 167, 229, 324, 449, 700,
-60, -8, 42, 93, 171, 273, 479,
-29, 31, 93, 154, 246, 369, 615,
41, 112, 183, 254, 361, 504, 788,
34, 84, 134, 184, 259, 359, 559,
7, 60, 113, 166, 245, 350, 562,
-9, 76, 162, 249, 378, 551, 896,
46, 90, 133, 177, 242, 329, 504,
-3, 81, 165, 250, 377, 546, 884,
9, 64, 118, 173, 256, 365, 585,
50, 100, 150, 199, 274, 373, 571,
56, 99, 141, 183, 247, 332, 502,
-95, -24, 45, 116, 222, 364, 647,
-17, 33, 84, 135, 211, 313, 516,
-29, 34, 98, 162, 258, 386, 642,
84, 141, 199, 257, 343, 458, 689,
53, 101, 149, 198, 270, 366, 559,
};

static uint64_t bbox_head_multi_level_share_convs_0_0_conv1_weight[64 * 1*4] =
{ // torch.Size([64, 1, 1, 64])
0x98102910a80a39ca,0xa931803b19808b99,0x1a0211909ab8aaa9,0xa1a91b0a39809a22, 
0x2832b029314391ba,0x032921a220810030,0xb118ba0232919201,0x38a8a8ba38920b00, 
0x002200113a120111,0x9180130103829083,0x809222a19832211a,0x10a2118281100100, 
0x21a3932309213212,0x31921a1aa2209238,0x29039022910a3b2b,0xab3a2221228a8211, 
0xa0aa9a20a99a82ab,0xa2b2baaabb9b1a22,0x0492ba321392b202,0x22a40a9999a329a9, 
0xb9091809188b1191,0x1912aa0ca291aa98,0x382293b199b90b89,0x9202002018a90c09, 
0xa12933a4092aaa32,0x903201a8203213a2,0x38a440230b30a20a,0x93a4923142a28189, 
0x91ca13b10cca2a21,0x29231a20080003ba,0x29b00802212b1c3b,0x992a3832302a80b1, 
0xa9820b98001a392a,0x18091a4ca9828c18,0x22181201999a0b9a,0x891a291b99911c9a, 
0x090229321991a3ac,0x91bac011bb920080,0x9401a13a9283c018,0x11a38a88a9b43910, 
0x22928222ab102201,0x32223b2121201092,0x1a129a8002222029,0x892b0210132a9890, 
0x209989aa0b8aa1aa,0x210a98a1b988192a,0xc919cc9009b889aa,0xbaaac2ba199989a9, 
0x2020b8983a20a8aa,0x199a0903a9133922,0xa001aa1b20bba032,0x29b1a2aa30000910, 
0xaab9a8321b92a4bc,0xa8b9bab8bcab9022,0x840b9132a809bbbb,0x10142b092ab30a98, 
0x1a2398901901aa00,0x011aa82899842922,0xa113892b32990aa2,0x39a001a0a9220929, 
0xc10b32a9819b8009,0x298a2089a980b9b1,0x11b922a8a102a8a1,0xb1b09030a8cb081a, 
0x989a8a0aa103a99a,0x10a1a998228088a9,0x9899910a82a09000,0x8909a99898080898, 
0x2aba22bc9aa21b13,0x2b233a9832b2a22a,0x182c2291aa3b4aba,0x8b9932a8cb30892a, 
0xa1ba380191291219,0x00000080000990a0,0x90a921a0a01002a9,0x0221020200a80132, 
0x2210090288291aa0,0xa3920ba320110322,0xa213a91998a22b42,0x00921290429a1811, 
0x1012b8900a029089,0x988a208199821818,0x1820ba800892a918,0x19b8a098102808ba, 
0x2009030220210822,0x1821992892100292,0x228232212910410b,0x00323011210200b3, 
0xb8b9aa31cbbb84ab,0x0bb2b19aba0b209a,0x3a9a9a13a2ababab,0x19148a2a99b410a1, 
0x98311a102420a910,0x1019090910109020,0xa322a32921a00200,0x09a82289a03a104b, 
0x938119191184a01a,0x90b12411222a3021,0xa31a9a2b33020a3a,0xbbb191a2a3301303, 
0x80a9821a310199b9,0x099392b31100010a,0xaa801080192a9082,0x220290a120108392, 
0x0092021aa81401ba,0x102113222121392a,0x19038a2929a29a02,0xb09219b312398423, 
0xa008bb29b30b2082,0x21a11b1a21999bb0,0x2a0a1991a03a2aba,0xab2a1182b9299880, 
0x19902109030288b0,0x9992939220980a0a,0x1a09112910129092,0x91091baa89299303, 
0xa0baaa991bab0923,0xaa992baaa110a99b,0x2bb200b2991a283b,0x2aa9ba4121c999bb, 
0x280a0011888290a0,0x890913b31999143a,0xb8b99aa118208820,0x1a9a020029a08c01, 
0x82b21912091a9a2b,0x829a1a19a911988a,0x00911a90a1088a98,0x0aa8a0229199008a, 
0xa0092002a2cb1229,0x2b11992a9108b0a2,0x321a2209a0218198,0x00290130a8181a02, 
0x9902a39811022009,0x8131902b88108181,0x120991113aa99031,0x03110aa800310001, 
0xa89b408a022a1180,0x1810900811acb2c8,0x90aa23a099119280,0x023053229a900032, 
0x21a30113132b8932,0xa031991192221222,0x2003a3a329a01209,0x819221292102892a, 
0x18923093bab00032,0x9b29103a190b90a2,0x3921393a22031390,0xa3023121b0200991, 
0xc29c0322a22223b2,0x018098aaa20ca3a2,0x0dba32a3b22a8bab,0x003c0008a2bbab89, 
0x3923ba0222a4839b,0xb4b9a99132243b32,0xa2122229449b9330,0x3b280bbc22320298, 
0x39230aa13931b12c,0xa328922229942b89,0xa322a90b31922432,0x099390a13aa32121, 
0x2a08a90ab1bb9900,0x99901cc11aa1939a,0xb10909a1a8280120,0x281a120a1a88088a, 
0x23221b44a19224ab,0x83a8aaa31a3b2113,0xb1a3bb2214a2a830,0x9232a2a223290a09, 
0x32131393200b4123,0xa033a23322202111,0x391233238b49289a,0x8223432231100122, 
0x0908a3002031a023,0x088190a080810202,0x110a910200992018,0x1818808098110001, 
0xa9baaa2b819ababb,0xa9c0808aa2abab2a,0xb88bc0aca2a01811,0x2b2bbabbbaa90192, 
0x908a9228a3112800,0x00139a01000a00a0,0x11a0218999200918,0x0820291820a00191, 
0x0082b21111110120,0x0010122a19198a12,0x802a2900112a22b8,0x1b318081a1320398, 
0xba30ca2a02a03331,0x8a1b2b1ba1a2ac92,0x20309a91ab022aca,0x2a29bb3a9a21888a, 
0x082a2929938a0a38,0x00a9993111999292,0x3299430a01110198,0xa132013990a10230, 
0x3032038210099022,0xc8a1a99220102210,0x2001330129291002,0x1102302000a0002a, 
0x9a2a10bb121aaaaa,0xbaaaa29abaa89021,0xa20b902aa9aaa9a2,0x90a2baab9aa2090a, 
0x8099a91890092299,0x2001119a9081aa20,0x08081192b1192a9b,0x0b31200298980b01, 
0x80013992199a821a,0x91aa2903bb829390,0xa98a2ba9b220229a,0xab88011a00aa0a29, 
0x289904829291a911,0x8a0099b298111420,0x919311122a102910,0x3221191a31901a94, 
0x1083aab00c088a2b,0x008a10190a94093b,0x1221ab1880091102,0x98b2092219280100, 
0x904230b22920ba9b,0x090b1082192302a0,0xa2211b9020a3a223,0xb3c1a12182000928, 
0xa82b3291a09a99ba,0x999910a1119a939a,0xa9ba28a92883b921,0x92b9a83119c90a29, 
0x91aa9022b9ba1293,0x1a131a91321a02b1,0x2baa2892a2098b0a,0x992b2828828aa181, 
0x80a01028a1a831ba,0x289202802980822b,0xa80818a3aa21199b,0xaa3b899328890ca8, 
0xaa12a1a82ab1993a,0x9aab8b280a9389a1,0x913aba2b30928391,0x1290aab8a9210399, 
0x89918a992a00ab21,0xa0ab9300aba18aa1,0x020aa9198a9a0190,0x00929a119a918a92, 
0xa81aaa20222a130b,0xb2b1da08cca01a20,0x9600a9321322b1a2,0x02832cb1a2834900, 
0xa99a0b9b2a83a11a,0xa0b9a29982aa9b11,0xa0ab929c00a99918,0x1baa9ab0ab1a029c, 
0x92144aa33b2a1b42,0x9a1a1838aa343892,0x42332a2128a09222,0x93b3094833b20309, 
};

static int bbox_head_multi_level_share_convs_0_0_quant1_threshold[64 * 14] =
{ // torch.Size([64, 14])
-374, -251, -189, -143, -112, -81, -50, -19, 10, 41, 72, 118, 180, 303,
-238, -138, -88, -50, -25, 0, 24, 49, 74, 99, 124, 162, 212, 312,
-578, -373, -271, -194, -142, -91, -40, 10, 62, 113, 164, 241, 343, 548,
-252, -138, -81, -39, -10, 17, 46, 74, 103, 131, 160, 203, 260, 374,
-570, -367, -266, -189, -139, -88, -37, 13, 63, 114, 165, 241, 343, 546,
-430, -296, -229, -179, -146, -113, -79, -46, -12, 20, 53, 103, 170, 304,
-566, -345, -235, -152, -96, -41, 13, 69, 124, 179, 235, 318, 428, 649,
-271, -177, -130, -95, -72, -48, -25, -1, 21, 45, 68, 103, 150, 244,
-489, -338, -263, -206, -169, -131, -93, -55, -18, 19, 57, 114, 189, 340,
-538, -347, -251, -179, -131, -84, -36, 11, 59, 107, 155, 227, 322, 514,
-302, -180, -118, -72, -41, -11, 19, 50, 80, 111, 142, 188, 249, 372,
-285, -215, -180, -153, -136, -118, -101, -83, -65, -48, -30, -4, 30, 101,
-166, -105, -75, -52, -36, -21, -6, 8, 24, 39, 54, 77, 108, 169,
-575, -376, -277, -203, -153, -104, -54, -5, 44, 93, 143, 217, 316, 515,
-133, -83, -58, -39, -26, -14, -1, 10, 23, 35, 48, 67, 92, 142,
-398, -276, -216, -170, -140, -110, -79, -49, -19, 10, 41, 86, 147, 268,
-366, -246, -186, -141, -111, -80, -50, -20, 9, 39, 69, 114, 174, 295,
-658, -424, -308, -220, -161, -103, -44, 13, 72, 130, 189, 276, 393, 627,
-207, -126, -85, -55, -34, -14, 5, 26, 46, 66, 87, 117, 158, 239,
-463, -283, -194, -126, -81, -37, 7, 52, 97, 142, 187, 254, 344, 524,
-103, -69, -52, -39, -30, -22, -13, -5, 3, 11, 20, 33, 50, 84,
-250, -137, -81, -38, -10, 17, 45, 74, 102, 130, 158, 201, 257, 370,
-658, -439, -329, -246, -191, -136, -82, -27, 27, 82, 137, 219, 329, 549,
-303, -178, -116, -69, -38, -7, 24, 55, 86, 117, 149, 195, 258, 383,
-345, -188, -109, -50, -11, 27, 67, 106, 145, 184, 224, 283, 361, 518,
-335, -197, -129, -77, -43, -8, 25, 59, 94, 128, 162, 214, 283, 420,
-334, -166, -82, -19, 22, 64, 106, 148, 190, 232, 274, 337, 420, 588,
-391, -267, -205, -159, -128, -97, -66, -35, -4, 26, 57, 103, 165, 289,
-580, -343, -224, -135, -75, -16, 43, 102, 161, 221, 280, 369, 488, 726,
-289, -221, -187, -162, -145, -128, -111, -94, -77, -60, -43, -18, 15, 83,
-210, -138, -103, -76, -58, -41, -23, -5, 12, 29, 47, 74, 109, 180,
-493, -321, -235, -171, -128, -85, -42, 0, 42, 85, 128, 193, 278, 450,
-308, -202, -149, -109, -83, -57, -30, -4, 22, 48, 75, 114, 167, 273,
-238, -139, -89, -52, -27, -2, 22, 47, 72, 97, 122, 159, 209, 308,
-318, -199, -139, -94, -65, -35, -5, 24, 54, 84, 113, 158, 218, 337,
-428, -257, -171, -107, -64, -21, 21, 64, 107, 150, 193, 257, 343, 514,
-229, -128, -77, -39, -13, 11, 36, 62, 87, 113, 138, 176, 227, 328,
-554, -381, -295, -230, -187, -144, -100, -57, -14, 28, 71, 136, 222, 395,
-396, -231, -149, -88, -47, -6, 35, 76, 117, 158, 199, 260, 342, 507,
-264, -149, -92, -49, -20, 7, 36, 65, 94, 122, 151, 194, 251, 366,
-432, -306, -243, -196, -164, -133, -101, -70, -38, -7, 24, 71, 134, 260,
-702, -433, -299, -198, -131, -64, 2, 70, 137, 204, 271, 372, 506, 775,
-732, -471, -340, -242, -177, -111, -46, 18, 84, 149, 214, 312, 443, 704,
-241, -147, -99, -64, -40, -16, 6, 30, 54, 77, 101, 137, 184, 279,
-700, -466, -349, -261, -202, -144, -85, -26, 31, 90, 148, 236, 353, 588,
-242, -151, -106, -72, -49, -26, -3, 18, 41, 64, 87, 121, 166, 257,
-292, -165, -102, -55, -23, 7, 39, 70, 102, 134, 165, 212, 276, 402,
-448, -308, -237, -184, -149, -114, -79, -44, -9, 26, 61, 113, 184, 324,
-322, -197, -135, -88, -56, -25, 5, 36, 68, 99, 130, 177, 240, 365,
-307, -180, -117, -70, -38, -7, 24, 56, 87, 119, 151, 198, 261, 388,
-423, -299, -237, -191, -160, -129, -98, -67, -36, -5, 25, 71, 133, 257,
-335, -216, -157, -112, -82, -52, -23, 6, 36, 66, 95, 140, 199, 318,
-475, -321, -244, -186, -147, -109, -70, -32, 6, 45, 83, 141, 218, 372,
-302, -171, -105, -56, -23, 9, 42, 74, 107, 140, 173, 222, 288, 419,
-344, -217, -154, -106, -75, -43, -11, 20, 51, 83, 115, 162, 226, 353,
-378, -247, -182, -132, -100, -67, -34, -2, 30, 63, 96, 145, 210, 341,
-211, -161, -136, -117, -104, -92, -79, -66, -54, -41, -28, -9, 15, 65,
-448, -295, -218, -160, -122, -84, -45, -7, 31, 69, 107, 165, 242, 395,
-613, -428, -336, -267, -221, -175, -129, -82, -36, 9, 55, 124, 216, 401,
-185, -126, -97, -75, -60, -45, -31, -16, -1, 12, 27, 49, 79, 138,
-303, -207, -159, -123, -99, -74, -50, -26, -2, 21, 45, 81, 129, 226,
-219, -113, -60, -20, 5, 32, 58, 85, 111, 138, 164, 204, 257, 363,
-445, -308, -240, -189, -154, -120, -86, -52, -17, 16, 50, 102, 170, 307,
-537, -328, -223, -145, -93, -41, 11, 63, 115, 167, 220, 298, 402, 611,
};

static uint64_t bbox_head_multi_level_share_convs_0_0_conv2_weight[64 * 9] =
{ // torch.Size([64, 3, 3, 1])
0xa, 0x3, 0x2, 0x0, 0x4, 0xa, 0x0, 0x4, 0x2, 
0x9, 0x2, 0x4, 0xb, 0xd, 0x4, 0x4, 0x9, 0x8, 
0x2, 0x8, 0xc, 0x8, 0x1, 0xc, 0x3, 0x0, 0xb, 
0x3, 0xa, 0xa, 0x1, 0xd, 0x3, 0xc, 0x0, 0x1, 
0x1, 0x3, 0x3, 0x3, 0x4, 0x3, 0xa, 0x3, 0x0, 
0x4, 0x9, 0x1, 0x5, 0x9, 0x9, 0x4, 0x2, 0x9, 
0xc, 0xb, 0x8, 0xc, 0xb, 0x2, 0xa, 0xa, 0x8, 
0xd, 0xd, 0xa, 0x3, 0x5, 0x0, 0xb, 0x3, 0xb, 
0x4, 0x3, 0x1, 0x4, 0xa, 0x8, 0x4, 0x0, 0x9, 
0x3, 0x3, 0x3, 0x3, 0xb, 0x3, 0x4, 0x3, 0x4, 
0x2, 0x0, 0x2, 0xb, 0xe, 0x0, 0x0, 0x8, 0x2, 
0x0, 0xc, 0xc, 0x4, 0x5, 0x3, 0xa, 0x4, 0x1, 
0x4, 0xc, 0xc, 0x3, 0x4, 0xb, 0xb, 0x4, 0x9, 
0x4, 0x2, 0x8, 0x4, 0xa, 0x0, 0x3, 0x3, 0x1, 
0xc, 0xd, 0x9, 0x3, 0x5, 0x4, 0x2, 0x4, 0x0, 
0xa, 0x2, 0x0, 0x3, 0x0, 0xb, 0x4, 0x5, 0xa, 
0x0, 0x2, 0x1, 0x8, 0x4, 0x0, 0x8, 0x4, 0x8, 
0xb, 0x1, 0xa, 0x3, 0x5, 0xa, 0x3, 0x3, 0x0, 
0x9, 0xa, 0x0, 0xb, 0xc, 0x9, 0x3, 0x5, 0x0, 
0x2, 0x3, 0x3, 0xb, 0xa, 0x4, 0xb, 0x1, 0x4, 
0x8, 0xb, 0x1, 0x3, 0x5, 0x9, 0xb, 0xc, 0x1, 
0xa, 0x2, 0xb, 0x3, 0x2, 0xa, 0xb, 0xd, 0x1, 
0x2, 0x3, 0x3, 0x3, 0x3, 0x3, 0x9, 0x0, 0x3, 
0xb, 0xb, 0x8, 0xc, 0xc, 0x9, 0x2, 0x1, 0x2, 
0x2, 0x1, 0xd, 0x1, 0x3, 0xd, 0x0, 0x1, 0xc, 
0xc, 0x1, 0x2, 0xb, 0x2, 0x8, 0xc, 0x8, 0x2, 
0xb, 0x1, 0x1, 0xd, 0x2, 0x9, 0xc, 0xa, 0x1, 
0x3, 0x3, 0xc, 0xb, 0x5, 0xb, 0x2, 0x3, 0xb, 
0xc, 0xa, 0x9, 0xb, 0x9, 0x1, 0x9, 0x1, 0x1, 
0x4, 0x4, 0xa, 0x4, 0x4, 0xb, 0xa, 0xa, 0x9, 
0xa, 0x0, 0x3, 0x9, 0x5, 0xa, 0xb, 0x5, 0x2, 
0x2, 0x3, 0x3, 0x2, 0x2, 0x9, 0x3, 0x3, 0x0, 
0x9, 0xc, 0x2, 0x4, 0xc, 0x2, 0x4, 0x3, 0xb, 
0xb, 0xc, 0x1, 0xc, 0x9, 0x2, 0x9, 0xa, 0x0, 
0xc, 0xc, 0x1, 0x3, 0xa, 0x2, 0x5, 0x6, 0x8, 
0x1, 0xd, 0x3, 0x3, 0x0, 0x8, 0xb, 0xc, 0x8, 
0x3, 0xb, 0xa, 0x3, 0xc, 0xa, 0x6, 0x3, 0x8, 
0xa, 0xe, 0x2, 0xa, 0xb, 0x3, 0xb, 0x8, 0x3, 
0x3, 0xe, 0xc, 0x3, 0x4, 0x9, 0x2, 0x1, 0xa, 
0xb, 0x6, 0x0, 0x2, 0x4, 0x0, 0xb, 0xa, 0xa, 
0x1, 0x2, 0x4, 0x0, 0xa, 0x5, 0x0, 0x9, 0x4, 
0x0, 0x1, 0xc, 0xa, 0x0, 0xd, 0x3, 0xa, 0xc, 
0xb, 0xc, 0xb, 0xb, 0x1, 0x1, 0xc, 0xc, 0xc, 
0x9, 0xa, 0xb, 0x9, 0x8, 0x9, 0x0, 0xa, 0xb, 
0x3, 0x4, 0x2, 0x3, 0x2, 0x2, 0x1, 0x2, 0x2, 
0x3, 0x4, 0xa, 0xb, 0xb, 0xb, 0x8, 0xb, 0x4, 
0x0, 0x8, 0xb, 0x3, 0xa, 0xc, 0x2, 0xc, 0xc, 
0xb, 0xb, 0xb, 0xd, 0xb, 0x3, 0xb, 0x3, 0x5, 
0xb, 0x3, 0x4, 0xc, 0xc, 0xa, 0x4, 0xc, 0xa, 
0xa, 0x2, 0x2, 0xc, 0xd, 0x9, 0x8, 0xb, 0x3, 
0xa, 0x2, 0x9, 0x3, 0x5, 0x2, 0xb, 0xb, 0x9, 
0x1, 0x3, 0x8, 0x5, 0xb, 0x9, 0x2, 0xb, 0x2, 
0x3, 0x2, 0x1, 0x2, 0x1, 0x8, 0x3, 0x3, 0x0, 
0xa, 0xc, 0x8, 0x4, 0xd, 0x3, 0xa, 0xd, 0x3, 
0x3, 0x6, 0x1, 0x9, 0xa, 0xa, 0xa, 0x1, 0xa, 
0x2, 0xd, 0xa, 0xc, 0xb, 0x2, 0x3, 0x4, 0x8, 
0x0, 0x2, 0x9, 0xb, 0x4, 0x3, 0x2, 0x5, 0x3, 
0x9, 0xd, 0x9, 0xa, 0xd, 0x8, 0x2, 0x1, 0x0, 
0xc, 0x4, 0x1, 0xc, 0x4, 0x0, 0xb, 0x3, 0x9, 
0xc, 0xb, 0x3, 0xc, 0x5, 0x0, 0x0, 0x2, 0xa, 
0x2, 0x4, 0xa, 0x0, 0x4, 0xd, 0x1, 0x0, 0xb, 
0x4, 0x4, 0x3, 0x2, 0x3, 0x3, 0x3, 0x4, 0x3, 
0x3, 0x2, 0xa, 0xb, 0x6, 0xb, 0x8, 0x3, 0x2, 
0x3, 0xc, 0xa, 0x8, 0xd, 0xb, 0x0, 0xc, 0x2, 
};

static int bbox_head_multi_level_share_convs_0_0_relu2_threshold[64 * 7] =
{ // torch.Size([64, 7])
25, 48, 71, 93, 127, 173, 263,
54, 88, 122, 156, 207, 275, 412,
-59, -44, -28, -12, 10, 41, 103,
-32, -6, 20, 47, 88, 141, 249,
-117, -75, -32, 10, 73, 159, 329,
-28, 10, 49, 88, 147, 224, 380,
-96, -61, -25, 10, 63, 134, 277,
64, 129, 195, 260, 359, 490, 752,
5, 30, 54, 79, 117, 167, 266,
-88, -44, 0, 43, 108, 196, 372,
-26, 27, 80, 134, 214, 321, 536,
-52, 9, 71, 132, 225, 348, 595,
18, 73, 128, 183, 266, 376, 596,
-122, -65, -9, 46, 130, 242, 466,
59, 145, 230, 316, 445, 616, 959,
-21, 1, 24, 48, 83, 130, 224,
9, 27, 46, 64, 92, 129, 203,
-14, 19, 54, 89, 140, 210, 348,
-13, 5, 24, 42, 71, 109, 184,
30, 51, 72, 93, 125, 167, 252,
34, 81, 128, 175, 246, 340, 529,
-19, 11, 42, 73, 119, 181, 305,
-79, -34, 10, 55, 122, 212, 392,
-25, 2, 29, 57, 98, 153, 264,
-4, 33, 71, 109, 166, 242, 395,
9, 26, 43, 60, 86, 120, 189,
14, 46, 77, 108, 155, 218, 343,
15, 51, 87, 122, 176, 247, 390,
4, 21, 38, 55, 81, 115, 183,
3, 65, 126, 188, 280, 403, 649,
-98, -19, 60, 139, 258, 416, 733,
-27, -1, 23, 48, 86, 136, 237,
-23, 1, 26, 50, 87, 137, 236,
26, 47, 69, 90, 123, 166, 252,
-282, -209, -136, -64, 44, 190, 481,
-25, -1, 21, 45, 80, 127, 221,
104, 148, 192, 237, 303, 392, 569,
-14, 31, 78, 124, 194, 286, 471,
5, 53, 101, 149, 220, 316, 507,
71, 113, 154, 196, 258, 342, 508,
0, 34, 68, 103, 155, 225, 363,
-76, -26, 24, 74, 149, 250, 451,
-133, -116, -99, -82, -56, -22, 45,
-7, 3, 15, 27, 45, 68, 116,
-63, -38, -13, 10, 47, 97, 195,
16, 40, 65, 89, 125, 174, 271,
16, 43, 69, 96, 136, 189, 295,
44, 100, 157, 213, 298, 411, 637,
-30, 0, 31, 62, 109, 171, 295,
1, 27, 54, 80, 120, 173, 279,
-24, 1, 27, 53, 92, 144, 248,
-11, 12, 37, 61, 98, 146, 244,
-1, 22, 46, 71, 107, 155, 252,
-81, -27, 26, 80, 161, 268, 484,
-20, 30, 82, 133, 210, 312, 517,
-53, -27, -1, 24, 63, 114, 218,
13, 91, 169, 247, 365, 521, 834,
-14, 19, 52, 86, 137, 205, 341,
27, 53, 80, 106, 145, 198, 303,
26, 74, 121, 168, 238, 332, 521,
-9, 19, 48, 77, 121, 179, 296,
-615, -528, -441, -354, -223, -49, 299,
-79, -24, 30, 86, 169, 280, 502,
-109, -64, -19, 25, 92, 182, 362,
};

static uint64_t bbox_head_multi_level_share_convs_1_0_conv1_weight[64 * 1*4] =
{ // torch.Size([64, 1, 1, 64])
0x0282a189122a13a1,0x1011a0383b1b9218,0x12903b3a3232a212,0x29a40a0a0c032393, 
0x2189931b82a21832,0x2c0384b4bb52a932,0x32134243303aba2b,0x19b3a480a39c032a, 
0x31093119b2331310,0x4aba23a231b328a2,0x41bbba4b41cc3228,0xab33a3c2322a41a1, 
0x52434bb842232cc2,0xb332bc3d1302b019,0x3c20caa0ba329233,0x1282c20a33904903, 
0xcb41bb2bdc9a9b24,0xbc38c84bba3cca34,0x92bbb0c2ac324094,0xa3bb4bac99a24b1c, 
0xb98a8cb19002a85d,0x801b189a902ac321,0x23a2301b3aa9a9a4,0xa9bacab301a29a9b, 
0xa124b2233b41aa24,0x8b8bb3305300324b,0x93a0abbc042b92b4,0x212bc522b8b2bbb3, 
0x0242bab23acbb029,0x9249803b2a0bca28,0xca9a2bcbbb4002b1,0x13caab3930b9ba29, 
0xca230ab98a31b3c8,0xac8c8b39a228b1a3,0x319a3aa14280c302,0xb5bcc08bb0b8c290, 
0xa2a01bb8212ba0a9,0x33aa0aab0a43bbb3,0x31a3bac90ab9ba0a,0xb2ba23cbb8acc1ba, 
0x3103a2233442aa19,0x982a4842322bb201,0x2c2a4b4a22401123,0x9ac3b333bab29333, 
0x4b2232a3099332ab,0xb4430a4ca0228232,0x330ac2c2a3244333,0x8b32942911408303, 
0x2b83d224b24b3253,0x232d233302434223,0x4a42baabb3229ac5,0xba2c344b32b329b4, 
0x1b131a4ba9aaa202,0x23bc30ba90a2c923,0x1a2baaa942ca1901,0xa9cba2b0b0ccb02b, 
0x0b220b29a8aa4bb4,0x2a0c81303b198a13,0x290920991a80321b,0xa2b9841b00a02192, 
0x4c4a8cbc3c3abb93,0xba2cac2b12b2c343,0xccb43bbb3343bcb4,0xb42b201bb3cc30b3, 
0xa1a2a843a093594a,0xac3320931a420302,0x330b53329839a394,0x2202b4339232a302, 
0xac3391212a2cbb82,0x11bbb11b38cbbcba,0xbb8c2b8babab2aad,0x92cb0c4940bbba2a, 
0xbab2a0ac283cbbb3,0xc23bac800bbaaa90,0xcb923b3bab2313a3,0x31bb0b3b40ca4b00, 
0xb2bba9ba3809b23b,0xa323b42383c0a4bb,0x01199230b8084999,0x18b19c8230132b08, 
0x2c3432903339a1d3,0x233bbb2b32a34223,0x3cd181b2a2b12a3b,0x9323434c338baa93, 
0xb2aa0b3a2823b231,0xb1330b3011c03402,0xb23a3488a9433002,0x3a32aa1231003022, 
0x4a22242ab0b10a2a,0xc33b9a3c2a3190cb,0x1893ba109a329104,0x1b48bab122bb10b0, 
0x13b9993100b2b1b8,0x322aaa32280bb3ab,0x9a0b498aab4090a3,0x2daacab291a199bb, 
0xba33921a99a2c393,0xb0322a01b3d22320,0xbb29b32192144083,0x22402b4043aa3330, 
0xa832913122b33228,0x0a121202222a383b,0x33382a4a0920aaa2,0x1a33b033b2298212, 
0xabbc49cab4bc130b,0x33234b3ccc8bb4d4,0x4a24baa3cdb21a34,0xbca34d01482448bb, 
0x039b03b300a14b5b,0x930392093a8182b8,0x11222220a8018a94,0x01c924039a0292a1, 
0x3224922aa3493303,0x310238302b2cc933,0x2a934b4a3843a203,0x2083031a3c3223b0, 
0x4ab32834a2cb3ca9,0x03933a3113244039,0x533ac43434d3bb1b,0xbc482439a231a3a3, 
0x99a0b32bcc21a2cb,0xaacbb3b3d89b0cdb,0xab4bb840321903ba,0xb3baab42c8b1aa4b, 
0x4a8b3a9a2bb22b00,0xaa92c8b12183b0a9,0xa30bc4c2b8ab9a0b,0x223b03aa148bac3b, 
0x8b8b44cb23bca320,0xa3424b4abc8113b3,0x2c34b0b2ca331ba2,0xa2c04c5a49a12333, 
0x2123d3331b4a3223,0x32bcb3233322323b,0x9a132a3c22009cb3,0xa23b1339a2b33ba4, 
0x4bcb9814a41a424b,0xaac30243192aa2ba,0x3442a18aa9211c9b,0xba413b349814d320, 
0x438b2b31b2c30043,0xb4243b3b9109d22a,0x2b5cb333c2223532,0xaca3b3c3bb24b304, 
0x3320a04320231a40,0xa239883c392ab4bb,0xa32b339bb28212aa,0x10aac313a20231a3, 
0xc302a222a3289388,0x031b3189ba1bba32,0x2a034b4a3822a222,0xabc30102aba99389, 
0xc18414121b32209b,0x822a11ab20333301,0x390a4039b329b191,0x931ba298302302b2, 
0x4bbb349ab4bc493c,0xa813a130bb4a42da,0x2393cb3ba0b0ac32,0xaa534b2b4ca3a1a9, 
0xa22a3b890bcabb3c,0x9aaa982bb9bbcb3a,0xbbaa2baa1aa90128,0x2cb0cba330aaa2ab, 
0xbaab9c3200cbbb3c,0x310bb22b489cd9ab,0x0a1a4bab8caac2a1,0x1dcbdba241baa29b, 
0x0013a22ba3303393,0x322331313b8c8933,0x2283404a3b34a202,0x90330b303b9323b2, 
0xa9b43441b23932b5,0x233b04ab39132904,0x322cc2b2b0b1223b,0xbc41234233332393, 
0x929b95a302135a19,0xba23b323294a332a,0xb3103042aa40a212,0x23a39342413331a1, 
0x02b213909b88b9a1,0xaaa1b1a398aaaa9b,0xca2b18b3c28ab21b,0x11b0904b40aa2b09, 
0x9a9cb0c3c8cbaa5c,0xa3241823cb99c9c9,0x205c1320bb3209a5,0x0ba0bc0429baa03c, 
0x2b32b2b49ca3bbcb,0xccb9ba33b03cbcbc,0xcb4baa34324903b0,0x92b3cb4ac9b9c14b, 
0x342cb3c3933a004b,0xa3b4ba3920234322,0x2234c4a21a3b4292,0x255253a110313a12, 
0xcb493ccb4a9bab03,0x2caab1c438bbac5b,0xcc934c423caac93c,0x09b3cc99481a0a3b, 
0xcb8989220b3200ba,0x912b1b3b100ba1c1,0xa90bcac1b3894aab,0xbadab1b0baa33018, 
0x3029a3931b9280c1,0x0bb3a3a3a4b1324c,0xaa21224919ab1110,0xb233a82a2033ba2a, 
0x9a2a4cbc0ba4bcdb,0xbb04bcccb9b3c9ac,0xbbcb42b4301ab44a,0x3a34cbc00b4aaaac, 
0x324a13a8b8920201,0x4b13a523b3433a21,0x2a29b983a30d9a2b,0xaa2393802040b09a, 
0xdc33abadaab9b934,0x0b3c32bc8abbca3b,0xc2cb8b3c33c83ca9,0x80cb93bc98bc5caa, 
0x3ac0039338983a30,0xc3231c99a3033301,0x3310b33208b62314,0x1938042002320012, 
0x533c93801393233c,0x3131242589c13a2c,0x4a4cd2caa4bb4302,0xab39942339b4b235, 
0xb3c312a002933ba3,0xc2021ab400133320,0x081423333094a18a,0x00200321301b42a1, 
0xa4b905ab999332a2,0xc34b433ab24133c8,0xb441c133c4410383,0x1a333444c0029333, 
0x8aaa8a8340bbbb18,0xc3b90cbb28bbbbab,0x39a98a323cd4b902,0x99b99b3000108b3b, 
0x3b21aa092ba2b313,0x29033302b1211c32,0x2b24224a3132a82d,0x0132304323394338, 
0xa3b3a22aa03b0ab1,0xb09b0ba9282a84d8,0x8aab3ab2cc3ac1aa,0xa0bb9b9929aacbcc, 
0xc53b390b30abc32b,0x34431c3b33b3c3a2,0xb34ab433ba532413,0x0ad3b3b392ab8930, 
0x0a8c3a00a1c22b1b,0xb1ac32a1b32449b9,0xb422b9bab4b9291b,0x914ba500a19ba9a4, 
};

static int bbox_head_multi_level_share_convs_1_0_quant1_threshold[64 * 14] =
{ // torch.Size([64, 14])
-618, -375, -254, -162, -102, -41, 19, 80, 141, 201, 262, 353, 475, 718,
-463, -250, -143, -63, -10, 43, 96, 149, 203, 256, 309, 389, 496, 709,
-622, -380, -258, -167, -107, -46, 14, 74, 135, 196, 256, 347, 469, 711,
-576, -344, -227, -140, -82, -24, 33, 92, 150, 208, 266, 353, 470, 702,
-1065, -685, -495, -352, -257, -162, -67, 27, 122, 217, 312, 455, 645, 1025,
-573, -387, -294, -224, -178, -131, -85, -38, 7, 54, 100, 170, 263, 449,
-1001, -663, -494, -368, -283, -199, -114, -30, 54, 138, 223, 349, 518, 856,
-841, -561, -421, -316, -246, -176, -106, -36, 33, 103, 173, 278, 418, 698,
-727, -504, -392, -308, -252, -196, -140, -84, -28, 27, 83, 167, 279, 503,
-907, -611, -464, -353, -279, -205, -131, -57, 15, 89, 163, 274, 422, 717,
-761, -454, -301, -186, -109, -32, 43, 120, 197, 273, 350, 465, 619, 925,
-674, -381, -234, -124, -51, 22, 95, 169, 242, 315, 389, 499, 646, 939,
-832, -533, -384, -272, -198, -123, -49, 25, 100, 174, 249, 361, 510, 808,
-674, -481, -385, -313, -265, -216, -168, -120, -72, -24, 23, 96, 192, 385,
-314, -209, -156, -116, -90, -63, -37, -11, 15, 41, 67, 107, 160, 265,
-895, -605, -461, -352, -280, -207, -135, -62, 9, 82, 154, 263, 407, 697,
-407, -189, -80, 0, 54, 109, 163, 217, 272, 326, 380, 462, 571, 788,
-863, -606, -477, -381, -317, -252, -188, -124, -59, 4, 68, 165, 293, 550,
-676, -463, -357, -277, -223, -170, -117, -63, -10, 42, 95, 175, 282, 495,
-433, -264, -180, -117, -74, -32, 9, 51, 93, 136, 178, 241, 325, 494,
-810, -503, -349, -234, -157, -80, -3, 73, 150, 227, 304, 419, 573, 880,
-377, -198, -108, -41, 3, 48, 93, 137, 182, 227, 272, 339, 429, 608,
-491, -312, -223, -156, -112, -67, -23, 21, 65, 110, 155, 221, 311, 489,
-885, -571, -413, -295, -217, -138, -59, 19, 97, 176, 255, 373, 530, 845,
-417, -245, -159, -95, -52, -9, 33, 76, 119, 162, 205, 270, 356, 528,
-604, -362, -242, -151, -91, -30, 29, 89, 150, 210, 271, 361, 482, 723,
-822, -523, -374, -261, -187, -112, -37, 37, 112, 187, 261, 374, 523, 822,
-132, -70, -38, -15, 0, 15, 31, 46, 62, 78, 93, 117, 148, 210,
-668, -381, -238, -130, -58, 13, 84, 156, 228, 300, 372, 479, 623, 910,
-928, -553, -365, -224, -130, -36, 57, 150, 244, 338, 432, 573, 761, 1136,
-977, -649, -485, -362, -280, -198, -116, -34, 47, 129, 211, 334, 498, 826,
-911, -592, -432, -312, -233, -153, -73, 6, 86, 165, 245, 365, 525, 844,
-649, -399, -274, -180, -117, -55, 7, 69, 132, 194, 257, 351, 476, 726,
-910, -582, -418, -296, -214, -132, -50, 31, 113, 195, 276, 399, 563, 890,
-523, -305, -197, -115, -60, -6, 47, 102, 156, 211, 265, 347, 456, 673,
-729, -431, -282, -170, -96, -21, 52, 127, 201, 276, 350, 462, 611, 909,
-500, -293, -190, -112, -60, -9, 42, 94, 145, 197, 249, 327, 430, 637,
-759, -476, -335, -229, -158, -87, -17, 53, 124, 194, 265, 371, 512, 795,
-1187, -782, -579, -427, -326, -224, -123, -21, 79, 180, 282, 434, 637, 1042,
-549, -339, -234, -155, -102, -49, 2, 55, 107, 160, 213, 292, 397, 607,
-942, -633, -479, -363, -286, -209, -131, -54, 22, 99, 176, 292, 447, 755,
-983, -684, -535, -423, -348, -273, -199, -124, -49, 24, 99, 211, 360, 659,
-298, -138, -58, 1, 41, 81, 121, 161, 201, 241, 281, 341, 421, 581,
-687, -418, -283, -182, -115, -48, 18, 86, 153, 220, 288, 388, 523, 792,
-450, -214, -96, -7, 51, 110, 169, 228, 287, 346, 405, 493, 611, 848,
-537, -355, -263, -195, -149, -104, -58, -13, 32, 78, 123, 192, 283, 465,
-982, -579, -377, -226, -125, -24, 76, 176, 277, 378, 479, 630, 832, 1235,
-902, -585, -426, -306, -227, -148, -68, 10, 90, 169, 249, 368, 527, 845,
-679, -361, -202, -83, -3, 75, 155, 234, 314, 393, 473, 592, 751, 1069,
-893, -602, -456, -347, -275, -202, -129, -57, 15, 88, 160, 269, 415, 706,
-619, -433, -339, -269, -223, -176, -129, -83, -36, 10, 56, 126, 220, 406,
-521, -309, -204, -124, -71, -18, 34, 86, 139, 192, 245, 325, 430, 642,
-898, -591, -438, -323, -246, -169, -93, -16, 60, 136, 213, 328, 481, 788,
-617, -378, -258, -168, -109, -49, 10, 70, 130, 190, 249, 339, 459, 698,
-641, -504, -435, -384, -350, -315, -281, -247, -213, -178, -144, -93, -24, 112,
-639, -367, -230, -128, -60, 7, 75, 143, 212, 280, 348, 450, 587, 859,
-832, -518, -361, -243, -164, -86, -7, 70, 149, 227, 306, 424, 581, 895,
-565, -330, -212, -123, -64, -6, 52, 111, 170, 229, 288, 376, 494, 730,
-711, -411, -260, -148, -73, 1, 76, 151, 226, 301, 377, 489, 639, 939,
-924, -620, -468, -353, -277, -201, -125, -49, 26, 102, 179, 293, 445, 750,
-480, -272, -168, -90, -38, 13, 65, 117, 169, 221, 273, 351, 455, 663,
-874, -586, -442, -334, -262, -191, -119, -47, 24, 96, 168, 276, 420, 707,
-989, -610, -420, -277, -182, -87, 7, 102, 197, 292, 386, 529, 719, 1099,
-841, -536, -383, -269, -193, -116, -40, 35, 112, 188, 264, 379, 531, 837,
};

static uint64_t bbox_head_multi_level_share_convs_1_0_conv2_weight[64 * 9] =
{ // torch.Size([64, 3, 3, 1])
0x8, 0xb, 0x0, 0xa, 0xb, 0x8, 0xa, 0xb, 0x8, 
0xb, 0xb, 0x2, 0x3, 0xd, 0x4, 0x2, 0xc, 0x3, 
0xd, 0x9, 0x2, 0xc, 0x0, 0x3, 0xc, 0xb, 0x9, 
0x0, 0xa, 0xd, 0x1, 0xa, 0xd, 0x3, 0x3, 0xa, 
0xa, 0x8, 0x5, 0xa, 0x4, 0x4, 0xc, 0x2, 0x3, 
0x4, 0x5, 0x4, 0x2, 0x3, 0x3, 0xb, 0x9, 0xa, 
0xb, 0xa, 0x8, 0xc, 0xb, 0xa, 0xa, 0xa, 0xc, 
0x5, 0x3, 0xa, 0x4, 0x3, 0x8, 0x4, 0x3, 0x8, 
0xa, 0xc, 0xb, 0xa, 0x4, 0xb, 0x3, 0x5, 0x3, 
0x3, 0x1, 0x1, 0x4, 0xb, 0x3, 0x3, 0xa, 0x3, 
0xb, 0x2, 0x8, 0xb, 0xd, 0xc, 0x2, 0x3, 0x8, 
0x2, 0xb, 0xc, 0x3, 0xb, 0xc, 0x1, 0xb, 0xc, 
0xb, 0xc, 0x9, 0xb, 0xc, 0x9, 0xa, 0xb, 0x0, 
0xb, 0x2, 0x9, 0xc, 0x5, 0x2, 0x9, 0xb, 0x1, 
0x0, 0x1, 0xc, 0xc, 0xb, 0x3, 0x3, 0x5, 0x2, 
0x8, 0x9, 0x2, 0x2, 0x4, 0x5, 0xb, 0xb, 0x3, 
0x2, 0x3, 0x0, 0xc, 0xd, 0x2, 0x3, 0xa, 0xb, 
0x0, 0xa, 0xa, 0x2, 0x4, 0x2, 0x3, 0x4, 0x4, 
0x3, 0xb, 0x9, 0x5, 0xa, 0x8, 0x5, 0x3, 0x9, 
0x0, 0x0, 0x3, 0xd, 0x4, 0xb, 0xc, 0x2, 0x1, 
0xc, 0xd, 0xd, 0x1, 0x3, 0xc, 0x3, 0x3, 0x0, 
0x3, 0x9, 0xb, 0x3, 0xc, 0xa, 0x3, 0xd, 0x5, 
0x9, 0x2, 0x8, 0x3, 0x4, 0xc, 0x3, 0xb, 0xd, 
0x2, 0x2, 0x4, 0x4, 0x3, 0x4, 0x3, 0x9, 0xa, 
0xa, 0x1, 0x1, 0x1, 0xe, 0x3, 0x3, 0x9, 0xa, 
0xb, 0x2, 0x9, 0xb, 0x2, 0x2, 0xb, 0xc, 0x0, 
0x5, 0x3, 0xc, 0x4, 0x5, 0x2, 0x1, 0x3, 0xb, 
0xc, 0xd, 0x0, 0x2, 0x5, 0x0, 0xa, 0x2, 0x2, 
0x2, 0xc, 0x2, 0x9, 0xb, 0x0, 0x0, 0xc, 0x1, 
0xc, 0xa, 0x2, 0xc, 0x0, 0x2, 0xc, 0xb, 0x9, 
0xa, 0x9, 0x4, 0x2, 0x4, 0x4, 0x4, 0x3, 0x2, 
0x0, 0x3, 0x9, 0x2, 0x4, 0x0, 0x9, 0x3, 0x1, 
0x4, 0x3, 0xc, 0x5, 0x3, 0xa, 0x3, 0x4, 0x9, 
0xb, 0x0, 0xa, 0xc, 0x2, 0xc, 0xb, 0xa, 0xa, 
0x1, 0x4, 0xa, 0x1, 0x5, 0x2, 0xd, 0x1, 0x3, 
0xb, 0xe, 0xb, 0x0, 0x1, 0x4, 0x1, 0xb, 0x2, 
0x2, 0x3, 0x0, 0x2, 0xb, 0xd, 0x9, 0xb, 0xa, 
0xb, 0x8, 0x2, 0x0, 0xd, 0x3, 0xa, 0xa, 0x0, 
0xc, 0xc, 0xc, 0xa, 0xa, 0x0, 0x3, 0x2, 0x3, 
0x0, 0x3, 0xa, 0x9, 0x6, 0xa, 0x2, 0xb, 0xb, 
0x4, 0x3, 0x3, 0x2, 0x3, 0x0, 0x0, 0x1, 0x0, 
0x4, 0x4, 0x4, 0x3, 0x1, 0x2, 0x0, 0xa, 0x1, 
0x2, 0xc, 0x3, 0x0, 0xd, 0x0, 0x1, 0xa, 0x1, 
0xc, 0xb, 0xc, 0xb, 0x9, 0xb, 0xb, 0x0, 0xa, 
0x2, 0xd, 0x0, 0x2, 0x3, 0x0, 0xa, 0xb, 0x9, 
0xc, 0xb, 0xa, 0xa, 0xb, 0xa, 0x4, 0x4, 0x3, 
0x4, 0x5, 0x5, 0x4, 0x0, 0x1, 0x3, 0xa, 0xa, 
0x3, 0xb, 0xa, 0x3, 0x3, 0x4, 0x9, 0x4, 0x5, 
0xa, 0xd, 0xc, 0x2, 0xc, 0x9, 0xb, 0x4, 0xa, 
0xa, 0x8, 0x1, 0xb, 0x2, 0x3, 0x2, 0x4, 0x6, 
0xb, 0x3, 0x9, 0x0, 0x5, 0xb, 0x2, 0xb, 0x2, 
0xc, 0xb, 0x2, 0xc, 0x3, 0x1, 0x9, 0x4, 0x3, 
0xb, 0x1, 0x3, 0x1, 0x4, 0x4, 0x2, 0x4, 0x3, 
0xb, 0xc, 0x2, 0xc, 0xc, 0x3, 0xb, 0x0, 0x3, 
0x3, 0xc, 0x9, 0x2, 0x6, 0xc, 0x4, 0x4, 0x2, 
0x1, 0x9, 0xb, 0x3, 0xb, 0xd, 0x8, 0xa, 0xb, 
0x3, 0x3, 0xd, 0x3, 0x3, 0xd, 0x0, 0xb, 0xc, 
0xb, 0xc, 0x0, 0x8, 0x1, 0xa, 0x0, 0xb, 0xa, 
0x4, 0x4, 0xb, 0xb, 0xc, 0xb, 0xc, 0xd, 0x4, 
0x2, 0x3, 0x3, 0x3, 0x2, 0x2, 0x3, 0x3, 0x2, 
0x4, 0xb, 0xb, 0xc, 0xd, 0x1, 0x2, 0x3, 0x3, 
0xb, 0xa, 0x3, 0x3, 0x4, 0x4, 0x4, 0x4, 0x3, 
0xc, 0xb, 0x0, 0xd, 0x5, 0xb, 0xa, 0x1, 0x4, 
0x3, 0x3, 0x1, 0x3, 0x4, 0x2, 0x2, 0x4, 0x2, 
};

static int bbox_head_multi_level_share_convs_1_0_relu2_threshold[64 * 7] =
{ // torch.Size([64, 7])
-1, 11, 24, 36, 56, 82, 133,
-18, 14, 46, 79, 127, 192, 322,
22, 53, 84, 115, 162, 224, 349,
-4, 35, 74, 114, 173, 252, 410,
15, 82, 150, 217, 318, 452, 722,
-37, -4, 27, 60, 109, 174, 305,
-70, -33, 4, 42, 98, 173, 323,
13, 52, 91, 129, 187, 265, 419,
12, 41, 69, 98, 140, 197, 311,
-32, -9, 12, 34, 67, 112, 201,
-33, 2, 38, 74, 128, 200, 345,
-11, 21, 54, 86, 135, 201, 331,
-111, -51, 7, 67, 156, 275, 513,
26, 58, 89, 121, 168, 231, 357,
-24, 19, 63, 106, 172, 259, 434,
24, 91, 159, 226, 328, 463, 733,
7, 36, 65, 94, 137, 195, 312,
4, 32, 61, 89, 132, 189, 303,
6, 30, 54, 78, 114, 161, 257,
-1, 31, 64, 97, 147, 213, 346,
-76, -7, 61, 130, 233, 371, 646,
3, 32, 61, 90, 133, 191, 307,
-36, 11, 58, 105, 176, 271, 460,
-32, 11, 54, 97, 161, 248, 420,
-38, 9, 57, 105, 177, 272, 464,
-19, 8, 36, 64, 106, 161, 273,
58, 95, 132, 169, 225, 299, 447,
-46, 72, 191, 311, 489, 727, 1203,
8, 24, 40, 56, 80, 113, 177,
5, 38, 72, 105, 154, 220, 353,
-11, 31, 73, 116, 180, 266, 437,
-11, 5, 22, 38, 63, 97, 163,
34, 68, 101, 135, 185, 252, 385,
-117, -52, 11, 76, 173, 303, 561,
32, 70, 107, 145, 201, 276, 425,
-9, 53, 117, 180, 275, 402, 655,
-4, 29, 63, 98, 149, 217, 354,
-6, 14, 35, 56, 88, 130, 214,
-25, -12, 0, 14, 33, 60, 113,
-48, -3, 41, 86, 154, 244, 424,
-15, 12, 39, 66, 107, 162, 272,
0, 32, 64, 96, 143, 207, 334,
40, 77, 113, 149, 204, 277, 422,
-6, 26, 60, 94, 144, 212, 347,
-3, 17, 38, 59, 90, 132, 216,
-26, 10, 46, 82, 136, 208, 353,
-75, -40, -6, 27, 79, 147, 285,
-26, 22, 71, 120, 193, 291, 487,
7, 60, 113, 167, 247, 353, 567,
9, 46, 83, 120, 176, 250, 399,
32, 60, 89, 118, 161, 219, 334,
-5, 17, 40, 63, 97, 142, 233,
-70, -3, 62, 129, 229, 362, 629,
-32, -9, 13, 36, 70, 115, 207,
133, 255, 377, 499, 682, 927, 1415,
-44, -9, 25, 61, 114, 184, 325,
18, 71, 124, 177, 256, 362, 574,
10, 30, 49, 68, 97, 135, 212,
66, 122, 178, 234, 318, 430, 654,
19, 42, 64, 87, 121, 166, 257,
-17, 4, 26, 48, 81, 124, 212,
-7, 33, 73, 114, 174, 255, 417,
24, 75, 125, 176, 252, 353, 555,
-56, -44, -32, -19, -1, 22, 71,
};

static uint64_t bbox_head_multi_level_share_convs_2_0_conv1_weight[64 * 1*4] =
{ // torch.Size([64, 1, 1, 64])
0x8ca322b2c2bcb9bb,0x93bac929b1a0a212,0xcaaba2bca84b0cac,0x0299abc2aabb34a9, 
0x4320b3d0330dc1c9,0xc2ccd394c222a0b3,0x04a3c3cb89bcc4c3,0xb3d9c23abb01c4c2, 
0x980bbb0b3b143bac,0x922c3c8b0baa4d22,0x1112abb3bdd0213a,0x9c382be8bcb3c930, 
0x990ab320a9823313,0xba3123a03830dbaa,0x4233090880b3a383,0xb13910002032314b, 
0x1caba120cb2cabbc,0x01bac3b0a9ab23b9,0xcb19a8aba2aaa99a,0x0a01b3b1433ab2a2, 
0x2ca1cbb9ad12418b,0xbb3c4b8aa1a81d81,0x23b190abbc2a9313,0x890aaa19ccc0c293, 
0xaa923ba2cd389bb1,0xc89b4cca1a3b3cc3,0xc23a2ab0baab0bba,0xac299b339c1abd99, 
0x8b2903d145900300,0x102922322214a130,0x4180223a3130908a,0xa4c22aa8ca3122aa, 
0xb39022828d33a39c,0x239c3bc14a4bbccd,0x83323cccbcc20cdd,0x1cb139b38bbbc2aa, 
0x0c2ba00b40253304,0x031213303ab191a8,0x38309aa49330032a,0x8bb2131c3430b892, 
0xcc29ab3c54249301,0x42a3233941c9892b,0x3a2d4a20aa44343b,0x0532333a2b2a123a, 
0xa42833434b9dd2a4,0x43d3c2bb3bcbb44a,0x4b292cbcc4c0cccc,0xaa3332ab244cb48a, 
0x0b0bb2c4c2ab28ac,0xc24cb3c0cbc3cbc4,0x49bdbcccbbdc32bb,0xca1bb130a3a2c23b, 
0x3b32292153132520,0x4019433138a4aa29,0x433829331a29132a,0x24b03811c33203aa, 
0x9ba0a994bab83b13,0x9a24b140b233c343,0x5aad423923440b44,0xa2a20218233a225a, 
0xc2031aa30b2cc52d,0x8a8c2aa22aca3b2b,0x34138c2ac0caaab8,0x12d2212ab04ac2ba, 
0x9d31a0b9330bb329,0x2003a292a2231921,0xc004b1492bab823a,0x33c9a240abbaa3c0, 
0x3bb12443332404b2,0x3acb3a39bb331232,0xa8031ac4c1bb03b8,0xc3aacbb931424420, 
0x9c9c9b80cc3babba,0xb34bc0c10389bbc9,0xc4331bcbab0b8b99,0xbcc4c9a14993bc33, 
0x52a4cb393d244cba,0x93232c3bb2abdbb0,0x8b4b2a14ccb1319b,0xcc1cabc2bcb2424c, 
0x1c3aabc1b3cb209c,0xb00bba39c0248ba1,0x8acab2bacc2bab38,0xa4cbc82bd0b4dba2, 
0xa2a4ab3b89ba2193,0xb0335b30b212b941,0x229984489232a530,0x14abb819932a4a11, 
0xb4a20bcbbb8aaca8,0xb29bbb9ab12b4aa2,0xcbcbc20a221aa1a1,0x1c38bb20abbaaab2, 
0x1303ab3b43988222,0x392341b222080bab,0x493a3331a8328412,0x24bb33493039030b, 
0xc8b20b43cb13bca4,0xa3a44bb9b2020b2b,0xcc2aa33333239b21,0x2a48312039aa3d3a, 
0xb8aa9ac8bb8aa098,0x1a3aa9bb28a3a91a,0xa9ba3b0b29820b1b,0xbaa120a98b803b99, 
0xb32c3ba1332ac43b,0x4b2bc5032aab2332,0x33b40b3a314aac02,0x3bc3323ab838cca2, 
0xccb1aa52d23338b0,0x22334a4a41a3b34c,0x3b1a423803342b43,0x34492499334a2c41, 
0xa8130a323aa21323,0x982a420030039b0a,0x323121231aa91202,0x02192028b922912a, 
0x3b820a1232213420,0x393a332839b19001,0x42303b22a9a22819,0x13b23abab1229230, 
0x22b33c22bd3c83bd,0xbc124bbaabab3b34,0x23a4cbcbcbcb14bb,0x21b8ba031b0903b1, 
0xc2a398992a81ac99,0xa0b21b30a2ba10bb,0xcbbbb3a280499b90,0x8201aa08abba10a0, 
0x9939b1b232923322,0x20423a3b8baa8c22,0x03a019a02bb324a9,0xa3000b10c1c33aaa, 
0x9a123c23dbbc0314,0x2a334ca9aa89a384,0xb348382c34328441,0x12abb142444c22b2, 
0xab9a9ababaa9aa82,0x992aaa9a22a3a92b,0xb9bb9b291aa22a0b,0xbaa081909a9a2b99, 
0xcb2a38329b832daa,0xc8bb1ca013ab810c,0xdcbb0412bbaba9b2,0xa001ba31acba3cb8, 
0x2b2c02c81320bc2c,0x820cc4309b0223c8,0x2bb983831b119cba,0xa0b230b2bab3cc09, 
0x0a0bc8a3bc09b0ab,0xb3012a4a01020ba0,0xb889ac98c9181b1a,0xaba3481a29ab1a82, 
0xa4ac3b44ecbbbcb4,0x0394a24bc3b3a243,0xcb34a10144448c42,0x2c53b3b2435a3d48, 
0x2082343433232301,0x2bca3982aa4b3424,0x49caa1d3c342b204,0xab22938bb353a443, 
0xa002923333b993b2,0x938aaa392b331922,0x9a013ac1b3b22220,0xb332813932322323, 
0x3023218321981208,0x802a201819222a92,0x2122102201981800,0x98202980a111b012, 
0x222200812101120a,0x0909222190390ba2,0x21310310231a8100,0x113020898100c213, 
0xa4123aaa4882143b,0x2b113aa13abb2800,0x42a20223319bb435,0x9aba1a432c330caa, 
0x9aa12abbb31ccbbc,0x29cac8b3b90c93a2,0xc29ba21b04588a0a,0x2330b3ba433ab3b2, 
0x34a3b23a41231b22,0x2b22302323238308,0x432218330a2a1123,0x992332224c344123, 
0x4b2a213322202322,0x2230029222322223,0x2223ab29b8302023,0x2ab222999033b143, 
0x2a03322338128312,0x1218313031232a22,0x233329239aaa2093,0x11923990b132ab32, 
0x54b32432139ba0a4,0xbac4a802043b2424,0xb2263339443905b4,0xa922b850bc224513, 
0x42b444534b8bbabc,0x03bb4abb4bccdcbc,0x1b3e5c4babca0acd,0xb9b299832a1cd239, 
0x342243b33811210b,0x291022209a3b2ac3,0x332403b32211b304,0x3230119092320490, 
0xdb2bbbc0caab908c,0xa22c1a8a3bb4bc88,0x2bbc2c3bccb20249,0x94cbb249b290cc9b, 
0xc421d0bcb19ca228,0xbb2ab398abac3bcc,0x32abaa2d144c98c1,0xcb4892414bcbcbbb, 
0x4cb2a38a2c045d83,0xb34a3cbb39a38ca4,0x4a3242444ab3043b,0x2aba8cd9bbd3c312, 
0xcc33bb4a32143123,0x0b3b41b03b434c2b,0xdc8494353332a442,0x42439a225bc2bcb3, 
0x3c21baac3202298a,0xb240a9a2a2230b80,0xcb94a9383bbb223c,0x34ca2ba12ac3baca, 
0x2b9b3b4b9002b344,0x4aa40ca243233242,0xd935324aa954083d,0x43123332233a34c1, 
0x280111221a011309,0xb82a120820228b09,0x32231a22a0b119a3,0xa93120101023b931, 
0x3a22c34bcc234bc3,0xbba33ba2ba0a13b8,0xba3a22cba448a41a,0x824bb0aa41a14538, 
0xb384adb3bd8c03bc,0xdc2b4cb8980a1cb1,0x132039abb0bca4b0,0x83bcbbb2c219b1b2, 
0xcab09b3a042bb5ac,0x4a41a433a495232b,0xca13a44b39331b4a,0x35c3233134331ba3, 
0xcc940da28ba92232,0xca425891a3b19ab3,0x212923388a23b4aa,0x14a09430a32a22b0, 
0x2cab1442a0324311,0x0b43a3a0aa43c203,0x5334aa9322c3a233,0x892aa23a0133b14b, 
0x430433ca14bcbdcb,0xcbccca48c94c0ab3,0xbaa4b3d3bbbcc5c4,0xb48bc959dcc303b2, 
};

static int bbox_head_multi_level_share_convs_2_0_quant1_threshold[64 * 14] =
{ // torch.Size([64, 14])
-1187, -816, -630, -491, -398, -305, -212, -119, -26, 66, 159, 298, 484, 855,
-1464, -999, -767, -592, -476, -360, -243, -127, -11, 105, 221, 395, 628, 1093,
-1538, -1066, -829, -652, -534, -416, -298, -180, -62, 55, 173, 350, 587, 1059,
-655, -382, -245, -142, -74, -6, 62, 130, 198, 267, 335, 438, 574, 848,
-1175, -810, -627, -490, -399, -307, -216, -125, -33, 57, 148, 285, 468, 834,
-1252, -863, -669, -524, -427, -330, -232, -135, -38, 58, 155, 300, 495, 883,
-1097, -764, -597, -472, -389, -306, -222, -139, -56, 27, 110, 235, 402, 735,
-738, -425, -268, -151, -72, 5, 84, 162, 240, 319, 397, 514, 671, 985,
-1107, -766, -596, -468, -383, -297, -212, -127, -42, 43, 128, 256, 426, 767,
-800, -457, -286, -157, -71, 14, 99, 185, 271, 357, 443, 571, 743, 1086,
-879, -511, -327, -189, -97, -5, 86, 178, 271, 363, 455, 593, 777, 1145,
-1181, -791, -596, -450, -352, -255, -157, -60, 37, 134, 232, 378, 573, 963,
-1549, -1089, -860, -687, -572, -458, -343, -228, -113, 1, 116, 288, 518, 977,
-1249, -710, -441, -239, -104, 29, 164, 299, 433, 568, 702, 904, 1174, 1712,
-835, -474, -293, -157, -67, 22, 113, 203, 293, 384, 474, 610, 790, 1152,
-1368, -922, -699, -532, -421, -310, -198, -87, 24, 135, 246, 413, 636, 1082,
-1280, -796, -554, -373, -252, -131, -10, 110, 231, 352, 473, 654, 896, 1380,
-923, -595, -430, -307, -225, -143, -61, 21, 103, 185, 267, 390, 555, 883,
-990, -683, -529, -414, -338, -261, -184, -107, -31, 45, 122, 237, 390, 697,
-1284, -854, -639, -478, -371, -263, -156, -48, 58, 166, 273, 434, 649, 1079,
-1157, -816, -646, -518, -433, -348, -263, -177, -92, -7, 77, 205, 375, 716,
-713, -413, -263, -151, -76, -1, 73, 148, 223, 298, 373, 485, 635, 935,
-1400, -970, -754, -593, -485, -377, -270, -162, -54, 52, 160, 321, 537, 967,
-722, -413, -258, -142, -65, 11, 89, 166, 243, 321, 398, 514, 669, 978,
-215, -117, -67, -31, -6, 18, 42, 67, 91, 116, 140, 177, 227, 325,
-640, -437, -336, -260, -210, -159, -109, -58, -7, 42, 93, 168, 270, 472,
-1004, -618, -424, -280, -183, -86, 9, 106, 202, 299, 395, 540, 733, 1120,
-945, -544, -343, -193, -92, 7, 107, 208, 308, 408, 509, 659, 860, 1261,
-903, -533, -349, -210, -118, -25, 66, 159, 251, 343, 436, 574, 759, 1129,
-1377, -831, -557, -352, -216, -79, 56, 193, 330, 466, 603, 808, 1081, 1628,
-1261, -867, -671, -523, -425, -327, -229, -130, -32, 65, 164, 311, 508, 901,
-1128, -758, -572, -433, -341, -248, -155, -63, 29, 121, 214, 353, 538, 909,
-763, -479, -337, -230, -159, -88, -17, 53, 124, 195, 266, 372, 515, 799,
-971, -581, -386, -240, -142, -45, 52, 149, 247, 344, 442, 588, 783, 1173,
-683, -465, -356, -275, -220, -166, -111, -57, -2, 51, 106, 187, 296, 514,
-1617, -1137, -897, -717, -597, -477, -357, -237, -117, 2, 123, 303, 543, 1023,
-871, -585, -441, -334, -262, -191, -119, -47, 23, 95, 167, 274, 417, 704,
-647, -440, -337, -259, -207, -155, -104, -52, 0, 51, 102, 180, 284, 491,
-290, -152, -83, -31, 3, 37, 72, 106, 141, 176, 210, 262, 331, 469,
-1041, -656, -463, -319, -223, -127, -31, 65, 161, 257, 353, 498, 690, 1075,
-902, -565, -397, -270, -186, -102, -18, 65, 150, 234, 318, 444, 612, 949,
-910, -557, -380, -248, -160, -71, 16, 104, 192, 281, 369, 501, 678, 1031,
-709, -432, -294, -190, -121, -52, 16, 86, 155, 224, 293, 397, 535, 812,
-1047, -655, -459, -311, -213, -115, -17, 80, 178, 276, 374, 522, 718, 1110,
-1336, -899, -680, -517, -407, -298, -189, -80, 29, 138, 247, 411, 629, 1066,
-696, -383, -226, -109, -30, 47, 125, 203, 282, 360, 438, 556, 713, 1026,
-854, -499, -321, -188, -99, -10, 77, 166, 255, 344, 432, 566, 743, 1098,
-999, -589, -384, -230, -127, -25, 77, 179, 282, 384, 487, 641, 846, 1256,
-872, -489, -298, -154, -58, 36, 132, 228, 323, 419, 515, 658, 850, 1232,
-1390, -925, -693, -519, -402, -286, -170, -54, 61, 178, 294, 468, 701, 1166,
-806, -480, -317, -194, -113, -31, 49, 131, 212, 294, 375, 497, 661, 987,
-1151, -801, -625, -494, -406, -319, -231, -143, -56, 31, 119, 250, 425, 776,
-1413, -956, -727, -556, -442, -327, -213, -99, 14, 129, 243, 414, 643, 1100,
-1148, -684, -452, -278, -162, -46, 70, 186, 302, 418, 534, 708, 940, 1404,
-1135, -671, -439, -265, -149, -33, 82, 198, 314, 430, 546, 720, 952, 1416,
-1302, -803, -553, -366, -241, -116, 8, 133, 257, 382, 507, 694, 944, 1443,
-433, -198, -80, 7, 66, 125, 184, 243, 302, 361, 420, 508, 626, 862,
-904, -555, -381, -250, -163, -75, 11, 98, 185, 273, 360, 491, 665, 1014,
-1062, -687, -499, -359, -265, -171, -77, 15, 109, 203, 297, 437, 625, 1000,
-1164, -809, -632, -499, -410, -321, -232, -143, -55, 33, 122, 255, 433, 788,
-1171, -689, -448, -267, -147, -27, 93, 213, 334, 454, 575, 755, 996, 1478,
-692, -412, -272, -167, -97, -26, 43, 113, 183, 253, 323, 428, 568, 849,
-1080, -645, -428, -265, -156, -47, 61, 169, 278, 387, 496, 659, 876, 1311,
-1500, -1023, -785, -606, -487, -368, -248, -129, -10, 108, 228, 406, 645, 1122,
};

static uint64_t bbox_head_multi_level_share_convs_2_0_conv2_weight[64 * 9] =
{ // torch.Size([64, 3, 3, 1])
0x3, 0x3, 0xa, 0x2, 0x4, 0x1, 0xa, 0x3, 0x2, 
0x2, 0x4, 0x5, 0xb, 0xc, 0x5, 0x2, 0xb, 0x3, 
0x9, 0x1, 0x5, 0x0, 0x3, 0x4, 0x2, 0x2, 0x4, 
0x0, 0x3, 0x4, 0xc, 0xc, 0xc, 0x0, 0xa, 0xa, 
0xb, 0x4, 0x2, 0x4, 0x4, 0xa, 0x3, 0x0, 0xb, 
0xb, 0x0, 0x2, 0x2, 0x2, 0x4, 0x1, 0x4, 0x5, 
0x1, 0x4, 0xa, 0xa, 0x4, 0x4, 0xa, 0x2, 0x4, 
0x1, 0xb, 0xc, 0x0, 0xc, 0xc, 0x4, 0x2, 0x3, 
0x4, 0x4, 0x5, 0x2, 0x1, 0x2, 0x0, 0xb, 0x2, 
0x2, 0xc, 0x2, 0xc, 0xb, 0x2, 0xa, 0x0, 0x3, 
0x1, 0x2, 0x2, 0xb, 0x4, 0x9, 0xa, 0xd, 0xd, 
0xd, 0xc, 0x0, 0x2, 0xc, 0x4, 0x0, 0xa, 0x6, 
0x4, 0x5, 0x4, 0x2, 0x9, 0xa, 0x2, 0x0, 0x9, 
0xb, 0xa, 0xa, 0x8, 0xc, 0xc, 0x3, 0xa, 0xa, 
0xd, 0xc, 0xc, 0x0, 0x2, 0x1, 0x0, 0x8, 0xb, 
0x4, 0x3, 0x9, 0x3, 0x2, 0x8, 0x5, 0x2, 0x1, 
0x4, 0x1, 0x2, 0x3, 0xb, 0x1, 0x4, 0x2, 0x3, 
0x0, 0x0, 0xb, 0x4, 0x2, 0xa, 0xc, 0xc, 0xc, 
0xb, 0xc, 0x0, 0x4, 0x4, 0x4, 0x4, 0x4, 0x2, 
0xb, 0x3, 0x2, 0xc, 0xa, 0x3, 0xa, 0xd, 0xa, 
0xb, 0x0, 0x9, 0x3, 0x3, 0x3, 0x4, 0x4, 0x4, 
0xc, 0xa, 0xa, 0xc, 0x8, 0x8, 0xa, 0xb, 0x8, 
0xb, 0x9, 0x9, 0x2, 0x3, 0x3, 0x2, 0x4, 0x3, 
0x3, 0xa, 0xa, 0xb, 0xb, 0xa, 0xb, 0xb, 0xa, 
0xb, 0x2, 0x3, 0xc, 0xb, 0x3, 0xd, 0xc, 0x2, 
0xa, 0x3, 0xb, 0x3, 0x4, 0x3, 0xa, 0x2, 0xb, 
0x4, 0xb, 0xa, 0x3, 0x1, 0x2, 0x4, 0x4, 0x3, 
0xc, 0xd, 0xc, 0x0, 0x2, 0xa, 0x0, 0x3, 0x3, 
0xb, 0xa, 0x2, 0xa, 0xb, 0x1, 0xb, 0xb, 0x1, 
0x9, 0xa, 0x1, 0xa, 0x9, 0x2, 0xb, 0xb, 0xa, 
0x5, 0xa, 0x2, 0x4, 0xa, 0x0, 0x4, 0x3, 0x2, 
0xb, 0x8, 0x3, 0xa, 0x4, 0x4, 0x1, 0x3, 0xa, 
0xb, 0xb, 0x3, 0xc, 0xb, 0x2, 0xb, 0x3, 0x4, 
0x2, 0xa, 0xc, 0x9, 0x2, 0x9, 0x3, 0xa, 0xd, 
0x9, 0x2, 0x8, 0x3, 0x4, 0x2, 0xa, 0x1, 0x8, 
0xb, 0x4, 0x2, 0xb, 0x4, 0xa, 0xb, 0x4, 0x3, 
0x3, 0x3, 0xa, 0x2, 0x2, 0x0, 0xa, 0x1, 0x4, 
0x2, 0x3, 0x4, 0x3, 0x3, 0x3, 0xa, 0xc, 0xb, 
0x3, 0x4, 0x0, 0xb, 0xd, 0xc, 0xc, 0xd, 0xc, 
0xc, 0xc, 0xd, 0x2, 0x4, 0x3, 0xb, 0xb, 0xb, 
0xb, 0x3, 0x9, 0xb, 0x2, 0x0, 0xc, 0xa, 0xb, 
0x9, 0xa, 0xa, 0x9, 0xa, 0xa, 0x0, 0x8, 0xa, 
0x9, 0xa, 0x9, 0x9, 0xa, 0xa, 0x8, 0x9, 0x8, 
0x3, 0x9, 0xc, 0x3, 0xa, 0xb, 0x3, 0x9, 0xc, 
0x3, 0x9, 0xc, 0x4, 0x3, 0xc, 0x4, 0x4, 0xb, 
0x3, 0xc, 0xa, 0x2, 0xc, 0x9, 0x3, 0xc, 0xc, 
0xc, 0xc, 0xb, 0x1, 0x2, 0x2, 0xb, 0x9, 0x2, 
0xa, 0x8, 0xa, 0x8, 0xa, 0xb, 0xa, 0xa, 0x8, 
0xc, 0xb, 0xc, 0x9, 0x1, 0xb, 0xb, 0xb, 0xc, 
0x5, 0x4, 0x5, 0x2, 0x9, 0x2, 0x9, 0x3, 0x3, 
0x0, 0xb, 0xa, 0x9, 0xa, 0x0, 0x9, 0xa, 0xb, 
0x3, 0x2, 0x3, 0x2, 0xa, 0x2, 0x4, 0x3, 0x3, 
0x4, 0x1, 0x4, 0x3, 0x0, 0x4, 0x3, 0xa, 0x3, 
0x4, 0x3, 0x5, 0x2, 0xb, 0xa, 0x3, 0x3, 0x5, 
0x4, 0x4, 0x3, 0xb, 0x9, 0x5, 0xa, 0x1, 0x5, 
0x3, 0x3, 0x4, 0x0, 0xa, 0x2, 0x4, 0x2, 0x3, 
0xb, 0xc, 0xd, 0x4, 0x1, 0x8, 0x3, 0x8, 0xb, 
0xb, 0x0, 0x2, 0xb, 0xb, 0xa, 0x0, 0x9, 0xb, 
0xa, 0x0, 0x0, 0xa, 0x2, 0xb, 0xd, 0xc, 0xa, 
0x1, 0x9, 0x4, 0xb, 0x3, 0x4, 0x3, 0x4, 0x1, 
0x3, 0x4, 0x2, 0xc, 0x3, 0x8, 0xd, 0xd, 0x3, 
0x4, 0xc, 0xa, 0x0, 0xb, 0x1, 0xc, 0xb, 0x3, 
0xc, 0xc, 0xc, 0xc, 0xb, 0xa, 0x2, 0x4, 0x9, 
0x5, 0x8, 0x3, 0x3, 0x5, 0x4, 0x0, 0x3, 0xb, 
};

static int bbox_head_multi_level_share_convs_2_0_relu2_threshold[64 * 7] =
{ // torch.Size([64, 7])
2, 30, 58, 85, 127, 182, 293,
76, 138, 201, 263, 356, 481, 730,
22, 63, 104, 145, 206, 288, 452,
15, 35, 55, 75, 105, 146, 226,
9, 37, 65, 93, 135, 191, 303,
9, 51, 93, 134, 197, 280, 447,
-8, 25, 59, 93, 144, 213, 349,
-4, 29, 62, 96, 146, 214, 348,
19, 56, 93, 129, 184, 257, 403,
29, 61, 93, 125, 173, 237, 364,
69, 122, 175, 228, 307, 413, 625,
87, 190, 293, 397, 551, 757, 1170,
24, 65, 105, 146, 207, 288, 451,
-10, 21, 53, 85, 132, 196, 323,
34, 66, 97, 129, 177, 240, 366,
17, 61, 106, 151, 218, 307, 485,
-12, 12, 37, 62, 99, 149, 249,
-74, -12, 48, 110, 202, 325, 570,
-5, 35, 75, 116, 177, 259, 422,
22, 53, 83, 114, 160, 221, 343,
-4, 34, 73, 112, 170, 248, 404,
8, 38, 68, 98, 143, 202, 322,
8, 32, 57, 81, 118, 166, 264,
12, 40, 67, 94, 135, 190, 299,
0, 160, 321, 483, 725, 1047, 1692,
18, 39, 61, 82, 114, 157, 242,
-9, 23, 55, 88, 137, 202, 332,
72, 115, 159, 202, 267, 354, 527,
3, 25, 48, 71, 105, 150, 242,
0, 25, 50, 76, 114, 166, 268,
37, 88, 138, 189, 265, 366, 568,
4, 31, 59, 86, 127, 181, 290,
9, 35, 61, 88, 127, 179, 284,
26, 65, 104, 143, 202, 280, 435,
9, 27, 45, 63, 90, 126, 197,
41, 60, 79, 98, 126, 164, 240,
12, 32, 51, 71, 100, 140, 218,
-12, 23, 58, 93, 146, 217, 358,
238, 419, 599, 780, 1051, 1412, 2134,
-72, -4, 62, 130, 231, 365, 635,
-24, 16, 56, 96, 156, 237, 397,
3, 16, 30, 44, 65, 92, 147,
0, 10, 20, 29, 44, 64, 103,
-11, 24, 60, 97, 151, 224, 369,
17, 48, 79, 110, 157, 219, 343,
-7, 27, 63, 99, 152, 223, 366,
-11, 21, 55, 88, 138, 204, 337,
0, 21, 42, 63, 94, 136, 220,
39, 67, 96, 124, 167, 224, 338,
-10, 45, 101, 157, 241, 353, 578,
1, 17, 33, 49, 72, 104, 167,
23, 44, 66, 88, 121, 165, 252,
-5, 28, 62, 96, 146, 214, 348,
-43, -6, 30, 67, 122, 197, 345,
16, 58, 101, 143, 206, 290, 458,
-35, -10, 13, 38, 75, 124, 222,
28, 107, 186, 264, 383, 541, 856,
-1, 23, 48, 73, 111, 161, 261,
-14, 23, 62, 100, 157, 233, 386,
30, 68, 106, 145, 202, 279, 432,
59, 117, 176, 234, 322, 439, 673,
12, 48, 84, 120, 174, 246, 391,
-17, 30, 78, 126, 199, 295, 488,
52, 144, 236, 328, 467, 651, 1020,
};

static uint64_t bbox_head_multi_level_cls_0_conv1_weight[1 * 1*4] =
{ // torch.Size([1, 1, 1, 64])
0x04baede00c84dc5c,0xd3c346c3ccee5a10,0xbc3cec0dc34bbbd5,0x3c3cba33d4b394d2, 
};

static int bbox_head_multi_level_cls_0_quant1_threshold[1 * 14] =
{ // torch.Size([1, 14])
-3879, -2585, -1938, -1453, -1129, -806, -482, -159, 164, 487, 811, 1296, 1943, 3237,
};

static uint64_t bbox_head_multi_level_cls_0_conv2_weight[1 * 9] =
{ // torch.Size([1, 3, 3, 1])
0xc, 0xe, 0xc, 0xc, 0xe, 0xc, 0xc, 0xd, 0xb, 
};

static int bbox_head_multi_level_cls_0_quant2_threshold[1 * 14] =
{ // torch.Size([1, 14])
-9418, -6033, -4341, -3072, -2226, -1379, -533, 312, 1158, 2004, 2851, 4120, 5812, 9197,
};

static uint64_t bbox_head_multi_level_cls_1_conv1_weight[1 * 1*4] =
{ // torch.Size([1, 1, 1, 64])
0x4e2c4c3b2c06cddc,0xdd14a52ceb54bd2d,0x5dd4dd58b3ccdb4a,0xcbd3a44c3cbdca45, 
};

static int bbox_head_multi_level_cls_1_quant1_threshold[1 * 14] =
{ // torch.Size([1, 14])
-4132, -2675, -1946, -1400, -1036, -671, -307, 56, 420, 784, 1149, 1695, 2423, 3880,
};

static uint64_t bbox_head_multi_level_cls_1_conv2_weight[1 * 9] =
{ // torch.Size([1, 3, 3, 1])
0xb, 0xd, 0xc, 0xa, 0xe, 0xc, 0xc, 0xe, 0xc, 
};

static int bbox_head_multi_level_cls_1_quant2_threshold[1 * 14] =
{ // torch.Size([1, 14])
-8158, -5205, -3728, -2621, -1882, -1144, -406, 332, 1070, 1809, 2547, 3654, 5131, 8085,
};

static uint64_t bbox_head_multi_level_cls_2_conv1_weight[1 * 1*4] =
{ // torch.Size([1, 1, 1, 64])
0x11228aa112229d22,0x1ba20ecab2981d82,0x232921c1c18140b0,0x018032902812193b, 
};

static int bbox_head_multi_level_cls_2_quant1_threshold[1 * 14] =
{ // torch.Size([1, 14])
-879, -574, -421, -307, -231, -155, -78, -2, 73, 149, 226, 340, 493, 798,
};

static uint64_t bbox_head_multi_level_cls_2_conv2_weight[1 * 9] =
{ // torch.Size([1, 3, 3, 1])
0x4, 0x5, 0x5, 0x6, 0x6, 0x6, 0x5, 0x5, 0x6, 
};

static int bbox_head_multi_level_cls_2_quant2_threshold[1 * 14] =
{ // torch.Size([1, 14])
-13887, -8865, -6354, -4470, -3215, -1959, -703, 551, 1807, 3062, 4318, 6201, 8713, 13735,
};

static uint64_t bbox_head_multi_level_bbox_0_conv1_weight[4 * 1*4] =
{ // torch.Size([4, 1, 1, 64])
0x3d34c2a4b0ccc993,0x94a82124032999bc,0xc4ccadc522b938aa,0xb93430ac92c34ca3, 
0xabb9311c42013c34,0x2b3b29b21319bd3b,0x48432b00434c2cba,0xc4a449a0908ac081, 
0xdc3aac23b9c2aada,0x13adbd111311d9a0,0x2844c424a2b939bd,0x202aaa32ad349c98, 
0xdd39aa14d093abda,0x33bd3eba2411b830,0x4043b82133ba30bc,0x4332cb40ae13a110, 
};

static int bbox_head_multi_level_bbox_0_quant1_threshold[4 * 14] =
{ // torch.Size([4, 14])
-1319, -866, -639, -469, -356, -242, -129, -15, 97, 210, 324, 494, 721, 1174,
-1350, -959, -764, -617, -520, -422, -324, -226, -129, -31, 66, 212, 408, 798,
-1907, -1335, -1050, -836, -693, -550, -407, -265, -122, 20, 163, 377, 662, 1233,
-2073, -1415, -1086, -840, -675, -511, -346, -182, -17, 146, 311, 558, 886, 1544,
};

static uint64_t bbox_head_multi_level_bbox_0_conv2_weight[4 * 9] =
{ // torch.Size([4, 3, 3, 1])
0x9, 0x6, 0x0, 0x1, 0x5, 0x2, 0x2, 0x3, 0x0, 
0xc, 0xe, 0xc, 0x9, 0xa, 0x9, 0x0, 0x1, 0x1, 
0x2, 0x4, 0x3, 0x2, 0x4, 0x2, 0x1, 0x3, 0x2, 
0x3, 0x3, 0x3, 0x2, 0x3, 0x3, 0x1, 0x3, 0x2, 
};

static int bbox_head_multi_level_bbox_0_quant2_threshold[4 * 14] =
{ // torch.Size([4, 14])
-770, -357, -151, 2, 106, 209, 312, 415, 518, 621, 724, 879, 1085, 1497,
-570, -269, -119, -6, 69, 144, 219, 295, 370, 445, 521, 634, 784, 1085,
-628, -430, -331, -257, -207, -158, -108, -59, -9, 39, 89, 163, 262, 460,
-841, -625, -517, -436, -382, -328, -274, -220, -166, -112, -58, 22, 130, 346,
};

static uint64_t bbox_head_multi_level_bbox_1_conv1_weight[4 * 1*4] =
{ // torch.Size([4, 1, 1, 64])
0x0213c83cc33a43cb,0xa29aa801912b9032,0x9b522a3c21ca4403,0xb0bbd2395a93b458, 
0x00439b20ab2133c4,0xb344b9521c2b812a,0x1bb2321350b39bcc,0x9c2c091b9a421a00, 
0xda2b09a32202ac42,0x3aac4d22b3d2a8a8,0xd34d09a93ac3b30b,0x2ac23dc9321823cd, 
0xe2cc231a131a0944,0x42ba0d449ccbb929,0xd31d2bbb2093a13b,0xbaa29ccc3230120c, 
};

static int bbox_head_multi_level_bbox_1_quant1_threshold[4 * 14] =
{ // torch.Size([4, 14])
-851, -522, -358, -234, -152, -70, 11, 94, 176, 258, 340, 464, 628, 957,
-658, -397, -267, -169, -104, -39, 25, 90, 155, 220, 285, 383, 513, 774,
-1601, -1066, -799, -599, -465, -332, -198, -65, 68, 201, 335, 535, 802, 1336,
-1666, -1121, -849, -644, -508, -372, -236, -99, 36, 172, 308, 512, 785, 1330,
};

static uint64_t bbox_head_multi_level_bbox_1_conv2_weight[4 * 9] =
{ // torch.Size([4, 3, 3, 1])
0xb, 0xc, 0xb, 0x3, 0xe, 0xb, 0x2, 0xd, 0xb, 
0x0, 0x3, 0xa, 0xd, 0xe, 0xc, 0xb, 0xb, 0xb, 
0x3, 0x4, 0x2, 0x3, 0x4, 0x3, 0x2, 0x4, 0x3, 
0x3, 0x4, 0x2, 0x4, 0x5, 0x3, 0x2, 0x3, 0x2, 
};

static int bbox_head_multi_level_bbox_1_quant2_threshold[4 * 14] =
{ // torch.Size([4, 14])
-1376, -754, -443, -209, -54, 101, 256, 412, 567, 723, 878, 1112, 1423, 2045,
-1254, -670, -378, -159, -13, 132, 279, 425, 571, 717, 863, 1082, 1374, 1958,
-1076, -734, -562, -434, -348, -262, -177, -91, -5, 79, 165, 293, 465, 807,
-1418, -1009, -805, -652, -550, -448, -346, -244, -142, -40, 62, 215, 419, 827,
};

static uint64_t bbox_head_multi_level_bbox_2_conv1_weight[4 * 1*4] =
{ // torch.Size([4, 1, 1, 64])
0x0033ab2dbcd05cab,0x2b543c9bcb9aecd3,0xc59495a54b4233b3,0x60b42042acc53db4, 
0x15bb034d582a33dc,0x140a12344543a33b,0x4111c324b4c52d35,0x25cd03bacc4c51a3, 
0x043aad4b31a3d3bd,0x44455442bc2363c3,0x4c44bd2d44b00a3a,0xdc5b034e33c49e25, 
0x3dbc35c4ab396b55,0xcc3c1bcab5240b2b,0xcbccc284cd048db2,0x4dd52ca4cc5bd49b, 
};

static int bbox_head_multi_level_bbox_2_quant1_threshold[4 * 14] =
{ // torch.Size([4, 14])
-1304, -821, -580, -399, -278, -157, -36, 83, 204, 325, 446, 627, 868, 1351,
-1105, -645, -415, -242, -127, -12, 102, 217, 331, 446, 561, 734, 964, 1424,
-1632, -1020, -713, -484, -331, -177, -24, 128, 281, 434, 587, 817, 1123, 1736,
-1626, -1071, -793, -585, -447, -308, -169, -30, 107, 246, 385, 593, 870, 1425,
};

static uint64_t bbox_head_multi_level_bbox_2_conv2_weight[4 * 9] =
{ // torch.Size([4, 3, 3, 1])
0xc, 0xd, 0xc, 0xc, 0xe, 0xd, 0xc, 0xd, 0xc, 
0x4, 0x4, 0x4, 0x5, 0x6, 0x6, 0x4, 0x4, 0x4, 
0xc, 0xc, 0xc, 0xc, 0xc, 0xc, 0xa, 0xc, 0xc, 
0x3, 0x4, 0x4, 0x4, 0x4, 0x4, 0x3, 0x4, 0x4, 
};

static int bbox_head_multi_level_bbox_2_quant2_threshold[4 * 14] =
{ // torch.Size([4, 14])
-1112, -535, -246, -30, 113, 258, 402, 546, 691, 835, 979, 1196, 1484, 2061,
-1136, -615, -354, -159, -28, 101, 231, 361, 492, 622, 752, 947, 1208, 1729,
-2060, -1402, -1073, -826, -661, -497, -332, -168, -3, 160, 325, 572, 901, 1559,
-2302, -1641, -1311, -1063, -898, -733, -568, -403, -238, -73, 92, 339, 670, 1330,
};

static uint64_t bbox_head_multi_level_obj_0_conv1_weight[1 * 1*4] =
{ // torch.Size([1, 1, 1, 64])
0x3beb44c12d1a2c33,0x5b31005ad5ddba3c,0xa13042b39da3c851,0x94d42cdb5b2dbb54, 
};

static int bbox_head_multi_level_obj_0_quant1_threshold[1 * 14] =
{ // torch.Size([1, 14])
-1898, -1152, -779, -499, -312, -126, 60, 247, 433, 620, 807, 1087, 1460, 2206,
};

static uint64_t bbox_head_multi_level_obj_0_conv2_weight[1 * 9] =
{ // torch.Size([1, 3, 3, 1])
0xa, 0xb, 0x8, 0xa, 0xe, 0xa, 0xa, 0xa, 0x9, 
};

static int bbox_head_multi_level_obj_0_quant2_threshold[1 * 14] =
{ // torch.Size([1, 14])
-2266, -1212, -684, -289, -26, 237, 501, 764, 1028, 1291, 1555, 1950, 2477, 3532,
};

static uint64_t bbox_head_multi_level_obj_1_conv1_weight[1 * 1*4] =
{ // torch.Size([1, 1, 1, 64])
0xb53b554535adc434,0xdecac30cd2bd5eed,0xbd334ec29d1e3193,0x514ebcb3beb5dca8, 
};

static int bbox_head_multi_level_obj_1_quant1_threshold[1 * 14] =
{ // torch.Size([1, 14])
-1903, -1253, -927, -683, -521, -358, -196, -33, 129, 291, 454, 698, 1023, 1674,
};

static uint64_t bbox_head_multi_level_obj_1_conv2_weight[1 * 9] =
{ // torch.Size([1, 3, 3, 1])
0x3, 0x3, 0x8, 0x1, 0x6, 0x0, 0x9, 0x9, 0xb, 
};

static int bbox_head_multi_level_obj_1_quant2_threshold[1 * 14] =
{ // torch.Size([1, 14])
-2912, -2005, -1552, -1212, -985, -758, -532, -305, -78, 147, 374, 714, 1167, 2074,
};

static uint64_t bbox_head_multi_level_obj_2_conv1_weight[1 * 1*4] =
{ // torch.Size([1, 1, 1, 64])
0x63454ca4cddd24d4,0xbbbc38bdd513934c,0xa43a5c43320adadc,0xb4246549cabbbb52, 
};

static int bbox_head_multi_level_obj_2_quant1_threshold[1 * 14] =
{ // torch.Size([1, 14])
-757, -485, -349, -248, -180, -112, -44, 23, 91, 159, 227, 328, 464, 736,
};

static uint64_t bbox_head_multi_level_obj_2_conv2_weight[1 * 9] =
{ // torch.Size([1, 3, 3, 1])
0x3, 0x4, 0x2, 0x3, 0x6, 0x3, 0x1, 0x2, 0x3, 
};

static int bbox_head_multi_level_obj_2_quant2_threshold[1 * 14] =
{ // torch.Size([1, 14])
-4661, -3114, -2341, -1761, -1374, -988, -601, -214, 171, 558, 945, 1525, 2298, 3845,
};

static uint64_t bbox_head_multi_level_kps_0_conv1_weight[10 * 1*4] =
{ // torch.Size([10, 1, 1, 64])
0xc30c3a39124d3a10,0x130aca2d1283b9d3,0x3d43a342b22809b0,0x438cca248a5ac932, 
0xbcbb392a30930b33,0x223b4a2a1109be1a,0x1a4ca322523d0cba,0x952448330b0ab221, 
0x243b310c305c4131,0xbb22512dbba82153,0x3db00b9ba020b012,0x2aaca295835ab115, 
0x3343b1b0b82a24bb,0xaab3b280992135b2,0xb2c32b8adbc50433,0x2dacc1ab138a30a9, 
0xb109318c205d3830,0xa320488e9902a8d3,0x0d2aac34a3098891,0x41bcb105a36ab225, 
0xaa2b322c42899b34,0x8b3a20210b8aae3a,0xaa4c03b1533dbca9,0xb52440b402b9a901, 
0x3b13b2a3abc4c0a2,0x989242a5abab325a,0xb5c12aca8aa1903a,0xc92442ac02da39ba, 
0x3238328d421c3a34,0xac3202210a299daa,0xb93b2ab0434dac28,0xc42450b393baaa9b, 
0x8c91b924b2d2cab3,0x33bbc925328119ca,0xa52213b309b038aa,0xa3242a3d9bd3302d, 
0xbab0ba95caa4a2bc,0x04ba1baa82921592,0x29b1b131cbc53492,0x4cabd83b1b323212, 
};

static int bbox_head_multi_level_kps_0_quant1_threshold[10 * 14] =
{ // torch.Size([10, 14])
-1637, -1044, -748, -526, -378, -230, -81, 66, 214, 362, 510, 732, 1028, 1621,
-1597, -1070, -806, -608, -476, -344, -212, -80, 51, 183, 315, 513, 777, 1305,
-1512, -922, -628, -406, -259, -112, 35, 182, 330, 477, 624, 845, 1140, 1730,
-1405, -827, -539, -322, -177, -33, 110, 255, 399, 544, 688, 905, 1194, 1771,
-1632, -1040, -744, -522, -374, -226, -78, 70, 218, 366, 514, 736, 1032, 1624,
-1864, -1256, -951, -723, -571, -419, -267, -115, 37, 189, 341, 569, 873, 1482,
-1532, -986, -713, -508, -372, -235, -99, 37, 173, 310, 446, 651, 924, 1470,
-1844, -1223, -913, -680, -525, -370, -215, -60, 94, 249, 405, 637, 947, 1568,
-1813, -1157, -829, -583, -419, -255, -91, 72, 236, 400, 564, 810, 1138, 1794,
-1687, -1024, -693, -444, -278, -113, 52, 218, 383, 549, 715, 963, 1295, 1958,
};

static uint64_t bbox_head_multi_level_kps_0_conv2_weight[10 * 9] =
{ // torch.Size([10, 3, 3, 1])
0x9, 0xe, 0xa, 0x9, 0xd, 0xa, 0x8, 0xb, 0x9, 
0xc, 0xe, 0xc, 0xa, 0xa, 0xa, 0x8, 0x0, 0x1, 
0xa, 0xe, 0x9, 0x9, 0xd, 0xa, 0xa, 0xc, 0xa, 
0x4, 0x6, 0x4, 0x2, 0x2, 0x2, 0x1, 0x8, 0x0, 
0xa, 0xd, 0xa, 0xa, 0xd, 0xa, 0xa, 0xc, 0xa, 
0xc, 0xe, 0xc, 0xa, 0xa, 0xa, 0x9, 0x2, 0x0, 
0x2, 0x5, 0x2, 0x0, 0x5, 0x2, 0x2, 0x4, 0x2, 
0xc, 0xe, 0xc, 0xa, 0xa, 0xa, 0x8, 0x2, 0x0, 
0x2, 0x5, 0x1, 0x2, 0x5, 0x2, 0x2, 0x4, 0x2, 
0x4, 0x6, 0x4, 0x2, 0x2, 0x2, 0x0, 0xa, 0x0, 
};

static int bbox_head_multi_level_kps_0_quant2_threshold[10 * 14] =
{ // torch.Size([10, 14])
-1953, -1122, -706, -395, -187, 19, 227, 435, 643, 850, 1058, 1369, 1785, 2616,
-2169, -1277, -832, -497, -275, -52, 170, 393, 616, 839, 1061, 1396, 1841, 2733,
-3191, -2157, -1640, -1252, -993, -735, -476, -218, 40, 298, 557, 944, 1461, 2495,
-2300, -1355, -883, -529, -293, -57, 178, 415, 651, 887, 1123, 1477, 1949, 2894,
-2096, -1321, -934, -644, -450, -256, -63, 130, 323, 517, 711, 1001, 1388, 2163,
-2654, -1730, -1268, -922, -691, -460, -229, 1, 232, 463, 694, 1041, 1503, 2427,
-1906, -1121, -728, -433, -237, -40, 155, 351, 548, 744, 941, 1235, 1628, 2414,
-2817, -1950, -1517, -1192, -975, -758, -542, -325, -108, 107, 324, 649, 1082, 1949,
-2294, -1533, -1153, -868, -678, -488, -298, -108, 82, 272, 462, 747, 1127, 1887,
-2835, -1965, -1530, -1203, -986, -768, -550, -333, -115, 101, 319, 645, 1081, 1951,
};

static uint64_t bbox_head_multi_level_kps_1_conv1_weight[10 * 1*4] =
{ // torch.Size([10, 1, 1, 64])
0x1b193a5b5bc28190,0xab22b2bb281119a8,0x2998b895a841bd11,0xa12322a18b922ba1, 
0x109ba09a12a3a80c,0x199cd2bb0b132011,0x13a0c82a312a2144,0x05229212a9daa918, 
0x22925149da5288cb,0x0981b09aab2a9121,0x0ba2aa3b31ba4393,0x9212c13202aba248, 
0x2a2a89b212a0a199,0x1a9cd1bb1b1228a1,0x2290d82b20302045,0x9583a292aae88120, 
0x010251c3e3628ab1,0x21a02a21aa9021a0,0xa8b2999c11ba3502,0x082b2228c2aba430, 
0x083ca2b123b28a32,0xa8bcc82a8ba22229,0x1390d00c31292353,0x950a399191d89228, 
0x0222b1d4d44b32a3,0x32a83a0491022029,0xa221309da1b2359a,0x0aaa9a1812109429, 
0xb8cc332a23aabb48,0x20cccb21aab222a1,0x0399b21c102a0354,0xa4aa29a822c0a189, 
0xa0bbd2ca5ad0ba48,0x230a301002a9a0a0,0x921a33158832bcab,0x3a1a4099a9233bc8, 
0xbabc330023aaba42,0x1accca22aab321b1,0x031ac19da0398354,0xb4aa19a822c2a209, 
};

static int bbox_head_multi_level_kps_1_quant1_threshold[10 * 14] =
{ // torch.Size([10, 14])
-1210, -783, -570, -410, -304, -197, -91, 15, 121, 228, 335, 494, 708, 1134,
-1144, -746, -547, -398, -299, -200, -100, -1, 97, 197, 296, 445, 644, 1041,
-1270, -812, -583, -412, -297, -183, -68, 45, 160, 274, 389, 561, 790, 1248,
-1419, -933, -690, -508, -386, -264, -143, -21, 99, 221, 342, 525, 768, 1254,
-1381, -882, -632, -445, -321, -196, -71, 53, 178, 302, 427, 614, 864, 1363,
-1108, -711, -512, -363, -264, -164, -65, 34, 133, 232, 332, 481, 679, 1077,
-1031, -628, -426, -274, -173, -72, 28, 129, 230, 331, 432, 583, 785, 1189,
-1236, -810, -597, -437, -330, -223, -117, -10, 95, 202, 309, 469, 682, 1108,
-1386, -868, -609, -415, -285, -156, -26, 103, 232, 362, 491, 686, 945, 1463,
-1291, -847, -625, -459, -348, -237, -126, -16, 94, 205, 316, 482, 704, 1148,
};

static uint64_t bbox_head_multi_level_kps_1_conv2_weight[10 * 9] =
{ // torch.Size([10, 3, 3, 1])
0x3, 0x5, 0x4, 0x1, 0x5, 0x4, 0x0, 0x5, 0x4, 
0x3, 0x0, 0x2, 0x5, 0x6, 0x4, 0x4, 0x4, 0x4, 
0xb, 0xd, 0xc, 0xb, 0xe, 0xb, 0xa, 0xd, 0xb, 
0x2, 0x0, 0x3, 0x5, 0x6, 0x5, 0x4, 0x4, 0x5, 
0xc, 0xd, 0xb, 0xb, 0xe, 0xc, 0xb, 0xd, 0xc, 
0x2, 0x1, 0x3, 0x5, 0x6, 0x5, 0x4, 0x4, 0x4, 
0x9, 0xc, 0xc, 0x8, 0xd, 0xc, 0xa, 0xe, 0xc, 
0x3, 0x0, 0x3, 0x5, 0x6, 0x5, 0x3, 0x4, 0x5, 
0x3, 0x5, 0x2, 0x3, 0x6, 0x4, 0x3, 0x6, 0x3, 
0x3, 0x0, 0x3, 0x5, 0x6, 0x5, 0x3, 0x4, 0x4, 
};

static int bbox_head_multi_level_kps_1_quant2_threshold[10 * 14] =
{ // torch.Size([10, 14])
-2510, -1481, -966, -581, -323, -66, 190, 448, 705, 962, 1219, 1605, 2120, 3149,
-3335, -1976, -1297, -787, -447, -108, 231, 571, 911, 1250, 1590, 2100, 2779, 4138,
-3472, -2323, -1749, -1318, -1031, -744, -457, -170, 116, 403, 691, 1121, 1696, 2844,
-3784, -2240, -1468, -889, -503, -117, 268, 654, 1040, 1426, 1812, 2391, 3164, 4708,
-3335, -2103, -1487, -1025, -717, -409, -101, 206, 514, 822, 1130, 1592, 2208, 3440,
-4279, -2747, -1981, -1406, -1023, -640, -257, 125, 508, 891, 1274, 1848, 2614, 4146,
-3480, -2081, -1382, -857, -507, -158, 191, 541, 890, 1240, 1590, 2114, 2813, 4212,
-3875, -2635, -2015, -1550, -1240, -930, -620, -310, 0, 309, 619, 1084, 1704, 2944,
-4126, -2731, -2034, -1512, -1163, -814, -466, -117, 230, 579, 927, 1450, 2147, 3541,
-3813, -2587, -1974, -1514, -1207, -901, -594, -288, 18, 324, 631, 1091, 1704, 2930,
};

static uint64_t bbox_head_multi_level_kps_2_conv1_weight[10 * 1*4] =
{ // torch.Size([10, 1, 1, 64])
0x02bb5c838212a18d,0x940a92233b3b3298,0x43ab9d3d22c92a29,0x2b2c803c153bab00, 
0x93b4bb2cb08883cb,0xab128023ab51038a,0x3002b10a23b50a33,0xbcab92aeba3b3b94, 
0x2043c32ba98ab3ad,0x204333330b059321,0xa814a3284b612033,0xab1981acacd32ca4, 
0x0ba090a100382a43,0x2a0938ab23d21a0a,0xc02039a9ab4c02b1,0x04351ba63393922b, 
0x91cb5ca081a3421b,0x899aa19a392d00b9,0x249b8c1cb3e9a9b2,0x48000932055a9b22, 
0x913a1a289899c23c,0x232022223adb0338,0xa3124b2c8b5da323,0x31291aa544b3b189, 
0x80c34d1ba321128d,0xa01922233ba2312b,0x221b8d2d22c21a33,0x9b30aaab255b0a23, 
0x803a8b139898e42d,0x1390a3443cac94a3,0x0292393b2a3db43a,0x023b103443c3b11a, 
0xaac22cbba3323b05,0x9cbb8bbb94cc3bbb,0x880b2babd4d0b9b2,0x120308b4256b042a, 
0x000a34b330115c85,0x8218abbcb4430c3a,0x299bc0b493c52bba,0x09ba911ccc3b1990, 
};

static int bbox_head_multi_level_kps_2_quant1_threshold[10 * 14] =
{ // torch.Size([10, 14])
-969, -632, -464, -337, -253, -169, -85, 0, 83, 167, 251, 378, 546, 883,
-1039, -669, -484, -345, -253, -160, -68, 24, 116, 209, 301, 440, 625, 994,
-978, -608, -424, -285, -192, -100, -7, 84, 176, 269, 361, 500, 685, 1055,
-857, -532, -369, -247, -166, -85, -3, 77, 158, 240, 321, 443, 606, 931,
-838, -539, -390, -279, -204, -129, -55, 19, 93, 168, 242, 354, 503, 801,
-929, -584, -411, -281, -195, -109, -22, 63, 149, 236, 322, 452, 624, 970,
-1019, -663, -485, -352, -263, -174, -85, 2, 91, 180, 269, 402, 580, 936,
-968, -612, -434, -301, -212, -123, -34, 54, 143, 232, 321, 454, 632, 988,
-1130, -724, -521, -368, -267, -165, -63, 37, 139, 240, 342, 494, 698, 1104,
-941, -598, -426, -298, -212, -126, -40, 45, 130, 216, 302, 431, 602, 946,
};

static uint64_t bbox_head_multi_level_kps_2_conv2_weight[10 * 9] =
{ // torch.Size([10, 3, 3, 1])
0x5, 0x6, 0x5, 0x4, 0x6, 0x5, 0x4, 0x5, 0x5, 
0x4, 0x5, 0x4, 0x6, 0x5, 0x5, 0x5, 0x4, 0x4, 
0xc, 0xe, 0xc, 0xd, 0xd, 0xc, 0xc, 0xd, 0xc, 
0xd, 0xd, 0xd, 0xd, 0xd, 0xd, 0xc, 0xc, 0xd, 
0x5, 0x5, 0x4, 0x4, 0x5, 0x4, 0x4, 0x5, 0x5, 
0xc, 0xd, 0xc, 0xe, 0xe, 0xe, 0xc, 0xc, 0xc, 
0x2, 0x5, 0x4, 0x4, 0x5, 0x5, 0x4, 0x6, 0x5, 
0xc, 0xc, 0xc, 0xd, 0xe, 0xd, 0xd, 0xe, 0xd, 
0x4, 0x5, 0x4, 0x4, 0x5, 0x4, 0x5, 0x6, 0x5, 
0x4, 0x4, 0x4, 0x5, 0x5, 0x5, 0x4, 0x5, 0x5, 
};

static int bbox_head_multi_level_kps_2_quant2_threshold[10 * 14] =
{ // torch.Size([10, 14])
-4862, -2862, -1862, -1112, -613, -113, 386, 886, 1386, 1886, 2386, 3136, 4136, 6135,
-4443, -2655, -1761, -1091, -644, -197, 249, 696, 1143, 1590, 2037, 2707, 3601, 5389,
-5189, -3456, -2589, -1939, -1505, -1072, -638, -205, 227, 661, 1094, 1745, 2611, 4345,
-4136, -2472, -1640, -1016, -600, -183, 232, 648, 1064, 1480, 1896, 2520, 3352, 5016,
-4728, -2979, -2105, -1449, -1012, -575, -137, 299, 736, 1173, 1611, 2266, 3141, 4890,
-6803, -4397, -3194, -2292, -1690, -1089, -488, 113, 714, 1316, 1917, 2819, 4022, 6428,
-4352, -2594, -1715, -1056, -617, -177, 261, 700, 1140, 1579, 2019, 2678, 3557, 5314,
-5179, -3508, -2672, -2045, -1627, -1210, -792, -374, 43, 461, 879, 1505, 2341, 4012,
-5421, -3591, -2676, -1990, -1532, -1075, -617, -160, 297, 754, 1212, 1898, 2813, 4643,
-4675, -3160, -2403, -1834, -1456, -1077, -698, -319, 59, 437, 816, 1384, 2142, 3657,
};
