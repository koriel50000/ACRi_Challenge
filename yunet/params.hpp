static uint64_t backbone_model0_conv1_weight[16 * 9] =
{ // torch.Size([16, 3, 3, 3])
0x15d, 0xc6d, 0x05e, 0x06d, 0xd6d, 0xd6d, 0xc5e, 0xd6d, 0xc6a, 
0x55b, 0xc5c, 0x49d, 0xd3c, 0xe3b, 0xa53, 0xe44, 0xe33, 0xc44, 
0xd34, 0xd45, 0xd25, 0xd45, 0xe55, 0xe55, 0xc45, 0xd55, 0xd45, 
0x31b, 0x443, 0xa43, 0x54a, 0xdcc, 0xfdd, 0x542, 0x343, 0xc09, 
0x243, 0x9cb, 0xded, 0x555, 0x441, 0xddd, 0x454, 0x244, 0xacb, 
0x4c4, 0x4db, 0x4c1, 0x5c2, 0x5c3, 0x5cb, 0x5c0, 0x4c3, 0x4c3, 
0x344, 0x345, 0x454, 0xc3b, 0xc1b, 0xc3a, 0xcbb, 0xcbc, 0xd9b, 
0x2c5, 0xae4, 0x3eb, 0x5d5, 0x1e4, 0xce1, 0xbd5, 0x5d5, 0x5d5, 
0xc33, 0x2b4, 0x4b1, 0x410, 0x4cc, 0x4dd, 0x4bb, 0x5dd, 0x4de, 
0x3c9, 0x544, 0x544, 0x334, 0x0b3, 0x334, 0xa33, 0xeed, 0xedd, 
0xccc, 0xeed, 0xddd, 0x440, 0xc9b, 0x933, 0x544, 0x555, 0x554, 
0x512, 0x555, 0x554, 0xb90, 0x144, 0xb43, 0x332, 0xedd, 0xdcd, 
0xddd, 0xbdc, 0x454, 0xdde, 0xccc, 0x555, 0x393, 0x435, 0x454, 
0x344, 0x334, 0x434, 0xdee, 0xcdc, 0x454, 0xcdd, 0xbac, 0x534, 
0x454, 0x556, 0x456, 0x42a, 0x14c, 0x422, 0xced, 0xdfd, 0x9dd, 
0x455, 0x555, 0x444, 0x555, 0xa33, 0xbdd, 0x013, 0xddd, 0xeee, 
};

static int backbone_model0_relu1_threshold[16 * 7] =
{ // torch.Size([16, 7])
55, 288, 522, 755, 1105, 1571, 2504,
-132, 87, 308, 528, 858, 1299, 2180,
7, 444, 881, 1319, 1975, 2849, 4599,
-150, 49, 248, 448, 747, 1146, 1945,
-67, 105, 278, 450, 709, 1055, 1746,
358, 722, 1086, 1450, 1996, 2724, 4180,
124, 300, 476, 651, 915, 1267, 1970,
-109, 160, 430, 700, 1106, 1646, 2726,
-149, 190, 529, 869, 1379, 2058, 3416,
-122, 87, 296, 505, 819, 1238, 2075,
-94, 94, 283, 472, 755, 1133, 1889,
79, 380, 680, 980, 1430, 2030, 3231,
-80, 103, 287, 471, 747, 1115, 1851,
-103, 69, 243, 416, 676, 1023, 1717,
-60, 107, 276, 445, 698, 1035, 1710,
-94, 76, 247, 418, 675, 1017, 1702,
};

static uint64_t backbone_model0_conv2_conv1_weight[16 * 1] =
{ // torch.Size([16, 1, 1, 16])
0xb2c30ad12562e2d4, 
0x9b4bbb97416b0ed0, 
0xc4544d43cccdd040, 
0xcd95c5dc55443344, 
0xbccb10cdf1ca4cc9, 
0xc9a9b9c6c45bddd5, 
0x1410bacd535bddde, 
0x44cc4c54cdb450b3, 
0xccdac4da533543b9, 
0x22c13acc3363a666, 
0x54dd3d549bc4401b, 
0xdcdcd5c035254bcb, 
0xc356c3ccc11cd232, 
0xc5565c5ac1acc31b, 
0x54dd5b42a44553c1, 
0x663d5c5ad04cc4b3, 
};

static int backbone_model0_conv2_quant1_threshold[16 * 14] =
{ // torch.Size([16, 14])
-645, -420, -308, -224, -168, -112, -56, 0, 56, 112, 168, 252, 364, 588,
-685, -435, -309, -216, -153, -90, -28, 34, 96, 159, 221, 315, 440, 691,
-271, -172, -123, -86, -61, -37, -12, 12, 36, 61, 86, 123, 172, 271,
-495, -318, -230, -163, -119, -75, -30, 13, 57, 101, 146, 212, 301, 478,
-690, -470, -360, -278, -223, -168, -113, -58, -4, 50, 105, 188, 297, 517,
-541, -349, -253, -181, -133, -85, -37, 10, 59, 107, 155, 227, 323, 515,
-562, -370, -274, -202, -154, -106, -59, -11, 36, 84, 132, 204, 300, 492,
-395, -245, -170, -113, -76, -38, -1, 36, 73, 111, 148, 205, 280, 430,
-522, -341, -251, -183, -138, -93, -48, -3, 41, 86, 132, 199, 290, 470,
-503, -302, -201, -126, -76, -25, 24, 74, 124, 175, 225, 300, 401, 602,
-512, -320, -224, -151, -103, -55, -7, 40, 88, 137, 185, 257, 353, 546,
-530, -342, -249, -179, -132, -85, -38, 8, 54, 101, 148, 218, 312, 499,
-485, -310, -223, -157, -113, -70, -26, 17, 60, 104, 148, 213, 301, 476,
-552, -344, -240, -162, -110, -58, -6, 45, 97, 149, 201, 279, 383, 591,
-337, -208, -143, -95, -62, -30, 1, 34, 66, 99, 131, 179, 244, 374,
-616, -385, -270, -184, -127, -69, -12, 45, 102, 160, 217, 304, 419, 649,
};

static uint64_t backbone_model0_conv2_conv2_weight[16 * 9] =
{ // torch.Size([16, 3, 3, 1])
0x4, 0x3, 0x5, 0x3, 0xc, 0xd, 0x4, 0xd, 0xf, 
0x5, 0x5, 0x5, 0x5, 0xd, 0xd, 0x5, 0xd, 0xf, 
0xb, 0x6, 0x9, 0xd, 0x4, 0x6, 0xd, 0xd, 0x6, 
0x4, 0x5, 0x4, 0xc, 0xf, 0xf, 0x9, 0x1, 0x5, 
0x4, 0xa, 0x4, 0x3, 0xd, 0xd, 0xa, 0xd, 0xe, 
0xc, 0xd, 0xd, 0xc, 0x4, 0x5, 0x1, 0x6, 0x6, 
0xb, 0xc, 0xb, 0xb, 0x5, 0x5, 0x0, 0x6, 0x6, 
0x9, 0x3, 0x5, 0x4, 0x6, 0xe, 0x3, 0xe, 0xf, 
0x4, 0x5, 0x3, 0xc, 0x3, 0x6, 0xc, 0xf, 0xf, 
0x4, 0x2, 0x9, 0x4, 0xd, 0xe, 0x4, 0xe, 0xf, 
0xc, 0xd, 0xc, 0xc, 0xd, 0x5, 0xc, 0x6, 0x7, 
0x3, 0xc, 0xa, 0x5, 0x5, 0xe, 0x1, 0x7, 0x6, 
0x3, 0xc, 0xc, 0x5, 0xe, 0xc, 0x6, 0xe, 0x3, 
0x3, 0xd, 0xb, 0x4, 0x9, 0xf, 0x4, 0x5, 0xe, 
0x4, 0x0, 0xd, 0x5, 0xd, 0xd, 0x5, 0xf, 0x4, 
0x4, 0x4, 0x0, 0xd, 0xf, 0xe, 0xc, 0xb, 0xb, 
};

static int backbone_model0_conv2_relu2_threshold[16 * 7] =
{ // torch.Size([16, 7])
-21, 62, 147, 231, 357, 525, 862,
-8, 51, 111, 171, 261, 381, 621,
40, 150, 260, 369, 534, 753, 1191,
24, 136, 248, 360, 528, 752, 1200,
0, 54, 108, 162, 244, 353, 570,
-3, 53, 110, 167, 252, 366, 594,
-13, 60, 134, 208, 319, 467, 763,
47, 138, 229, 320, 457, 639, 1003,
45, 155, 264, 374, 539, 759, 1199,
33, 149, 264, 379, 553, 783, 1245,
35, 114, 193, 271, 389, 547, 861,
44, 149, 255, 361, 520, 731, 1154,
49, 121, 193, 265, 372, 516, 803,
28, 98, 167, 236, 340, 479, 756,
38, 139, 240, 342, 493, 696, 1100,
-11, 98, 207, 317, 482, 702, 1141,
};

static uint64_t backbone_model1_conv1_conv1_weight[16 * 1] =
{ // torch.Size([16, 1, 1, 16])
0xce5545abd2bb4cb4, 
0xcb02aa6dc24322eb, 
0x7bbc44b5c04baa4b, 
0xd954bd1de334f51b, 
0x0babccb0b55d2d3e, 
0xd2d34c4adac346c5, 
0xba732d06d443a34a, 
0x34b13453265a4aec, 
0x23431ccba3eda353, 
0x9a3ab0bc05599a4e, 
0xcac2b4c34cd44b96, 
0x35a3b42f6031cdab, 
0xc4c3f63b444a0d42, 
0xb667c4ac4aa1b5ba, 
0x192a24b435d7a16c, 
0xab3b997c17d5b92c, 
};

static int backbone_model1_conv1_quant1_threshold[16 * 14] =
{ // torch.Size([16, 14])
-478, -307, -221, -157, -114, -72, -29, 13, 56, 98, 141, 205, 291, 462,
-636, -414, -303, -220, -164, -109, -53, 1, 57, 112, 168, 251, 362, 584,
-542, -329, -223, -143, -90, -37, 15, 68, 121, 175, 228, 307, 414, 626,
-918, -604, -446, -328, -250, -171, -92, -14, 64, 143, 221, 340, 497, 812,
-606, -396, -291, -212, -159, -107, -54, -2, 50, 102, 155, 234, 339, 549,
-452, -285, -202, -140, -98, -57, -15, 25, 67, 109, 150, 212, 296, 462,
-675, -411, -279, -180, -114, -48, 17, 83, 150, 216, 282, 381, 513, 777,
-601, -368, -252, -165, -106, -48, 9, 67, 125, 183, 242, 329, 445, 678,
-582, -378, -276, -199, -148, -97, -46, 5, 56, 107, 158, 234, 337, 541,
-559, -359, -259, -184, -134, -84, -34, 15, 65, 115, 165, 240, 340, 540,
-563, -351, -245, -165, -112, -59, -5, 47, 100, 153, 206, 286, 392, 605,
-531, -340, -244, -173, -125, -77, -30, 17, 65, 112, 160, 232, 327, 518,
-566, -363, -261, -185, -134, -83, -32, 18, 68, 119, 170, 246, 348, 551,
-765, -467, -318, -206, -131, -57, 17, 91, 166, 240, 315, 427, 576, 874,
-567, -336, -220, -134, -76, -18, 39, 97, 154, 212, 270, 357, 472, 704,
-719, -440, -300, -195, -125, -55, 13, 83, 153, 223, 293, 398, 537, 817,
};

static uint64_t backbone_model1_conv1_conv2_weight[16 * 9] =
{ // torch.Size([16, 3, 3, 1])
0xb, 0x3, 0xb, 0x4, 0xe, 0xb, 0xc, 0xe, 0x5, 
0xc, 0x3, 0x2, 0x0, 0xf, 0xa, 0x1, 0xc, 0x4, 
0x2, 0x1, 0x2, 0x3, 0x3, 0xa, 0x4, 0xd, 0xf, 
0x0, 0xc, 0x1, 0x2, 0xd, 0x2, 0x3, 0xf, 0xd, 
0xc, 0x1, 0x4, 0xd, 0x4, 0x6, 0xd, 0xb, 0x2, 
0x3, 0x9, 0x3, 0x4, 0x1, 0xb, 0xb, 0x7, 0x0, 
0x0, 0x9, 0xb, 0xc, 0x4, 0x1, 0xa, 0x3, 0x7, 
0x4, 0x3, 0xc, 0xc, 0x7, 0xb, 0xb, 0x0, 0xb, 
0x4, 0x5, 0x5, 0x4, 0xa, 0xb, 0xb, 0xd, 0xd, 
0x4, 0x6, 0x4, 0x4, 0xc, 0x1, 0xc, 0xd, 0xc, 
0x1, 0x2, 0x3, 0xb, 0x6, 0x4, 0x0, 0xc, 0xd, 
0x3, 0x9, 0x2, 0xc, 0x6, 0x6, 0xb, 0x4, 0x1, 
0xb, 0x1, 0xb, 0x3, 0xd, 0xf, 0xb, 0xb, 0xa, 
0x0, 0x9, 0xa, 0x9, 0x4, 0x7, 0xb, 0x1, 0x4, 
0xa, 0xa, 0xb, 0xb, 0x5, 0xa, 0xb, 0x6, 0x4, 
0x3, 0x3, 0x3, 0x0, 0xc, 0x3, 0x3, 0xf, 0xc, 
};

static int backbone_model1_conv1_relu2_threshold[16 * 7] =
{ // torch.Size([16, 7])
-22, 47, 116, 185, 290, 428, 706,
-23, 68, 160, 253, 391, 576, 945,
-25, 54, 134, 214, 334, 494, 814,
-16, 67, 151, 235, 362, 530, 866,
-5, 44, 95, 145, 221, 322, 525,
-30, 50, 131, 211, 332, 493, 815,
-8, 63, 134, 205, 312, 454, 739,
-14, 52, 119, 186, 286, 420, 688,
21, 43, 65, 87, 120, 165, 254,
2, 38, 75, 111, 166, 240, 386,
1, 33, 64, 96, 143, 206, 332,
-35, 39, 114, 189, 301, 451, 751,
-38, 56, 151, 245, 387, 576, 954,
-9, 70, 150, 231, 351, 511, 832,
-9, 39, 88, 137, 211, 309, 505,
-19, 60, 141, 222, 343, 504, 828,
};

static uint64_t backbone_model1_conv2_conv1_weight[64 * 1] =
{ // torch.Size([64, 1, 1, 16])
0x303236a3dcac3d93, 
0xccc1cc944a239cec, 
0x10f2c1cc4cc43343, 
0xab5d44cdcc30dcca, 
0x1b9d54ab9eec5abc, 
0x0b40a442bbdcde24, 
0x251142a45b2111e9, 
0x1329035a143b6dbb, 
0x56443d42a5314c5b, 
0xd0c5c4ad4d4d5cdc, 
0x6d9aa2aae223bcbb, 
0xa045c4c4c642d554, 
0x414b24bcecaa0369, 
0x544ace594451252d, 
0x30a66543c49c5c53, 
0x3254522199edbd13, 
0x6d42a23243b3cac9, 
0xb42d51355cdc54b4, 
0xcb0254d5c3a42eb5, 
0x925d4dc302cc1335, 
0xd55acac45c412ad9, 
0xce445ddd4b40a5d2, 
0x444226c4ec43535c, 
0xdc9bbd4c6445c3c4, 
0xd1a45acc43b4fcc3, 
0xccc541d0c4eddb4c, 
0xc2499b5c75ab33c0, 
0xcc3dc565a99d444d, 
0xccd1edba455ac5cd, 
0x4025b334012e432e, 
0x42503ab4b466a247, 
0x64dc50c4da91e542, 
0x327c54cbcbb0c334, 
0xa9a1b03ca44b23de, 
0xbad954db1ec3dbcc, 
0x44ec4a53d42dccc2, 
0x432d325b3c563945, 
0xa2adec9a9b2c32cb, 
0xdc5443cc4a4dbbcd, 
0x566bbc4145554b5c, 
0x20cd405c4303443c, 
0xbc0ceb3abbcbaf39, 
0x3da5d05235a46d42, 
0x41c4cc3dc355f3c3, 
0x65e3c3421ac44954, 
0x442c2034c33bf2bb, 
0x246d2e2c241cc9b4, 
0xdcb343dc44ecdeb5, 
0xddbaca4c66d33333, 
0xc605d4bcd44cccc4, 
0x3a556ce04b1c43b2, 
0x33999eb463bbc3e4, 
0x404e54043cd23643, 
0xdec333cb3c54bbd4, 
0xee44b54c54005e34, 
0xab3b333cbbdd132e, 
0xb130332532c46d55, 
0x9337ccccb61c1c33, 
0xabcdd365cc652c24, 
0x65425c5526dbd454, 
0x35b3b9454542d543, 
0x49e62bd545334b44, 
0x934dcd534d2e359d, 
0x13d35bc43de15c24, 
};

static int backbone_model1_conv2_quant1_threshold[64 * 14] =
{ // torch.Size([64, 14])
-663, -421, -300, -209, -149, -88, -27, 32, 93, 153, 214, 304, 426, 668,
-743, -494, -370, -277, -215, -153, -91, -29, 33, 95, 157, 250, 374, 623,
-1066, -692, -505, -364, -271, -177, -84, 9, 102, 196, 289, 430, 617, 991,
-586, -383, -281, -205, -155, -104, -53, -2, 47, 98, 149, 225, 326, 529,
-795, -525, -390, -289, -221, -154, -86, -19, 48, 115, 183, 284, 419, 689,
-616, -407, -302, -224, -172, -119, -67, -15, 36, 89, 141, 219, 324, 533,
-590, -372, -263, -181, -127, -72, -17, 36, 91, 145, 200, 281, 391, 609,
-641, -401, -282, -192, -132, -72, -13, 46, 106, 166, 226, 315, 435, 674,
-729, -444, -301, -194, -122, -51, 20, 91, 162, 234, 305, 412, 555, 841,
-945, -616, -451, -327, -245, -162, -80, 1, 84, 166, 248, 372, 537, 866,
-811, -522, -378, -270, -197, -125, -53, 18, 90, 163, 235, 343, 488, 776,
-642, -392, -267, -173, -110, -48, 14, 77, 139, 202, 265, 359, 484, 734,
-754, -476, -337, -233, -163, -94, -24, 44, 114, 183, 253, 357, 496, 774,
-1084, -696, -502, -356, -259, -162, -65, 31, 128, 225, 322, 468, 662, 1050,
-591, -351, -232, -142, -82, -22, 37, 97, 157, 217, 277, 367, 487, 726,
-687, -444, -322, -231, -170, -109, -48, 12, 73, 134, 195, 286, 408, 651,
-571, -359, -253, -173, -120, -67, -13, 39, 92, 145, 198, 278, 384, 597,
-630, -398, -283, -196, -138, -80, -23, 34, 92, 150, 208, 294, 410, 641,
-641, -408, -292, -205, -147, -88, -30, 27, 85, 143, 201, 289, 405, 637,
-547, -346, -245, -170, -119, -69, -19, 31, 81, 131, 182, 257, 358, 559,
-747, -479, -345, -245, -178, -111, -44, 22, 89, 156, 223, 323, 457, 725,
-736, -467, -333, -232, -165, -97, -30, 36, 103, 170, 237, 338, 472, 741,
-848, -524, -362, -241, -160, -79, 1, 82, 163, 243, 324, 446, 607, 931,
-887, -564, -402, -281, -200, -119, -38, 42, 123, 204, 284, 406, 568, 891,
-831, -534, -385, -273, -199, -124, -50, 24, 98, 173, 247, 359, 508, 805,
-801, -523, -384, -280, -211, -141, -72, -2, 66, 136, 205, 310, 449, 727,
-678, -423, -295, -199, -136, -72, -8, 55, 119, 183, 247, 342, 470, 725,
-638, -409, -295, -209, -152, -95, -38, 19, 76, 133, 190, 276, 390, 619,
-756, -492, -360, -261, -195, -129, -63, 2, 68, 134, 200, 299, 431, 696,
-772, -499, -363, -261, -193, -125, -57, 10, 78, 146, 214, 316, 452, 724,
-622, -363, -233, -136, -71, -6, 58, 123, 188, 252, 317, 415, 544, 804,
-722, -447, -309, -205, -136, -67, 1, 70, 139, 208, 276, 380, 518, 794,
-733, -455, -315, -211, -141, -72, -2, 67, 136, 206, 276, 380, 520, 798,
-615, -401, -295, -214, -161, -108, -54, -1, 51, 105, 158, 238, 345, 558,
-707, -462, -339, -247, -185, -124, -63, -1, 59, 120, 182, 274, 397, 642,
-698, -453, -330, -238, -176, -115, -53, 7, 68, 130, 191, 283, 406, 652,
-683, -413, -278, -177, -109, -42, 25, 92, 160, 227, 295, 396, 531, 801,
-527, -354, -267, -203, -159, -116, -73, -30, 12, 56, 99, 164, 250, 423,
-655, -425, -309, -222, -165, -107, -49, 8, 65, 123, 181, 267, 383, 614,
-827, -498, -334, -211, -129, -46, 35, 117, 199, 281, 363, 487, 651, 980,
-505, -316, -222, -151, -104, -56, -9, 37, 84, 132, 179, 250, 344, 533,
-793, -537, -409, -313, -249, -185, -121, -57, 7, 71, 135, 231, 359, 615,
-917, -574, -403, -274, -189, -103, -17, 67, 153, 239, 324, 453, 624, 967,
-830, -526, -374, -260, -183, -107, -31, 44, 120, 196, 272, 386, 539, 843,
-699, -430, -296, -195, -127, -60, 6, 74, 141, 208, 276, 376, 511, 780,
-1156, -748, -544, -391, -288, -186, -84, 17, 119, 221, 323, 476, 681, 1089,
-707, -454, -327, -232, -169, -105, -42, 20, 83, 147, 210, 305, 432, 685,
-810, -533, -395, -291, -222, -153, -84, -15, 53, 122, 191, 295, 433, 710,
-1120, -708, -502, -348, -245, -142, -38, 64, 167, 270, 373, 527, 733, 1145,
-795, -505, -360, -251, -178, -106, -33, 38, 111, 183, 256, 365, 510, 800,
-795, -496, -347, -235, -160, -85, -11, 63, 138, 212, 287, 399, 548, 847,
-917, -591, -429, -307, -226, -144, -63, 17, 98, 180, 261, 383, 546, 871,
-653, -407, -284, -192, -130, -69, -7, 53, 115, 176, 238, 330, 453, 699,
-922, -602, -442, -322, -242, -163, -83, -3, 76, 156, 236, 356, 516, 836,
-985, -627, -448, -314, -224, -134, -45, 44, 133, 223, 312, 447, 626, 984,
-596, -396, -296, -221, -171, -121, -71, -21, 28, 78, 128, 203, 304, 504,
-706, -442, -310, -211, -146, -80, -14, 51, 117, 183, 249, 348, 480, 743,
-896, -553, -381, -252, -167, -81, 4, 90, 175, 261, 347, 475, 647, 990,
-901, -568, -401, -276, -192, -109, -26, 57, 140, 223, 307, 432, 598, 932,
-716, -432, -290, -184, -113, -42, 28, 99, 170, 241, 312, 419, 561, 845,
-524, -314, -208, -129, -77, -24, 27, 80, 132, 185, 238, 317, 422, 632,
-625, -380, -258, -167, -106, -45, 15, 76, 137, 198, 259, 351, 473, 717,
-727, -471, -343, -248, -184, -120, -56, 7, 71, 135, 198, 294, 422, 677,
-639, -410, -295, -209, -152, -95, -37, 19, 76, 133, 191, 277, 391, 620,
};

static uint64_t backbone_model1_conv2_conv2_weight[64 * 9] =
{ // torch.Size([64, 3, 3, 1])
0xc, 0xa, 0x4, 0xd, 0xd, 0x6, 0xc, 0x4, 0x4, 
0x6, 0x5, 0x5, 0x5, 0xb, 0x9, 0xd, 0xd, 0xd, 
0x4, 0xd, 0x9, 0x4, 0xd, 0x2, 0x9, 0xe, 0x3, 
0x5, 0xb, 0xd, 0x6, 0xb, 0xd, 0x5, 0x1, 0xa, 
0xd, 0x4, 0x4, 0x9, 0xe, 0x5, 0x4, 0x0, 0xd, 
0x5, 0x6, 0x5, 0xd, 0xe, 0xd, 0x4, 0x4, 0x3, 
0xd, 0xb, 0x5, 0xe, 0x2, 0x5, 0xd, 0x3, 0x5, 
0xc, 0x0, 0xd, 0xc, 0x3, 0x5, 0xb, 0x5, 0x6, 
0x4, 0x2, 0xc, 0x5, 0x6, 0xc, 0xc, 0xb, 0xc, 
0x3, 0xc, 0xb, 0x1, 0xc, 0xa, 0xd, 0xd, 0xc, 
0xd, 0xe, 0xe, 0xc, 0xd, 0xc, 0x5, 0x6, 0x5, 
0xd, 0xc, 0xa, 0xb, 0xe, 0x4, 0x1, 0xd, 0xa, 
0x0, 0x5, 0x6, 0x9, 0xc, 0x5, 0xd, 0xe, 0xd, 
0xc, 0xe, 0x1, 0xc, 0x3, 0xc, 0xa, 0x5, 0x2, 
0x3, 0x4, 0x2, 0x2, 0x4, 0x3, 0xc, 0xf, 0x9, 
0xa, 0xa, 0x1, 0xa, 0xc, 0xe, 0x2, 0x5, 0x5, 
0x5, 0x6, 0x5, 0x1, 0x3, 0x2, 0xd, 0xd, 0xc, 
0x3, 0x2, 0x3, 0x9, 0xb, 0xd, 0x4, 0xd, 0xe, 
0x9, 0xa, 0x3, 0xb, 0xa, 0x5, 0x4, 0x7, 0xc, 
0xd, 0xc, 0x3, 0xd, 0x5, 0xb, 0x2, 0x6, 0xd, 
0x5, 0x6, 0x3, 0x4, 0x5, 0x1, 0xd, 0xc, 0xd, 
0x4, 0xc, 0x5, 0x4, 0x6, 0x3, 0xc, 0x3, 0xd, 
0x3, 0x3, 0x9, 0xa, 0x5, 0xc, 0x9, 0x6, 0x9, 
0xb, 0x4, 0x6, 0xd, 0x4, 0x6, 0xe, 0xd, 0x9, 
0xa, 0x5, 0x4, 0x9, 0x7, 0x4, 0x3, 0xc, 0xd, 
0x3, 0xb, 0xa, 0x4, 0x6, 0x5, 0xc, 0xb, 0x5, 
0xe, 0xd, 0xc, 0xd, 0xd, 0xc, 0xb, 0x6, 0x6, 
0xb, 0xc, 0x1, 0xc, 0xc, 0x5, 0x5, 0x6, 0xa, 
0xc, 0x2, 0x0, 0xc, 0xc, 0x5, 0xa, 0x5, 0x6, 
0xc, 0xd, 0x2, 0xc, 0xe, 0x4, 0xa, 0xc, 0x4, 
0x3, 0xa, 0xc, 0x9, 0xc, 0xf, 0xb, 0x3, 0xc, 
0xd, 0xc, 0x6, 0xd, 0xc, 0x5, 0xd, 0xc, 0x5, 
0xa, 0xb, 0x3, 0xc, 0xb, 0x3, 0xe, 0xe, 0x4, 
0xb, 0xb, 0x5, 0xd, 0x6, 0x1, 0xb, 0x5, 0xd, 
0xa, 0xc, 0xb, 0x1, 0x4, 0xc, 0x4, 0x7, 0x5, 
0xd, 0xc, 0xc, 0xd, 0xb, 0x4, 0xb, 0x5, 0x5, 
0xd, 0x2, 0x4, 0xd, 0xd, 0x5, 0x4, 0xd, 0xb, 
0xd, 0xc, 0x2, 0x6, 0x6, 0x3, 0xc, 0xd, 0x0, 
0x4, 0xc, 0x4, 0x3, 0x5, 0x5, 0xd, 0xc, 0x5, 
0x5, 0x6, 0x1, 0x3, 0xc, 0x5, 0xd, 0xe, 0xb, 
0xd, 0xc, 0xd, 0x4, 0x2, 0xa, 0x5, 0x4, 0x3, 
0xa, 0xd, 0x2, 0x5, 0x6, 0x2, 0xc, 0xc, 0xb, 
0xd, 0xd, 0xc, 0x4, 0xc, 0xc, 0x6, 0x5, 0x0, 
0x4, 0xb, 0xd, 0x5, 0x5, 0xd, 0x5, 0x6, 0xd, 
0x4, 0x5, 0x3, 0x2, 0x2, 0xc, 0xc, 0xe, 0xd, 
0x4, 0xe, 0xe, 0x3, 0xc, 0xb, 0x4, 0x3, 0xd, 
0xb, 0xc, 0xb, 0xd, 0xd, 0xa, 0x9, 0xd, 0x4, 
0xa, 0x4, 0xb, 0xa, 0xc, 0xb, 0x5, 0x7, 0x4, 
0xb, 0x5, 0x5, 0x3, 0x4, 0x3, 0x3, 0x4, 0x5, 
0x3, 0x9, 0xc, 0x4, 0x9, 0xd, 0x4, 0xd, 0xe, 
0xc, 0xd, 0xb, 0xd, 0xd, 0xc, 0x5, 0x5, 0x0, 
0x4, 0x3, 0xd, 0x5, 0xc, 0xd, 0x6, 0xa, 0xd, 
0x4, 0xa, 0xc, 0x4, 0xc, 0xc, 0xd, 0xe, 0x4, 
0xd, 0xa, 0x4, 0xc, 0x6, 0x5, 0xe, 0x6, 0x6, 
0x3, 0x4, 0xa, 0xa, 0x6, 0x3, 0x9, 0x5, 0x3, 
0x4, 0x4, 0xc, 0xb, 0x6, 0xe, 0x3, 0x5, 0xd, 
0x4, 0xc, 0xe, 0x3, 0xb, 0xe, 0x4, 0x5, 0xc, 
0x4, 0xa, 0x3, 0xd, 0x4, 0x5, 0xf, 0xd, 0x5, 
0x4, 0x3, 0x1, 0x4, 0x4, 0xb, 0xc, 0x5, 0x6, 
0xc, 0x3, 0xc, 0x2, 0xc, 0xc, 0x2, 0xe, 0x1, 
0xd, 0xe, 0xc, 0x9, 0x4, 0x4, 0x2, 0x5, 0x5, 
0xb, 0xc, 0xb, 0x4, 0xc, 0xc, 0x4, 0x6, 0x4, 
0x3, 0x6, 0x4, 0x6, 0x9, 0xc, 0x3, 0xd, 0xa, 
0xb, 0xa, 0x9, 0x6, 0x6, 0xd, 0x9, 0xb, 0x3, 
};

static int backbone_model1_conv2_relu2_threshold[64 * 7] =
{ // torch.Size([64, 7])
13, 44, 76, 107, 153, 215, 340,
24, 69, 114, 159, 227, 317, 496,
7, 49, 92, 135, 199, 285, 457,
20, 60, 100, 140, 200, 280, 441,
15, 47, 79, 110, 158, 222, 349,
27, 81, 136, 191, 274, 384, 603,
20, 46, 72, 98, 138, 190, 295,
18, 66, 114, 162, 234, 330, 522,
19, 59, 99, 139, 199, 279, 438,
12, 45, 77, 110, 159, 225, 355,
29, 100, 171, 242, 349, 491, 775,
12, 61, 110, 159, 233, 331, 527,
23, 63, 104, 145, 206, 287, 450,
-8, 19, 47, 75, 117, 173, 285,
11, 73, 134, 196, 288, 411, 657,
8, 46, 84, 122, 178, 254, 406,
31, 68, 106, 144, 200, 276, 427,
9, 61, 113, 165, 243, 347, 555,
22, 79, 137, 194, 280, 395, 626,
23, 56, 90, 124, 174, 241, 375,
27, 61, 95, 129, 180, 247, 383,
6, 55, 105, 155, 229, 329, 527,
9, 50, 90, 131, 191, 272, 435,
32, 89, 146, 203, 288, 402, 630,
-4, 67, 140, 213, 322, 467, 758,
12, 49, 85, 122, 177, 250, 397,
8, 85, 161, 238, 353, 507, 814,
28, 73, 117, 162, 228, 317, 495,
21, 77, 133, 190, 274, 387, 613,
12, 54, 96, 137, 200, 283, 450,
8, 80, 152, 224, 331, 475, 763,
17, 60, 103, 146, 211, 296, 468,
2, 64, 127, 189, 282, 406, 655,
16, 56, 95, 135, 194, 273, 431,
19, 84, 149, 215, 312, 443, 704,
16, 60, 105, 149, 216, 305, 484,
18, 54, 89, 124, 177, 247, 388,
28, 79, 129, 179, 255, 356, 557,
16, 54, 92, 129, 186, 261, 412,
26, 57, 88, 119, 165, 227, 351,
17, 48, 78, 109, 155, 216, 339,
18, 53, 89, 124, 178, 249, 391,
16, 48, 79, 110, 157, 220, 345,
13, 59, 104, 150, 219, 310, 493,
15, 62, 110, 157, 229, 324, 514,
29, 82, 135, 188, 267, 373, 585,
12, 48, 84, 120, 174, 246, 389,
11, 87, 163, 240, 354, 507, 811,
26, 69, 111, 154, 218, 304, 475,
9, 66, 123, 181, 266, 381, 610,
29, 70, 110, 150, 211, 292, 453,
18, 44, 70, 96, 135, 187, 291,
0, 60, 119, 179, 268, 387, 626,
53, 111, 169, 226, 313, 429, 660,
23, 66, 109, 153, 218, 304, 478,
27, 76, 125, 175, 249, 348, 545,
6, 51, 96, 142, 209, 300, 481,
10, 74, 137, 201, 296, 423, 677,
8, 41, 74, 107, 156, 222, 354,
10, 56, 102, 148, 217, 310, 494,
25, 68, 110, 153, 217, 302, 472,
14, 49, 85, 120, 173, 244, 386,
23, 64, 106, 147, 209, 292, 457,
15, 53, 91, 129, 186, 262, 414,
};

static uint64_t backbone_model2_conv1_conv1_weight[64 * 1*4] =
{ // torch.Size([64, 1, 1, 64])
0x4b43451bd2dcc53c,0x3330da55545143d4,0xbbdba94eec1ce5b5,0xa545bccbbd4cedbb, 
0x4a54dcb094dd34ad,0x35cbca2a5dc4c5cd,0x3d1c453c35d46454,0x6ce22d56aab4c59c, 
0xbc505c5dbd2ca444,0xedc22311344b4cc3,0xcdd5c9c5b40292c4,0xc5dac913c9b3dbac, 
0x5552c4b5c402a94d,0x620db5459cc425cc,0x2441446451cb5634,0x5b5331559c433a54, 
0xb5c341432ab2c3d3,0xc5491bcd9b44444b,0xdb9b4e1c053c4c5d,0x4caf54cccdd4045b, 
0xdc45442245daaedd,0xbc0ddbacda2d434c,0x6c5dcecedb53444c,0x4c5dc44e4ac4c535, 
0x42bd5cbad443c466,0xb25cc45c4a4e0c05,0xb43543aa4c949cc4,0xdbbc4455bc43bc4d, 
0x4c5beb493e9d2ccd,0xb0bd42211bbcdcb5,0xc02c454ac6e43494,0xc0dcbc544b2ac2b3, 
0xddead1a66c4c4442,0xccc5acdcdcaccc6e,0x4a5c4cd94a1d6cbc,0xc5cbb9c0c4c60693, 
0xb455d35ccd1d4c54,0xcdbe29a4eb4c0db4,0x2b540d1c63463c44,0x05cd265415533c59, 
0x4533aa4b215d4d51,0xdb5dbb3ac44c5abe,0x3b2c14dd1a44c9c2,0xd53351ba644d232a, 
0x6545cd4edd1bb595,0xb0c9cca53b549cb4,0xc5d5335512bbb140,0x4555d4ccdc5cbe5d, 
0x54bb3ca6bb4edc54,0xe4c5ecc443c34d23,0x44b45c90c434c9a4,0xc53c93b4c2bcddb5, 
0xc455c549b54c55c2,0xcdb45cbc53949d1c,0x45b4b55c3d4cbc21,0x1465d43b33344c3c, 
0xd3dc4eddd4531c29,0xdc543d6bc4cbc439,0xb444d3cdccccde90,0xd450ccc4cccd5dcd, 
0xdb214b533445bc3b,0x5c3a42ccac43a255,0xbbddaccd4cc2d5c9,0x4d5b0949db252994, 
0xc30b1cc465522c5c,0x5ab4534dd9144a4e,0x2c5d45d50cbb55da,0xcb3c4a33b52246c2, 
0xcc935dd4c4ca1444,0xcbb4b95a345bbabc,0x5c11dac34ce4b2ba,0x3901b334d9bbab4d, 
0xa43a4cce5bcc435c,0x4a509b5dc3534b9c,0x3bccc4de400424c3,0x53d2b5ddd550cc24, 
0xccbc4bd3d4339c54,0xdc465b4a351b4b1a,0x44bbddbcdd4ccedb,0xd51b34ba242b3dbb, 
0x5c03b53dddd4c9a4,0x243d9c5b334434b6,0xddd14c2d54c3b144,0x3cba54c44b520d41, 
0xa13c45a4eccad46a,0xc54b144b6c4c44d5,0x5ac44d3b4345dc25,0x15d3c6b3c30a4d1b, 
0xacd99de594b3c344,0xb1d3d402dd4c054c,0x544cdade1bdbcdbc,0x1e50acb45b1c95bb, 
0x43c3441b5393d4db,0xc595bbc05a14d535,0xdedc44db393bac31,0x9b49540c3c0cc902, 
0x5045b53bd90c24bc,0x45d4e6ac4d4cda44,0xd4d5665c2bdc45bb,0x5254230a2d542c5c, 
0xb3c5c55cc34d6535,0x44c49cc5bcc2c54b,0x35434453da4d443a,0xc5541eb3dc42ca55, 
0x544cd429bcdc4c4c,0xb1d3bb019d4d349d,0xddd253b4d5e435b4,0xadde62243bb3c595, 
0x4cca0b4444d404cc,0x49d3c4c34ab2db95,0x43ed4c4cddc23322,0x1d2442b4ccb4c533, 
0x552c544bb4ce332a,0xa43cccaddd3c4b43,0xbcc353edc1cb14cc,0x44c95bcd5b4db490, 
0xdebdc5c55526ccb1,0x413d4b5b33c4bbc4,0x9adc9d453442d5b4,0x0cdbbad25db3c4c0, 
0x4c52db433dcb4c4d,0x4cd5b6d3cc324b34,0x39a5b6ad49d555c4,0x4636c54c15443b32, 
0xbdbccdc50d02cd65,0x4a5335cbcbd9bdb3,0xc54accd6d254bbdb,0xd9dd514c14cdd3b2, 
0x5c43a3935a4b2c41,0xd353424aa3c4ddc9,0x3ba54995b4bcc4da,0xd44c3c34c9ca4c13, 
0x03d30959cc1d3c5a,0xc455aadbc4cccd95,0x35ac3123c409abc3,0xe54d425544444a05, 
0x3453d3cb1c44443d,0xd3bcd43b4d24233d,0x5c5a445d35eabc52,0x4c2bd4b5c4ba41c1, 
0x4441dd15b433bb23,0xbcd9d554c5a4cdb9,0x46d22a54cb1cddbd,0xca24cdd5bb5c9cb4, 
0x533c4d433434dcc5,0x4511bb45b30b3524,0xc50cb115d35329bd,0x3d5d4bab4c9e2c3d, 
0x26ccda64415db134,0xb4d5b4a2c54d956c,0xb43cb4bdbcc9b253,0xad4b439dd4bca434, 
0x442bc2613dccc21b,0xcdb3c6c4459a3cb9,0x16da3ba5d5434ba1,0xe634cb3bda44d245, 
0xc53c45b3c034dd9c,0x4c4b6b0bdc34c424,0xc0cdbcce49c1cd3c,0x5dda22cc55ca5bb4, 
0xaebb21db3d404d5d,0x4ddc4949c9d5dacd,0x5c3d30d0433144d4,0x94d49bc354cab543, 
0x0b51c4cccae5dd6d,0xa450c1432cad4cc2,0xd1dc324dd35ecb56,0xbd0cdccd3e2bc5da, 
0xcc454d4b0ca54d34,0x4c2452c354d455c4,0xbc95ea05a51cc35c,0xc543cd34ebd53bc9, 
0x5b559d3dd3d54cdc,0x5cadb549e4b42ae5,0x2bd2d04b4d34c495,0x04d414ba5b23dc45, 
0x4c5bd452dbb35492,0x04d351bc42d6bcd2,0x53d5dc6453cbbd5a,0x53464042c115bb05, 
0x55b4bc5b4c2e3bcb,0x3dd3dcd455d29dbc,0xb5534ac5db53a4a9,0xdc3c313c5bdd3494, 
0x35b4435edd5d3d4a,0x3403dd9dcdcd535d,0x2c5b45dddc3544d0,0xc04c5a2d44ce4ba1, 
0x41195a3ddcc0d5a2,0xabc1c455cc5ebb46,0xd5eb39bcab0bb2d0,0xb45a022c5c5ddd5c, 
0xa5bb3dcd25b5b0c4,0x5559cc523423d53b,0xcbed34add4c445d3,0x1cac42c56c4c152b, 
0x430456560cac413c,0xd6bb15d36dc544c4,0x4d25533535d51144,0x04c413453ac39bbc, 
0xe4b4552d9354cccc,0x454ac5beddcdb4cd,0xdd51c3c5c94cb41b,0xa49caceddc2c3ecc, 
0x4cc11cc6cccc64c4,0xcb3d4145a0445b45,0x60adde3c2cb54d1c,0xd14b5664cb4bac55, 
0xc403bd60c333b9c0,0xd3205cbac94dbd91,0xd51ba5529193a1a2,0xc351d3a01cb544a0, 
0xbdcb5ddce6c4dda5,0x496ddd6bd34d3cdc,0x2ce3d4dddc44da1c,0xccd92cdc5bbcdddd, 
0xbdc15dcd3ab3c554,0xccd2d454c2ad4c32,0xad35dc35dc4c1cdc,0xa53c3cc3dd5cdd2d, 
0xb922bb53c4a3932c,0x2dc932bbb329bdc4,0xc6523042d2b42142,0x4345dab2c3a23442, 
0x2434d4bdd31c0d4d,0x554c455c434b34d9,0xccbc4414d434d5d5,0xdb5464cc4b2d2c31, 
0x3335514d149dd69a,0xc45d1d554b74c533,0x03a54b5d1ddba104,0x4559cb4bd264cdcc, 
0xb49295a534344cb2,0x54332c4cbd55c952,0x366d3b3b2cdc434a,0x5d9b4c2c54cd5414, 
0x4c22d4c54dad5d5d,0x435b54cbd5d45cb3,0x4a3bdcb34544a443,0x9cccc9b1e5e434d4, 
0x5565d351cdcbbc4c,0x555d5ac95baa3635,0xda4b59b5b5d54526,0x4c4c5543ccb4bb64, 
0x5a34ed4c9eda3bdb,0xcbcd2a93bd242b2c,0xd39c4b43c6d444c1,0xc992b045353ac659, 
0x5e253cdac4d4dc54,0x5b4bd3543db163dc,0x2db4dac15c5ab5ac,0xaa5cccc4cdc4cdae, 
0x5ccacad4b9bec4cb,0x3bc53cc2b42b3dd3,0x9640c1d13423554b,0x54bcd2bc44abc4ab, 
};

static int backbone_model2_conv1_quant1_threshold[64 * 14] =
{ // torch.Size([64, 14])
-970, -628, -458, -330, -244, -159, -74, 11, 96, 182, 267, 395, 566, 907,
-1200, -774, -561, -401, -295, -189, -82, 23, 130, 236, 343, 502, 715, 1141,
-851, -551, -401, -289, -213, -138, -63, 11, 86, 161, 236, 348, 498, 799,
-903, -552, -376, -245, -157, -69, 18, 105, 193, 281, 369, 500, 676, 1027,
-996, -638, -459, -325, -236, -146, -57, 31, 121, 210, 300, 434, 613, 970,
-871, -567, -415, -301, -224, -148, -72, 3, 79, 155, 231, 345, 497, 802,
-1101, -701, -501, -351, -251, -151, -51, 48, 148, 247, 347, 497, 697, 1097,
-1057, -677, -487, -345, -250, -155, -60, 34, 129, 224, 319, 461, 651, 1031,
-1230, -792, -573, -408, -299, -189, -80, 29, 138, 248, 358, 522, 741, 1179,
-918, -586, -420, -295, -212, -129, -46, 36, 119, 202, 285, 410, 576, 908,
-1022, -661, -481, -346, -255, -165, -75, 14, 104, 195, 285, 420, 600, 961,
-953, -604, -429, -298, -210, -123, -35, 51, 138, 226, 313, 444, 619, 969,
-993, -634, -454, -319, -229, -139, -49, 40, 130, 220, 310, 444, 624, 984,
-654, -409, -286, -194, -132, -71, -10, 51, 112, 174, 235, 327, 450, 695,
-1013, -660, -484, -351, -263, -175, -87, 0, 89, 177, 265, 397, 574, 926,
-654, -413, -293, -202, -142, -82, -22, 37, 97, 157, 218, 308, 428, 669,
-967, -604, -422, -286, -195, -105, -14, 76, 167, 257, 348, 484, 666, 1029,
-747, -484, -352, -254, -188, -122, -57, 8, 74, 140, 205, 304, 436, 698,
-970, -627, -456, -327, -241, -156, -70, 15, 101, 187, 272, 401, 572, 916,
-1147, -739, -534, -381, -279, -177, -75, 26, 128, 230, 333, 486, 690, 1099,
-840, -534, -380, -266, -189, -112, -36, 40, 116, 193, 270, 384, 538, 844,
-1136, -712, -500, -341, -235, -129, -23, 82, 188, 294, 400, 559, 771, 1195,
-918, -604, -447, -329, -251, -173, -94, -16, 62, 140, 219, 336, 493, 807,
-849, -540, -385, -269, -192, -115, -37, 39, 116, 193, 271, 387, 541, 850,
-1042, -645, -446, -297, -197, -98, 1, 100, 199, 299, 398, 547, 746, 1144,
-953, -596, -417, -283, -194, -105, -16, 73, 162, 251, 341, 475, 653, 1010,
-961, -613, -438, -308, -220, -133, -46, 40, 127, 215, 302, 433, 607, 956,
-821, -528, -382, -272, -199, -126, -53, 19, 92, 165, 239, 348, 495, 787,
-968, -625, -454, -325, -240, -154, -68, 16, 102, 188, 273, 402, 573, 916,
-888, -565, -404, -282, -202, -121, -40, 39, 120, 201, 282, 403, 564, 887,
-1025, -637, -444, -298, -201, -105, -8, 88, 185, 282, 379, 524, 718, 1106,
-1026, -655, -469, -329, -236, -143, -50, 42, 135, 228, 321, 460, 646, 1018,
-616, -391, -278, -193, -137, -81, -24, 31, 87, 143, 200, 284, 397, 622,
-880, -556, -394, -272, -191, -110, -29, 51, 132, 213, 295, 416, 578, 903,
-977, -626, -450, -318, -231, -143, -55, 32, 120, 207, 295, 427, 602, 954,
-993, -630, -448, -312, -221, -130, -39, 50, 141, 232, 323, 459, 641, 1004,
-1016, -639, -450, -309, -215, -120, -26, 67, 161, 256, 350, 491, 680, 1057,
-806, -507, -357, -244, -170, -95, -20, 54, 129, 204, 279, 391, 541, 840,
-976, -612, -430, -293, -202, -111, -20, 70, 161, 252, 343, 480, 662, 1026,
-867, -556, -401, -284, -206, -129, -51, 26, 103, 181, 259, 375, 530, 841,
-860, -557, -405, -292, -216, -140, -64, 10, 86, 162, 238, 351, 503, 806,
-965, -623, -451, -323, -237, -151, -66, 19, 105, 190, 276, 404, 576, 918,
-881, -548, -381, -256, -173, -90, -6, 76, 159, 243, 326, 451, 618, 951,
-1066, -682, -490, -346, -250, -154, -58, 37, 133, 228, 324, 468, 660, 1044,
-1224, -760, -529, -355, -239, -123, -8, 107, 223, 339, 455, 628, 860, 1323,
-865, -554, -399, -283, -205, -127, -50, 27, 104, 182, 259, 376, 531, 841,
-984, -636, -462, -331, -244, -157, -70, 15, 102, 189, 276, 407, 581, 929,
-976, -629, -455, -325, -238, -152, -65, 21, 108, 194, 281, 411, 585, 932,
-1049, -667, -476, -333, -237, -142, -46, 48, 144, 239, 335, 478, 669, 1051,
-948, -583, -401, -264, -173, -82, 8, 99, 190, 281, 373, 509, 692, 1056,
-1119, -714, -512, -360, -258, -157, -56, 44, 146, 247, 348, 500, 702, 1107,
-995, -630, -448, -311, -220, -129, -38, 52, 143, 234, 325, 462, 644, 1009,
-793, -499, -353, -243, -169, -96, -23, 50, 123, 196, 270, 380, 526, 820,
-1324, -868, -641, -470, -356, -242, -128, -14, 99, 213, 327, 498, 726, 1181,
-847, -550, -401, -289, -215, -140, -66, 8, 82, 157, 231, 343, 492, 789,
-578, -358, -248, -166, -111, -56, -1, 53, 108, 163, 218, 300, 410, 630,
-854, -538, -381, -262, -183, -104, -25, 52, 131, 210, 289, 407, 565, 881,
-988, -625, -443, -307, -216, -125, -34, 55, 146, 237, 328, 464, 646, 1009,
-755, -467, -323, -215, -143, -71, 0, 72, 144, 217, 289, 397, 541, 829,
-901, -577, -414, -292, -211, -130, -49, 31, 112, 194, 275, 397, 559, 884,
-865, -526, -357, -229, -145, -60, 24, 108, 193, 278, 362, 490, 659, 998,
-1079, -691, -497, -351, -254, -157, -60, 36, 133, 230, 327, 473, 667, 1055,
-1016, -651, -468, -331, -240, -149, -57, 33, 124, 216, 307, 444, 626, 992,
-668, -426, -305, -214, -154, -93, -33, 27, 87, 148, 208, 299, 420, 662,
};

static uint64_t backbone_model2_conv1_conv2_weight[64 * 9] =
{ // torch.Size([64, 3, 3, 1])
0x5, 0xb, 0xc, 0x6, 0x3, 0x1, 0x6, 0x5, 0xb, 
0xc, 0x4, 0xc, 0xd, 0xe, 0x4, 0x4, 0xe, 0x5, 
0xd, 0xd, 0xd, 0x4, 0x4, 0x5, 0x4, 0x4, 0x5, 
0x3, 0xa, 0xb, 0xb, 0xe, 0xd, 0x4, 0xd, 0x1, 
0x3, 0x3, 0x4, 0x4, 0x5, 0x5, 0x4, 0x6, 0x4, 
0x9, 0x9, 0x1, 0x4, 0xd, 0x3, 0x2, 0x4, 0x7, 
0x5, 0xc, 0xd, 0x5, 0xc, 0xd, 0x5, 0xd, 0xd, 
0x5, 0x0, 0xd, 0x5, 0x4, 0xe, 0x6, 0x4, 0xd, 
0x1, 0xc, 0xb, 0x4, 0xe, 0xf, 0x3, 0x3, 0x2, 
0xb, 0x1, 0x2, 0x4, 0xa, 0xd, 0xd, 0xc, 0xf, 
0x3, 0xe, 0xd, 0x4, 0xd, 0xd, 0x6, 0x5, 0xb, 
0xc, 0x5, 0x6, 0xe, 0x4, 0x3, 0xd, 0xb, 0xc, 
0x3, 0x1, 0x4, 0x3, 0x5, 0x9, 0x6, 0x4, 0xd, 
0xc, 0x5, 0x0, 0xd, 0x4, 0x6, 0xc, 0xe, 0x5, 
0xa, 0x4, 0xd, 0x3, 0x7, 0x3, 0xd, 0x3, 0xd, 
0xd, 0x3, 0x1, 0x5, 0x6, 0xd, 0x5, 0xe, 0x0, 
0xe, 0xd, 0xc, 0xd, 0xd, 0x1, 0x5, 0x5, 0x5, 
0xc, 0x4, 0x5, 0xc, 0xd, 0xd, 0x2, 0x5, 0x6, 
0xc, 0xc, 0xc, 0xd, 0xd, 0xe, 0x2, 0x9, 0xa, 
0xd, 0x5, 0x5, 0xd, 0x4, 0x5, 0xd, 0xd, 0x2, 
0x3, 0xb, 0x6, 0x2, 0xc, 0x5, 0xe, 0xe, 0xa, 
0x1, 0x4, 0x4, 0xa, 0x5, 0x3, 0x5, 0x5, 0xa, 
0xc, 0xe, 0xa, 0x3, 0x6, 0x6, 0xc, 0xc, 0x3, 
0x5, 0xc, 0xd, 0x6, 0xc, 0xc, 0x5, 0x2, 0xd, 
0xd, 0xe, 0xe, 0xc, 0xa, 0x4, 0x5, 0x5, 0x5, 
0x3, 0xc, 0xa, 0x9, 0x9, 0xc, 0xb, 0x0, 0xe, 
0x3, 0x6, 0x4, 0x5, 0xc, 0xd, 0x5, 0xe, 0xc, 
0x4, 0x5, 0xd, 0xb, 0x5, 0xd, 0x3, 0x0, 0xe, 
0x4, 0x5, 0x6, 0x1, 0x0, 0x1, 0xd, 0xe, 0xc, 
0x5, 0x5, 0x2, 0x2, 0xd, 0xd, 0xe, 0xd, 0x3, 
0x4, 0x5, 0x4, 0x5, 0x5, 0x0, 0x3, 0x5, 0xb, 
0x4, 0x6, 0x5, 0xd, 0xc, 0x4, 0xd, 0xe, 0xc, 
0xc, 0xd, 0xd, 0x6, 0x2, 0x5, 0x0, 0xd, 0x0, 
0x3, 0x4, 0x0, 0xe, 0x1, 0x5, 0x2, 0xe, 0xd, 
0xe, 0xd, 0x5, 0xe, 0xc, 0x6, 0xc, 0x4, 0x5, 
0x5, 0xb, 0xd, 0x6, 0x5, 0xd, 0xb, 0x5, 0xb, 
0xb, 0xd, 0xd, 0x5, 0x2, 0xe, 0x6, 0xa, 0xc, 
0x9, 0x3, 0x3, 0xd, 0xc, 0x5, 0xd, 0x6, 0x6, 
0xd, 0x5, 0x5, 0xf, 0xa, 0x5, 0x5, 0x9, 0x4, 
0xc, 0xd, 0xd, 0x0, 0xc, 0xd, 0x5, 0x6, 0x5, 
0x4, 0x6, 0x4, 0x3, 0x4, 0xd, 0x4, 0xd, 0xd, 
0xc, 0x4, 0xb, 0x3, 0x4, 0x2, 0x5, 0x5, 0x5, 
0x3, 0x3, 0x1, 0x1, 0x4, 0x4, 0x4, 0x6, 0x5, 
0x5, 0x5, 0x5, 0x3, 0x5, 0x4, 0xb, 0xd, 0xc, 
0x4, 0xb, 0xb, 0x5, 0x1, 0x0, 0x5, 0x5, 0x5, 
0xd, 0xd, 0xb, 0xd, 0x2, 0x5, 0xc, 0x6, 0x6, 
0x6, 0x5, 0xb, 0x5, 0x5, 0xc, 0x3, 0x4, 0xd, 
0xd, 0x4, 0x5, 0xc, 0xa, 0x5, 0xc, 0x4, 0x6, 
0xd, 0xc, 0x6, 0xe, 0xd, 0x6, 0xd, 0xd, 0x5, 
0xa, 0xc, 0x2, 0x4, 0xe, 0xd, 0x3, 0xd, 0xc, 
0x6, 0x4, 0xd, 0x5, 0x4, 0xd, 0x5, 0x3, 0x4, 
0xb, 0x1, 0xe, 0x0, 0xd, 0xd, 0xc, 0xd, 0xc, 
0x5, 0xd, 0x5, 0x6, 0xc, 0xd, 0xa, 0x6, 0xe, 
0xc, 0x3, 0xc, 0xc, 0xc, 0xd, 0xd, 0xd, 0xd, 
0x9, 0x5, 0x2, 0x5, 0x5, 0x7, 0xe, 0xb, 0x5, 
0xb, 0xd, 0x5, 0x5, 0xe, 0x5, 0x2, 0xc, 0x2, 
0xd, 0xc, 0xc, 0xc, 0x5, 0x5, 0x5, 0x6, 0x9, 
0xb, 0xd, 0xc, 0x2, 0xe, 0xd, 0x9, 0xa, 0xd, 
0x3, 0x2, 0x4, 0x4, 0x5, 0x4, 0xc, 0xe, 0xf, 
0xa, 0xe, 0xa, 0x9, 0xe, 0xc, 0x4, 0xb, 0x5, 
0x1, 0x4, 0x2, 0x4, 0xd, 0xd, 0xc, 0xd, 0xe, 
0x3, 0xc, 0xe, 0x5, 0xc, 0xd, 0x4, 0x6, 0x6, 
0x3, 0x4, 0x5, 0x9, 0x5, 0xa, 0x5, 0x5, 0xc, 
0x3, 0x5, 0xe, 0x5, 0x4, 0xe, 0x4, 0xd, 0xc, 
};

static int backbone_model2_conv1_relu2_threshold[64 * 7] =
{ // torch.Size([64, 7])
27, 106, 184, 263, 381, 538, 852,
15, 66, 116, 166, 241, 341, 541,
24, 64, 105, 145, 205, 285, 446,
7, 57, 108, 158, 234, 335, 537,
20, 94, 169, 243, 355, 504, 802,
25, 83, 141, 199, 286, 402, 635,
19, 60, 100, 141, 202, 283, 445,
23, 57, 91, 125, 177, 245, 382,
22, 87, 152, 217, 315, 445, 706,
27, 102, 177, 252, 365, 515, 816,
8, 64, 121, 177, 262, 375, 601,
21, 63, 105, 146, 209, 293, 460,
20, 70, 121, 171, 247, 347, 549,
8, 68, 129, 190, 282, 404, 647,
31, 78, 125, 172, 243, 337, 525,
22, 64, 106, 147, 210, 294, 461,
21, 69, 118, 167, 239, 337, 531,
24, 60, 96, 133, 187, 260, 405,
25, 70, 116, 161, 229, 320, 501,
29, 62, 96, 129, 179, 246, 380,
15, 76, 136, 196, 287, 407, 649,
18, 64, 111, 157, 226, 319, 503,
27, 66, 106, 146, 205, 284, 443,
30, 75, 120, 165, 232, 323, 503,
14, 80, 146, 211, 310, 442, 705,
20, 54, 88, 122, 173, 241, 378,
15, 63, 111, 160, 232, 328, 521,
14, 77, 141, 205, 301, 428, 683,
18, 81, 143, 205, 299, 423, 673,
26, 67, 108, 149, 210, 292, 457,
35, 72, 109, 147, 202, 276, 424,
26, 70, 114, 158, 223, 311, 486,
20, 63, 106, 149, 213, 299, 470,
24, 71, 118, 166, 236, 330, 519,
29, 77, 126, 174, 247, 344, 538,
29, 75, 122, 169, 238, 332, 518,
23, 75, 127, 179, 256, 360, 568,
26, 75, 123, 172, 244, 341, 535,
31, 80, 129, 178, 252, 351, 548,
24, 75, 127, 178, 255, 357, 562,
26, 65, 105, 144, 203, 282, 440,
19, 67, 115, 163, 235, 332, 524,
18, 74, 130, 187, 271, 383, 607,
27, 69, 111, 152, 215, 299, 466,
24, 51, 77, 104, 144, 197, 303,
28, 87, 146, 205, 293, 411, 647,
17, 68, 119, 171, 248, 350, 556,
14, 68, 121, 175, 256, 363, 577,
28, 84, 140, 196, 280, 392, 616,
18, 73, 127, 181, 263, 371, 588,
3, 49, 96, 143, 213, 306, 493,
20, 82, 144, 206, 299, 422, 670,
28, 78, 128, 177, 252, 352, 550,
34, 76, 119, 161, 225, 309, 479,
35, 105, 175, 245, 350, 491, 771,
26, 67, 108, 149, 211, 293, 457,
15, 57, 99, 141, 204, 288, 457,
26, 90, 155, 219, 315, 444, 701,
37, 114, 192, 269, 385, 541, 851,
19, 77, 135, 192, 279, 394, 625,
24, 88, 152, 217, 313, 441, 698,
30, 77, 124, 171, 241, 336, 524,
13, 58, 104, 150, 219, 311, 494,
32, 82, 131, 181, 256, 355, 553,
};

static uint64_t backbone_model2_conv2_conv1_weight[64 * 1*4] =
{ // torch.Size([64, 1, 1, 64])
0x545dcd45a5525b44,0x55455bc55d63d595,0x553545555eb546dd,0x4c635dd6bd555adc, 
0x55dcbaeddccb2bcd,0x15bc0cc6435c06ac,0x457a453dacd33ddb,0x2cd459ad6dc544de, 
0xd2b23cad93c6bd20,0xc59103bc0e464ccb,0xdccbc54dccbda3bd,0x5de04521bd9bad5c, 
0xd553a13356b4bccd,0xce5b4b2ca6d55366,0x5cbd5b24415c3c50,0x094124cc454dc216, 
0xcdccccddddc42355,0xedbbabdb5c55d6b4,0xdccc69b455dc9255,0x3c5ecddda94dcb44, 
0xb4354ccd3c3b45c2,0x4cb32b42446a4343,0x4b0945564bb43152,0xe4a63493313d5a2a, 
0x52dd3556543c614a,0x645ded405c6ea5d6,0xe35b69d55541dc6c,0x60e65ebd995cc3bd, 
0xee5d4535e43cd3dc,0x5b4b2de04543ac66,0x50c5dd55d45b4d66,0xc4eed416b445d252, 
0xcb4454b54c55ad5d,0xc4dd6d545ce45595,0x65b5346d46d64564,0xc4cdc4650cd4c2e4, 
0x553dce5652465dd6,0xd36b44c55d46434c,0x554655666e4355d4,0x5d35d366cc43cc45, 
0x5eb66cda45c6c03a,0xa2d2ced463d3d5c6,0x9beb155e56ecd37c,0x5bedadcc5d5dbb4d, 
0xe55adc52cebcc5a2,0x465455b5e564543e,0x433550dce36d5195,0x66b56d0455550dda, 
0x3b3933549b433b04,0xa554ba34be9d23f5,0x4b2b43cb5444b4ca,0xb3db1c0539b9a254, 
0xcc6ad43d356add92,0x5cc55c6202c5461d,0x56355d65b5cc43cd,0xc2cc4ce96cd65cbd, 
0x2251ccb5b454ceb2,0xcb244dcc5d355d45,0x455bcc66dd5d65e3,0xa4c5b5d5c1566456, 
0x2dedbd3a2ac54bdd,0xdabb5b43cc15cc3c,0x24bbc0541c55d5a3,0x3dd33964ddeddce1, 
0x43cdcdccddd44c56,0xdd52cebc245cd29d,0xdded3cd4cbbe9ecb,0x4b95acd4a3635d5b, 
0xcde0d4ddabea3c05,0x5c54de9c556cde44,0x91cdddd6ed5e1cad,0xc135c2dc34b45564, 
0xcbc64d5d555ed254,0xd564a25ceccccceb,0x30b55d1dbdd65dd4,0xe52c63dc45935d0d, 
0xeb4b335bdeb54346,0x4dd26555ddd4425e,0x45555253b02555c6,0xd5d5de46b22b4c44, 
0x3e5c5bdd01e0b42c,0xc5dbddcc5ed33c03,0x5ba2d4cdd1532c05,0xb254da54bc555ccd, 
0x0c2ad6ea1b25c4c3,0x5cbdc594cd4c2c3a,0xbdd354dc4cd5cdbd,0xc6c9db35bd9ed65d, 
0x6d3db64d2ca6dc64,0x35b4db29cdddc933,0x50d5b4cc4cea43cc,0xb4d0dd44bacce44d, 
0x1de3a6664d6d4a34,0xd6566366d354d5d3,0xc5dc55b5db25e545,0x444c3c44dc3a35c6, 
0x3de6ec2b51a55c55,0xe6b5d4cbd3445b1b,0xecd4bb345dda4ddc,0x2c15d43e964b5d9b, 
0xdc54355c0ecd362c,0x55b315bdc54d302d,0x0cc325ddc533ed5d,0xbc555cc4cbdbeedb, 
0xbbb49c52ce5440cd,0xa5a355445444335d,0x432524d45c46d551,0x4e436b45bdd4eed1, 
0x554b6524355d535b,0x65b64643cc51e5cc,0x15b6c646c6b4b24e,0xd66c5c255d3535dd, 
0x3c02e2cc44d5bb05,0xeedc5ec234944b43,0x4aab5d4c5b4c3a05,0xac4ceddd554db4b6, 
0xbdc45c3c3c2bd344,0x5345242b3ab5ccd1,0xbadbd30db555dc33,0xd6ccb442d2525461, 
0xc145cb4ddde3de5d,0xda4d3cd4cd3b5b45,0xed35d3ddcdd4bd3d,0x4be42564352eed5c, 
0xbabc2dbdcc4cc42d,0x39cb0b91dcb2ccdd,0xd1c9bca3ccdcd5d0,0xdc02d332ccb04dc2, 
0xbd295dccad4ceec5,0x4dc94d6db44549c4,0xb55cdb4a454c455b,0xd6c24455c3266c65, 
0x56d25dbc264345ed,0x43b61121e516e553,0x65ca59555245a53a,0xb4cc3dc4ed345cdc, 
0xc653dc34b45d5c6c,0xcc5c154c2abdad45,0xddc3bdc4dbdb5ebd,0x4ccc34531bced4a5, 
0xa65aa2ca55d5dbdd,0x1c6bc52d465cad3c,0xdc4dcdbd4b2dadcc,0x55cb653d352ce4d4, 
0xa5d66c4c94415ad6,0x5343cc5cb14c4dbc,0x4b1d164dc4655544,0xc6e5244b6c6a4c6b, 
0xc39e54d4dcd4e35e,0xec0acdde35639695,0xbdc4bcecb6bebd5d,0x6c2dddcbd555d354, 
0xe44beaaddbdcb156,0x5dc3db5d33c3ee54,0x9dc3ed34f35b4ebd,0xc3cd5df5ce4cc454, 
0xb555b6bd9c4ec01e,0xb5b494c3d6544d35,0x54ba5cd54c65d542,0xc355355c45cbd5d4, 
0x2cdee4c24cd3ddc9,0xb35dbdd24345434b,0xc2cb5e534dd3ddcc,0xadd2b9c1d5e542c4, 
0x1ed2b43424524d06,0x52c654445c534594,0x3546cd46d453c596,0x5e445d654ce543cb, 
0x5ecc25ddc0b4ed54,0xdefe14bd5e04ca5c,0x4b2641dbd5b54345,0xdc9c1a55c514b44c, 
0xbc95d24d33d46914,0x1124dce50535651a,0xcb1343cc53045d4c,0x31a3cdcd654d2aed, 
0x549c45d26cd2de63,0xdd4e555cd54cea94,0x2555cc5c52b5ad94,0x53d3ca5ecd05d5db, 
0x4d9c55e4dddc54db,0x59cbac2564543a64,0x6453c4dad352c535,0x4bbbc4b2dda555a4, 
0xd5ed4193e54ecdbc,0x533355554bd2eceb,0xc46dc2bde5d41ea3,0x05d45de639dc3555, 
0x55d2aced34bb3dcd,0xd45de4d4cb4b54b9,0xc55d36cd4bd49dc2,0x3ca6c5be45440bb1, 
0x53abdd65a45dc5d5,0x6553bd45dbb143ed,0x5abcc446bcc45bc2,0xb5cb46d4d55bdd3d, 
0x2c2c45446ca5ce64,0xddcd2445d65b4d4d,0x56453a55555c3a56,0x59c5e25cd9c644c6, 
0x5c5cd43d6556d5a5,0xddd45c4db5d55c76,0x53e42d5a63255442,0xd55d55a5c5dc140c, 
0x5d4e35dd0dd5d456,0x4cddd50e0bdbbd5b,0xbdc5d99d55da5c9d,0xbabbdcb4acabd45e, 
0xe1adad55e44a4cc5,0xd4d55c456e45634c,0x45435664d3514515,0xd4435dd6cc555da5, 
0x5c5eb3bc5423cc6b,0x4cbc55bba5bc9b51,0x31544e2423ccae53,0x4d4cadcc41e6d3fc, 
0xc1d45bcdb5ebc594,0x53dbe3dcbbcd3ce2,0xeddec4dec5ccbd4d,0xe54d5aeeac9d556e, 
0xbdd445bd54cce55b,0xc3cadc5dd5dce5e5,0xededdd42c5dd2edd,0xd6ddccdd235d55cc, 
0x15065bebc5d5dd3e,0xdddccebc3ac5b5c3,0xbddc24ce45340c5e,0xc4de453d425d2c3e, 
0x543d42504c33bc62,0x521652cddc5e56d4,0xd3544324b5c4166e,0x5bd5c4455bbde5cd, 
0xb9d364d33d4b533b,0xc6b553549d05d5da,0xeb5d9602db4cd434,0xb5640a6bd445320b, 
0xc354442bdc4c566c,0x4ac6ccbd3c4ca5e3,0xecdad6dcc3cdc25c,0xc56dcd3c6d6c423e, 
0xa5cddc2dd53ceabc,0x4c54c55c54d43da3,0xcabd4d1344b944cc,0xd4cc45e3d4c4335d, 
0xd4d464dd5b2c6ccc,0xc4dac3553305de51,0xd46e5954a544335b,0xb4d5bd456d5464c4, 
0xb3434ae3dbdda49d,0x47dc5ec15cddc3b5,0xcd93e53de344dd5e,0x54c26355ee44b5bd, 
0x435eeddc43c4453c,0x4ccedddeca3c5d5d,0xedcd41455ddc6d9d,0xc042eddd65c5cecd, 
};

static int backbone_model2_conv2_quant1_threshold[64 * 14] =
{ // torch.Size([64, 14])
-1114, -682, -466, -305, -197, -89, 18, 126, 234, 342, 450, 612, 828, 1260,
-1233, -791, -570, -404, -293, -182, -72, 38, 148, 259, 370, 536, 757, 1199,
-972, -630, -458, -330, -244, -159, -73, 12, 97, 183, 268, 397, 568, 911,
-1383, -870, -613, -420, -292, -164, -36, 92, 220, 348, 477, 669, 926, 1439,
-1156, -749, -546, -393, -291, -190, -88, 13, 115, 216, 318, 471, 674, 1081,
-807, -497, -342, -225, -148, -70, 6, 84, 162, 239, 317, 433, 588, 898,
-1372, -871, -620, -432, -307, -181, -56, 68, 194, 319, 444, 632, 883, 1385,
-1416, -894, -634, -438, -308, -177, -47, 83, 213, 344, 474, 670, 930, 1452,
-1302, -816, -574, -392, -271, -149, -28, 92, 214, 335, 456, 638, 881, 1366,
-1386, -857, -592, -394, -262, -130, 2, 134, 266, 399, 531, 729, 994, 1523,
-1806, -1139, -805, -555, -388, -222, -55, 111, 278, 445, 611, 862, 1195, 1862,
-1023, -642, -451, -308, -213, -117, -22, 72, 168, 263, 358, 501, 692, 1073,
-1184, -751, -535, -373, -264, -156, -48, 59, 167, 275, 383, 546, 762, 1194,
-1423, -910, -653, -461, -333, -205, -76, 51, 179, 307, 435, 628, 884, 1397,
-1122, -702, -492, -334, -229, -124, -19, 85, 190, 295, 400, 558, 768, 1188,
-1936, -1214, -853, -582, -401, -221, -40, 140, 320, 501, 681, 952, 1313, 2036,
-1174, -761, -554, -399, -295, -192, -88, 14, 118, 221, 325, 480, 687, 1100,
-1388, -881, -627, -437, -310, -183, -56, 70, 197, 324, 450, 641, 894, 1402,
-1522, -968, -690, -482, -344, -205, -67, 71, 209, 348, 487, 695, 972, 1526,
-1276, -806, -571, -394, -277, -159, -42, 75, 193, 310, 428, 604, 839, 1309,
-1139, -728, -522, -368, -265, -162, -60, 42, 145, 248, 350, 504, 710, 1121,
-1299, -836, -604, -431, -315, -199, -84, 31, 147, 262, 378, 552, 783, 1246,
-1253, -804, -580, -411, -299, -187, -75, 36, 149, 261, 373, 541, 766, 1214,
-1259, -782, -544, -365, -246, -126, -7, 111, 230, 350, 469, 648, 886, 1363,
-1557, -987, -703, -489, -347, -205, -62, 79, 221, 363, 506, 719, 1004, 1573,
-1028, -657, -471, -332, -239, -146, -54, 38, 131, 224, 317, 456, 641, 1013,
-1222, -765, -536, -364, -250, -135, -21, 92, 207, 321, 436, 607, 836, 1294,
-1042, -638, -437, -285, -184, -84, 16, 117, 218, 319, 420, 571, 773, 1176,
-1166, -753, -547, -393, -290, -187, -84, 19, 122, 225, 328, 482, 688, 1101,
-1176, -747, -532, -372, -264, -157, -50, 56, 163, 271, 378, 539, 753, 1182,
-1371, -889, -648, -467, -347, -226, -106, 14, 134, 255, 375, 556, 797, 1279,
-1291, -836, -609, -438, -325, -211, -97, 15, 129, 243, 357, 527, 754, 1209,
-1160, -737, -526, -368, -262, -156, -51, 54, 160, 265, 371, 530, 741, 1164,
-1523, -969, -692, -485, -346, -208, -70, 68, 206, 345, 483, 691, 967, 1521,
-1294, -825, -591, -416, -299, -182, -65, 51, 168, 285, 402, 578, 812, 1280,
-1611, -1022, -727, -506, -359, -212, -65, 82, 229, 376, 524, 745, 1039, 1628,
-1110, -689, -478, -320, -215, -109, -4, 100, 205, 311, 416, 574, 785, 1206,
-1425, -919, -666, -476, -350, -223, -97, 29, 156, 282, 409, 598, 851, 1357,
-1457, -945, -689, -496, -368, -240, -112, 15, 143, 271, 399, 591, 848, 1360,
-1040, -650, -455, -309, -211, -114, -16, 80, 178, 275, 373, 519, 714, 1104,
-959, -626, -460, -335, -252, -169, -86, -3, 80, 163, 246, 371, 537, 870,
-1083, -662, -451, -293, -188, -82, 22, 128, 233, 338, 444, 602, 813, 1234,
-1197, -769, -556, -395, -288, -182, -75, 31, 138, 245, 352, 512, 726, 1153,
-1207, -768, -548, -383, -273, -164, -54, 55, 165, 275, 385, 549, 769, 1208,
-1211, -777, -560, -397, -288, -180, -71, 36, 145, 254, 362, 525, 742, 1177,
-1276, -794, -553, -372, -252, -131, -11, 109, 229, 350, 470, 651, 892, 1374,
-1476, -944, -678, -479, -346, -213, -80, 52, 185, 318, 451, 650, 916, 1448,
-1186, -761, -549, -390, -284, -178, -72, 33, 139, 245, 351, 510, 722, 1147,
-1321, -828, -581, -396, -273, -150, -26, 96, 219, 343, 466, 651, 898, 1391,
-1196, -751, -528, -362, -250, -139, -28, 82, 193, 305, 416, 583, 805, 1250,
-1394, -873, -613, -418, -288, -158, -28, 101, 231, 361, 492, 687, 947, 1467,
-1109, -720, -526, -380, -283, -186, -89, 7, 105, 202, 299, 445, 639, 1028,
-1246, -781, -548, -373, -257, -141, -24, 91, 208, 324, 440, 615, 848, 1313,
-1126, -723, -522, -370, -270, -169, -68, 32, 132, 233, 334, 485, 687, 1090,
-1613, -1041, -754, -540, -396, -253, -110, 32, 175, 318, 461, 676, 962, 1535,
-1483, -964, -705, -511, -381, -252, -122, 7, 136, 266, 395, 590, 849, 1367,
-1317, -861, -633, -462, -348, -234, -120, -6, 107, 221, 335, 506, 734, 1190,
-1455, -927, -663, -465, -333, -201, -69, 62, 194, 326, 458, 656, 920, 1448,
-1111, -693, -485, -328, -224, -119, -15, 89, 193, 297, 402, 558, 767, 1185,
-1156, -735, -524, -366, -261, -156, -50, 54, 159, 265, 370, 528, 738, 1160,
-1292, -830, -599, -426, -311, -196, -80, 34, 149, 265, 380, 553, 784, 1245,
-1081, -680, -480, -329, -229, -129, -29, 70, 171, 271, 371, 521, 722, 1122,
-1377, -882, -634, -448, -325, -201, -77, 46, 170, 294, 417, 603, 851, 1346,
-1289, -840, -616, -448, -336, -224, -111, 0, 112, 224, 336, 504, 729, 1177,
};

static uint64_t backbone_model2_conv2_conv2_weight[64 * 9] =
{ // torch.Size([64, 3, 3, 1])
0x4, 0x2, 0xd, 0x5, 0x5, 0xe, 0xd, 0xd, 0xe, 
0xe, 0x5, 0x5, 0xc, 0x6, 0x0, 0x6, 0x4, 0xd, 
0x9, 0x6, 0xd, 0xa, 0x3, 0x6, 0x5, 0xd, 0x5, 
0xd, 0xd, 0xd, 0xd, 0xd, 0xc, 0xd, 0x4, 0xa, 
0x5, 0x5, 0xe, 0x5, 0x4, 0xd, 0x6, 0xc, 0xd, 
0xd, 0x5, 0x5, 0x6, 0x4, 0xe, 0xd, 0xe, 0x2, 
0xd, 0xc, 0xd, 0x1, 0xd, 0xe, 0x5, 0xa, 0xe, 
0x5, 0x4, 0xb, 0x6, 0x5, 0x3, 0x5, 0x5, 0x4, 
0xd, 0xd, 0xb, 0xd, 0xd, 0x4, 0xe, 0xd, 0x4, 
0x9, 0xd, 0xc, 0x3, 0xe, 0xf, 0xb, 0x5, 0xc, 
0x5, 0x5, 0x5, 0x5, 0x6, 0x4, 0x5, 0x6, 0x3, 
0x3, 0x5, 0xd, 0x4, 0xd, 0xe, 0xd, 0xe, 0xc, 
0xc, 0xb, 0x6, 0x5, 0xc, 0xe, 0xb, 0x1, 0x4, 
0xa, 0xd, 0xd, 0xb, 0xd, 0xd, 0x4, 0xc, 0xe, 
0xc, 0xc, 0x3, 0xd, 0x0, 0x4, 0xf, 0xe, 0xd, 
0x5, 0x6, 0x6, 0x4, 0x3, 0x5, 0x4, 0xe, 0xe, 
0xb, 0xc, 0x5, 0x4, 0x6, 0x6, 0x3, 0x6, 0x5, 
0x2, 0xb, 0xb, 0x9, 0xa, 0x5, 0x5, 0x6, 0x7, 
0xb, 0x1, 0x3, 0x5, 0x4, 0x4, 0x6, 0x5, 0x6, 
0xe, 0xd, 0xa, 0x2, 0xe, 0xb, 0x3, 0xd, 0xe, 
0x6, 0x5, 0x5, 0x6, 0x4, 0xc, 0xa, 0xd, 0xd, 
0x2, 0x4, 0xb, 0x5, 0x5, 0x0, 0x6, 0x6, 0x4, 
0x4, 0x6, 0x5, 0xd, 0x5, 0x6, 0xb, 0xe, 0xe, 
0xa, 0xb, 0xd, 0xe, 0xc, 0x4, 0xe, 0xc, 0x3, 
0x5, 0x5, 0x5, 0x5, 0x5, 0x3, 0x5, 0x5, 0x2, 
0x5, 0x4, 0xd, 0x5, 0x6, 0x3, 0xc, 0xd, 0xd, 
0x2, 0x6, 0x2, 0xc, 0xe, 0xe, 0xc, 0xe, 0x2, 
0xa, 0xe, 0xd, 0x3, 0xe, 0xc, 0x6, 0xe, 0xc, 
0x5, 0x5, 0xd, 0x3, 0x5, 0xd, 0xb, 0x7, 0x4, 
0xc, 0x2, 0x5, 0xd, 0x4, 0x6, 0xe, 0xd, 0x4, 
0x5, 0x5, 0xd, 0x5, 0x6, 0x3, 0xa, 0x4, 0x5, 
0x4, 0x4, 0x4, 0x3, 0x3, 0x3, 0x4, 0x4, 0x4, 
0x5, 0xc, 0xd, 0x1, 0xd, 0xc, 0xd, 0xe, 0x5, 
0xd, 0xd, 0xd, 0x2, 0xd, 0xe, 0x1, 0xc, 0xd, 
0x4, 0x4, 0x4, 0x4, 0x5, 0x5, 0x5, 0x5, 0x5, 
0x5, 0x6, 0x3, 0x5, 0x5, 0x4, 0x5, 0x9, 0xb, 
0x4, 0x6, 0xc, 0x4, 0xc, 0xe, 0xd, 0xe, 0xd, 
0x4, 0x6, 0x5, 0x5, 0x6, 0x3, 0x5, 0x5, 0x5, 
0x5, 0x4, 0x4, 0x5, 0x5, 0x3, 0x0, 0x6, 0x6, 
0xd, 0x6, 0x2, 0xd, 0xe, 0x0, 0xe, 0xe, 0xa, 
0xe, 0x6, 0x5, 0xe, 0x6, 0xc, 0x5, 0x5, 0xc, 
0x4, 0x2, 0xd, 0x5, 0xd, 0xe, 0xc, 0xe, 0xc, 
0xd, 0x5, 0x6, 0xd, 0x4, 0x6, 0xe, 0xd, 0x5, 
0xd, 0x5, 0x6, 0xd, 0x4, 0x5, 0xc, 0x5, 0x5, 
0xe, 0xd, 0xd, 0xc, 0x4, 0x4, 0x5, 0x5, 0x6, 
0xd, 0xd, 0xd, 0xd, 0x2, 0x5, 0x4, 0x6, 0x6, 
0x4, 0x4, 0x5, 0x5, 0x5, 0x4, 0x5, 0x4, 0x4, 
0x6, 0x5, 0xc, 0x5, 0x3, 0xe, 0x5, 0xc, 0xd, 
0x4, 0x5, 0x4, 0x4, 0x5, 0x3, 0x4, 0x5, 0x5, 
0xd, 0xe, 0xe, 0xd, 0xd, 0xc, 0xc, 0x2, 0x5, 
0xc, 0xc, 0xd, 0xd, 0xc, 0xd, 0xd, 0xd, 0xc, 
0xb, 0x4, 0x3, 0xb, 0x6, 0x5, 0x4, 0x6, 0x4, 
0x9, 0x3, 0x2, 0xe, 0xe, 0xe, 0xb, 0xd, 0xc, 
0xb, 0xd, 0xc, 0x3, 0xe, 0xd, 0x5, 0x6, 0x5, 
0x4, 0x2, 0x2, 0x3, 0x6, 0x5, 0x3, 0x7, 0x5, 
0x5, 0x7, 0x6, 0x2, 0x4, 0x3, 0xc, 0x4, 0x3, 
0xb, 0x1, 0x3, 0xd, 0x5, 0x6, 0xd, 0x4, 0x6, 
0xd, 0xd, 0xa, 0xc, 0xd, 0xd, 0xb, 0xd, 0xd, 
0x0, 0xe, 0x3, 0x6, 0x3, 0xe, 0x5, 0x5, 0xe, 
0xc, 0xa, 0xc, 0x6, 0x5, 0xe, 0x4, 0x6, 0xd, 
0x2, 0x3, 0xc, 0x9, 0xd, 0xe, 0x2, 0xe, 0xd, 
0x0, 0xc, 0xc, 0xd, 0xd, 0xc, 0xd, 0xd, 0xd, 
0x5, 0x6, 0x6, 0x4, 0x5, 0x4, 0x3, 0x5, 0xc, 
0x5, 0x6, 0x5, 0x2, 0x6, 0x5, 0xb, 0x0, 0x4, 
};

static int backbone_model2_conv2_relu2_threshold[64 * 7] =
{ // torch.Size([64, 7])
53, 116, 178, 241, 335, 460, 711,
54, 121, 187, 254, 354, 487, 753,
29, 92, 155, 218, 313, 439, 691,
25, 74, 124, 173, 247, 346, 543,
54, 118, 181, 245, 340, 467, 721,
51, 126, 202, 278, 391, 543, 845,
24, 100, 177, 253, 368, 521, 828,
39, 109, 179, 249, 354, 494, 774,
23, 92, 162, 231, 335, 474, 752,
46, 105, 165, 225, 314, 433, 672,
-11, 67, 147, 226, 346, 505, 823,
46, 102, 159, 215, 300, 413, 638,
37, 94, 152, 209, 296, 411, 641,
16, 80, 144, 207, 303, 430, 685,
34, 111, 187, 264, 379, 532, 839,
19, 60, 100, 140, 201, 282, 444,
40, 109, 179, 249, 353, 493, 771,
49, 114, 179, 244, 342, 473, 734,
35, 93, 151, 210, 297, 413, 646,
40, 112, 184, 256, 364, 508, 795,
41, 112, 182, 252, 357, 497, 777,
39, 96, 153, 210, 295, 410, 638,
59, 123, 186, 250, 345, 473, 727,
16, 71, 126, 181, 263, 374, 594,
14, 80, 146, 212, 311, 443, 708,
51, 93, 135, 177, 241, 325, 494,
59, 121, 184, 247, 341, 467, 718,
40, 120, 199, 278, 397, 556, 873,
48, 118, 188, 259, 364, 505, 786,
43, 92, 142, 192, 266, 366, 564,
22, 75, 127, 179, 258, 362, 571,
11, 35, 59, 83, 120, 168, 264,
26, 75, 123, 172, 245, 343, 538,
12, 67, 122, 177, 259, 369, 589,
37, 98, 159, 221, 313, 435, 681,
23, 71, 120, 168, 240, 337, 530,
55, 113, 171, 229, 316, 432, 665,
33, 114, 195, 276, 397, 559, 884,
33, 111, 190, 268, 386, 543, 856,
62, 125, 189, 253, 348, 476, 731,
52, 107, 163, 218, 302, 413, 635,
37, 100, 162, 225, 318, 444, 694,
67, 118, 170, 221, 298, 401, 606,
36, 103, 170, 238, 339, 473, 743,
48, 105, 161, 218, 303, 416, 642,
45, 102, 159, 215, 300, 414, 640,
36, 87, 138, 189, 265, 367, 570,
31, 85, 138, 192, 272, 378, 592,
30, 75, 121, 166, 234, 324, 506,
38, 101, 163, 226, 320, 446, 697,
19, 79, 140, 200, 290, 410, 651,
35, 95, 156, 216, 307, 428, 669,
38, 108, 178, 248, 354, 494, 775,
51, 114, 178, 241, 337, 464, 718,
29, 119, 209, 300, 435, 615, 976,
36, 107, 178, 249, 355, 497, 781,
47, 111, 175, 239, 335, 464, 720,
25, 73, 121, 169, 241, 338, 530,
46, 104, 161, 219, 305, 421, 651,
52, 121, 190, 259, 363, 501, 777,
48, 131, 214, 296, 420, 585, 915,
25, 83, 141, 200, 287, 404, 637,
29, 117, 206, 294, 427, 603, 957,
30, 113, 196, 280, 405, 571, 905,
};

static uint64_t backbone_model3_conv1_conv1_weight[64 * 1*4] =
{ // torch.Size([64, 1, 1, 64])
0xc4c00d4a40cba245,0x3ddc5c34b9dbccc5,0xcb445b26aedc45c4,0xd5ac2544d2d465d4, 
0x36a02490464a9a5b,0xd5c1bcdd44aada2c,0xc44cc56d424dc420,0x45c0045a55c31422, 
0xcdce3ab4d5541b6d,0x5dc555dbc33d1d55,0x412b4d3624dc5d9d,0xe5d0b5b6d436b425, 
0x2babc124442b5a3c,0xbdd2ac4d0cb516d6,0xcc5c24434154ccc4,0x3659cc39cbbdcbdc, 
0xcd6db665d93c3ec3,0xda3a5adda34c9a5a,0xa3b54c1aa55ab1bc,0x0139b0a29605d333, 
0xc4ccce3d34554d5d,0xcc35d3dd35cb3ccd,0xdb0ddb4d545d454b,0x64433c4b4bdadcea, 
0x523bc32b44cad2da,0xd51b19cc93c314bd,0x5c24dbb4c30b15b9,0xadbd1c1c54e93ddc, 
0xb59d524ad34ecbbb,0x9c2d3154a4195510,0x45c45ed903bbc09b,0x9434daec4ccb49d5, 
0xe5ca53b5262dda24,0xbd4c1c5033e9ab33,0x955b45504bccb344,0x5c3cc4533bd3a5cc, 
0x5d43c35c59c3c3db,0x443dc552d5a16c22,0xbd4243c40ba0e164,0x4d4cdec5b1bc599a, 
0xad24a5b3bcc5dad4,0x4bbb55535ddc65d4,0xacb2ccb40ee562ce,0x9c50514d94bcd9ab, 
0x5dc4ba344d3d05b4,0xd544614bcc54c233,0xddcb3ccceb34cbd4,0xcbc10ccc4b2dbcab, 
0x0350d1bb9dcc3c55,0x5659ccc433d243d4,0x5d552dd2a35ccdbc,0xd4dbbacc5dc54c0c, 
0xc515bcc414cc4756,0x35cccc3b55434ba5,0xdd1eb4c22dcd45b3,0x423d9401c55d4444, 
0x2cc54bcab4b4d540,0x55239b56ca5554d6,0x4d04c3cddb5332a5,0x5a0dbcb4de55cd6d, 
0xd5004442d5db3d13,0xbd3c0ccbcbbd3bac,0x450a525dd442a33d,0x46a5c45b26b3c506, 
0x44e44530dcda9392,0x923c50344e5a4cb4,0x3d354bc4c444644c,0x142d36d4d45452ad, 
0x5dac3b455cdbd0db,0x44dd6e04c3a4d336,0x5ac4b335da9dcda4,0xd4d3ca41dda5b4b5, 
0x2caecdbd44c24441,0x5942b3dc34cd2dcc,0x2ccd4c043c2c544b,0xd4cb3c45cb040143, 
0xce431cbc4db4b625,0xb553a5c13d54443c,0x1bddadb4d32243c5,0xbcbc29e4ab3dcb5c, 
0xcb54cdd403dd4635,0x6359d6dd455c3bb4,0x3b4dedc5c3cdd6c3,0x244b3d1545c55c5d, 
0xadc53cc9bbd6559b,0x5dc4465cddcc4544,0x54034b45e3544acc,0x144b4939d1bb53b3, 
0xc430ed5debcbe255,0xc5662dcd2ccda4dd,0xc4c54dddb144c44b,0xc3b224cd6b39ddba, 
0x4903bbe44a4143cc,0x4c4456b04dc1cd52,0x5ad51a261cccbccc,0x44bc54144e155933, 
0x33ddc46959bc51b4,0x034c323c45c0bde4,0xdea43abbd546c335,0xd2e23abb02bc3b4b, 
0xdcbccdb6b4d534bb,0x0ed3d44e25ada5cd,0x0cbdd39dc3db5ddd,0x5059455cad4cddc4, 
0xacb4445c33cc94c4,0xd5dcbda0d2e5b41c,0x2b304bc5d403e4cb,0x94d3dcb2e5cdacbb, 
0xd5553c4c3cc3e455,0xe4405325cd44d9a5,0x4dd9bcc5e5042434,0xc4bd3424a4d55d3a, 
0x6943cbbc3dbb3345,0xc5435db32455ce9c,0x5eb4c4515cedd3a4,0xdce4b45c4344c44c, 
0x5b34ddad2e53445b,0x555025e4b9054354,0x4badedd5455acc40,0xab403ee5224c424d, 
0x3c13ab5dc44495cb,0x4c4dd5d452ec9343,0xc3cecb9223d343cd,0x4c2c5d45d43d00c0, 
0x5e4aa544bda35ddd,0x352344cc4b1c045c,0xd334dcd33b1cbcdd,0xcddb2c2cdd34b0ab, 
0xa414acacca33e545,0xdad04353c3456b51,0x4c0d5b3a2d4c5315,0x3c41eea55b5dbbb1, 
0xbdba3444cd54dddc,0x4b9bcd35bdb33534,0xc6d424a524bc3bad,0x4cd635bc333cd5c5, 
0x4d5224b42bc45dc3,0x5bbb6645a6c45441,0x44440cc545bd5346,0x2ddd9dc5ec23b451, 
0xcbba544db254433e,0xbd49d4c5adb6dd5d,0xd5dd642d52d50e4a,0xac5c44adcc2db4d5, 
0x1ac4ddbc4dd435d9,0xc2cedd9cd463d545,0xe4eedb35d3dd4d05,0xda96142dd36ed6c4, 
0x3c6db45b9ed3c041,0x2b5dd434bc53ddc4,0xc41dcddbc64c5cec,0xdad5cdd5b644ca9d, 
0xc4d5addc192c439d,0x1353dedd954cd54c,0xd5cbe54dd46bdc49,0x5214143d943d23ca, 
0x5ecc355d2e345dd4,0xc04155dca4cd4b5c,0xc5ca0cd5354c552d,0xdb253aed553c92cb, 
0x4bbd4d6c5c6c9b2d,0xdcd4b4b5cd360c33,0xad5cd1dc5dc25dc5,0x4cb1ccb9d43901cc, 
0xb43cccd054352222,0xa3bacd4d5534a4ad,0xbeac145c3dcb5544,0x5d5d654c3d23ecd5, 
0x0a4d45c443cc1ed4,0x55ce33c54cc3b43b,0xa554d1b514acc5d5,0x3cb5ca44e4c5324c, 
0xd42bbb43cb45cb4c,0xcc95e6b23ccccbdd,0xdcd0ebddb53c5cdb,0x4dc163bcdbcdcbbc, 
0x5c2d54adddc54403,0x5ab3c953bd51442c,0x45dd5dcd523494dc,0xd3d42bedad3bb954, 
0x5ba50352bc5c4bcb,0x3d5335d03dd3ce31,0x5a401c9555d3bc4d,0x22d535c4b4ba534b, 
0xdac4cd9493d46d5b,0x2ed505256bac4e4b,0xdccc3b0bd6554e46,0xb41555b6dd494293, 
0x0ac454a3cb553bc5,0x5d659392bd534cc4,0x5b45534d34c24551,0x553435bc2255cb52, 
0x3dad34b5350ad5bd,0xe4cd4dad15dc6c3d,0x22455cc34ddd5c64,0xac14d4c5d44cc5ec, 
0xe35d553bb333ddc4,0x02c3cab24dbcc23c,0xc514430d4bc496ed,0x4c23454d154ad42a, 
0xb5dd3c4cd3add134,0x1cbb1dd35dccedec,0xdd132c41cbda35d5,0x3cda5511414a54cb, 
0xcdb4aa0ceb363b2c,0x4d45c54bd91b5c4c,0x34913563d550c34d,0x4b433d5d4a043bc4, 
0x5bd0344443aca244,0xdb14524ca53ad9f4,0x4d22eccdb23c53dc,0xd3da453cdca43c1d, 
0x529a4c4cc5bd4c5c,0x431dbc51eceb53c6,0xdb51c3bb95549b4c,0x5553de23943d4add, 
0x412213504d545242,0xd455b2cd45e205d2,0xab5cd40e404acc40,0x3da24bac322bda3d, 
0xcab2d75cd41c3632,0xdcdbddd340004c06,0x65bdbb4c56c95e44,0x3d46bc55d76d667c, 
0x5dab342d45cc4c44,0x5d2dc53b35eddd4c,0x44543cb44b2e94dc,0x454c1d23d6d340eb, 
0x4d6433c0dc443c24,0x33d44231dd54c435,0x42bbcdca4c3205ed,0xa419ccdc3c3bccad, 
0x5ec4c54bbcdaabd3,0x4eed44429cc1b440,0x55c43cc9cddc4cd4,0xcdc34c25d32c4252, 
0x29b4b45cdb4c4133,0x5442a324e2555934,0x02cb4db0b043db63,0x3545eee635035b94, 
0x1b25db39ec4a5363,0xca45354be1ccca14,0x34355c24cd43cc4d,0x36b9db4d434244a6, 
0xd5d54095c422125c,0xac434cc14cd34445,0x4b01b53d03c4c945,0x444506c4e35c5360, 
0x4d424b4c1c42beb2,0xdd54a0c9b5d9c31d,0x45b91b3454439d3c,0x1ba5113c42dcc3d9, 
0x315cfc4e5cdcc524,0x45bc3ced95cdc1cc,0x4d2cad2bdc0c03ac,0xe0bc3e6244da4b24, 
};

static int backbone_model3_conv1_quant1_threshold[64 * 14] =
{ // torch.Size([64, 14])
-912, -575, -407, -281, -196, -112, -28, 55, 139, 223, 307, 434, 602, 939,
-1002, -631, -446, -307, -214, -122, -29, 63, 155, 248, 341, 480, 665, 1036,
-875, -549, -386, -263, -182, -100, -19, 62, 143, 225, 307, 429, 592, 918,
-889, -566, -404, -283, -202, -121, -41, 39, 120, 201, 282, 403, 565, 888,
-656, -417, -297, -208, -148, -88, -29, 30, 90, 149, 209, 299, 418, 657,
-1008, -654, -477, -345, -256, -168, -79, 8, 96, 185, 273, 406, 583, 937,
-986, -632, -455, -323, -234, -146, -57, 30, 119, 208, 296, 429, 606, 960,
-724, -462, -331, -233, -168, -102, -37, 27, 93, 158, 224, 322, 453, 714,
-901, -568, -401, -276, -193, -110, -27, 56, 139, 222, 305, 430, 597, 930,
-829, -523, -371, -256, -180, -104, -27, 48, 124, 201, 277, 391, 544, 849,
-858, -554, -402, -288, -212, -136, -60, 15, 91, 167, 243, 357, 509, 814,
-848, -541, -387, -272, -196, -119, -42, 34, 110, 187, 264, 379, 532, 839,
-903, -575, -411, -288, -206, -124, -42, 39, 121, 203, 285, 408, 572, 900,
-1204, -756, -532, -364, -252, -140, -28, 83, 195, 307, 419, 587, 811, 1259,
-1081, -683, -484, -335, -236, -136, -37, 61, 161, 260, 360, 509, 708, 1105,
-1057, -665, -470, -323, -225, -127, -29, 68, 166, 263, 361, 508, 704, 1095,
-731, -458, -321, -218, -149, -81, -12, 55, 124, 192, 261, 363, 500, 774,
-1130, -723, -520, -368, -266, -164, -63, 38, 140, 241, 343, 495, 699, 1105,
-977, -624, -448, -316, -228, -140, -52, 35, 123, 211, 299, 431, 608, 960,
-980, -625, -448, -315, -226, -137, -49, 39, 128, 216, 305, 438, 615, 970,
-1027, -647, -458, -315, -220, -126, -31, 63, 158, 253, 348, 490, 680, 1060,
-941, -589, -413, -281, -194, -106, -18, 69, 157, 245, 333, 465, 641, 993,
-1048, -673, -485, -344, -251, -157, -63, 30, 123, 217, 311, 451, 639, 1014,
-775, -488, -344, -236, -165, -93, -21, 50, 122, 194, 265, 373, 517, 804,
-814, -517, -368, -257, -183, -108, -34, 39, 113, 188, 262, 373, 522, 819,
-987, -646, -475, -346, -261, -176, -90, -5, 80, 165, 251, 379, 550, 892,
-979, -632, -459, -329, -242, -156, -69, 17, 104, 190, 277, 407, 580, 927,
-888, -561, -398, -275, -194, -112, -30, 51, 132, 214, 296, 418, 582, 908,
-1091, -700, -504, -357, -259, -161, -64, 33, 131, 229, 327, 474, 669, 1061,
-1008, -638, -453, -314, -222, -129, -37, 55, 147, 240, 333, 471, 656, 1027,
-952, -611, -440, -312, -227, -142, -57, 27, 113, 198, 283, 411, 581, 922,
-873, -567, -414, -299, -222, -146, -69, 6, 83, 160, 236, 351, 504, 811,
-876, -552, -390, -269, -188, -107, -26, 55, 136, 217, 298, 419, 581, 905,
-1058, -674, -482, -338, -242, -146, -50, 45, 141, 237, 333, 478, 670, 1054,
-1193, -749, -526, -360, -248, -137, -26, 84, 195, 306, 417, 584, 806, 1251,
-845, -544, -394, -281, -206, -130, -55, 19, 94, 170, 245, 358, 508, 810,
-1339, -862, -623, -444, -325, -205, -86, 32, 151, 271, 390, 569, 808, 1285,
-897, -571, -408, -286, -205, -124, -42, 38, 119, 201, 282, 404, 567, 892,
-1145, -737, -533, -380, -278, -176, -75, 26, 128, 230, 332, 485, 689, 1096,
-937, -598, -429, -302, -217, -132, -47, 36, 121, 206, 290, 418, 587, 926,
-848, -543, -391, -277, -201, -125, -49, 26, 102, 179, 255, 369, 521, 825,
-983, -632, -457, -325, -237, -149, -62, 25, 113, 201, 289, 420, 596, 947,
-932, -595, -426, -300, -216, -132, -48, 36, 120, 204, 288, 415, 583, 920,
-875, -575, -425, -313, -238, -163, -88, -13, 61, 136, 211, 323, 473, 773,
-813, -519, -372, -262, -188, -115, -42, 31, 104, 178, 251, 361, 508, 802,
-934, -587, -413, -283, -196, -109, -22, 64, 150, 237, 324, 454, 628, 976,
-911, -577, -410, -285, -202, -118, -35, 47, 131, 214, 298, 423, 590, 923,
-893, -553, -383, -255, -170, -85, 0, 84, 169, 255, 340, 467, 638, 978,
-1026, -655, -470, -332, -239, -146, -54, 38, 130, 223, 315, 454, 639, 1009,
-895, -576, -416, -297, -217, -137, -58, 21, 101, 181, 260, 380, 539, 858,
-719, -468, -343, -249, -186, -124, -61, 1, 63, 126, 189, 283, 408, 659,
-727, -466, -336, -239, -173, -108, -43, 21, 86, 151, 216, 314, 444, 704,
-944, -607, -439, -313, -228, -144, -60, 23, 107, 191, 276, 402, 570, 907,
-882, -558, -396, -274, -193, -112, -31, 49, 130, 211, 292, 413, 576, 900,
-898, -574, -412, -291, -210, -129, -49, 31, 112, 193, 274, 395, 557, 880,
-1193, -730, -499, -325, -210, -94, 21, 136, 252, 368, 484, 657, 888, 1351,
-1065, -679, -485, -340, -244, -147, -50, 46, 142, 239, 336, 481, 674, 1061,
-782, -499, -358, -252, -182, -111, -41, 29, 100, 170, 241, 347, 488, 770,
-1013, -648, -465, -328, -237, -146, -55, 36, 127, 218, 309, 446, 629, 994,
-895, -560, -393, -267, -183, -100, -16, 67, 151, 234, 318, 444, 611, 946,
-757, -473, -331, -225, -154, -83, -12, 58, 129, 200, 271, 377, 519, 803,
-879, -547, -380, -256, -173, -90, -7, 75, 158, 242, 325, 449, 615, 948,
-479, -308, -223, -158, -116, -73, -30, 12, 54, 97, 140, 204, 290, 461,
-1468, -959, -705, -514, -387, -260, -133, -6, 120, 248, 375, 565, 820, 1328,
};

static uint64_t backbone_model3_conv1_conv2_weight[64 * 9] =
{ // torch.Size([64, 3, 3, 1])
0xc, 0xd, 0xb, 0x5, 0x5, 0x5, 0x4, 0x5, 0x5, 
0x4, 0xa, 0x5, 0x4, 0x3, 0x6, 0x4, 0x9, 0x1, 
0x5, 0x6, 0x3, 0x3, 0x3, 0x3, 0x1, 0x4, 0xb, 
0xc, 0xb, 0x2, 0xc, 0x5, 0x3, 0x0, 0x6, 0x4, 
0xd, 0x5, 0x6, 0xd, 0x2, 0x5, 0x9, 0xd, 0x0, 
0x4, 0x6, 0xc, 0x9, 0x6, 0xb, 0xc, 0x3, 0xa, 
0x5, 0x3, 0x2, 0x5, 0x5, 0x4, 0x0, 0x4, 0xa, 
0x2, 0x9, 0xc, 0x4, 0x6, 0xb, 0xe, 0xc, 0x4, 
0x9, 0x7, 0x0, 0xa, 0xe, 0xa, 0x3, 0x3, 0x2, 
0xc, 0xa, 0x4, 0xe, 0xa, 0x5, 0x0, 0x4, 0x4, 
0xe, 0x4, 0x4, 0xd, 0x4, 0x4, 0xc, 0xd, 0xd, 
0x4, 0xd, 0xc, 0x5, 0xe, 0xc, 0x5, 0xb, 0xa, 
0xc, 0x5, 0x4, 0xd, 0x6, 0x4, 0xc, 0x3, 0x2, 
0x4, 0x5, 0x4, 0x4, 0x5, 0x2, 0x4, 0x4, 0xb, 
0x5, 0x0, 0xd, 0x0, 0xd, 0xc, 0xc, 0xd, 0x3, 
0x6, 0xb, 0xb, 0xd, 0xc, 0xb, 0xc, 0x4, 0x4, 
0x4, 0x4, 0x5, 0xb, 0xd, 0x4, 0xd, 0xe, 0x0, 
0xe, 0xe, 0x9, 0xd, 0xc, 0xa, 0xc, 0x2, 0x0, 
0x5, 0x5, 0xb, 0xc, 0xd, 0x3, 0xd, 0xb, 0xc, 
0x4, 0xc, 0xd, 0x4, 0xd, 0x3, 0x6, 0x4, 0x0, 
0xa, 0x3, 0xe, 0xa, 0xc, 0xe, 0x2, 0xd, 0xa, 
0x1, 0xc, 0xb, 0x9, 0xd, 0x4, 0x5, 0x6, 0x5, 
0xb, 0xf, 0x1, 0x3, 0xc, 0xb, 0xc, 0x4, 0xa, 
0xb, 0xe, 0xc, 0xd, 0xc, 0x5, 0xc, 0x3, 0x5, 
0x0, 0x6, 0x4, 0xd, 0x4, 0x5, 0xd, 0xe, 0x3, 
0xc, 0x2, 0xb, 0xc, 0x4, 0xd, 0xc, 0xd, 0xc, 
0x4, 0xd, 0xd, 0x5, 0xb, 0xc, 0x4, 0x1, 0xd, 
0xa, 0xd, 0xb, 0xe, 0x4, 0xb, 0xd, 0x4, 0x3, 
0xc, 0xb, 0xd, 0xc, 0xe, 0x2, 0x1, 0x4, 0x0, 
0x9, 0xe, 0x3, 0x3, 0x5, 0xa, 0x0, 0xb, 0xc, 
0x4, 0x5, 0xc, 0x4, 0x2, 0xd, 0x3, 0xc, 0xe, 
0x6, 0xc, 0xd, 0x3, 0x5, 0xc, 0xd, 0x5, 0x2, 
0xd, 0x4, 0x4, 0xc, 0x6, 0x2, 0xb, 0x5, 0x4, 
0x6, 0x4, 0xc, 0x4, 0x5, 0x9, 0x1, 0x0, 0xa, 
0xc, 0xc, 0x9, 0xe, 0xc, 0x2, 0xd, 0xa, 0x2, 
0xa, 0x4, 0x4, 0xc, 0x7, 0x9, 0x2, 0xb, 0x2, 
0x4, 0x4, 0x4, 0x4, 0x4, 0x4, 0x2, 0x4, 0x4, 
0xd, 0x1, 0x4, 0xd, 0x4, 0xb, 0x4, 0x6, 0x4, 
0x0, 0x3, 0x4, 0xc, 0x5, 0x5, 0xb, 0x4, 0x5, 
0xd, 0x4, 0xc, 0xe, 0xc, 0xa, 0x4, 0xc, 0x0, 
0x1, 0xd, 0xb, 0x9, 0x7, 0x2, 0xb, 0xb, 0x2, 
0x5, 0x3, 0x9, 0x6, 0xb, 0x3, 0x4, 0xb, 0xa, 
0x4, 0x5, 0x3, 0xa, 0x0, 0x2, 0xc, 0xf, 0xc, 
0x4, 0x4, 0xe, 0x4, 0x6, 0xd, 0x3, 0x5, 0x0, 
0xc, 0xe, 0x2, 0x5, 0xe, 0x3, 0xa, 0x6, 0x5, 
0x5, 0x5, 0x9, 0xb, 0xd, 0xb, 0xe, 0xd, 0xa, 
0x3, 0x0, 0x9, 0x4, 0x6, 0x0, 0x4, 0x5, 0x5, 
0x4, 0xd, 0xe, 0x5, 0xd, 0xd, 0x5, 0x4, 0x1, 
0xb, 0xc, 0x4, 0x1, 0xb, 0x4, 0x4, 0x6, 0x3, 
0x3, 0xe, 0xe, 0x4, 0xd, 0xc, 0x3, 0x5, 0x5, 
0xc, 0xd, 0xd, 0x3, 0x0, 0x9, 0x6, 0x5, 0x5, 
0xb, 0xc, 0x3, 0x5, 0x5, 0x3, 0xc, 0xe, 0x4, 
0x4, 0xd, 0xd, 0x5, 0xb, 0xd, 0xa, 0x4, 0x3, 
0x6, 0x1, 0xc, 0x4, 0xd, 0xc, 0x3, 0xc, 0x2, 
0xd, 0xd, 0x3, 0x4, 0xc, 0x5, 0xb, 0xa, 0x5, 
0xc, 0xd, 0xc, 0x0, 0xd, 0xd, 0xa, 0xd, 0xc, 
0x5, 0xc, 0xc, 0x6, 0x4, 0xb, 0x5, 0x5, 0xc, 
0xb, 0xd, 0xa, 0xd, 0xc, 0x4, 0x5, 0x5, 0x3, 
0xb, 0x5, 0x5, 0xd, 0x5, 0x4, 0xd, 0x4, 0x4, 
0x9, 0x4, 0x4, 0xc, 0xe, 0x4, 0xb, 0x9, 0x5, 
0x5, 0x5, 0x4, 0xc, 0xe, 0x2, 0x1, 0x0, 0xb, 
0xe, 0xd, 0x4, 0xc, 0xb, 0x2, 0x4, 0x4, 0x4, 
0x5, 0xc, 0xc, 0xe, 0xc, 0x5, 0xd, 0x3, 0x5, 
0xb, 0xb, 0x4, 0x1, 0xf, 0x3, 0xb, 0x3, 0x3, 
};

static int backbone_model3_conv1_relu2_threshold[64 * 7] =
{ // torch.Size([64, 7])
17, 73, 128, 184, 268, 379, 602,
24, 64, 104, 143, 203, 282, 441,
22, 73, 124, 175, 251, 353, 557,
22, 54, 86, 118, 166, 230, 359,
23, 106, 189, 272, 396, 562, 894,
16, 68, 120, 172, 250, 354, 563,
14, 42, 71, 99, 142, 198, 312,
25, 55, 86, 117, 162, 223, 346,
19, 64, 110, 156, 224, 315, 497,
30, 67, 103, 139, 194, 267, 412,
20, 60, 101, 141, 202, 283, 446,
25, 62, 99, 136, 191, 265, 412,
11, 54, 98, 141, 206, 293, 466,
28, 63, 99, 134, 188, 259, 402,
8, 54, 100, 145, 214, 305, 488,
13, 37, 60, 84, 120, 168, 264,
17, 66, 114, 163, 236, 333, 528,
29, 79, 129, 180, 255, 356, 557,
17, 50, 84, 117, 167, 233, 366,
16, 48, 80, 112, 160, 224, 352,
17, 87, 156, 226, 331, 471, 751,
7, 58, 108, 159, 235, 337, 540,
20, 82, 143, 205, 298, 421, 667,
6, 62, 118, 174, 258, 370, 595,
26, 79, 133, 187, 267, 374, 589,
14, 50, 85, 120, 173, 244, 385,
14, 50, 85, 121, 174, 245, 387,
18, 64, 110, 156, 225, 317, 501,
7, 57, 107, 156, 231, 331, 530,
9, 34, 58, 82, 118, 167, 264,
24, 74, 123, 173, 247, 347, 546,
19, 53, 87, 121, 172, 240, 376,
23, 62, 102, 141, 200, 279, 437,
16, 67, 119, 170, 247, 351, 557,
20, 70, 119, 169, 243, 342, 541,
6, 71, 137, 203, 301, 432, 695,
22, 52, 81, 111, 155, 215, 334,
21, 54, 87, 121, 171, 237, 371,
12, 54, 95, 137, 200, 284, 451,
8, 58, 108, 158, 232, 332, 530,
22, 72, 121, 171, 246, 345, 544,
17, 54, 91, 128, 184, 258, 407,
14, 61, 107, 154, 224, 317, 503,
23, 57, 92, 126, 178, 247, 385,
17, 77, 136, 196, 285, 404, 642,
26, 69, 112, 155, 219, 305, 477,
43, 105, 167, 229, 323, 447, 696,
17, 60, 102, 144, 207, 291, 460,
14, 45, 76, 107, 154, 216, 341,
9, 70, 131, 192, 284, 406, 650,
18, 71, 124, 177, 256, 361, 572,
21, 58, 95, 132, 188, 261, 409,
23, 52, 80, 109, 152, 210, 325,
18, 52, 85, 119, 169, 236, 370,
10, 47, 84, 122, 178, 252, 401,
30, 71, 112, 153, 215, 297, 462,
18, 76, 134, 192, 278, 394, 625,
17, 49, 82, 114, 163, 228, 358,
10, 55, 101, 146, 214, 304, 485,
20, 48, 75, 103, 145, 200, 311,
22, 56, 90, 124, 175, 243, 378,
4, 44, 84, 124, 184, 265, 425,
30, 97, 164, 231, 332, 466, 734,
13, 73, 134, 195, 286, 407, 650,
};

static uint64_t backbone_model3_conv2_conv1_weight[64 * 1*4] =
{ // torch.Size([64, 1, 1, 64])
0x69dcdc4ddb24a5cd,0xccb4c205dc4d2453,0xb5d5355502d4b65e,0x4b4cc344dcbb05bc, 
0x1c34543abc4940b5,0xd434439bd0d3d5cc,0x51dbd34c3c4552a4,0xd42d533e49352034, 
0xd3cc91c2445494a3,0x5d9b433c52bb4bdd,0xdba4cd3c95edad9c,0x944c1cda3d40344c, 
0x441cbd26455dcc4c,0xdcaaddc2b5c3a34d,0x334cd63bc34a44d5,0x344455ac563b4b54, 
0xcc31443c1bc343c5,0xc5c056c240ea52d3,0x04c543945b54db44,0xd4be94bba5554ca4, 
0x5914c4c454a21a51,0x54993dcb35313344,0x3db24432e23b135b,0x4b44945344cedc5d, 
0x315cc3d4c5ccdb94,0x349c326c4b43cb44,0xa3d519912dbbc5bc,0x5c33a43ea0da4b53, 
0x4a2652c5c5bb5455,0xb45b3b32c415dd44,0x5da9445db6cc5c34,0x5d2d32c9c42ca54b, 
0x4b4c41c4b9c4c03a,0xd3b3cc3bd2cad3cc,0x539ce43d22b25ceb,0xccda5dc4d34c440b, 
0x4ec44d4e4dcd3240,0xb4c95dc4239342cb,0xb044a3db5e44d52b,0xcec4db43354e3dbb, 
0x4d4c33d543cd52c6,0x469d4a4d54c5d44b,0xcbb5bc2494a50443,0xb555b45c25d3bc55, 
0x4c460c5b403b5549,0xb51a9c534c551d93,0xd5bc416c44bbd13b,0x4d45d3bcdc2c44c4, 
0x3cbc5b9d9aa3bdcc,0x5aca45c346033c4b,0x45cb4b3ae4b5cb3b,0xe533bebcb1b5344c, 
0xbb25bba44445d55c,0x04d12535d3490c3b,0x2c5a33cab45ccd52,0x5c50dcb4e04cb6cb, 
0xc353db5555552b45,0x6444454c455ad5d5,0x54d5a405aeada354,0x5196543c4643554b, 
0x5dcb2bc445541c3c,0xd5cc0b3b44cb4de3,0x44c3c55dd42ceab3,0x3eb5332bc4de451c, 
0x44bde4511599dc1c,0x3d54e5c52544c555,0x4d3cc4334a6d51b4,0x91491bc253d00c6a, 
0xb9355bc2a2ed3645,0xb24d53c0c4c2cd52,0xad5502c5b6d3b3d5,0x4dd4c6cc5ada4dd3, 
0xccd2bc35b4333c33,0xb3dc9daac6334ed3,0x59c4dc33d0ac3444,0xb32204d2c1accc5b, 
0x5bc493a3a5444bac,0x5299dd4bd4bdcc54,0x5dbac5d4edc03cdd,0x3bc55c514dbdc41c, 
0x135cc03bb4bde35c,0x4c24d546b54b92ba,0xb3454cc44b6cb5a1,0x23a4e3c354db3d5b, 
0xd2429c25c0b3cb44,0x4b43bbb42149b3c4,0x5cbccd6c4ccdcca4,0xb54554a3a543bc45, 
0x33cee4dac9cba42d,0x0c4c95a335c32444,0x190bd3b24b33ccd1,0xc3e3c4955ad43e45, 
0x5c4ca635559dcc5c,0x3c20a992ddb4cb6a,0x5a4a4433a6bc49c3,0x4dd25acd462d34c2, 
0xb4956dd3215c90c6,0xa44c51d954ccb65d,0xc4d9cb431cc641bb,0x3650346cb53cc4d6, 
0x9b4c314de42db35c,0x449b1b0334025333,0xc1cc35a123b3c5d2,0xdc14c30950cda3ce, 
0x43943c434aa04945,0xb22d34d15a456c43,0xda343ba54a3de344,0x94553b2b5b42b2d4, 
0x4961444cb4229c3b,0xbd45cc44cd2ddcc1,0x54324dcbc5d254c3,0x5edc3ad4c45c4dbe, 
0xfa44454344434044,0x3549234d43b2b4b3,0x433c53d32431cd4b,0x3145b935c5493552, 
0xd4d3c4b54a562513,0xcc342595acada2d5,0x521b455e4bbdae54,0x53aa0544c544d53b, 
0xd35da355d5bb106d,0xcd49a4d0e43b31ba,0x34ddc544bb1d44d5,0xcac30acbbc3a2c9d, 
0xc344cc5dd4546652,0x54445ab5bd4c2c3d,0xcdd6cec4445d4533,0x9c542dd0a52a5b93, 
0x5dc543ccc15353c9,0x25dc5dca5e1d5acb,0xdbb44dcd1cd4ccbd,0xd9ca0b434b43c4b1, 
0x3549b50b0b55bc54,0x55e9b3bc4d2d45b4,0x440d556bc43c425e,0x40355c4cc34bb5a0, 
0x429cb135cd54d443,0x45eaddcb3d444dc4,0x5cc03cc5315c433d,0x445c5a2cc2b152c5, 
0x94925c141dac433d,0x1be44a4c45c35cae,0x55c41392d924b153,0x452b24ca430cccc2, 
0xb1e32c4b19cc5ad1,0x5cb214d3342152a4,0x9cb51a259d2454b3,0xd54d43b452a55cc5, 
0xcd5035c453523254,0xab3c44a4dd354453,0xca5d5311353d2c44,0x4453cc32a55dd69d, 
0x54b21d4cd11c14ce,0x04c49cc2cc4b4d2d,0xb523b554d49a32c0,0x0add45301cc9acbd, 
0xda4244d26bb4db50,0x54c4c4ccd5e4cc25,0x39da143dc5a9c439,0xcb5cbb31ca5dd259, 
0x96d9444c255cbd4c,0x9144b24c545504e5,0x00c0d3c3c54e3cb0,0x245b2da4cdec3c55, 
0xada555cd4a0bcbd5,0x46cc34635c34c1cc,0xbd3be35d2c45443d,0x5c53cb5bc5d5cc14, 
0x45544ac55b445b43,0xb524ab4444b452cd,0xcb4e444d32d21a54,0xc54bb424335ce4cc, 
0xc152bdad519aa39c,0x9a4c2a4104b3b52c,0xbcbccc404ac99bb3,0x2b45bbcba421cb42, 
0x45dbbdcb19d53414,0x2d6492c4cdadc545,0xbd0454cb5c22bb2d,0xad4b5d5bc03333cc, 
0x4ecb46c554144db5,0x44b04bcccc45d654,0x3b453c5b65145945,0xd1595dcc455aac5b, 
0x34ccd52dccadbc30,0xbc4cdb9d3c504c3d,0x02c50b354dc424c2,0x65d5434d5cd9dd52, 
0xb54d559435e6a433,0x4c5953639a341c56,0x6dccbc95cd555ccd,0xc0ba5d3956bccc34, 
0x01c4a911b55442db,0x1c3e13254c1b6453,0x395c1bd1bb4bacb1,0xa0024b0243b2a3ab, 
0xcacdc53dcc44e1dc,0x3c1a55da5d2139ca,0x4542dcb95d444cd4,0xb5dbc4cc5c35bdc2, 
0x4144444bbccdadcd,0x53b2d634b234915c,0xa40b25d4d234c44d,0x14c3ad4a94d4c5bd, 
0x4b94425b523cbe4b,0x3bc10cbb5354b592,0xc44c23954d54944b,0x45454c4db43c2232, 
0x325cd5bc02c45a3d,0x62cb40ab3c9b544d,0xbd45edc5ac54a5cd,0x24b4cdb934d350dc, 
0x5da544a5c4cc3a3d,0x95c443c3d1541444,0x43aac534d345a392,0x32c305431303d0dc, 
0xd5cc4cc3eaaac5bd,0x2dcd9ccacbbcad4c,0x39ddb24c4cddc9db,0xb42bdc5daedccc05, 
0xcc34545cdd04aa2c,0xdd94cce5dd9c312d,0x495b934544b559e5,0x24cc4dc5d504bd44, 
0x4dc95d3cd0e5c245,0x4cd295c4caddbd44,0x2cd53cc3d0e3dc1c,0xbddd4d6c1e5dd52b, 
0xd251b23a643b125c,0x6d3c5c4c10dcd9c2,0xc540cd6a4c4035c4,0x0b3034abbd50cba4, 
0x4a5ccb9a923cb1bc,0xdd45cac5ddcb21d9,0x4451bcc3c5445cc3,0xd90dbbb4c4ba530c, 
0x5ddabcc442a34c9c,0xb5c359c4b3bc43bb,0x95ce44ccdd54b34b,0x9244dc54c33bc5cd, 
0xbccbcdc54c1a43dd,0xcbdc4ecdccdd5dec,0xcc54b4dc2dcb2252,0x51acb6d29d4999dd, 
0xec3cbad333dccb3d,0x424c9ccdcb4cc95d,0x35ded4542c4a3dc3,0x5ca4924dcb40b4c3, 
0xcd5b1551cdbb346d,0xbd4b46450aec55a3,0xc33ccbba5dccb424,0x3d4da2d59d4e3cbc, 
0x5cc5c35cc54c0ccc,0xccbdcc446b5c4c90,0xbd5d5ddccbbadccc,0x3dc49bcc2bdbc352, 
};

static int backbone_model3_conv2_quant1_threshold[64 * 14] =
{ // torch.Size([64, 14])
-1176, -746, -531, -370, -263, -155, -48, 59, 166, 274, 381, 542, 757, 1187,
-799, -507, -360, -250, -177, -104, -31, 41, 115, 188, 261, 371, 517, 810,
-827, -528, -379, -267, -193, -118, -44, 30, 105, 179, 254, 366, 515, 813,
-955, -600, -423, -290, -201, -113, -24, 64, 152, 241, 329, 462, 640, 994,
-988, -613, -425, -284, -190, -96, -3, 90, 184, 278, 372, 513, 700, 1076,
-815, -518, -369, -257, -183, -109, -34, 39, 113, 188, 262, 374, 522, 820,
-927, -593, -427, -301, -218, -135, -51, 31, 114, 198, 281, 406, 573, 907,
-1086, -686, -486, -335, -235, -135, -35, 64, 164, 264, 364, 515, 715, 1115,
-865, -560, -407, -293, -216, -140, -64, 12, 88, 164, 241, 355, 508, 813,
-1318, -859, -630, -458, -343, -228, -114, 0, 115, 230, 344, 516, 746, 1205,
-843, -524, -364, -245, -165, -85, -6, 73, 153, 232, 312, 432, 591, 910,
-936, -595, -425, -297, -212, -127, -41, 43, 128, 213, 298, 426, 597, 938,
-832, -536, -389, -278, -204, -130, -56, 16, 90, 164, 238, 349, 496, 792,
-849, -535, -378, -260, -181, -103, -24, 54, 132, 211, 289, 407, 564, 878,
-913, -557, -378, -245, -156, -66, 22, 111, 200, 289, 378, 512, 690, 1047,
-1082, -703, -514, -372, -277, -183, -88, 5, 100, 195, 289, 431, 620, 999,
-1036, -652, -460, -317, -221, -125, -29, 66, 162, 258, 354, 498, 689, 1073,
-1038, -662, -474, -332, -238, -144, -50, 43, 137, 231, 325, 466, 654, 1031,
-788, -510, -372, -268, -198, -129, -59, 9, 78, 148, 217, 321, 460, 738,
-895, -583, -428, -311, -233, -155, -77, 0, 77, 155, 233, 350, 505, 817,
-963, -604, -424, -290, -200, -110, -20, 68, 158, 248, 338, 472, 652, 1011,
-867, -539, -375, -252, -170, -88, -6, 75, 158, 240, 322, 445, 609, 937,
-1132, -732, -532, -382, -282, -183, -83, 16, 116, 216, 316, 466, 666, 1066,
-1026, -642, -450, -306, -210, -114, -18, 77, 173, 269, 365, 509, 701, 1085,
-956, -597, -418, -283, -194, -104, -14, 74, 164, 254, 343, 478, 657, 1016,
-863, -553, -398, -281, -204, -126, -49, 28, 105, 183, 260, 376, 531, 841,
-716, -443, -306, -203, -134, -66, 1, 70, 138, 207, 275, 378, 515, 789,
-973, -618, -441, -308, -220, -131, -43, 45, 133, 222, 311, 443, 621, 975,
-872, -546, -384, -262, -181, -99, -18, 62, 144, 225, 306, 428, 591, 916,
-949, -597, -422, -290, -202, -114, -26, 61, 149, 236, 324, 456, 632, 983,
-984, -625, -446, -311, -221, -131, -42, 47, 137, 227, 317, 451, 631, 990,
-800, -501, -352, -240, -166, -91, -17, 57, 131, 206, 280, 392, 541, 839,
-1104, -708, -510, -362, -263, -163, -64, 34, 133, 232, 331, 479, 677, 1074,
-1150, -718, -503, -341, -233, -125, -17, 90, 197, 305, 413, 575, 791, 1222,
-1025, -650, -462, -321, -227, -134, -40, 53, 147, 241, 335, 475, 663, 1038,
-811, -512, -363, -251, -176, -102, -27, 47, 121, 196, 271, 383, 532, 830,
-884, -565, -406, -286, -206, -126, -47, 32, 112, 192, 271, 391, 551, 870,
-850, -532, -374, -255, -175, -96, -17, 62, 141, 221, 300, 419, 578, 895,
-1024, -667, -488, -354, -265, -175, -86, 3, 92, 181, 271, 405, 584, 941,
-836, -531, -378, -264, -188, -111, -35, 40, 116, 193, 269, 383, 536, 841,
-1269, -807, -575, -402, -286, -171, -55, 60, 176, 291, 407, 580, 812, 1274,
-997, -639, -460, -325, -236, -146, -56, 32, 122, 212, 301, 436, 615, 973,
-739, -457, -316, -210, -140, -69, 0, 71, 141, 212, 282, 388, 529, 811,
-929, -590, -420, -293, -208, -124, -39, 45, 130, 214, 299, 426, 596, 934,
-812, -519, -372, -262, -189, -115, -42, 30, 104, 177, 250, 360, 507, 800,
-897, -558, -389, -262, -177, -92, -7, 76, 161, 246, 331, 458, 627, 966,
-892, -567, -404, -282, -201, -119, -38, 42, 123, 205, 286, 408, 570, 896,
-1022, -645, -456, -314, -219, -125, -30, 63, 158, 252, 347, 488, 677, 1055,
-669, -423, -301, -209, -148, -86, -25, 35, 96, 158, 219, 311, 433, 679,
-855, -541, -385, -267, -188, -110, -31, 46, 125, 203, 281, 399, 556, 870,
-862, -548, -391, -274, -195, -117, -38, 39, 118, 196, 274, 392, 549, 863,
-766, -475, -329, -220, -148, -75, -2, 69, 142, 215, 288, 397, 542, 833,
-1084, -685, -486, -336, -236, -136, -37, 62, 162, 262, 361, 511, 711, 1110,
-847, -533, -376, -258, -180, -101, -23, 55, 133, 212, 290, 408, 565, 879,
-1034, -679, -502, -368, -280, -191, -102, -14, 74, 163, 252, 385, 562, 917,
-1088, -688, -489, -339, -239, -139, -39, 60, 159, 259, 359, 509, 709, 1108,
-1045, -678, -495, -357, -266, -174, -82, 8, 100, 191, 283, 421, 604, 971,
-876, -545, -380, -256, -174, -91, -9, 73, 155, 238, 320, 444, 609, 939,
-683, -435, -311, -218, -156, -94, -32, 29, 91, 153, 215, 308, 432, 679,
-730, -472, -343, -246, -181, -117, -52, 11, 76, 140, 205, 302, 431, 689,
-945, -621, -460, -339, -258, -177, -96, -15, 64, 145, 226, 347, 509, 832,
-1037, -671, -488, -351, -259, -168, -76, 14, 106, 197, 289, 426, 609, 975,
-1142, -721, -510, -353, -247, -142, -37, 68, 173, 278, 383, 541, 752, 1173,
-999, -644, -467, -334, -245, -156, -68, 20, 109, 197, 286, 419, 597, 951,
};

static uint64_t backbone_model3_conv2_conv2_weight[64 * 9] =
{ // torch.Size([64, 3, 3, 1])
0x3, 0x5, 0x5, 0x3, 0x5, 0x5, 0xc, 0x5, 0x4, 
0x6, 0xb, 0xe, 0xc, 0xe, 0x1, 0xc, 0x5, 0x5, 
0x5, 0x5, 0x5, 0x4, 0x4, 0x5, 0xc, 0xd, 0xd, 
0xd, 0xd, 0xc, 0xd, 0x9, 0xc, 0xe, 0xc, 0xa, 
0x5, 0x5, 0xd, 0x4, 0x5, 0xd, 0x4, 0x1, 0xe, 
0xd, 0xd, 0x2, 0xb, 0xd, 0xe, 0x3, 0x3, 0xc, 
0x3, 0x4, 0xc, 0x5, 0xb, 0x5, 0x3, 0xf, 0x3, 
0xd, 0xc, 0xb, 0xd, 0xe, 0xc, 0x5, 0x4, 0x1, 
0x5, 0x6, 0xc, 0x0, 0x5, 0xe, 0x3, 0x6, 0xc, 
0xb, 0xd, 0xd, 0x2, 0xd, 0xc, 0x2, 0xc, 0xc, 
0x1, 0x4, 0x1, 0xc, 0xe, 0xd, 0xb, 0xc, 0x1, 
0xc, 0xd, 0xd, 0xd, 0x5, 0x5, 0xe, 0x3, 0x4, 
0xc, 0xd, 0x0, 0xd, 0xd, 0x5, 0xd, 0x4, 0x5, 
0x3, 0xc, 0xc, 0x0, 0xe, 0xd, 0xc, 0x5, 0x5, 
0x4, 0x2, 0x3, 0xc, 0xe, 0xb, 0xc, 0xd, 0xd, 
0xd, 0xc, 0xc, 0xd, 0xd, 0xc, 0xb, 0xc, 0xd, 
0x4, 0x4, 0x3, 0x3, 0xd, 0xf, 0x4, 0xd, 0xc, 
0xd, 0xd, 0xd, 0xc, 0xd, 0xc, 0x4, 0x5, 0x5, 
0x5, 0xc, 0xd, 0x6, 0x5, 0xd, 0x9, 0x5, 0x0, 
0xd, 0x6, 0x5, 0xc, 0x5, 0xa, 0xd, 0x5, 0x5, 
0xc, 0xf, 0xa, 0xc, 0x1, 0x4, 0x0, 0x1, 0x2, 
0x4, 0x3, 0x4, 0x5, 0x4, 0x3, 0x4, 0x5, 0x3, 
0xb, 0x5, 0x5, 0x4, 0x4, 0x5, 0x3, 0xe, 0xe, 
0xc, 0xe, 0xe, 0x0, 0xc, 0xc, 0x4, 0xb, 0x1, 
0x3, 0x5, 0xa, 0x5, 0x4, 0xc, 0xd, 0xf, 0xd, 
0x4, 0x5, 0x5, 0xb, 0xb, 0xc, 0xd, 0xd, 0xd, 
0x9, 0xd, 0x5, 0x4, 0xe, 0x4, 0xb, 0xb, 0x0, 
0x5, 0x5, 0x5, 0x3, 0x3, 0x3, 0xd, 0xd, 0xc, 
0x3, 0x3, 0xb, 0x1, 0xf, 0x1, 0xa, 0x3, 0x0, 
0xc, 0xc, 0xd, 0xc, 0xb, 0xb, 0xd, 0xe, 0xc, 
0x4, 0x5, 0x3, 0x5, 0x6, 0x5, 0x0, 0x4, 0x4, 
0xa, 0x3, 0x4, 0x9, 0xd, 0xd, 0xd, 0xe, 0xe, 
0x0, 0x7, 0x4, 0xc, 0x4, 0xc, 0xc, 0xc, 0xa, 
0xa, 0xc, 0xa, 0xa, 0xc, 0xc, 0xd, 0xd, 0xd, 
0xb, 0xc, 0x4, 0xd, 0xd, 0xb, 0xd, 0xd, 0xb, 
0x4, 0x4, 0xc, 0x5, 0xd, 0xd, 0x5, 0xe, 0xc, 
0xd, 0xd, 0xa, 0xd, 0x5, 0x5, 0xd, 0x6, 0x2, 
0xe, 0xd, 0xa, 0xd, 0x5, 0x3, 0xc, 0x4, 0xa, 
0xd, 0x2, 0x4, 0xd, 0x3, 0x6, 0xb, 0x5, 0x5, 
0xc, 0x5, 0x5, 0xd, 0xc, 0x5, 0x9, 0xe, 0x5, 
0xc, 0x5, 0x4, 0x3, 0x4, 0x5, 0x4, 0x5, 0x3, 
0xa, 0x4, 0x5, 0xd, 0xb, 0x4, 0xe, 0xe, 0xc, 
0xd, 0xd, 0x3, 0xd, 0xd, 0x4, 0xd, 0x3, 0x5, 
0x3, 0x1, 0x4, 0x4, 0x4, 0x5, 0x0, 0x1, 0xb, 
0x5, 0x5, 0xb, 0x4, 0x5, 0xd, 0x5, 0x5, 0xc, 
0xd, 0xe, 0xd, 0xe, 0xc, 0x2, 0xb, 0x3, 0x4, 
0x3, 0x6, 0x5, 0x0, 0xd, 0x6, 0x0, 0xd, 0x4, 
0xd, 0xd, 0x1, 0x9, 0xe, 0xc, 0xc, 0xe, 0xc, 
0x4, 0xd, 0xc, 0xd, 0x5, 0xd, 0xa, 0x6, 0xc, 
0xc, 0x6, 0x6, 0xd, 0xb, 0xc, 0xb, 0x0, 0x0, 
0x3, 0xd, 0xc, 0x5, 0xc, 0xd, 0x5, 0x5, 0xd, 
0xb, 0x5, 0x4, 0xb, 0xd, 0x4, 0xb, 0xe, 0xc, 
0xd, 0xe, 0xe, 0x2, 0xb, 0xb, 0x3, 0xb, 0xb, 
0x2, 0xb, 0xd, 0xc, 0xb, 0xb, 0xc, 0xb, 0xc, 
0x5, 0x4, 0xc, 0x5, 0x5, 0xa, 0x4, 0x2, 0x4, 
0x2, 0x5, 0x6, 0xc, 0xa, 0x6, 0x1, 0xd, 0x4, 
0x4, 0xa, 0x1, 0x5, 0x6, 0xb, 0x2, 0x5, 0x3, 
0x1, 0x4, 0xb, 0x4, 0x6, 0x3, 0x4, 0x5, 0x3, 
0x5, 0xa, 0xd, 0x4, 0x6, 0xc, 0xc, 0xc, 0x4, 
0xc, 0xd, 0xd, 0xa, 0x4, 0x4, 0x4, 0x6, 0x5, 
0x5, 0x5, 0x5, 0x6, 0xc, 0xc, 0x5, 0x5, 0xd, 
0xd, 0x5, 0x4, 0xd, 0x6, 0x3, 0xa, 0x5, 0x3, 
0xc, 0x3, 0x2, 0x2, 0x4, 0x5, 0x5, 0x5, 0x6, 
0xc, 0x3, 0x0, 0xc, 0x6, 0x3, 0x3, 0x4, 0xa, 
};

static int backbone_model3_conv2_relu2_threshold[64 * 7] =
{ // torch.Size([64, 7])
11, 66, 122, 177, 260, 371, 592,
25, 76, 128, 179, 256, 359, 565,
28, 63, 98, 133, 186, 256, 397,
27, 77, 127, 177, 253, 353, 553,
35, 79, 122, 166, 231, 318, 492,
25, 63, 101, 139, 196, 272, 423,
23, 90, 157, 224, 324, 457, 725,
11, 54, 96, 139, 203, 289, 460,
22, 80, 137, 195, 282, 398, 630,
18, 58, 98, 138, 198, 278, 438,
20, 58, 95, 133, 189, 265, 415,
13, 63, 112, 161, 235, 334, 531,
33, 70, 108, 145, 201, 276, 425,
19, 56, 93, 131, 186, 261, 410,
16, 58, 100, 143, 206, 291, 461,
19, 66, 113, 160, 230, 324, 511,
61, 118, 175, 232, 318, 432, 661,
31, 71, 111, 151, 211, 291, 451,
43, 85, 127, 170, 233, 318, 487,
30, 74, 119, 163, 230, 318, 496,
17, 60, 104, 147, 212, 298, 471,
15, 55, 95, 134, 194, 273, 431,
35, 71, 106, 142, 195, 266, 408,
27, 86, 145, 204, 293, 411, 647,
32, 89, 146, 202, 287, 400, 627,
26, 60, 95, 129, 180, 249, 387,
25, 61, 98, 135, 190, 264, 411,
17, 48, 79, 110, 157, 219, 344,
17, 68, 119, 170, 246, 348, 552,
10, 62, 113, 165, 243, 346, 553,
-5, 77, 160, 242, 367, 532, 864,
29, 82, 136, 189, 269, 376, 589,
31, 72, 112, 153, 214, 295, 458,
18, 63, 108, 153, 220, 310, 489,
16, 61, 106, 151, 218, 308, 487,
31, 61, 91, 121, 166, 226, 347,
39, 80, 122, 163, 225, 308, 473,
5, 49, 93, 137, 202, 290, 466,
32, 82, 132, 181, 256, 355, 554,
29, 68, 107, 146, 205, 284, 441,
18, 57, 95, 134, 192, 269, 423,
26, 73, 120, 167, 237, 331, 519,
20, 65, 110, 155, 223, 313, 493,
24, 51, 79, 106, 147, 202, 311,
23, 61, 100, 138, 196, 273, 427,
19, 68, 116, 165, 237, 334, 528,
22, 80, 137, 195, 281, 397, 627,
17, 66, 115, 164, 237, 335, 531,
2, 49, 95, 142, 211, 304, 489,
23, 60, 96, 132, 186, 258, 402,
26, 55, 85, 114, 158, 216, 334,
34, 72, 110, 148, 205, 281, 432,
32, 82, 133, 183, 258, 359, 561,
15, 51, 87, 123, 177, 249, 393,
10, 45, 81, 116, 169, 239, 380,
25, 69, 113, 157, 223, 311, 487,
5, 37, 69, 101, 148, 212, 339,
14, 72, 129, 187, 273, 388, 618,
14, 54, 95, 136, 196, 278, 440,
53, 106, 159, 212, 291, 397, 609,
37, 80, 123, 166, 231, 317, 489,
9, 59, 109, 159, 234, 334, 534,
37, 89, 142, 194, 272, 377, 586,
16, 45, 74, 103, 147, 205, 322,
};

static uint64_t backbone_model4_conv1_conv1_weight[64 * 1*4] =
{ // torch.Size([64, 1, 1, 64])
0xb4b5cccbd4abc502,0xc324be42243352d2,0x5cd3c0455ddce62c,0x425634bd243c24bc, 
0xbcb1cbd443b5b34c,0x03c5a355c33ccbb0,0x5bcaca5ac1c45cc6,0x49ab4b62cc095ec5, 
0x34cb92c333b64c49,0x435db545d54cd424,0xb13acc126325dc1c,0xc92db4db0c54dc24, 
0x264bc9ddcdcdad0b,0xc2a1c93543ca4c2d,0xe653aa55d9dcb4dd,0xca94a53b3c445c2d, 
0xa43b204344ebb12c,0x4c4d4bda24200de3,0x53d5b35359402393,0x55bcb5d354039b35, 
0x3d5d45c451da2333,0x55bcc6bc535ccdd9,0xd03ab42cdaa25d34,0xcabda343aa55cdb4, 
0x24b49cc53045cd4c,0x53341b45343b3c45,0xba125bd534c54a95,0x9d0b44c45ad64dc3, 
0x0bbddcbcd64bd2cb,0x904c254544542ddc,0x5b3c6cbb245cdcd0,0x55444b5ad903cdcd, 
0xc5e33452d245193a,0x34454d35d3525553,0x4ccad5cb4b24c254,0xd14b1333d9dc29c4, 
0xd2ec5e3acddcd55d,0xcdb4c444e59d5cc5,0x2545dd4ab34464a5,0x4de31a3d4d253cf5, 
0xc5cc1bc19dcdcbc3,0x31ba3c54abccb5b1,0x2545cc3c103cdbcd,0x4dad5c4d49ddc435, 
0xcba3d4d44bd4a439,0x9abc9cbe5adbd550,0x55c2444cdb3444cc,0x5a2413a2a354ba93, 
0xbbb59352cc420a10,0xc3db5d3accdd045c,0x5c9ab9424cda4393,0x0c01b3092a543cce, 
0x2c4334c344db4342,0x432bd03b34334dd1,0x2134b4c292144404,0x150b40a5a333330b, 
0xad4d445b45ab45bb,0xdbcc92e43db3d25d,0xdd4aaa2e0953a249,0x04c5bd5cbb5cd5a4, 
0x253d303c4cca45c4,0xd3039d5c4d02a55d,0xd544356bbc0d433e,0x5a44a41c34cca445, 
0x4d4341c50ddca045,0xd5acbdbd4d245535,0x42b59ca4b5ca3a34,0x0c9d53c051b4a4a6, 
0x3e55d943bdcdaacb,0x5cc2b544c5bb5c35,0xa453cc339cd05345,0xedc4cdba4cd59cbb, 
0xd5bb1c50c0b954d5,0xccd5c1b4d4ae5cbc,0x4c46dc5cdf5dcd5e,0x2cd4e45becbdd5b6, 
0xdbccb34bb5234cc1,0xd1d02d4d4bcd1b5a,0x553434cb4c4ab43c,0x64cdcac40a4dd324, 
0x4a61d554d355c634,0xbb4b14cb6bd64cdd,0x54d1c5ccdc4465cd,0xecc54c65d3c6dc4d, 
0x2b93cc5c4a5db9c3,0xccb154e5ccc4a540,0xcd534345235b4cb5,0xc434c9d3bb431dbc, 
0xc3c43c44db61c511,0x2b359ddc5bcc9543,0x4bdc4bac5a4b9344,0x4d15c4b0c1ba55b3, 
0x4d4ac90caaaa05da,0x09a53cb455b54ebd,0x1db3c3cbdc4d05ce,0x3135ac5cd4a0cc4c, 
0x4d43d4ba234dca31,0x52215305dda39532,0x4a6123abb0345cc9,0x943e4ec4cbd35e3d, 
0x34abd5453245d62a,0xccd5b54c3eb9b2d0,0xdd20344b5aca4d4c,0x443d434ab31a54cc, 
0x0baa09a31ca3c3bc,0xbcdb4dbd1ddab44b,0xbcbc9c4bca3bdd2b,0x1bc9b95cba4bd2ca, 
0x34463bcdc2d321c2,0x525c0d09b3b3455d,0x59c4b2a04ca04459,0x3e2434ab4ab3db46, 
0xd5c42d5454a3c243,0xad31a4cb45e394ce,0x1513ca04913b3a35,0x4d40cd30442b52d3, 
0x9bcca3cdc4343dc4,0x4b95434533b45d03,0x952052445cb0c35b,0x300db4d449d41436, 
0xa415c339cc90534b,0x4ae15dc105ed44c4,0x29c393c2dc33393c,0x1494d44bc3155d34, 
0x3e4a235e5cc2c201,0xc4c335a52b3044cb,0xb223534c425d3333,0x3aba3b3c4b05d335, 
0xc5bc3c5da4ba3e2c,0x91b43cd6cd34955b,0xd4ac2b6544ca54aa,0x5c3a10b35c4524ac, 
0xdc4dda6e5429ca2a,0xdb4c2dd315c0c65d,0x241b54c1c2323193,0xc52bbc5cbb51ddbc, 
0x34124c35cc33bcb3,0x5b0c35a5c593bd0b,0x4332b044e5904aa5,0xe0bccc43d3012a3e, 
0x932334934125b34c,0x3334c344dd2b4b2a,0x34ee4c5b34db432c,0x3f244442a9444b5e, 
0x9c5545656a3c5432,0xb3dc555e54baacba,0xd5b4406ebc4a63c4,0xddc33c445304c5cd, 
0x5c4cd435b4434700,0xccd4a313ccabcd3c,0xecba39c93b31bb44,0x04d2444cb3b351bd, 
0xbc2cc3dd3ced1acb,0xcc4b334cb4235c45,0xb5533bb4ecc43502,0xd4a432c002ba1dc5, 
0x3b12ccac42ddbc3a,0x426cdcbdbc553b2b,0x4b533ab46bb0359d,0x42c9cbe04963accd, 
0xa4339c3d4cc5c59c,0xcddbcd3333dda30d,0x34bcbd5bdc5c52c9,0x44c49c6ccd344dd5, 
0x3d2b44cdba6dcca2,0xcd2644d214b4cde5,0x323c5a4adadc0ec5,0x35c4a49aa44b55ad, 
0xc4add42bacdd5da3,0xb1c4c443cc2b504b,0xd243ca5059dc356a,0xad234d345b3bdc2d, 
0x2440204acecb21c2,0xacc5521333d15ced,0x2241c4d0c9c15353,0xccc03b5454e43c25, 
0x4bb43043dc45dcb3,0xbd43dbecd5bcc454,0x3d53c3dad4d54e03,0xe5bcd4ebc3e409bd, 
0xc5cd10bdcac1c4d3,0xcd5a13b6cb35451d,0xc54a4bbcacc13c5e,0xdddbb36b0c24d5b5, 
0xcccb3b45c5543bc2,0xda3baa41d3bcd44c,0x5cb3c44a4aab93cb,0xd392dd44d4cecacc, 
0x35553d53ed0db243,0x4049b9c5cbc4a2ab,0x5c41ed44434ab5b4,0x3d443dbab4d464cb, 
0xadcbb4d543ac454b,0xb46522ad44265cb5,0xdb4d62c255d3162c,0x4d4454b35b54354c, 
0xcdd354d544db3dd3,0x5c436ccb44d24d33,0xc953cce4d4dadc25,0x15acc5dcccae5a06, 
0x3019244454c45994,0xa422ca5944101a34,0xb445341bd3244413,0x555222242453aa34, 
0x2cc4d2443f504cbb,0x0ccb595a450c9c45,0xda6213c5d53443d4,0xde4444c34ad53d2b, 
0x4d4acba4d55bc1b2,0xa36b2ac62326b3dc,0xb2b35bc35b0b21cb,0xdca4944b43eb234a, 
0x4544c32c4d15ccd4,0xccbc5c54bccbd55c,0xb5625259343abdc4,0xa34bdded3cdbae3d, 
0x3c545d5d9cddca20,0xd95b4edc44c595bc,0x51b334309b335453,0x9502c5c544c50ab5, 
0x4513c3bdcc541033,0x43035d31cc4c3b43,0x1d9b3db3431cebcd,0x02232a3d4a5dc2bc, 
0x459deb433254b532,0xccc3b9353c3a45cc,0xcc4c13c53023b2bd,0x554e0c1bcbc354cd, 
0x2cd55bd9cccd4435,0x5c31bccd46135dcc,0xdcb5c1dc3dcc105b,0xe395c4c35434e4d5, 
0xbcc9d5aa5cd5c3b3,0x55eccc552cbdc4c3,0x5d5ce4dd52d440db,0x52ce4e63d44c3ccd, 
0xc6a3c4144344bca9,0xb4ccdc6e23ccca4c,0xe53cb2ad44ccc4d3,0xccbc35dbb4c2a4ad, 
0x444ca93cdd2444d1,0x4da3b4b3c4ca152d,0x4ca42bc9dcc3b93e,0xeb23d35cc1edc055, 
0x3cb6eac5c39453d4,0x3bc4a9bb03a05c5c,0xcac4933baa9bc515,0xd0350b4bc2cb4eb2, 
0xb44350c1ccb5d4c1,0xbcd3cd4999be4c44,0x5d3cde4cdd449c55,0x5ce3cb5dddcd49a5, 
0x555dccc2b22d5d15,0x25353dd53934ddd5,0xcdd4cdc5dac2acbd,0xb33c4451c3b36152, 
};

static int backbone_model4_conv1_quant1_threshold[64 * 14] =
{ // torch.Size([64, 14])
-1174, -746, -533, -372, -265, -158, -51, 54, 161, 268, 375, 536, 749, 1177,
-1180, -757, -545, -386, -280, -174, -68, 37, 143, 249, 354, 513, 725, 1149,
-1055, -666, -471, -325, -228, -131, -34, 63, 160, 257, 354, 500, 695, 1083,
-1124, -714, -508, -355, -252, -149, -47, 55, 157, 260, 362, 516, 721, 1132,
-1097, -689, -485, -332, -230, -128, -26, 75, 177, 279, 381, 534, 737, 1145,
-1270, -791, -552, -372, -253, -133, -13, 106, 225, 345, 465, 644, 883, 1362,
-1275, -793, -552, -372, -251, -131, -10, 109, 230, 350, 471, 652, 893, 1374,
-1428, -912, -654, -460, -331, -202, -73, 55, 184, 313, 442, 636, 894, 1410,
-1338, -864, -627, -450, -331, -213, -94, 23, 142, 260, 378, 556, 793, 1267,
-2020, -1330, -985, -726, -554, -381, -209, -36, 135, 307, 480, 739, 1084, 1773,
-1378, -884, -637, -452, -328, -205, -81, 41, 165, 288, 412, 597, 844, 1338,
-1034, -651, -459, -315, -220, -124, -28, 67, 162, 258, 354, 498, 689, 1073,
-1145, -729, -520, -364, -260, -156, -52, 52, 156, 260, 364, 520, 729, 1145,
-1293, -811, -570, -389, -269, -148, -28, 92, 212, 332, 453, 634, 875, 1357,
-1359, -875, -633, -451, -330, -209, -88, 32, 153, 274, 395, 576, 818, 1302,
-1127, -709, -500, -343, -238, -134, -29, 74, 179, 283, 388, 544, 753, 1171,
-1143, -710, -494, -332, -223, -115, -7, 100, 208, 316, 424, 586, 803, 1235,
-1230, -780, -555, -386, -273, -161, -48, 63, 176, 288, 401, 570, 795, 1245,
-1927, -1256, -921, -669, -501, -333, -166, 1, 169, 337, 504, 756, 1092, 1763,
-1003, -639, -457, -321, -230, -139, -48, 42, 133, 224, 315, 452, 634, 998,
-1423, -884, -614, -412, -277, -142, -7, 126, 261, 396, 531, 733, 1003, 1542,
-1046, -667, -478, -336, -241, -147, -52, 41, 136, 231, 325, 467, 657, 1035,
-1198, -774, -561, -402, -296, -190, -83, 22, 128, 234, 340, 500, 712, 1137,
-1295, -843, -617, -447, -334, -221, -108, 4, 118, 231, 344, 514, 740, 1192,
-1061, -670, -475, -328, -230, -132, -35, 62, 160, 258, 356, 502, 698, 1089,
-932, -591, -420, -292, -207, -122, -36, 48, 133, 219, 304, 432, 603, 944,
-1335, -871, -640, -466, -350, -234, -118, -3, 112, 228, 344, 518, 749, 1212,
-1056, -661, -464, -316, -217, -118, -20, 78, 177, 276, 374, 523, 720, 1115,
-1151, -743, -538, -385, -283, -180, -78, 23, 125, 228, 330, 483, 688, 1097,
-934, -577, -399, -265, -176, -87, 1, 90, 179, 268, 357, 491, 669, 1026,
-1028, -657, -471, -332, -239, -146, -53, 39, 131, 224, 317, 456, 642, 1014,
-1161, -726, -509, -346, -237, -128, -20, 88, 197, 306, 414, 577, 795, 1230,
-1225, -774, -548, -379, -267, -154, -41, 70, 183, 296, 408, 577, 803, 1253,
-1070, -673, -475, -326, -227, -128, -28, 70, 169, 268, 367, 516, 714, 1111,
-980, -630, -455, -324, -236, -149, -61, 25, 113, 200, 288, 419, 594, 944,
-1417, -908, -653, -461, -334, -207, -79, 47, 175, 302, 430, 621, 876, 1386,
-1413, -875, -605, -403, -269, -134, 0, 134, 269, 404, 538, 740, 1010, 1548,
-1113, -710, -509, -358, -257, -157, -56, 44, 144, 245, 346, 497, 698, 1101,
-1235, -788, -565, -397, -285, -174, -62, 49, 160, 272, 384, 551, 775, 1222,
-1277, -795, -554, -373, -252, -132, -11, 108, 229, 349, 470, 650, 891, 1373,
-1366, -885, -644, -464, -343, -223, -103, 16, 137, 257, 377, 558, 798, 1280,
-1115, -716, -517, -368, -268, -168, -69, 30, 130, 229, 329, 478, 678, 1076,
-985, -623, -442, -307, -216, -126, -35, 54, 144, 235, 325, 461, 642, 1003,
-1046, -662, -470, -326, -230, -134, -38, 57, 153, 249, 345, 489, 680, 1064,
-1596, -1044, -769, -562, -424, -286, -149, -11, 126, 264, 402, 608, 884, 1435,
-1086, -691, -494, -346, -248, -149, -50, 47, 146, 244, 343, 491, 688, 1082,
-1212, -788, -576, -417, -311, -205, -99, 7, 113, 219, 325, 484, 696, 1120,
-1221, -784, -565, -400, -291, -182, -72, 36, 146, 255, 365, 529, 748, 1186,
-1801, -1105, -756, -495, -321, -147, 27, 201, 375, 549, 723, 985, 1333, 2030,
-1319, -859, -629, -456, -341, -226, -111, 3, 118, 233, 348, 520, 750, 1210,
-1291, -792, -543, -356, -231, -106, 17, 142, 267, 391, 516, 703, 952, 1451,
-1132, -716, -508, -353, -249, -145, -41, 62, 166, 270, 373, 529, 737, 1152,
-1079, -673, -469, -317, -215, -113, -12, 89, 191, 292, 394, 546, 750, 1157,
-1271, -812, -583, -411, -296, -182, -67, 47, 161, 276, 391, 563, 792, 1251,
-1283, -804, -564, -384, -264, -144, -24, 94, 214, 334, 454, 634, 873, 1353,
-1201, -775, -561, -401, -294, -188, -81, 25, 131, 238, 345, 505, 718, 1145,
-982, -623, -444, -309, -219, -130, -40, 49, 139, 228, 318, 453, 632, 991,
-1376, -871, -619, -430, -304, -178, -52, 74, 200, 326, 452, 641, 893, 1398,
-1284, -828, -599, -428, -314, -200, -86, 28, 142, 256, 370, 541, 770, 1226,
-1165, -741, -529, -370, -264, -158, -52, 53, 159, 265, 371, 530, 742, 1166,
-1451, -936, -678, -485, -356, -227, -99, 29, 158, 287, 416, 609, 866, 1381,
-889, -568, -407, -286, -206, -125, -45, 35, 115, 195, 276, 396, 557, 879,
-1505, -988, -729, -535, -406, -276, -147, -17, 111, 240, 370, 564, 822, 1340,
-1163, -731, -514, -352, -244, -136, -28, 79, 188, 296, 404, 566, 782, 1215,
};

static uint64_t backbone_model4_conv1_conv2_weight[64 * 9] =
{ // torch.Size([64, 3, 3, 1])
0x4, 0x5, 0x4, 0x5, 0x5, 0x4, 0x4, 0x5, 0xb, 
0x5, 0x6, 0x4, 0x1, 0xa, 0xb, 0xc, 0xd, 0xb, 
0x4, 0x6, 0x3, 0xc, 0x5, 0x4, 0xc, 0x4, 0x4, 
0xd, 0xd, 0xb, 0xc, 0x5, 0x5, 0x4, 0x5, 0x5, 
0x5, 0x5, 0x5, 0x0, 0xc, 0xc, 0xd, 0xd, 0xd, 
0x6, 0x4, 0xd, 0x4, 0xd, 0xc, 0x4, 0x4, 0xb, 
0x6, 0x5, 0xd, 0x5, 0xd, 0xc, 0xc, 0xb, 0xc, 
0x2, 0x5, 0x5, 0x5, 0xa, 0x1, 0x6, 0x3, 0x3, 
0x4, 0xd, 0xd, 0x2, 0x5, 0xe, 0x4, 0x4, 0xd, 
0xb, 0xc, 0xc, 0x9, 0xe, 0xe, 0x3, 0xc, 0x1, 
0xc, 0xc, 0xb, 0x3, 0x3, 0x4, 0x4, 0x5, 0x5, 
0xe, 0x6, 0x5, 0xd, 0xc, 0x4, 0xb, 0xd, 0x2, 
0x5, 0x5, 0x5, 0xb, 0x3, 0x5, 0xd, 0xd, 0x4, 
0x3, 0x2, 0x4, 0xc, 0xc, 0xc, 0xd, 0xc, 0xc, 
0xa, 0xd, 0xb, 0xb, 0xf, 0xc, 0x4, 0x3, 0x5, 
0xb, 0x4, 0xc, 0xd, 0xc, 0x1, 0x3, 0xe, 0xd, 
0x1, 0xb, 0x0, 0xc, 0x7, 0xb, 0x2, 0x4, 0x0, 
0xb, 0x9, 0xd, 0x4, 0x2, 0xd, 0x6, 0x6, 0xb, 
0x4, 0x4, 0xc, 0xe, 0xc, 0x5, 0xd, 0xb, 0xa, 
0x3, 0xd, 0xe, 0x4, 0x5, 0xd, 0xb, 0xb, 0xb, 
0xd, 0xe, 0x1, 0xc, 0xe, 0xa, 0x0, 0xb, 0x4, 
0x4, 0x2, 0xc, 0xd, 0xc, 0x3, 0xe, 0xc, 0x2, 
0x4, 0xc, 0xe, 0x5, 0x4, 0xd, 0x5, 0x4, 0xd, 
0x5, 0x3, 0x2, 0x3, 0xd, 0xc, 0x0, 0xe, 0xc, 
0xe, 0xe, 0xa, 0x3, 0x4, 0x9, 0x2, 0x4, 0x1, 
0x4, 0x2, 0xc, 0x5, 0xc, 0xd, 0x6, 0xd, 0xd, 
0x5, 0x4, 0xd, 0x4, 0x4, 0x4, 0x9, 0x3, 0x4, 
0xd, 0x4, 0x5, 0xd, 0x1, 0x6, 0xc, 0x1, 0x3, 
0xa, 0x4, 0xa, 0x4, 0xf, 0x3, 0x0, 0x3, 0x1, 
0x6, 0x5, 0x3, 0xb, 0xd, 0xd, 0xc, 0xb, 0xb, 
0x5, 0x9, 0xe, 0x5, 0xe, 0x3, 0x4, 0x9, 0x4, 
0xc, 0xc, 0x9, 0xb, 0x2, 0xc, 0xe, 0xd, 0xb, 
0xb, 0x5, 0x4, 0xc, 0xb, 0xc, 0xe, 0xe, 0xb, 
0x6, 0xc, 0xd, 0x6, 0xd, 0xd, 0x5, 0x5, 0xc, 
0xe, 0xd, 0x4, 0xb, 0xb, 0x5, 0x2, 0x5, 0x5, 
0x5, 0x4, 0x6, 0xd, 0xc, 0xc, 0xe, 0xd, 0xe, 
0x4, 0x4, 0x3, 0xd, 0xc, 0xc, 0xc, 0xd, 0xd, 
0x3, 0xc, 0xc, 0xb, 0x6, 0x5, 0xe, 0xc, 0x5, 
0xd, 0xd, 0xd, 0xb, 0xc, 0xc, 0xa, 0x3, 0xc, 
0x5, 0x6, 0x5, 0xb, 0xc, 0xa, 0x0, 0xc, 0x4, 
0xd, 0xb, 0x1, 0xe, 0x4, 0x1, 0xc, 0xc, 0xc, 
0xd, 0x3, 0x5, 0xe, 0xb, 0x6, 0x2, 0x3, 0x3, 
0x3, 0xa, 0x4, 0x5, 0x6, 0x3, 0xa, 0xd, 0xc, 
0xd, 0xd, 0xd, 0x2, 0xc, 0x4, 0x5, 0x3, 0x5, 
0x4, 0x5, 0x6, 0x3, 0x4, 0x5, 0xb, 0x1, 0x9, 
0x4, 0xe, 0xe, 0xb, 0x4, 0x2, 0xc, 0xa, 0xb, 
0x2, 0x4, 0x4, 0xe, 0x4, 0x4, 0xe, 0x4, 0x2, 
0xb, 0x4, 0x3, 0xc, 0xb, 0x5, 0x3, 0xf, 0xc, 
0x3, 0x6, 0x6, 0xc, 0x5, 0x4, 0x4, 0xb, 0x4, 
0xc, 0xc, 0xd, 0xb, 0xc, 0xc, 0xb, 0xd, 0xc, 
0x3, 0xd, 0xd, 0xd, 0xd, 0xc, 0xc, 0x4, 0x5, 
0x6, 0x5, 0x5, 0xc, 0xd, 0x0, 0xd, 0xd, 0xd, 
0x6, 0x5, 0xc, 0x5, 0xd, 0xd, 0x3, 0xc, 0x3, 
0xa, 0xf, 0x3, 0x3, 0xc, 0x3, 0x2, 0xd, 0x0, 
0xd, 0xd, 0xd, 0xb, 0xc, 0x1, 0xd, 0xb, 0xb, 
0x1, 0xd, 0x1, 0x5, 0xe, 0x4, 0x4, 0xe, 0xa, 
0xc, 0xa, 0x4, 0xe, 0x4, 0x2, 0xb, 0x5, 0x4, 
0xa, 0x7, 0x5, 0x9, 0x4, 0x2, 0xb, 0x2, 0xb, 
0x4, 0x4, 0x0, 0x4, 0x4, 0x5, 0x3, 0x4, 0x5, 
0xc, 0xb, 0xc, 0x4, 0xc, 0xd, 0x7, 0x5, 0xa, 
0xc, 0x5, 0x5, 0x5, 0xc, 0xd, 0x3, 0xd, 0xd, 
0xa, 0xc, 0xb, 0xb, 0xd, 0xd, 0x5, 0x5, 0x5, 
0x3, 0x4, 0x2, 0x4, 0xf, 0xb, 0xc, 0xa, 0x9, 
0xa, 0xc, 0xb, 0xc, 0x7, 0xa, 0x4, 0x5, 0x2, 
};

static int backbone_model4_conv1_relu2_threshold[64 * 7] =
{ // torch.Size([64, 7])
27, 77, 127, 177, 251, 351, 551,
12, 66, 119, 172, 252, 358, 570,
23, 75, 127, 180, 258, 362, 570,
17, 57, 98, 138, 198, 279, 440,
20, 53, 86, 119, 169, 235, 366,
12, 48, 85, 121, 176, 249, 394,
20, 51, 82, 113, 160, 223, 348,
18, 79, 139, 200, 291, 412, 654,
4, 41, 78, 114, 170, 243, 390,
19, 51, 83, 115, 164, 228, 357,
12, 45, 78, 110, 160, 225, 357,
18, 67, 116, 165, 239, 338, 535,
9, 39, 68, 98, 142, 200, 318,
13, 40, 67, 94, 135, 189, 298,
44, 100, 156, 212, 297, 409, 634,
11, 53, 95, 137, 201, 285, 454,
21, 83, 146, 208, 302, 427, 676,
12, 66, 121, 175, 256, 365, 582,
16, 42, 67, 92, 130, 181, 282,
13, 55, 97, 139, 202, 287, 456,
14, 86, 158, 230, 338, 482, 771,
19, 74, 129, 184, 266, 376, 596,
13, 50, 86, 122, 176, 248, 393,
10, 43, 75, 108, 156, 221, 350,
29, 78, 128, 177, 252, 351, 549,
24, 67, 110, 153, 217, 303, 474,
9, 30, 52, 74, 106, 149, 236,
24, 65, 106, 147, 209, 291, 455,
20, 75, 129, 183, 264, 372, 589,
15, 63, 111, 159, 231, 328, 520,
26, 72, 118, 164, 233, 325, 509,
23, 57, 90, 124, 175, 242, 377,
16, 64, 112, 160, 232, 329, 521,
28, 74, 120, 166, 234, 326, 509,
19, 64, 110, 156, 224, 316, 499,
36, 82, 127, 173, 241, 333, 515,
15, 55, 96, 137, 198, 280, 443,
35, 75, 116, 156, 217, 298, 460,
28, 68, 108, 148, 208, 288, 448,
-2, 44, 91, 138, 208, 302, 489,
13, 55, 96, 137, 199, 282, 447,
33, 70, 107, 144, 200, 274, 422,
15, 52, 89, 127, 183, 257, 407,
16, 54, 91, 129, 185, 259, 409,
31, 94, 157, 220, 314, 440, 692,
11, 65, 120, 175, 257, 367, 586,
19, 61, 104, 146, 209, 293, 462,
19, 80, 140, 201, 292, 413, 655,
1, 50, 99, 148, 222, 320, 516,
23, 60, 98, 136, 193, 268, 420,
14, 48, 82, 116, 167, 234, 370,
31, 76, 122, 167, 235, 325, 506,
20, 63, 106, 150, 215, 302, 476,
40, 105, 171, 236, 335, 466, 728,
28, 70, 112, 154, 216, 300, 467,
27, 80, 133, 185, 264, 369, 580,
23, 54, 85, 115, 162, 223, 347,
6, 72, 139, 206, 307, 440, 708,
21, 68, 115, 162, 233, 328, 517,
28, 90, 151, 213, 306, 430, 678,
15, 46, 78, 109, 156, 219, 344,
25, 66, 108, 149, 212, 295, 461,
26, 75, 124, 173, 246, 344, 539,
20, 80, 140, 201, 291, 411, 651,
};

static uint64_t backbone_model4_conv2_conv1_weight[64 * 1*4] =
{ // torch.Size([64, 1, 1, 64])
0x594ccbdad3d4bca3,0xcd4d24a34dadc0bc,0x59ca3d5db5559dda,0xbaca4ba6edcc01c3, 
0x49e436ec4c3acc5c,0x3b2c2d4d95443954,0x924b3ca45a3ba53c,0x45b04445353bc55b, 
0x44c94219cc0ccb0c,0xc4453335c319c4ec,0xbb34aa033344a251,0x0cb3ac24cbcac4c4, 
0xa594ab436d3c94c5,0x34dbc99cb2bddd4c,0xb5dc3a2d25ddbb43,0x5bcddd45cb5dabcc, 
0xd6accd4c540543d2,0x644d11bb4bbdcc2a,0xb1454dcc094ca3de,0xd4abc4564252a5dc, 
0xde113244235ba43c,0xd35c140ccc3bc221,0x321245444444594d,0x4d4a32bdb14c4455, 
0x9b5cca430d453d2b,0xcaedc0d20d2b3c3e,0x23c35ac4616d91c5,0xe2d0443ddcccb45d, 
0x5ccd154b495dd434,0x52419c491b3cd202,0x1bba44acc54b5dc0,0xd4bcd3b0cc434344, 
0x01033acd44d54cb3,0xab4d5d345bdb24bc,0xb553dbeb5dccda4c,0xbe1c55abc4c2355d, 
0x3c55b4d33cd34cac,0xb45c53d5321b44a2,0xcdccac2c44b6d065,0x5c0451d6a3d23ac2, 
0xb13d5392c492c415,0xcc3cd45340b42521,0xbb43d2e3bd05cb13,0xac4d24339ab63c43, 
0x5d4b455b25dd443d,0xc2343d9c433a35c5,0x2c45455cd5a2be3e,0xbdb40c3c51532355, 
0xcbbb2c26ad5bcb44,0x2cdb5acbaa69bd4a,0xdc5cbcc5cd3a4ba5,0xccb4cdc2cabb9dd2, 
0x0133154c5cb9331d,0x43cd3d405ddd4943,0xd9035c9db5399153,0x43b254155253c44d, 
0x34432acc4d9544c3,0x5edd20555bb30b44,0x4533abb25aa5dc1b,0x545d5535a52b4434, 
0x5cd322ddbb31bccc,0xca54b9513cc3c62b,0x5c2ccc5dc4cbdade,0xd4dc5ddb44cb5d4a, 
0x5c4a3144255dcca3,0xb55c03442449b4c1,0x4c3444d54b454255,0x443c3b33dadb9553, 
0xdd534c12233e4bd5,0x616db433334e3da4,0x4dc195c4ac55d4c5,0xc154cbc5dc32ccbc, 
0x34b19ad5144446d5,0xc5de334c305de55b,0xa343574bc94ea3cb,0xa454545553304ab4, 
0x4ace3422435cb2ba,0xb454cd93c3b43b33,0x4da44333d4454a23,0xc53b133c4d123c65, 
0xa3d9c44b435414b4,0x449240cb2b5d3da5,0xd0c14444dc4acb64,0x54d13d1453adb9b9, 
0x39393c355c5cd433,0x95dbdb6dc54d5424,0xc4cb4555523d5ac4,0x933ac4baca5bdc3c, 
0x4c3c314bc132ab43,0xcab39cad543ca902,0x9cc7c22b4a0bab13,0xb4ac11a34ddc02a3, 
0x33234c432b4dd544,0x133642a6c5bb14c5,0x5bba25045bcb5a54,0x4345c349e3524544, 
0x4db9c3b4943cb45b,0xc345a1bcbba4db52,0x423bb5adc2d34a3b,0x544041a3b4aa4d4d, 
0x41bbcbc63b2243b4,0xc43bdbc4c25b35ce,0xccbcebd544b2b945,0x9c4b4324a9c4cd43, 
0x55430203932044b5,0x544c03553b236935,0xc3b5c3bbc43cb5b4,0x053d455545394d2a, 
0x6525cb1ad45465d6,0x3bdc2ba424c452c4,0x32cbc6c4bc54cbd1,0x5b55b54a54cf54da, 
0x3dc423cbcbdddddc,0xd15adda6ccddddaa,0x32c4cccdc33e57bd,0x4c24cd6d43acdc3b, 
0xcdc51c1ca35a643c,0xdd533dddd41b99c3,0xb254ad0b1c4d4ecd,0x1cdbb12d164cb94c, 
0xc4c1ab44ccc390b4,0xac1cd55d5e6445d5,0x5453b4343dcdb4dc,0x4bc3bb2c93c3caa3, 
0x3bdabc440d2cbdc4,0xbdbed2535c54b333,0xb96a0c5cd3cbd9bc,0x4cc4bdd3d4c0dcc4, 
0x3e44b4ccb42234bb,0xc53d303435044344,0x4c49224a9d34c19b,0xa31c45edb451a43a, 
0xb0b00d4a5d2c33c4,0x32cbbc9bbdcd3a64,0xdccabbbab5ad5544,0xd3c3cc3dbb5cb01d, 
0xdc1433553cc9d540,0x5546db35c03002c5,0xc31b30ca5e9a3344,0x3b4cccac4c5324d3, 
0x60bac34cbcd2aab1,0x49c3bc9d2cba3251,0xd3a6b2bcb3b9c915,0xb4290b4b2b4ccdac, 
0xd25d6b53dc91dd5d,0x2ddcb3d3baeacde4,0xbb146d951c52abc4,0xd4dc1ccc0dc4a60b, 
0x909acb19ab3a9403,0x90b2a12920939b3a,0x1a399510cc22b939,0x304ab30a40a1bb2a, 
0xb0513c55ddd255dc,0x93ccc1b4bd05ac1c,0xcdc34d245434c444,0x32d2253d4a243bcc, 
0x30039babcdbc545c,0x3a1b9bcb53c26cb2,0xa9ccb5cdb9c2cbc9,0x1c24bc9c4dcaaccb, 
0x93b5dcc42cb443ad,0x2525dd4dc3c43dab,0xd655cbcc2dcdb04b,0xd304c90d3464ac4d, 
0xedb1a3d33abad45d,0xd5d55c3bb5b44b41,0xa40d25121c43cc54,0xdc4445de1cb44bb3, 
0xc0c3b43bc56eb554,0xc595cc0ce4324bba,0xbdc43443353c54db,0x3435ec6e4a5ddd43, 
0x4cdd54454b22accb,0x51c9dd2ddda53b53,0xa4bc49a5054d5a9c,0x35caccd4c54b5954, 
0x4b04a02bc40c4436,0xbc53dcac4435bc4a,0x4cd5450cd23452db,0xa4d4cc5555130a3c, 
0xacacc424d55cdca4,0xcb3cc644dd5ccc46,0x4c244d4dd442cc00,0x5dcbbbcbb245ddd4, 
0x3a4c45b93c5ddd3d,0xd130456cac44b5cd,0xcdcbdda2c4a45bd5,0xcbcc9cd5cce35dc4, 
0xdd3b44435d312a46,0xddcdc43d5ea3d43d,0x124a34ca45a5394c,0x2a2d5bd35444255b, 
0xc3cb6c43dab4cbb3,0xd3432c53b9c593d4,0x64bb4c443c5b93dc,0x23dcabcacddd5ab5, 
0x1d52c2ed3542344b,0x32bb25b444d46925,0x33cc4b1cac3b42cc,0x9bb43ada2940c24d, 
0xd45c2d43bdbcb415,0xaaddc3503ad1553b,0xcac144b4ccc53b44,0xc2cdba3ac903c4c4, 
0xbbdcdd3d35cc4bd2,0x5a43cb3d1dcb1d5c,0xebc4bcdcd2a95ccc,0xe6d3ccd355141c5c, 
0x23b4c4c4144caad3,0x45053cf1b4534d34,0x39dcd2543b4d03c5,0xac4cbbb3adbd44b4, 
0xa64bc33b2414c445,0x5d24352d35354d34,0x43bb462b43c41db3,0x244d4353bdd59544, 
0xd5a63bb2cdcdc40c,0xb9b54bcdd14bbddd,0x01cd314923bdb2b2,0x4bc4dd5bbcdcbc3a, 
0xbc5ae4c543945c35,0xb34c34d2935c9c46,0xd052c354ccbbd9b4,0x5d43433055b3e2bc, 
0x3ddc403ec56acdda,0xc3dcb540c3c2acb2,0x3b4a5c6cdc4c32db,0x5dbd4cd4bb4bc44b, 
0xdcbdd4a55c5cdb33,0xb05445d4b14d5a24,0xcc4c4344d43ccd53,0xcdc5dcc5ad4dbcd5, 
0x1cedbd55cc4bbdc5,0xdacdccc4cc529b33,0xcc55ddd5bd4d1ac3,0xcdd3db50cc2b4dc5, 
0x90aab92aa43ba504,0x93a3ba2b09939d13,0x492aa530bc32b20a,0x414ba23a4a19bb2b, 
0x4cb494349d4cd44b,0xc4552b41e5344cea,0x4d5b3455c433cbb1,0xc52cc153d4634c55, 
0x0c2243415d5ddddb,0x43d3cc4ddb3a3a5c,0xc4cc4caa02ed3314,0x4ac4cdbbc49acd3d, 
0x4b3344b4614ccd3c,0x3445cbd9cdcdb34a,0x51b3c33c25cc3311,0x3c4ccc25b04c2d4d, 
0xdcb555dcc4dc4c9b,0x534ba0cc25ad1c5a,0x0cca25ba5943d312,0xdcb1d54d1c412a3c, 
};

static int backbone_model4_conv2_quant1_threshold[64 * 14] =
{ // torch.Size([64, 14])
-908, -581, -417, -294, -212, -130, -48, 33, 115, 197, 279, 402, 566, 893,
-837, -524, -368, -251, -173, -95, -16, 61, 139, 217, 295, 412, 568, 881,
-788, -501, -357, -249, -178, -106, -34, 37, 109, 181, 252, 360, 504, 791,
-903, -583, -423, -303, -223, -143, -63, 16, 96, 176, 256, 376, 536, 856,
-864, -551, -394, -276, -198, -119, -41, 37, 115, 193, 272, 390, 546, 860,
-800, -505, -358, -247, -173, -99, -26, 47, 121, 195, 269, 379, 527, 822,
-939, -612, -448, -326, -244, -162, -80, 0, 82, 164, 246, 368, 532, 859,
-829, -523, -369, -254, -178, -101, -24, 51, 128, 205, 281, 396, 550, 856,
-852, -537, -379, -261, -182, -103, -25, 53, 132, 211, 290, 408, 565, 880,
-1007, -629, -439, -297, -202, -108, -13, 81, 175, 270, 365, 507, 696, 1075,
-1287, -815, -579, -402, -284, -166, -48, 69, 187, 305, 423, 599, 835, 1307,
-944, -593, -417, -285, -197, -110, -22, 65, 153, 241, 329, 461, 636, 988,
-826, -536, -391, -283, -210, -138, -65, 6, 78, 151, 223, 332, 477, 766,
-891, -560, -395, -271, -189, -106, -23, 58, 141, 224, 306, 430, 596, 926,
-825, -521, -368, -254, -178, -102, -25, 50, 126, 202, 278, 392, 545, 850,
-879, -562, -403, -284, -205, -126, -47, 32, 111, 190, 269, 388, 547, 864,
-733, -455, -316, -212, -143, -73, -4, 65, 134, 204, 273, 377, 516, 794,
-1055, -675, -485, -343, -248, -153, -58, 36, 131, 226, 321, 463, 653, 1033,
-1164, -738, -525, -365, -258, -152, -45, 60, 167, 274, 380, 540, 753, 1179,
-755, -473, -333, -227, -157, -86, -16, 54, 124, 194, 265, 370, 511, 792,
-887, -563, -401, -279, -198, -117, -36, 44, 125, 206, 287, 408, 570, 894,
-843, -539, -386, -272, -196, -120, -43, 32, 108, 184, 260, 374, 527, 831,
-725, -462, -331, -232, -166, -101, -35, 30, 96, 161, 227, 325, 457, 720,
-889, -552, -384, -257, -173, -89, -4, 79, 163, 247, 332, 458, 627, 964,
-926, -580, -408, -278, -192, -106, -19, 66, 152, 238, 325, 454, 627, 972,
-759, -486, -350, -247, -179, -111, -43, 25, 93, 161, 229, 332, 468, 741,
-991, -620, -435, -296, -203, -110, -18, 74, 167, 260, 352, 491, 677, 1048,
-1000, -633, -449, -312, -220, -128, -36, 55, 147, 238, 330, 468, 652, 1019,
-1039, -671, -486, -348, -256, -164, -72, 19, 112, 204, 296, 434, 618, 987,
-940, -606, -438, -313, -229, -146, -62, 21, 104, 188, 272, 397, 564, 899,
-679, -437, -317, -226, -166, -105, -45, 14, 75, 135, 196, 286, 407, 648,
-858, -557, -406, -293, -217, -142, -67, 8, 83, 159, 234, 347, 498, 800,
-819, -519, -369, -257, -182, -107, -32, 42, 117, 192, 266, 379, 529, 828,
-969, -622, -448, -318, -231, -144, -58, 28, 115, 202, 289, 419, 592, 939,
-830, -521, -367, -252, -175, -97, -20, 56, 133, 210, 287, 402, 557, 865,
-780, -495, -352, -245, -173, -102, -30, 40, 111, 183, 254, 361, 504, 790,
-1074, -693, -502, -359, -263, -168, -73, 22, 117, 213, 308, 451, 642, 1024,
-631, -399, -283, -196, -138, -80, -22, 35, 93, 151, 209, 297, 413, 645,
-739, -470, -335, -234, -167, -100, -32, 34, 101, 169, 236, 337, 471, 741,
-816, -521, -373, -262, -189, -115, -41, 32, 105, 179, 253, 363, 511, 806,
-1010, -632, -443, -301, -206, -111, -17, 77, 172, 266, 361, 503, 692, 1071,
-1049, -660, -466, -320, -223, -125, -28, 68, 165, 262, 360, 505, 700, 1088,
-1213, -787, -573, -414, -307, -200, -94, 12, 118, 225, 331, 491, 704, 1130,
-932, -591, -421, -293, -208, -123, -38, 46, 131, 216, 302, 429, 599, 940,
-794, -492, -341, -228, -152, -77, -2, 73, 148, 224, 299, 412, 563, 865,
-862, -551, -395, -278, -200, -123, -45, 32, 110, 188, 265, 382, 538, 849,
-1081, -692, -498, -353, -255, -158, -61, 35, 132, 229, 326, 472, 666, 1054,
-909, -575, -408, -283, -200, -116, -33, 50, 133, 217, 300, 426, 592, 926,
-925, -591, -424, -298, -214, -131, -47, 35, 119, 203, 286, 412, 579, 914,
-720, -453, -320, -220, -153, -86, -20, 46, 113, 179, 246, 346, 479, 746,
-809, -521, -377, -269, -196, -124, -52, 19, 91, 163, 235, 343, 487, 776,
-882, -569, -412, -295, -216, -138, -59, 18, 96, 175, 253, 371, 527, 841,
-868, -559, -405, -289, -212, -135, -57, 19, 96, 174, 251, 367, 521, 830,
-798, -497, -346, -233, -158, -83, -7, 67, 142, 217, 292, 405, 556, 857,
-866, -560, -407, -293, -216, -140, -64, 12, 88, 165, 241, 356, 508, 814,
-816, -516, -367, -254, -180, -105, -30, 44, 119, 194, 269, 381, 531, 830,
-927, -593, -426, -301, -218, -134, -51, 32, 115, 199, 282, 407, 574, 908,
-992, -632, -453, -318, -228, -138, -48, 41, 131, 221, 311, 445, 625, 985,
-916, -599, -441, -322, -243, -163, -84, -5, 73, 152, 232, 350, 509, 826,
-836, -528, -374, -259, -182, -105, -28, 48, 125, 202, 279, 394, 548, 856,
-832, -527, -374, -260, -183, -107, -31, 44, 121, 197, 273, 388, 540, 845,
-877, -565, -409, -292, -214, -136, -58, 19, 97, 175, 253, 370, 526, 838,
-1133, -717, -510, -354, -250, -147, -43, 60, 164, 267, 371, 527, 734, 1149,
-888, -565, -404, -284, -203, -123, -42, 37, 118, 199, 279, 400, 561, 883,
};

static uint64_t backbone_model4_conv2_conv2_weight[64 * 9] =
{ // torch.Size([64, 3, 3, 1])
0xa, 0x6, 0x5, 0xb, 0x6, 0x5, 0xb, 0xc, 0xd, 
0x5, 0x5, 0x4, 0x4, 0x4, 0x4, 0x3, 0x4, 0x3, 
0x2, 0xd, 0xd, 0x0, 0x3, 0xd, 0x9, 0x3, 0xd, 
0xb, 0x6, 0x9, 0x4, 0x5, 0xc, 0x4, 0x5, 0xc, 
0x3, 0xd, 0xa, 0x7, 0xd, 0x0, 0x4, 0x5, 0x3, 
0xa, 0x3, 0xc, 0x2, 0xf, 0xd, 0x4, 0x5, 0x0, 
0xb, 0xc, 0x4, 0xd, 0xc, 0x6, 0xd, 0x5, 0x6, 
0x5, 0x5, 0x3, 0xc, 0x3, 0xd, 0xe, 0xd, 0xd, 
0x6, 0x6, 0x5, 0x2, 0xd, 0xd, 0xb, 0xd, 0x2, 
0x5, 0xa, 0xb, 0x6, 0x5, 0x4, 0x4, 0x5, 0x5, 
0x4, 0x1, 0x4, 0x4, 0x4, 0x4, 0xb, 0x5, 0x5, 
0x9, 0xe, 0xe, 0x1, 0xc, 0x3, 0x4, 0x2, 0xa, 
0x4, 0x5, 0xe, 0x6, 0x4, 0xe, 0x4, 0xa, 0xd, 
0x2, 0xe, 0xe, 0x4, 0xb, 0xd, 0x4, 0x4, 0xd, 
0x4, 0xe, 0xd, 0x5, 0x4, 0xe, 0x5, 0x6, 0xd, 
0xc, 0xb, 0x6, 0x9, 0x4, 0x5, 0x5, 0x6, 0x5, 
0x5, 0x3, 0xd, 0x5, 0xd, 0xd, 0x3, 0xd, 0xd, 
0xc, 0xd, 0xd, 0xd, 0xc, 0xc, 0xc, 0xb, 0xc, 
0xc, 0xc, 0xc, 0xd, 0xc, 0xd, 0xb, 0xd, 0xd, 
0xd, 0x4, 0xd, 0x6, 0x4, 0xe, 0x4, 0xd, 0xa, 
0x3, 0x4, 0x3, 0xd, 0xb, 0xc, 0xd, 0xe, 0xd, 
0xe, 0xd, 0xc, 0xd, 0xc, 0xc, 0xa, 0x1, 0xb, 
0xb, 0xd, 0xb, 0x3, 0x7, 0xd, 0xa, 0xb, 0xc, 
0xd, 0x2, 0x5, 0xd, 0xb, 0x3, 0xe, 0xc, 0xc, 
0xb, 0x3, 0x0, 0x4, 0x5, 0x4, 0x5, 0x5, 0x2, 
0xd, 0x2, 0x5, 0xd, 0xd, 0x5, 0x2, 0xd, 0xd, 
0xd, 0xc, 0xd, 0xc, 0xc, 0xb, 0xc, 0xc, 0x5, 
0xc, 0xd, 0xc, 0xc, 0xd, 0xc, 0xd, 0xd, 0xc, 
0x5, 0xc, 0x5, 0x5, 0xd, 0x6, 0x3, 0x5, 0x3, 
0xe, 0xe, 0x4, 0x4, 0x5, 0x5, 0x5, 0x4, 0x4, 
0xd, 0xe, 0xd, 0x2, 0x5, 0x4, 0x3, 0x5, 0x3, 
0x6, 0x6, 0x5, 0xc, 0xd, 0xa, 0xb, 0xd, 0x5, 
0x2, 0x5, 0xe, 0x5, 0xe, 0xd, 0xb, 0xa, 0x4, 
0x5, 0x5, 0xb, 0xd, 0x5, 0x5, 0xa, 0xb, 0x6, 
0xb, 0xe, 0xd, 0x2, 0xd, 0xd, 0x1, 0xb, 0xc, 
0x4, 0x3, 0x3, 0x9, 0x7, 0xc, 0xb, 0x1, 0xa, 
0x4, 0x4, 0x4, 0x4, 0x5, 0x5, 0x2, 0x5, 0x5, 
0x1, 0x2, 0x4, 0x3, 0x2, 0x4, 0xa, 0x3, 0x4, 
0x6, 0x5, 0x5, 0xc, 0x4, 0x3, 0xd, 0xd, 0xb, 
0x6, 0x4, 0x4, 0x4, 0xa, 0x5, 0x4, 0x2, 0xc, 
0xd, 0xd, 0x6, 0xd, 0xe, 0x5, 0x9, 0x3, 0x6, 
0x5, 0x5, 0x5, 0x4, 0xe, 0xd, 0xc, 0xd, 0xe, 
0xc, 0xe, 0xe, 0x4, 0xb, 0xc, 0xc, 0x4, 0xc, 
0x5, 0x6, 0x5, 0x4, 0xb, 0x4, 0xb, 0x4, 0xa, 
0x5, 0x6, 0x5, 0xd, 0xd, 0xd, 0xc, 0xd, 0xc, 
0xd, 0xc, 0xb, 0x4, 0x6, 0x5, 0x4, 0x5, 0x5, 
0x4, 0x5, 0x5, 0xc, 0x5, 0x5, 0xa, 0x6, 0x4, 
0xf, 0xd, 0xc, 0xd, 0xc, 0x4, 0x5, 0x2, 0x4, 
0x4, 0xc, 0x2, 0x5, 0xc, 0x3, 0x7, 0x5, 0x9, 
0x5, 0x5, 0x6, 0x5, 0xd, 0xd, 0x5, 0xd, 0xe, 
0xd, 0xd, 0xc, 0xa, 0xb, 0xb, 0x6, 0x5, 0x4, 
0x1, 0xe, 0xa, 0x5, 0x4, 0xd, 0x5, 0x6, 0x5, 
0xd, 0xe, 0xd, 0x9, 0x3, 0xd, 0x6, 0x5, 0x5, 
0xd, 0xa, 0x6, 0xe, 0x1, 0x5, 0xd, 0xd, 0x4, 
0x5, 0x6, 0x4, 0x5, 0xc, 0xc, 0x4, 0xd, 0xc, 
0x3, 0x5, 0x4, 0x9, 0x3, 0xc, 0xc, 0xe, 0xe, 
0x5, 0x7, 0x4, 0x4, 0x4, 0xb, 0xa, 0xb, 0x4, 
0xb, 0x3, 0x4, 0x1, 0x3, 0x5, 0x3, 0x6, 0x5, 
0x5, 0x7, 0xb, 0x3, 0x4, 0x3, 0xc, 0x0, 0xc, 
0x2, 0x3, 0x4, 0x3, 0x3, 0x4, 0xa, 0x3, 0x5, 
0xb, 0xe, 0x2, 0xe, 0xc, 0x4, 0xd, 0x5, 0x5, 
0x6, 0xd, 0xe, 0x5, 0x0, 0xc, 0x5, 0x3, 0xc, 
0xc, 0xd, 0xd, 0xa, 0xb, 0xd, 0x0, 0xc, 0xc, 
0x4, 0xc, 0xc, 0x5, 0x4, 0x9, 0x5, 0x5, 0x6, 
};

static int backbone_model4_conv2_relu2_threshold[64 * 7] =
{ // torch.Size([64, 7])
20, 60, 101, 142, 203, 284, 447,
25, 73, 120, 168, 239, 334, 524,
22, 58, 95, 131, 185, 258, 403,
21, 62, 104, 145, 207, 290, 456,
25, 87, 149, 211, 305, 429, 677,
12, 72, 131, 191, 280, 400, 638,
40, 88, 135, 183, 255, 350, 541,
13, 62, 111, 160, 233, 331, 526,
21, 59, 97, 134, 191, 266, 417,
23, 69, 116, 162, 232, 325, 511,
11, 33, 54, 76, 108, 152, 238,
22, 67, 113, 159, 227, 319, 502,
36, 84, 131, 179, 251, 346, 537,
28, 74, 120, 166, 235, 327, 511,
34, 78, 122, 166, 232, 320, 497,
26, 72, 117, 163, 231, 321, 503,
8, 56, 105, 153, 225, 321, 514,
15, 67, 119, 171, 249, 352, 560,
17, 61, 104, 148, 214, 302, 477,
12, 54, 96, 137, 200, 283, 450,
18, 63, 107, 152, 219, 308, 487,
30, 80, 129, 178, 253, 351, 549,
7, 86, 164, 242, 360, 517, 831,
14, 56, 99, 141, 204, 289, 459,
15, 76, 137, 199, 291, 413, 659,
27, 64, 101, 138, 194, 268, 416,
1, 38, 75, 112, 167, 241, 389,
10, 58, 105, 153, 224, 319, 510,
16, 60, 103, 147, 212, 298, 472,
36, 76, 116, 156, 215, 295, 455,
32, 75, 118, 161, 226, 312, 484,
21, 64, 107, 149, 213, 298, 469,
22, 64, 106, 148, 211, 295, 463,
14, 53, 93, 132, 192, 271, 429,
27, 76, 126, 175, 249, 348, 546,
19, 75, 131, 187, 271, 382, 606,
27, 67, 108, 148, 209, 290, 452,
12, 33, 53, 74, 104, 145, 227,
24, 80, 135, 191, 274, 386, 608,
3, 54, 104, 154, 229, 330, 530,
33, 77, 120, 163, 228, 315, 488,
36, 87, 137, 188, 264, 365, 568,
-1, 38, 77, 117, 177, 256, 416,
28, 74, 121, 167, 237, 330, 515,
29, 72, 114, 157, 220, 305, 475,
25, 68, 112, 155, 220, 307, 481,
22, 66, 111, 155, 222, 311, 489,
42, 115, 188, 261, 371, 518, 811,
34, 87, 140, 194, 274, 380, 594,
31, 73, 115, 157, 220, 304, 472,
23, 57, 91, 125, 177, 245, 381,
37, 88, 139, 190, 267, 369, 573,
37, 89, 141, 192, 270, 373, 580,
34, 88, 142, 195, 276, 383, 597,
6, 44, 83, 122, 181, 259, 415,
30, 73, 116, 159, 224, 310, 482,
27, 79, 130, 182, 260, 364, 572,
15, 51, 87, 123, 178, 250, 394,
34, 84, 134, 184, 259, 359, 560,
14, 36, 58, 80, 113, 157, 245,
24, 68, 112, 156, 222, 310, 485,
25, 65, 106, 147, 209, 290, 454,
14, 51, 88, 125, 180, 254, 402,
24, 64, 103, 143, 203, 282, 441,
};

static uint64_t backbone_model5_conv1_conv1_weight[64 * 1*4] =
{ // torch.Size([64, 1, 1, 64])
0x4952bc2bbb52534c,0x3ac4b344ec0d9ca9,0x145bc9cbcbd53cd5,0x555455653ac24b35, 
0xcd50c4454c5c4dad,0xeb4c5c353cad5b54,0x43cb50db54c9d44b,0xdcc5cbb24d9c653c, 
0x124c434b43f4d344,0xd43d4bb34242b359,0xc1fe54553d9ca65c,0x4da3c51ab4ddb32c, 
0x443d546a3eb3e332,0x434d4de59c5441de,0x04dd5cc2bcacd143,0xcb53e5b2b4c3bb49, 
0xa5633ca4b3593344,0x4dd49dc44045ae34,0x251ac5dc43d35065,0xc561bbd444b463cc, 
0xca94433c55435954,0x3ce6c55444435344,0x945cc33252c25915,0x543c43c65145c3aa, 
0x0de0d4d454cc54c5,0xc3450d4e0cd2d1d6,0x5356d3a2c6446ebd,0x43cc6d235561ddca, 
0xd24dd53a2d0ded5a,0xc54c5e55cdd45d35,0x3bd55ddce4c2d54d,0xcd3c4ddde3ba4ec3, 
0x44b44db4244444d5,0xe5009aedd444dd3c,0x3522b5534d3b2d42,0x3a4b534445cea1b4, 
0xbd34caa0446c5b04,0x0944324ac2ba4c34,0x9c55333205cc53b0,0x24bb4143424354a9, 
0xcdb0c514339c2aa1,0xc5bd3c35ccb44db4,0xabb2ca3429c54457,0x4db0bcdb5b1a43eb, 
0xcc650b05555ccdc5,0xdc5b3cda5bcb2b63,0xdd144454933c444a,0x40b4cdd4c6b364bc, 
0x5e533339b4b340c4,0xbd514e134c9c3951,0x9014dbb45bdcc5d3,0xc246c49cbc1c4532, 
0x1643b53ccc30c44d,0xc245349434a5cd2c,0x33cc24ad33dc3cee,0xe4c56aa3b544595c, 
0xb0d29d2ee5a9c9dd,0xc4c2a5cd411bb604,0xd4c3ccdd5b53c34a,0x3bdc422b4204c32c, 
0xe4c4d5b1ddc4e34d,0xa3a40c55d1bcc26b,0x444dd5c2e2d43c5c,0x33a35c34462944cb, 
0x0bd54cda436c61ba,0x4da63b6cc44d4c25,0xcc66b345c5ab4994,0x251b55433943555d, 
0x45621e4d5a53a3cc,0x42d3b4d5433ccbcc,0xb44c54c5dbaa2254,0xc25bcb434bd1646b, 
0x5d9453db00323412,0x20524cb24c5a1dc2,0x454444a3ead5bcd3,0xdc44a4e444b233e5, 
0x4a54336dc44d504d,0x0cb53c045d3d3b5a,0xa91334d23020acd2,0xc55494542dc3551c, 
0x2545b43db4c1d9c0,0xce40c64e4632bdec,0x5bac0dbc1a69dc5c,0xcde53a324c509bd4, 
0x0b2c5c346cd615d5,0xd56e54e4db46dbbe,0x45ddce51cdbb26cb,0x4b454554d4dcc435, 
0x46ad33bc422f450d,0x51114043db35b55c,0xe4cb25bd3b442db0,0xbc24346ca2c1b0a5, 
0x53d94090bb3ccd43,0xc5c3b420a405bec4,0x1c545a63535b34c3,0xd2bec555b424cc3d, 
0x23c32cd555c526c4,0x6accdc3cd31bc5db,0xc5aceb5aacd9bccd,0xc2243adcc5c2e9a4, 
0x65dd34c23be6e43a,0x545ed05b511434c5,0x45dcdc545bc6db44,0xbda4d694b555d4bc, 
0x44dcc443bced5e42,0x4e5d4a5fc1c5bedc,0xc3c3ddacc44dd6be,0xeecd4d4d0d43dbac, 
0xcdb2244504acb04a,0x54d435435a493555,0x2c9dbac3cbdd0cd3,0xb4e34ccbc3a4519a, 
0xd5cc30344a5d4245,0x5d443b52cb9d92d4,0x31b4cbe33335ac52,0xa505e9334d1cd93c, 
0xb332944c4d44354d,0xd534b6a3d3b69352,0x443c5bcd1b45bdcb,0xb205555c01454ddb, 
0x194644b554515c33,0x5b453453dc4d4354,0xcb55c04424ac4dc4,0xa253495449a45334, 
0xc3c4cd35c2b3345b,0x940ccc0320b5c4bb,0x552c3a5c590dccbd,0xeabd4d4bb5ccccc5, 
0xddcc9944bb4bd5b3,0x3bb22e3bcd2db4d2,0xbb445ddbc42cc243,0x24dccdcc349adc5c, 
0xa3d3cdc0eb423bcd,0x1cdb5d9cc5cb35d3,0xc33dcbdc6bbc0a44,0xdd4ccbcd59a4e435, 
0x4dcc41363ea5db93,0x4b1b4ecbdb1513d2,0x0a333b9429d3cddd,0x4c540db2d214dd65, 
0xdccb1d49d4b924bd,0x2cc3eccb5b4dadd3,0xb1343db1c35dc5dc,0xc9dcdabbcc033dcc, 
0x7c3cc5dc5cbd0ac4,0xc2d1cbbdb4c53a54,0x24c443cc10a6c3dd,0xdc4b4cb94e14ccb3, 
0xa5cccd4bc2ebad19,0x52c3ddc233cccdd1,0xda2545b4c36ca949,0x4b5c4b524c2ecdd3, 
0xb334bbc044b4b42b,0x2bc5b453b425b45c,0x24acc55c33cd5ead,0xd0ca6ab3462434b4, 
0xc5d3ba1cd35cd35d,0x63c1c35b5cc445d6,0x9d5936a4c535cc34,0x442b55d2c5449ccc, 
0x0dcc432db3b34dba,0xccc3c4ad644ac45d,0x1db93cc33b3bb1ec,0x15dd43614d1cd999, 
0xcc6b3a65dc5c3ebc,0x594c44c2aabc446c,0xcdd3446a523e2dda,0x4444cc4bd5c25359, 
0xdccc44cb3544505c,0xad44d54b5444cdc9,0x546cd533c452a2ec,0xb33356bb40b4c1e0, 
0x51be9c54b50bb654,0x4dc43ab54025264b,0x45ba234d23d333eb,0xd3a95d42b2a50352, 
0x3cddcce3d425d5dd,0x31d43b9cc5c532ab,0xc2535a1c24e54c00,0xc5da4aed4534cc5a, 
0xcc434554dc5c31bd,0xcc51543bcd3d433c,0x33b54b125b4d1cc9,0xd394bb5acd24455c, 
0x51c553d60d4d9ac3,0x2c54336d124c45cc,0xdc35dc45535b3e34,0x355bb559cca4d45c, 
0xd3b435c54a0453fc,0x42c5a3e3d434ccce,0x5c534b33ccc41932,0x444c549c64c91b34, 
0xdc2c464b4c95ad23,0xb2c4293a4b4b5929,0x5b3c3d5c50dd9dd0,0x43553cd1964532cb, 
0xc519b2b40054bcd4,0xe65b23c3c4a591d3,0x3545454344cb3e55,0x5b3033cb4bc1b94b, 
0xc32b534b92c4d24b,0xb43b2b9b4a43b2cb,0x54dd1cbc0dbcda9a,0xcd34d91b01cbd9b3, 
0x3b2495344bcf3d5b,0xcb4951cc0b96bb4c,0xdcda5cc4ba35435c,0xdd5d53634cde134b, 
0xd5244dc1d3543cbc,0xb454b563b4443a4c,0x034dc35429eb4dc9,0x45b4c65d95b544cc, 
0xdcd5cb3532d34a45,0xb44b5546c5c3140b,0x524cdc3a1b5d4cd5,0x25cbcd5531babcc3, 
0x46c4ac6343023435,0x4bd42c3d4cab23da,0x3c5af149345eb55a,0x34545b5ba130d561, 
0xd3ccc2c4c944b32c,0x4452c15dc5b33ac4,0xb556cd59a4c40eca,0x53c0250b3455cacc, 
0x55c4b4cd4cd3b452,0x2222342955a24234,0xa35ccabd14343a92,0xccc155c50b44a913, 
0xed0a23da5414d5ba,0xb4cad95bbead4bec,0x344bcddc2cc5d444,0x560bc304dc3ddccd, 
0xcb4acd4ea54b4d5c,0x53d5dd3453cccd4c,0x4c1a45994c4c36d5,0x465ccb5c5c24ccdc, 
0xdb111bc2d34cc43c,0x3eb33dbcba0dcbd0,0xcc3bcbc341cd5356,0x0dcccedb34229cbc, 
0xb4cd3bd04abba4b5,0x5c34dcbdb393b2dc,0xbb42a3a2e445c2ce,0x245c10d1151cdcb5, 
0x4a351d3abc5434bd,0x5e34d40dcb1c4bcc,0xcb414c321a51daad,0xc54d4545daa3a591, 
0xd43dbd41c4b54edc,0x5d3cd40a45a40b14,0x4a342454493d4299,0x5ddccbca26bcb3b4, 
0xb642ccc3acca4cdc,0xd31c34c345cad3cd,0x34cd45aa3c342e54,0xbc19c5c422cbc0c4, 
};

static int backbone_model5_conv1_quant1_threshold[64 * 14] =
{ // torch.Size([64, 14])
-1446, -904, -633, -430, -294, -159, -23, 111, 247, 382, 518, 721, 992, 1534,
-1781, -1114, -780, -530, -363, -196, -29, 137, 304, 471, 637, 888, 1222, 1889,
-1761, -1130, -814, -577, -419, -261, -103, 54, 212, 369, 527, 764, 1080, 1711,
-1465, -950, -693, -500, -371, -243, -114, 13, 142, 271, 399, 592, 850, 1364,
-1325, -821, -568, -379, -252, -126, 0, 125, 252, 378, 504, 693, 946, 1451,
-2184, -1374, -969, -665, -463, -260, -57, 144, 347, 549, 752, 1056, 1461, 2271,
-1966, -1236, -871, -597, -415, -232, -50, 132, 314, 497, 679, 953, 1318, 2048,
-1895, -1228, -895, -644, -478, -311, -144, 21, 188, 355, 521, 771, 1105, 1771,
-1344, -852, -607, -422, -300, -177, -54, 68, 191, 314, 437, 621, 867, 1358,
-1760, -1103, -775, -528, -364, -200, -36, 127, 291, 455, 620, 866, 1194, 1851,
-1270, -802, -568, -392, -275, -158, -41, 75, 192, 310, 427, 602, 836, 1305,
-1685, -1053, -737, -500, -342, -184, -26, 130, 288, 446, 604, 841, 1157, 1789,
-1242, -791, -566, -397, -284, -171, -59, 53, 166, 278, 391, 560, 785, 1236,
-1311, -832, -593, -413, -294, -174, -54, 64, 184, 304, 423, 603, 842, 1321,
-1472, -950, -690, -494, -364, -233, -103, 27, 157, 288, 418, 614, 874, 1396,
-1209, -771, -552, -388, -279, -170, -60, 48, 157, 267, 376, 540, 759, 1196,
-1434, -889, -616, -412, -275, -139, -2, 133, 269, 406, 542, 747, 1019, 1565,
-1297, -803, -556, -370, -247, -123, 0, 123, 247, 370, 494, 679, 926, 1420,
-1350, -860, -616, -432, -310, -187, -65, 57, 179, 301, 424, 607, 852, 1342,
-1557, -973, -682, -463, -317, -171, -25, 120, 266, 411, 557, 776, 1068, 1651,
-1520, -960, -681, -471, -331, -191, -52, 87, 227, 367, 507, 716, 996, 1555,
-2042, -1322, -962, -692, -512, -332, -152, 27, 207, 387, 567, 837, 1197, 1917,
-1212, -768, -546, -379, -268, -157, -46, 64, 175, 287, 398, 564, 786, 1231,
-1163, -734, -519, -358, -251, -144, -36, 70, 177, 285, 392, 553, 767, 1197,
-1590, -1038, -761, -554, -416, -278, -140, -1, 136, 274, 412, 619, 896, 1448,
-1694, -1079, -771, -540, -387, -233, -79, 74, 228, 381, 535, 766, 1074, 1689,
-2258, -1476, -1085, -791, -596, -400, -204, -9, 186, 381, 577, 870, 1261, 2044,
-1327, -847, -607, -427, -307, -187, -67, 52, 172, 292, 412, 592, 832, 1312,
-1294, -825, -590, -414, -297, -180, -62, 54, 171, 289, 406, 582, 817, 1286,
-1439, -904, -636, -435, -302, -168, -34, 99, 233, 367, 500, 701, 969, 1504,
-1796, -1125, -789, -537, -370, -202, -34, 133, 300, 468, 636, 888, 1223, 1894,
-1241, -796, -574, -407, -296, -185, -74, 36, 147, 259, 370, 537, 759, 1204,
-1528, -997, -732, -533, -400, -267, -134, -2, 130, 263, 396, 595, 860, 1391,
-1431, -920, -664, -473, -345, -217, -90, 37, 165, 293, 420, 612, 867, 1378,
-1563, -1030, -764, -564, -431, -298, -165, -32, 101, 234, 367, 567, 833, 1366,
-1622, -1052, -767, -554, -411, -269, -126, 15, 158, 300, 443, 656, 941, 1511,
-1271, -815, -587, -416, -301, -187, -73, 40, 154, 268, 382, 553, 781, 1238,
-1605, -1035, -750, -537, -394, -252, -110, 32, 174, 317, 459, 673, 958, 1527,
-1420, -888, -622, -423, -290, -157, -24, 107, 240, 373, 506, 705, 971, 1503,
-1382, -862, -602, -407, -277, -148, -18, 111, 241, 371, 501, 696, 956, 1476,
-1527, -968, -688, -478, -338, -198, -59, 80, 220, 360, 500, 710, 989, 1549,
-1606, -1014, -718, -496, -348, -200, -52, 95, 243, 391, 539, 761, 1057, 1649,
-1418, -889, -625, -427, -295, -163, -31, 100, 233, 365, 497, 695, 959, 1487,
-1294, -808, -565, -382, -261, -139, -18, 103, 225, 346, 468, 650, 893, 1379,
-1565, -1012, -735, -528, -390, -252, -113, 24, 162, 300, 438, 646, 922, 1475,
-1421, -892, -628, -430, -297, -165, -33, 98, 230, 363, 495, 693, 957, 1486,
-1469, -923, -650, -446, -309, -173, -36, 99, 235, 372, 508, 713, 986, 1531,
-1653, -1061, -765, -543, -395, -247, -99, 48, 196, 344, 492, 714, 1011, 1603,
-1335, -846, -601, -417, -295, -172, -50, 71, 194, 316, 439, 622, 867, 1357,
-1373, -862, -607, -415, -288, -160, -32, 94, 222, 350, 477, 669, 924, 1435,
-1528, -983, -710, -505, -369, -233, -96, 39, 175, 312, 448, 652, 925, 1470,
-1503, -968, -701, -501, -368, -234, -101, 32, 165, 299, 433, 633, 900, 1434,
-1400, -861, -591, -389, -254, -119, 15, 150, 285, 420, 555, 757, 1027, 1566,
-1635, -1024, -718, -489, -336, -183, -30, 122, 274, 427, 580, 809, 1115, 1726,
-1495, -941, -663, -455, -317, -178, -40, 98, 237, 375, 514, 722, 999, 1553,
-1655, -1058, -759, -535, -386, -236, -87, 61, 211, 360, 510, 734, 1032, 1630,
-1171, -732, -513, -348, -238, -129, -19, 90, 200, 309, 419, 584, 803, 1242,
-1463, -948, -691, -498, -369, -240, -111, 16, 145, 274, 402, 595, 853, 1367,
-1427, -889, -620, -418, -284, -149, -14, 119, 254, 388, 523, 724, 993, 1531,
-1630, -1053, -765, -548, -404, -260, -116, 27, 172, 316, 460, 676, 965, 1542,
-1927, -1265, -933, -685, -519, -353, -187, -22, 143, 309, 474, 723, 1054, 1717,
-1293, -835, -607, -435, -321, -207, -92, 21, 136, 250, 364, 536, 764, 1222,
-1008, -638, -454, -315, -223, -131, -39, 53, 145, 237, 330, 468, 653, 1022,
-1839, -1155, -813, -556, -385, -214, -42, 128, 299, 470, 641, 898, 1240, 1925,
};

static uint64_t backbone_model5_conv1_conv2_weight[64 * 9] =
{ // torch.Size([64, 3, 3, 1])
0x6, 0xc, 0xc, 0x5, 0xc, 0xa, 0xc, 0xc, 0xc, 
0xe, 0xc, 0xc, 0xb, 0x3, 0x1, 0xd, 0xb, 0xc, 
0xc, 0x4, 0x4, 0xf, 0x3, 0x3, 0xa, 0x4, 0x9, 
0x5, 0x4, 0xf, 0x5, 0x5, 0xd, 0x5, 0x3, 0x3, 
0x5, 0x1, 0xe, 0x4, 0xb, 0xd, 0x9, 0x9, 0xc, 
0x9, 0x2, 0xa, 0xc, 0xb, 0xc, 0xc, 0xc, 0xd, 
0x3, 0x3, 0x4, 0x2, 0x5, 0x4, 0x1, 0x5, 0x5, 
0x3, 0x3, 0x1, 0x4, 0x3, 0x4, 0x5, 0x4, 0x4, 
0xf, 0xc, 0x4, 0xd, 0x3, 0x5, 0x9, 0x2, 0x0, 
0xb, 0xb, 0xb, 0xc, 0xc, 0xb, 0xc, 0xc, 0xc, 
0xb, 0xd, 0xc, 0x0, 0xb, 0x5, 0xc, 0x4, 0x6, 
0xe, 0xd, 0xa, 0xd, 0xb, 0x3, 0xb, 0x4, 0x4, 
0xb, 0xd, 0xd, 0x4, 0x0, 0xc, 0x5, 0x5, 0xb, 
0x5, 0x4, 0xe, 0x5, 0x3, 0xc, 0x3, 0xc, 0xe, 
0x5, 0xd, 0xd, 0x5, 0xd, 0xc, 0x5, 0x3, 0x2, 
0xc, 0x3, 0x6, 0xc, 0x0, 0x4, 0xe, 0xc, 0xa, 
0xc, 0x9, 0xb, 0xc, 0xa, 0xc, 0xc, 0xa, 0xc, 
0x4, 0x3, 0x3, 0x4, 0x4, 0x1, 0x5, 0x5, 0x0, 
0x5, 0x1, 0x5, 0x4, 0xc, 0xc, 0x9, 0xc, 0xe, 
0xd, 0x9, 0x4, 0xb, 0x9, 0x3, 0xe, 0xc, 0xa, 
0x4, 0x6, 0x5, 0xb, 0x4, 0xb, 0x2, 0x9, 0xc, 
0x4, 0x3, 0x4, 0xb, 0xd, 0xd, 0xd, 0x9, 0xe, 
0x3, 0x5, 0x5, 0x1, 0x5, 0x4, 0xd, 0xd, 0xd, 
0xc, 0xb, 0x4, 0xc, 0xc, 0x4, 0xd, 0xd, 0xb, 
0x0, 0x4, 0x6, 0x1, 0x2, 0x4, 0x1, 0x3, 0x3, 
0xc, 0xd, 0x3, 0xb, 0xa, 0x9, 0xd, 0xc, 0xd, 
0x0, 0x3, 0x4, 0x2, 0x4, 0x4, 0x5, 0x4, 0x5, 
0xd, 0xc, 0x2, 0xd, 0xc, 0x5, 0x4, 0x4, 0x6, 
0xc, 0xa, 0xc, 0xd, 0x5, 0x4, 0xd, 0xc, 0x5, 
0x4, 0x4, 0x5, 0xc, 0x3, 0xc, 0xd, 0xd, 0xd, 
0xd, 0xd, 0xd, 0xc, 0xd, 0xd, 0x5, 0x4, 0x5, 
0x2, 0x3, 0x4, 0x3, 0x5, 0xc, 0x3, 0x1, 0xd, 
0x5, 0xc, 0xe, 0x4, 0xb, 0xe, 0xb, 0x4, 0x2, 
0xd, 0xd, 0xc, 0x4, 0x3, 0x4, 0x5, 0x5, 0x5, 
0xd, 0xd, 0xb, 0xd, 0x5, 0x4, 0xb, 0x5, 0x3, 
0xd, 0xd, 0xe, 0x4, 0x1, 0x4, 0x4, 0x5, 0x4, 
0xd, 0xc, 0x0, 0xb, 0x3, 0xb, 0x5, 0x6, 0x1, 
0x6, 0x4, 0x5, 0x4, 0xa, 0xc, 0x2, 0xc, 0x0, 
0xb, 0xb, 0x0, 0xd, 0xc, 0x5, 0xc, 0xc, 0x6, 
0x5, 0x4, 0x4, 0x9, 0xd, 0xd, 0x5, 0x3, 0x4, 
0x6, 0x6, 0x0, 0xc, 0xa, 0x1, 0xd, 0xc, 0x4, 
0xb, 0x4, 0x5, 0xb, 0xa, 0xc, 0xd, 0xd, 0xd, 
0xd, 0xb, 0xd, 0xb, 0x9, 0xa, 0xb, 0xc, 0xb, 
0xe, 0xc, 0x4, 0xd, 0x1, 0x4, 0x3, 0x5, 0x5, 
0x4, 0x4, 0x3, 0x4, 0xc, 0xc, 0xc, 0xd, 0xd, 
0x5, 0xa, 0xb, 0x4, 0xc, 0xd, 0x5, 0xc, 0xd, 
0xc, 0xd, 0xd, 0xb, 0xc, 0xb, 0x4, 0xc, 0x9, 
0x9, 0x2, 0xc, 0xd, 0xc, 0xe, 0x9, 0x5, 0x9, 
0xb, 0xc, 0xc, 0xb, 0x5, 0x3, 0x1, 0x6, 0x5, 
0x5, 0x5, 0x4, 0x5, 0x2, 0xc, 0xb, 0xd, 0xe, 
0x4, 0x4, 0x3, 0x3, 0x3, 0x3, 0x2, 0x4, 0x2, 
0xd, 0xb, 0xe, 0x4, 0x5, 0xc, 0x2, 0x2, 0xa, 
0xd, 0xc, 0xd, 0xc, 0xc, 0xb, 0x5, 0x5, 0x5, 
0x6, 0x4, 0xd, 0x5, 0x5, 0xc, 0x4, 0x3, 0xc, 
0x3, 0x5, 0x4, 0xc, 0xb, 0xc, 0xd, 0xd, 0xe, 
0xc, 0xb, 0xc, 0x6, 0x4, 0x5, 0x5, 0xb, 0x4, 
0xd, 0xd, 0x4, 0xb, 0xd, 0x3, 0x4, 0x3, 0x4, 
0x5, 0xc, 0x2, 0x9, 0x4, 0x9, 0xd, 0x5, 0x6, 
0x5, 0x5, 0x5, 0x3, 0xb, 0x5, 0xb, 0xc, 0x4, 
0xe, 0x2, 0x5, 0xc, 0x4, 0x4, 0x5, 0x4, 0xd, 
0x4, 0x4, 0xe, 0x5, 0x4, 0xc, 0x6, 0x3, 0xd, 
0xd, 0xc, 0x4, 0xd, 0x4, 0x3, 0xc, 0x3, 0xb, 
0xc, 0xd, 0x5, 0x3, 0x4, 0x4, 0x5, 0xb, 0xe, 
0xd, 0xd, 0xc, 0x3, 0x3, 0x3, 0x5, 0x5, 0x4, 
};

static int backbone_model5_conv1_relu2_threshold[64 * 7] =
{ // torch.Size([64, 7])
12, 42, 72, 102, 148, 208, 329,
42, 78, 113, 149, 202, 273, 415,
33, 84, 136, 187, 263, 366, 570,
42, 99, 157, 214, 301, 416, 646,
14, 58, 101, 145, 211, 298, 473,
-6, 25, 57, 89, 137, 201, 328,
19, 60, 101, 142, 203, 285, 449,
8, 44, 80, 116, 169, 241, 384,
42, 102, 163, 223, 314, 434, 676,
9, 35, 61, 87, 126, 178, 281,
19, 62, 105, 148, 212, 298, 471,
18, 53, 89, 124, 177, 247, 388,
22, 69, 117, 164, 235, 329, 519,
30, 81, 131, 181, 256, 356, 556,
21, 54, 87, 120, 170, 236, 368,
16, 65, 113, 161, 233, 329, 522,
13, 32, 51, 70, 99, 137, 214,
14, 53, 92, 131, 190, 268, 424,
16, 53, 89, 126, 182, 255, 403,
21, 57, 93, 130, 184, 257, 402,
8, 54, 101, 147, 217, 310, 496,
15, 64, 113, 162, 235, 333, 529,
24, 67, 111, 154, 219, 306, 479,
22, 50, 79, 107, 150, 207, 321,
30, 75, 119, 163, 229, 317, 493,
10, 53, 96, 139, 203, 289, 460,
18, 64, 110, 156, 224, 316, 500,
20, 57, 95, 133, 189, 265, 415,
18, 45, 72, 99, 140, 194, 303,
20, 54, 88, 123, 174, 243, 381,
10, 46, 81, 116, 169, 240, 381,
14, 39, 65, 90, 128, 179, 281,
21, 58, 95, 132, 188, 262, 409,
18, 62, 106, 150, 216, 305, 482,
8, 46, 84, 122, 180, 256, 408,
20, 60, 99, 138, 196, 274, 431,
16, 62, 108, 155, 224, 317, 502,
22, 61, 101, 141, 200, 280, 439,
16, 43, 69, 96, 137, 190, 298,
16, 43, 71, 98, 139, 195, 305,
5, 50, 95, 140, 207, 296, 475,
16, 51, 87, 123, 176, 248, 391,
22, 55, 88, 121, 171, 237, 368,
19, 60, 101, 142, 204, 286, 451,
12, 39, 65, 92, 132, 185, 291,
18, 52, 85, 119, 169, 236, 371,
12, 53, 94, 136, 197, 280, 445,
15, 52, 90, 128, 184, 260, 411,
34, 76, 117, 159, 221, 304, 471,
21, 59, 97, 135, 192, 267, 419,
7, 26, 45, 65, 93, 131, 207,
16, 48, 79, 110, 157, 219, 344,
26, 62, 99, 136, 191, 264, 411,
20, 60, 101, 142, 203, 285, 448,
20, 57, 93, 130, 184, 257, 402,
34, 74, 114, 154, 214, 295, 455,
12, 50, 87, 125, 181, 256, 407,
22, 56, 91, 125, 177, 246, 384,
14, 56, 99, 142, 205, 291, 461,
19, 50, 81, 112, 158, 219, 342,
22, 53, 84, 115, 162, 224, 348,
11, 35, 59, 83, 119, 168, 264,
24, 52, 80, 107, 149, 204, 315,
8, 39, 70, 101, 147, 209, 332,
};

static uint64_t backbone_model5_conv2_conv1_weight[64 * 1*4] =
{ // torch.Size([64, 1, 1, 64])
0x5acd543ccd61d5d5,0x2cb6cdc9d1d35444,0x45c9cc5dccccbcc6,0x449dc45bc45c34c6, 
0x4ddc1353215c42b4,0x4c5db2250dd2b52d,0x4a4cb4b3da4a224a,0x414dd33b15b1b4d5, 
0x491bd1c4ccc4accd,0xcac4bc31c54c4cc4,0xa5b32d4ccccbbcc4,0x2cccccc4944d7ccd, 
0xdc533a14d45cc34d,0xc05cc54cddd45c9d,0xb1d39c244c3d42ad,0x034c21c14bbbccc3, 
0xbd5c4cd45db6e3c4,0x5cc55124cb6ddc3b,0x335cc45e2504c241,0xdbd25b5c4452c4dc, 
0xd03dcc2d44dcbb24,0x3c5c2cddc0c4c6cd,0x4cb3cbb054e6dcdb,0x2d35d30cc45530c4, 
0xd3c4d25d333cbcc4,0x439bbad025c495e4,0x3a44495059d51b24,0x5c44452b94544243, 
0x5013c9c2b6ad34bd,0x344b2c5b51b5cbdc,0x9cabaec3bbcb5ba4,0xb3cdcc441cacbc42, 
0xd4be23553bc5093d,0xbdd35d539c442ad5,0x315cd2c993b20bad,0xdca45dddc2a3b92b, 
0x5d22e4e006cb6ce5,0x442ecddc5c13e4dd,0xc4cd5d2dcd4cce46,0xdccdddc5445b46d0, 
0xc450bc2cd0c31b44,0xdc4d1adecca2c53d,0x2ba5ccd442d4ecbb,0xc444dd9cdc9cacec, 
0xdb5b53cca96dccc4,0x9c44abe4dc3c3355,0x5becb9d4ccccc5ec,0x959ad1a3dbedbdcc, 
0xb5a2b3543cb434da,0xbcc0536413b5c010,0xa4d5bd433cbcb432,0xd0eb3cb2c4bc9bc5, 
0xc50552d41c2da255,0x3995d3535cdb5345,0xca5a3ac04ca0cc23,0x4bd0bb13459ca2c4, 
0xa2b365a5cc5c3324,0xab1a3d3b34144546,0xbb4c5cbc424923c5,0x335c4d54dc5c55a5, 
0x4d13c221c429dc1d,0xd355d45cbdc45c54,0x0c0cd3cac4c43c4c,0x524544cddb4b5cad, 
0x35cbcc4cbcbc5bd9,0xdc2bbaccc4dbb2dc,0x9da5dd34cbcdbc2b,0x2a2bdcdca4ac51a9, 
0xa5cc52243bc5b23d,0xbcd24b6b3444bcd1,0x0b3ac0cb92c93ccc,0xdccc5bbb43bccc45, 
0xd1344312c35205e4,0xd935c4c5dad93449,0x154bcd5d52c53b35,0x215b445ddc5550aa, 
0x44a4394adab442cc,0xc44b344cba3c3b23,0xbc23d24411fc524b,0x544aba2ccc545d25, 
0x55c054544d5554c9,0xbd014ca5465dc555,0x4504cec43ab335d5,0x5b53b96ded316345, 
0x4d4404d4334b5cbc,0x24cbcc4444ccca31,0xca2c23dd4b2d94bc,0x241a3cb63dc9cceb, 
0x0dbcbbc51cb2db1d,0xac5a4bdcc440bb29,0xac5dc5cbc2244cdc,0x6da6d9c4c3b1b32d, 
0x94444d050394cd4a,0xcd4db54eb2425dc4,0x3eb34bc5442e4cbd,0x595442bd3c44dd53, 
0xd6db9e3c3d243b93,0xddcd5ddc36ccdcdc,0x3c450e05cd2b0dc4,0xbbd4d4cda5ac4a3d, 
0x11d4dcbb5aa6dcb3,0xa42d4bc4053ed4dc,0x43db2adc46c44ddc,0xcd4accd3dba6cc4b, 
0xd59b4dad94adb5b1,0xc2c9bccb1eca54c5,0x1c4b434ab534cbc9,0x3abb524adcdcb3c3, 
0x4b0c36aac4c4cc50,0xc6daddd54152d403,0xc3cc4acdcc13d40a,0xcbd413c69ddbdddd, 
0x3bdab22b034bc0bb,0x34cca4440c655e39,0xbb4924c3411c5bd1,0x924c42b3b2b43c63, 
0xd334bc4b50bd21cb,0x221bcbb5c3d2c51b,0x54c1b5bd93554bc9,0x344c09b054ebdce1, 
0xb123cc5abdcd41a5,0x5544c0dbc5c5d3bc,0x522549944d4a1334,0x4c3ba54cb453a4b3, 
0x03adbab34025549c,0xbbbc2d0d25cbddc3,0x24d4cb54b32c4bd5,0xacbecd45b4dc5303, 
0x932d4c354bd24536,0xb553d4ca93c43bc3,0x65a4b145c54cc424,0x341dcd3b3bce23b5, 
0x3b4e435c42d5134a,0x4cb5db0c4b223455,0xd344c4c35b54c523,0xd45a3d23d4a25db5, 
0xc92934335b55562a,0x5cd31dd3a4cbd424,0x24ca3a60301db246,0x091acc1546cb6645, 
0xb3c44c42dd3295ac,0xe44c3243c0d3aca5,0x03b3a4c4d5eb4355,0x220b4154bd12e555, 
0x035cc4acc4d44455,0x54542dddc3a3354a,0x35914b944a46d413,0xb504c44bcbc9d9e4, 
0xb22b9523dccdb45c,0xc5d53bb2bc5bc32c,0x9d4c94cdc2d2a523,0xabc3bb4ccc219c9a, 
0x94bf0d3b1bd3d43b,0xc14b434da13523c4,0x4d25e5c4b5b4c09a,0x4c153dbd193cd343, 
0x1dccccbd9ec34dbc,0xcdb4dd5ccec5bd3c,0xcddace445bcddcdd,0x3c59d9ddd0eb9545, 
0x5ccbc2b3bba6d95c,0xc504acd1140d30b1,0x92db5c52c454ba4b,0xc2a34ccc4d50bcd0, 
0xab2269e5ad54d34b,0x549453b5d95d5444,0x425c349c24c2905b,0xa5e1acaea23444c2, 
0xc4bccc4bcbd243db,0xccbb443da322343b,0x033b5a36b1c5a523,0x502ca53335553253, 
0x2cc4ddc2c4cb42b3,0xc50cdbcc355b2335,0x34b213454b4bdac4,0x321adb41001bb443, 
0xc4a5ca4c3cc3d9c5,0xc15b3c25222b369c,0x3b35accd42d44cbc,0xd4919021c433cbdc, 
0x5bc1b4bc63b19eb9,0xbcb3c42a4b40b49c,0x2b4bbb2b924cc3ce,0xc0b39ae5b4d2d7b3, 
0x25cbbcab35395b5b,0x6c1c444c53a504cd,0x49e345a5c4693dad,0x5cdc3ade34ec2d4c, 
0x34cbcd1231044444,0x5b12354944555cb4,0x52515535dc1cdec4,0x5542444a353b424b, 
0xc0cc944ac3cc4993,0x4441b29c2da5b3cd,0x22b5341b62bb591b,0x4c55a3cc4cd04d59, 
0xab2ca12beddb3d3e,0xd294434bbc424b3d,0xdccdc5baccacc23d,0xbabcabbc33bcb2dc, 
0xa3433144e4bad50b,0xe2431bbadbbc3213,0x33c344ea13ec51b4,0x342cc35ece94beb2, 
0xc95bcdbba2c40b4c,0x444201deac43b54b,0xd3c4234b5cb6cd3b,0xdd16cdb9b4452b44, 
0xd4b2d0c3c343ccbe,0xdb9db5cab44cdcdc,0xc1d44c6cccbacd4b,0xcdd033ddc4db11c9, 
0xb9b21535bb34c45a,0xb5b329dc565cbc0a,0x16446b5cab50d345,0xbb44ca5dcc5c35cb, 
0xc2dda4423db301d4,0x3cc5211aa25bbb35,0x45dbba3caa5135c3,0x2ac94412eadb5c4c, 
0x32a5b33d235150a5,0x1bd23bb55bc9baa5,0x6bd4bd3544944202,0x9534cbbccc541c2c, 
0xdc41c343b33bbbc4,0xcb03555cccc556a5,0x4cb4c31543d4d2ba,0x46c5d4b40c3cbbdc, 
0xcc43bdd3bc3c4cbd,0xad4c5cbdd539055d,0x5bbe4ad4ecc3c1cb,0x56d4d5b3c3ccd4cc, 
0x42c52ec2bc432555,0x495c355c44d15b4b,0x3924459a52c33134,0x4c342d345a4243c5, 
0xbd43d43d3553c33b,0xdd5324a4cdd34644,0x1d02cbb925d55c5c,0x4544032add352cbb, 
0xc45c43dcbc21c424,0x344453d4d5345455,0x49c33b331dc4b442,0x30e5deacda42134a, 
0xa35b4344bc432ca4,0x4225540bb25bcac4,0x3cbba3b343b05c4c,0xcb0334cd39b4c054, 
0xbcd5d253dddc3dbd,0xd55bddccd5e6c1cc,0x4ac6d3dccb32411c,0x5c54251c3b9ba3b3, 
0xae44d453dc3453ce,0x94d43b44a4b5db39,0x34d404c02d35225a,0xdc41a131420904cd, 
};

static int backbone_model5_conv2_quant1_threshold[64 * 14] =
{ // torch.Size([64, 14])
-898, -569, -404, -280, -198, -116, -33, 48, 130, 213, 295, 419, 583, 913,
-844, -534, -380, -264, -187, -110, -32, 44, 121, 199, 276, 392, 546, 855,
-845, -541, -389, -275, -199, -123, -47, 28, 104, 180, 256, 370, 522, 826,
-788, -505, -364, -258, -187, -117, -46, 23, 94, 165, 235, 341, 482, 765,
-962, -610, -433, -301, -213, -125, -37, 50, 138, 227, 315, 447, 623, 976,
-977, -626, -450, -318, -230, -142, -54, 32, 120, 208, 296, 428, 604, 955,
-923, -585, -416, -289, -205, -121, -36, 47, 132, 216, 301, 427, 596, 934,
-882, -565, -406, -287, -208, -129, -49, 29, 108, 187, 267, 386, 544, 861,
-788, -507, -366, -261, -191, -120, -50, 19, 89, 160, 230, 335, 476, 757,
-1271, -807, -575, -401, -285, -169, -53, 62, 178, 294, 410, 585, 817, 1281,
-838, -546, -400, -290, -217, -144, -70, 2, 75, 148, 221, 331, 477, 770,
-1047, -679, -495, -357, -265, -172, -80, 11, 103, 195, 287, 425, 609, 978,
-747, -477, -342, -241, -174, -106, -39, 28, 95, 163, 230, 331, 466, 736,
-721, -457, -324, -225, -159, -93, -27, 39, 105, 171, 237, 336, 469, 733,
-867, -541, -378, -256, -174, -93, -11, 70, 151, 233, 314, 437, 600, 926,
-1017, -646, -460, -321, -228, -135, -43, 49, 142, 235, 327, 466, 652, 1023,
-846, -554, -408, -298, -225, -152, -79, -6, 66, 139, 212, 322, 468, 760,
-933, -597, -429, -303, -219, -135, -51, 32, 116, 200, 284, 410, 578, 914,
-778, -488, -342, -233, -160, -88, -15, 57, 130, 202, 275, 384, 529, 820,
-1043, -661, -469, -326, -230, -135, -39, 56, 151, 247, 342, 486, 677, 1060,
-1001, -625, -436, -295, -201, -106, -12, 81, 175, 270, 364, 505, 694, 1071,
-945, -595, -421, -290, -202, -115, -27, 59, 146, 234, 321, 452, 627, 976,
-828, -529, -379, -266, -191, -117, -42, 32, 107, 182, 257, 369, 519, 819,
-1059, -683, -494, -353, -259, -165, -70, 23, 117, 211, 305, 447, 635, 1012,
-871, -568, -417, -304, -229, -153, -78, -2, 73, 148, 224, 337, 488, 790,
-871, -557, -400, -283, -204, -126, -47, 30, 109, 187, 266, 384, 541, 855,
-863, -558, -405, -290, -214, -137, -61, 15, 91, 167, 244, 359, 511, 817,
-1009, -642, -459, -321, -230, -138, -46, 44, 136, 228, 319, 457, 640, 1007,
-811, -516, -368, -257, -183, -109, -35, 38, 112, 186, 260, 371, 518, 814,
-804, -515, -371, -263, -190, -118, -46, 25, 97, 170, 242, 350, 494, 783,
-708, -446, -316, -217, -152, -87, -21, 43, 109, 174, 240, 338, 469, 730,
-930, -601, -436, -313, -230, -148, -66, 15, 98, 180, 262, 385, 550, 879,
-704, -450, -324, -229, -166, -102, -39, 23, 86, 150, 213, 308, 434, 688,
-859, -543, -386, -268, -189, -110, -31, 47, 125, 204, 283, 401, 559, 874,
-1004, -635, -451, -313, -221, -129, -36, 55, 147, 239, 331, 469, 654, 1022,
-868, -555, -398, -281, -202, -124, -46, 32, 110, 188, 266, 384, 540, 853,
-822, -515, -362, -247, -170, -93, -17, 59, 136, 212, 289, 404, 557, 864,
-773, -492, -352, -247, -177, -107, -37, 32, 103, 173, 243, 348, 488, 769,
-1086, -697, -503, -357, -260, -162, -65, 31, 128, 226, 323, 469, 663, 1052,
-924, -607, -448, -329, -250, -170, -91, -11, 67, 146, 226, 345, 504, 821,
-866, -544, -383, -262, -181, -101, -20, 59, 140, 220, 301, 422, 583, 905,
-828, -519, -365, -250, -173, -95, -18, 58, 135, 212, 289, 405, 559, 867,
-762, -479, -337, -231, -160, -90, -19, 51, 122, 192, 263, 369, 511, 794,
-736, -465, -330, -228, -160, -93, -25, 42, 110, 177, 245, 347, 482, 753,
-1133, -734, -535, -386, -286, -186, -87, 12, 112, 211, 311, 460, 660, 1058,
-778, -496, -355, -250, -179, -109, -38, 31, 102, 172, 243, 348, 489, 771,
-808, -517, -371, -262, -189, -117, -44, 28, 100, 173, 246, 355, 500, 791,
-801, -507, -360, -250, -176, -102, -29, 44, 117, 191, 264, 375, 522, 816,
-728, -465, -334, -235, -169, -103, -38, 27, 93, 159, 224, 323, 455, 718,
-959, -621, -452, -325, -240, -156, -71, 12, 97, 181, 266, 393, 562, 900,
-922, -589, -422, -297, -214, -130, -47, 35, 119, 202, 285, 410, 577, 910,
-774, -495, -356, -251, -181, -111, -41, 27, 97, 167, 237, 341, 481, 760,
-960, -625, -457, -331, -247, -164, -80, 3, 87, 171, 254, 380, 548, 883,
-930, -577, -401, -269, -181, -93, -5, 82, 170, 258, 346, 478, 655, 1007,
-859, -552, -399, -284, -208, -131, -55, 21, 98, 174, 251, 366, 519, 825,
-801, -510, -364, -254, -182, -109, -36, 36, 109, 182, 255, 364, 510, 802,
-977, -621, -443, -309, -220, -131, -42, 46, 135, 224, 313, 447, 625, 981,
-735, -469, -337, -237, -171, -104, -38, 28, 94, 160, 227, 326, 459, 725,
-748, -467, -327, -222, -152, -82, -11, 58, 128, 198, 268, 374, 514, 795,
-947, -598, -424, -293, -206, -118, -31, 55, 142, 230, 317, 448, 622, 971,
-808, -511, -363, -251, -177, -103, -29, 45, 119, 193, 268, 379, 528, 825,
-690, -437, -310, -216, -152, -89, -26, 36, 100, 163, 226, 321, 448, 701,
-962, -614, -440, -310, -223, -136, -49, 37, 124, 211, 298, 428, 602, 949,
-800, -506, -359, -249, -175, -102, -28, 44, 118, 191, 265, 375, 522, 815,
};

static uint64_t backbone_model5_conv2_conv2_weight[64 * 9] =
{ // torch.Size([64, 3, 3, 1])
0x6, 0x4, 0x2, 0x6, 0x3, 0xc, 0x5, 0x9, 0x4, 
0x5, 0x2, 0xd, 0x4, 0xb, 0xd, 0x2, 0xc, 0xe, 
0x4, 0x3, 0x5, 0xc, 0xb, 0x6, 0xc, 0x3, 0x4, 
0x6, 0x5, 0x4, 0x4, 0x0, 0xc, 0x2, 0xc, 0xc, 
0xe, 0xd, 0xd, 0xa, 0xc, 0xa, 0xb, 0xa, 0xa, 
0xb, 0x6, 0x5, 0xc, 0x6, 0x2, 0xd, 0x1, 0x2, 
0x5, 0x5, 0xc, 0xb, 0x4, 0xd, 0xe, 0xc, 0xd, 
0x2, 0xb, 0x4, 0x3, 0x3, 0x4, 0x5, 0x5, 0x5, 
0x3, 0x2, 0x5, 0x3, 0xc, 0x4, 0x4, 0x3, 0x6, 
0x5, 0x4, 0x5, 0x4, 0xc, 0x4, 0x4, 0x3, 0x5, 
0x6, 0xc, 0xb, 0x5, 0xb, 0xc, 0x5, 0x5, 0xa, 
0x5, 0x9, 0x9, 0x5, 0x5, 0x3, 0x5, 0x5, 0x4, 
0x5, 0xd, 0xe, 0x5, 0x4, 0xd, 0x0, 0x4, 0x0, 
0xe, 0xc, 0xd, 0x0, 0x4, 0x4, 0x4, 0x5, 0xa, 
0x6, 0x5, 0x5, 0x3, 0x9, 0x3, 0xe, 0xc, 0xd, 
0x3, 0xc, 0x3, 0x4, 0x5, 0x3, 0x6, 0x4, 0x4, 
0x6, 0x4, 0x4, 0x4, 0x4, 0x4, 0xc, 0xc, 0xc, 
0x5, 0x3, 0x2, 0x4, 0xd, 0x0, 0x6, 0xa, 0x4, 
0x9, 0xd, 0xe, 0x5, 0x3, 0xd, 0x3, 0x5, 0xa, 
0x5, 0x5, 0x5, 0xc, 0xc, 0x4, 0xe, 0xd, 0xd, 
0xd, 0xc, 0xb, 0xd, 0xa, 0xa, 0xe, 0x9, 0xc, 
0x5, 0xb, 0xb, 0x6, 0xd, 0xe, 0x6, 0x4, 0x0, 
0x5, 0x2, 0xb, 0x4, 0x2, 0xb, 0x6, 0x5, 0x9, 
0x6, 0x4, 0x6, 0x4, 0xc, 0xb, 0x4, 0x3, 0xa, 
0x1, 0xb, 0x4, 0x9, 0xa, 0x3, 0x5, 0x5, 0x6, 
0x4, 0x4, 0x3, 0x5, 0x5, 0x6, 0x0, 0x2, 0x5, 
0x5, 0x3, 0x5, 0x1, 0x2, 0x4, 0xe, 0xd, 0xc, 
0x5, 0x4, 0x5, 0x5, 0xb, 0x1, 0x3, 0x4, 0x0, 
0xd, 0xc, 0x0, 0xe, 0x5, 0x4, 0xe, 0x2, 0x4, 
0x5, 0x5, 0x5, 0xc, 0xc, 0xc, 0xd, 0xc, 0xc, 
0x6, 0x6, 0xd, 0x0, 0x4, 0xc, 0xd, 0xc, 0xb, 
0xb, 0xb, 0xc, 0xc, 0xd, 0xc, 0xc, 0xc, 0xc, 
0xd, 0xe, 0xe, 0x3, 0x4, 0xb, 0x5, 0x4, 0xc, 
0x0, 0xb, 0xd, 0x2, 0xd, 0xd, 0x4, 0xc, 0xc, 
0xc, 0xc, 0xb, 0xc, 0xc, 0xd, 0xc, 0xc, 0xb, 
0x5, 0x5, 0xe, 0x5, 0x4, 0xe, 0xc, 0xc, 0xd, 
0xb, 0xd, 0x5, 0x0, 0xc, 0x6, 0x3, 0xb, 0x6, 
0x5, 0x4, 0x6, 0x4, 0x2, 0x4, 0xc, 0xc, 0xd, 
0x5, 0x4, 0x5, 0x4, 0xb, 0x4, 0x9, 0x4, 0x5, 
0x5, 0xa, 0x3, 0x5, 0x9, 0x9, 0x6, 0x4, 0x4, 
0x2, 0x9, 0xb, 0x3, 0xa, 0x3, 0x6, 0x4, 0x6, 
0x4, 0x4, 0x1, 0xd, 0xc, 0x4, 0xd, 0xe, 0x5, 
0x4, 0xc, 0xe, 0x4, 0x4, 0xd, 0x5, 0x3, 0xd, 
0xd, 0x3, 0x5, 0xc, 0xb, 0x4, 0xd, 0xc, 0xc, 
0xc, 0xd, 0xd, 0x4, 0x5, 0x5, 0x2, 0xa, 0xa, 
0x6, 0xd, 0xd, 0x7, 0x3, 0xd, 0x5, 0xc, 0xd, 
0xd, 0x9, 0x5, 0xd, 0x5, 0x6, 0xc, 0x3, 0x6, 
0x3, 0xc, 0xd, 0x5, 0xd, 0xd, 0x4, 0xc, 0xe, 
0x5, 0x0, 0xb, 0x6, 0x4, 0xc, 0xd, 0xc, 0xc, 
0x4, 0x4, 0x3, 0x4, 0x4, 0xc, 0xd, 0xd, 0xd, 
0x5, 0x4, 0x4, 0x4, 0x4, 0x2, 0x4, 0x4, 0x2, 
0x6, 0x5, 0xe, 0x5, 0x5, 0xc, 0xc, 0xb, 0x0, 
0xb, 0x9, 0xb, 0x4, 0x4, 0x2, 0x6, 0x5, 0x5, 
0x5, 0x3, 0x4, 0x6, 0x4, 0x6, 0x4, 0xc, 0xc, 
0x3, 0x3, 0xd, 0x4, 0xa, 0xd, 0xb, 0xd, 0xd, 
0x5, 0x5, 0xb, 0x5, 0xc, 0xd, 0x5, 0xa, 0xd, 
0xe, 0x3, 0x6, 0xc, 0x1, 0x4, 0x2, 0x3, 0x4, 
0x4, 0x6, 0x0, 0xb, 0x6, 0x3, 0x4, 0x4, 0x6, 
0xd, 0xd, 0xd, 0x0, 0x3, 0x2, 0xd, 0x1, 0xc, 
0xd, 0xe, 0xd, 0xc, 0xb, 0x5, 0xd, 0x9, 0x5, 
0x0, 0x2, 0xc, 0x9, 0x4, 0xc, 0xb, 0xc, 0xf, 
0x9, 0xd, 0xd, 0x5, 0x3, 0xb, 0x6, 0x3, 0x4, 
0x3, 0xc, 0xc, 0x3, 0xb, 0x4, 0x4, 0x6, 0x5, 
0xd, 0xd, 0xc, 0xc, 0x2, 0x5, 0xa, 0x4, 0x5, 
};

static int backbone_model5_conv2_relu2_threshold[64 * 7] =
{ // torch.Size([64, 7])
29, 88, 146, 204, 292, 409, 642,
19, 71, 122, 173, 250, 353, 559,
19, 67, 115, 163, 236, 332, 525,
18, 70, 122, 174, 252, 356, 564,
32, 80, 129, 178, 251, 348, 543,
29, 74, 119, 164, 232, 322, 502,
24, 73, 123, 173, 247, 347, 545,
23, 66, 109, 152, 216, 301, 473,
26, 62, 97, 133, 186, 257, 399,
2, 45, 88, 131, 196, 282, 455,
20, 62, 104, 145, 208, 291, 459,
27, 83, 139, 195, 278, 390, 613,
27, 59, 91, 124, 172, 237, 367,
21, 55, 90, 124, 176, 244, 382,
29, 75, 121, 167, 235, 327, 511,
22, 63, 105, 146, 209, 292, 458,
23, 70, 117, 163, 233, 326, 512,
20, 53, 86, 118, 167, 232, 363,
31, 102, 173, 243, 350, 492, 775,
28, 86, 143, 201, 287, 402, 632,
28, 86, 143, 201, 287, 402, 632,
14, 54, 94, 135, 195, 276, 438,
26, 65, 104, 143, 201, 279, 436,
37, 101, 166, 230, 326, 455, 713,
26, 77, 129, 180, 258, 361, 567,
26, 77, 128, 178, 254, 356, 559,
17, 59, 101, 143, 205, 289, 457,
22, 73, 123, 174, 250, 351, 554,
17, 68, 119, 170, 247, 349, 553,
28, 72, 117, 162, 229, 319, 498,
34, 76, 118, 160, 223, 307, 476,
18, 51, 83, 116, 164, 229, 359,
19, 62, 105, 148, 213, 299, 472,
20, 52, 85, 117, 165, 229, 358,
22, 49, 77, 104, 145, 200, 310,
14, 68, 121, 175, 255, 362, 576,
17, 60, 103, 146, 211, 297, 469,
21, 61, 101, 141, 202, 282, 443,
23, 76, 128, 181, 261, 366, 578,
32, 98, 164, 231, 330, 462, 727,
9, 45, 81, 117, 171, 243, 388,
27, 69, 111, 153, 215, 299, 466,
22, 64, 106, 148, 210, 294, 461,
19, 55, 92, 129, 184, 258, 405,
16, 35, 54, 73, 101, 139, 215,
45, 128, 211, 294, 418, 583, 914,
37, 107, 177, 247, 352, 491, 771,
10, 54, 98, 143, 209, 298, 475,
17, 49, 81, 113, 161, 225, 353,
17, 52, 87, 122, 174, 244, 384,
22, 48, 75, 101, 140, 193, 298,
36, 81, 125, 170, 237, 326, 504,
26, 87, 148, 209, 301, 423, 667,
19, 65, 111, 158, 227, 320, 505,
13, 68, 124, 179, 261, 372, 592,
25, 74, 123, 172, 246, 345, 542,
26, 77, 129, 180, 258, 361, 567,
34, 105, 176, 247, 354, 496, 779,
33, 80, 128, 176, 248, 343, 534,
28, 98, 169, 239, 344, 484, 765,
41, 108, 174, 241, 341, 474, 740,
22, 84, 145, 206, 298, 420, 664,
22, 55, 89, 122, 173, 240, 374,
21, 50, 78, 106, 149, 205, 318,
};

static uint64_t neck_lateral_convs_0_conv1_weight[64 * 1*4] =
{ // torch.Size([64, 1, 1, 64])
0xba1324a4ca12123b,0x34a124420a2b003a,0x2b15241932242934,0x1b11323505a9c2ba, 
0x4912b2bb32c0120a,0xb033ab22b23b23b2,0x304a3304ad23abc2,0x14b333abc400b4a0, 
0xc4c53334b1230043,0x45b3aa49bb192244,0x2305bcb35a04c334,0x230b3bb326b4c01b, 
0x2aa9299940a33409,0x012b3a12421231a4,0xa20a0a0005a2ac29,0x113223a0a1100003, 
0xb411ba19d13ccd93,0x2bc3d3aadc0bbb2d,0x2303922a2e3b13c0,0x4bcccb103aa2a09c, 
0x3aa45c339954c4a4,0x2c3035410bcdba94,0x2bc4cd2543c43b92,0x0d4464b325254adc, 
0x00a2b0aaa13b2030,0x32c920ca21132003,0x2ba393aa21b9a0ca,0x913b912121090011, 
0xd305dcb4c32bba3c,0x4dcaa0c2b9bd1904,0x3cc3bb114dc3db43,0x32c39b11db3dbcc3, 
0xb4bbccb34a3343d3,0x5294223b4334209c,0xb3343a41bc3bd4dc,0x314b14cc399b0b43, 
0x2a45b9b4cc4c2144,0x4bcccbdaabcd2c53,0x1cc2cc1e4dcadb54,0x39d43c2dcdbd3bb3, 
0x3b93cb3c33c313cc,0xc351aca333c433ab,0x493b2343b34449a5,0x3334cb44aaa9404b, 
0xb1bdbd93930abc5a,0x32b121c33b9cb1bc,0xabc9bb3ab42e3433,0x1c5a5cb2b294bcdb, 
0x2ba342ac6a9355aa,0x925c5041653541b6,0x1a33a1aa26b3bb40,0xc35235a0b3301b36, 
0x5bb3303b23431326,0x241a54342aab21c4,0x94c5ac0131b53240,0x3cb3542224343acc, 
0xcbc0b3a22aabbb4a,0x90c23bcbbc2c4c39,0x4cb4b04d4b22c934,0x23a94d33bcbd42c9, 
0x253bab2bc332cd33,0x433a9a59c20232c1,0x4ca42ba44c3bc5bc,0x4439323a953bbccc, 
0xac44bb4123b2220c,0x2bb1ccab33b329cc,0xb4cecdca94cabdc3,0xbcc1cbbd0d3bb23c, 
0x4bad443333cc3a2c,0x15953c15244cbbbb,0x201a1c39c59453cc,0x9b3c99344935c030, 
0xba240b23ca10ba14,0x4bbc332db301dc61,0x40c42c2c319c9035,0xa9b44cb03a9dcc20, 
0x4ccb24ddc5542ad1,0x4193bb52c94d40c1,0xc3dc4dc9d4dc9d5c,0xc4c2c3caabd1bc54, 
0x449cbcb224aab4cb,0xbb324c1c990304d3,0xb3243cb59422c3ca,0x4c4bb5adb33cc2a3, 
0x5bbcccbdbc9bb3bc,0x6bbbb404324dc93a,0x2cbddca3a49b34d3,0xcb293c19a404dcac, 
0xdd1415bd3443451c,0x323a3494445c3bb4,0xb3434c3345300b4b,0xac2b44b4baa34944, 
0x5a4cbab34b3c3b3a,0xc5c3aac934c3a4db,0x913ac4bccc5a5b1c,0x3091cb49cbc45333, 
0xc4cbbbc2dcb2cc5c,0x32c0adc3cc0ea493,0xacccbc24422bc454,0x942b4b3cccb3ccb1, 
0x3cbdbcc9c4ba23dc,0xbba4accbcccdc4bb,0xb34cc9cbcbcccdcb,0xa443adcdab4cc99d, 
0xb39a0dc23b0ccb95,0xd994bcc949233bab,0xbdd4bd0544cdbacb,0x3d423ccd19bb2bc3, 
0x093c443d33a44a33,0xd32aa4a04c45c45c,0x9533444db44ac33b,0xb25513cb4a3b5453, 
0x4c3ccccc3bcc4a1c,0x39bc22c1a2159bc4,0x0b42b4bcc4ac4909,0x204b43c332c3b229, 
0xdb214caa143b3bb3,0x2cc034dc32cccb4b,0xb4b3ac3c15cc9c42,0xb952cb22391ba3ca, 
0x4bba59906bc5562b,0xa15c6a41652542c6,0xb01cbbbab7b3cc4a,0xb34455a1b4912036, 
0xb105cc04cccc9cda,0xcc030d4aaebc4b23,0x1dbb2c254bc5d3aa,0x31c042cbcb9bdbc9, 
0x9593023a3a3b2950,0x350cb144cb1bbb21,0xb133cc344041b414,0xb3b24b3d33232399, 
0xca2c9d1341c40b93,0xae14cbbb1b3a2bcc,0xc5de9ccbc4dcbb3a,0xab99c00ccebca24a, 
0xd0a04badd951b259,0x4cdd0a4dc4bdedb2,0x2acbcbbda34dd345,0x11b43a3a432cacb2, 
0x32442a331b2c2344,0xb52ac9b232c42329,0x0b11332b143c341a,0xa333bbac41c45443, 
0x44bd32ca51bc4b6c,0xc5bcc0d04a34c4dc,0xc24a334bc4adbc65,0x9c29442c432cd34a, 
0x1b93baa212392230,0x32c922a222143092,0x0ba3a2ba30c02bc1,0xb03aa3b121a032a2, 
0x045b2b54ca43ba32,0x9ca0c491432b3b22,0xc4aebc3b4353a332,0x5bbcbc4c2dac534d, 
0x23cac5e9b5db3cb2,0x42c34aac33540dc3,0x40c3a4d3c4d43cb3,0xd54d3405a4bccb43, 
0xba344c2443a921b4,0xe5340cb43b04422b,0x123444012b9bbdbc,0x32240b9329ab5442, 
0xc233cc05393c3c44,0xe5251dcaca921a9a,0xbbcbcc244bc42c9d,0x0b2c3324cbca49b3, 
0x5a9bd9cc3bbcbba5,0xb1133cb1432419c3,0xc91c3c23cabb31cc,0xcabac4ac1d13a341, 
0xa6533a63c445c1bb,0xbd23b4b5cdca434c,0x454e34544451d3c1,0x5c34c251dd3b25cd, 
0xc4331bb4b35bc205,0x43a922024b3512a4,0x4143adb32c3bb4c2,0x324c540cb5a2ccdc, 
0x4433d453c2c4a5d2,0x4e0bcbb35cc4333c,0x4130445cc3434935,0xb422c454344dc35c, 
0x322bb4330b4a2c44,0xb440ab523b19b24b,0xc3bba9aacb5433c2,0xb3034c4a434b4b3b, 
0xc954cb43a2b3c45d,0x3c4ba443abccb304,0x22ceb4b409350345,0x4cb4443b1ba2cca3, 
0x3555b44a345544c4,0xc3b4bb2452dc493a,0x43335443cd452c3d,0x55c2c4411bc3434c, 
0x3b4d450440da4934,0xc2b4b4ca4b45cabc,0x34431a2c04432c3b,0xbc4a3425345c415a, 
0x342cd4dccccbbdcc,0xb1c1dccbdc3ccdbb,0x2dccc4b33cc0b69c,0x42c9bc99d9cbcb4c, 
0x9a33343db464a404,0x5c3cc4405b4433c3,0x3344351da33c2145,0xb422bccc533934bb, 
0x32b49523a454335b,0x36933241bb3d3215,0xbac35b3a53241430,0x1d214344cb23b342, 
0xa3b3cb0413ca1b2b,0x4b9904ab34b420c0,0x423b122443c2b3a3,0x2b91b42bc9cce340, 
0xbcb4a3512143939d,0xa130bc3c33a429cb,0x245e14c3bba4b9ab,0xcbcac0a92da0b444, 
0xc4d41429b2c1cb03,0x4ca0a432c544aacc,0x4a43c43c3bb2b430,0xc03bc435c69ddabb, 
0x3cbab3c9332c3acc,0xc1cb21bb323542c4,0x3104b4c0aaca429a,0x2b4c35c123a9bba0, 
0x4c14ac19445b95c4,0xa31243cc53c93bc1,0xb4b4cc24453cbd2c,0xbb4a3ccb345b99b5, 
0x529bbcc93b4c2192,0xc9c42c9313bc3cb4,0x9c39b4b4db314c1c,0x12ba09acadb44942, 
0x3c440b14bb3cb3d1,0x4043cbd9a3bb9b19,0x4dc1acbd1da39ce3,0x0cc33ca3caa19cd9, 
0x4c34c14b34433bdb,0xb4c34b399bcdcab5,0xa3bcbbd49cb624ad,0x0adba522da9429b1, 
0x4a34c94c430333d9,0xcc40ba4243b493b3,0x34a131b5a995bbcd,0x14b2c532c3bcb243, 
0xaabbb9bc30039391,0xb0bb41b1a3242320,0x9242330044bbb0bc,0xa342b3c2339b13a0, 
0xcbcc334a34343904,0xac4440b3c33daa3d,0xb41342bdb9cc0d3c,0x2949d3c03c4b5ad3, 
};

static int neck_lateral_convs_0_quant1_threshold[64 * 14] =
{ // torch.Size([64, 14])
-565, -354, -248, -169, -116, -63, -10, 41, 94, 147, 200, 279, 385, 597,
-481, -305, -216, -150, -106, -62, -18, 25, 69, 113, 158, 224, 312, 489,
-607, -376, -261, -174, -117, -59, -1, 55, 113, 171, 228, 315, 430, 661,
-504, -320, -227, -158, -112, -66, -20, 25, 71, 117, 163, 232, 324, 508,
-415, -267, -193, -138, -101, -64, -27, 9, 46, 83, 120, 175, 249, 397,
-854, -542, -385, -268, -190, -112, -34, 43, 121, 199, 278, 395, 551, 864,
-879, -562, -403, -284, -205, -125, -46, 33, 112, 191, 271, 390, 549, 866,
-840, -556, -414, -308, -237, -166, -95, -24, 46, 117, 188, 295, 437, 721,
-820, -519, -369, -256, -181, -106, -31, 43, 118, 193, 269, 381, 532, 832,
-460, -320, -250, -197, -162, -127, -92, -57, -21, 13, 48, 101, 171, 311,
-650, -405, -282, -190, -129, -68, -7, 54, 115, 176, 237, 329, 452, 697,
-720, -468, -342, -248, -185, -122, -59, 3, 66, 129, 192, 286, 412, 664,
-824, -530, -383, -273, -199, -126, -52, 20, 94, 167, 241, 351, 498, 792,
-669, -412, -283, -187, -123, -59, 5, 69, 133, 197, 262, 358, 486, 743,
-750, -492, -363, -267, -202, -138, -73, -9, 55, 119, 184, 280, 409, 667,
-770, -485, -342, -235, -164, -93, -21, 49, 120, 191, 263, 370, 512, 797,
-867, -569, -420, -308, -233, -159, -84, -10, 64, 138, 213, 325, 474, 772,
-696, -431, -299, -200, -134, -68, -2, 63, 129, 196, 262, 361, 493, 757,
-813, -520, -373, -263, -190, -117, -43, 29, 102, 176, 249, 359, 505, 798,
-908, -590, -431, -312, -232, -153, -73, 5, 85, 164, 244, 363, 522, 840,
-880, -561, -401, -282, -202, -122, -42, 36, 116, 196, 276, 395, 555, 874,
-753, -488, -355, -256, -189, -123, -57, 8, 75, 141, 207, 307, 439, 705,
-950, -590, -410, -275, -185, -95, -5, 84, 175, 265, 355, 490, 670, 1030,
-876, -553, -391, -270, -190, -109, -28, 52, 132, 213, 294, 415, 577, 900,
-833, -542, -397, -288, -215, -142, -70, 2, 75, 148, 220, 329, 475, 765,
-1109, -732, -544, -402, -308, -214, -119, -25, 68, 162, 257, 398, 587, 964,
-779, -507, -372, -270, -202, -134, -66, 1, 69, 136, 204, 306, 442, 713,
-773, -476, -327, -216, -141, -67, 6, 81, 155, 229, 304, 415, 564, 861,
-1007, -644, -463, -327, -236, -146, -55, 34, 125, 216, 306, 442, 624, 986,
-791, -510, -370, -264, -194, -124, -54, 15, 86, 156, 226, 331, 472, 752,
-698, -432, -300, -200, -134, -68, -1, 64, 130, 197, 263, 363, 495, 761,
-924, -605, -446, -326, -246, -166, -86, -7, 72, 152, 232, 351, 511, 830,
-876, -552, -389, -267, -186, -105, -24, 56, 137, 219, 300, 422, 584, 909,
-966, -633, -466, -341, -258, -174, -91, -8, 75, 158, 241, 366, 533, 867,
-835, -550, -407, -300, -229, -158, -87, -16, 55, 126, 197, 304, 446, 731,
-604, -371, -255, -167, -109, -51, 6, 64, 122, 180, 239, 326, 442, 675,
-877, -563, -406, -288, -209, -131, -52, 25, 104, 182, 260, 378, 535, 849,
-792, -507, -364, -257, -186, -115, -43, 27, 98, 170, 241, 348, 491, 776,
-861, -540, -379, -259, -178, -98, -18, 62, 142, 222, 303, 423, 584, 905,
-1206, -768, -548, -384, -274, -165, -55, 54, 163, 273, 382, 547, 766, 1205,
-622, -385, -267, -178, -119, -59, 0, 58, 118, 177, 236, 325, 444, 681,
-782, -501, -361, -255, -185, -115, -45, 24, 95, 165, 235, 340, 481, 761,
-601, -379, -268, -185, -129, -73, -18, 37, 92, 148, 203, 286, 398, 620,
-1298, -821, -583, -404, -285, -165, -46, 72, 191, 310, 430, 608, 847, 1324,
-810, -516, -369, -259, -186, -112, -39, 33, 107, 180, 254, 364, 511, 804,
-539, -324, -217, -137, -83, -29, 23, 77, 130, 184, 238, 318, 425, 640,
-894, -554, -384, -256, -171, -86, -1, 83, 168, 254, 339, 466, 636, 977,
-765, -485, -345, -240, -170, -100, -30, 39, 109, 179, 249, 354, 495, 775,
-1040, -653, -459, -314, -217, -120, -23, 73, 170, 267, 364, 509, 703, 1090,
-810, -498, -342, -224, -146, -68, 9, 87, 165, 243, 321, 438, 595, 907,
-1201, -790, -585, -432, -329, -226, -124, -21, 80, 183, 285, 439, 644, 1055,
-738, -458, -317, -212, -142, -71, -1, 68, 138, 209, 279, 384, 525, 805,
-756, -465, -320, -211, -138, -66, 6, 78, 151, 224, 296, 405, 550, 841,
-623, -398, -286, -201, -145, -89, -33, 23, 79, 135, 191, 276, 388, 613,
-684, -431, -305, -210, -146, -83, -20, 42, 106, 169, 232, 327, 454, 707,
-880, -565, -408, -290, -211, -132, -54, 24, 103, 181, 260, 378, 536, 850,
-1162, -742, -532, -375, -270, -165, -60, 44, 149, 254, 359, 517, 727, 1147,
-923, -581, -411, -283, -198, -112, -27, 57, 143, 228, 313, 441, 612, 953,
-705, -451, -324, -229, -166, -103, -39, 23, 86, 150, 213, 308, 435, 689,
-722, -479, -357, -266, -205, -144, -84, -23, 37, 98, 158, 249, 371, 614,
-890, -571, -411, -291, -211, -131, -51, 28, 108, 188, 268, 388, 548, 868,
-669, -419, -294, -200, -137, -74, -12, 50, 113, 175, 238, 332, 457, 708,
-847, -537, -382, -266, -189, -111, -34, 42, 120, 197, 275, 391, 546, 855,
-870, -562, -407, -292, -215, -137, -60, 16, 93, 170, 247, 363, 517, 826,
};

static uint64_t neck_lateral_convs_0_conv2_weight[64 * 9] =
{ // torch.Size([64, 3, 3, 1])
0xe, 0xb, 0x3, 0xe, 0x6, 0xb, 0xd, 0xd, 0x3, 
0x3, 0x2, 0x3, 0xd, 0xd, 0xd, 0x3, 0x4, 0x4, 
0x4, 0xe, 0x4, 0x4, 0xd, 0x4, 0xb, 0xd, 0x3, 
0xa, 0x9, 0xa, 0xa, 0x9, 0xa, 0xa, 0x9, 0xa, 
0x3, 0x2, 0x3, 0x2, 0x2, 0x2, 0x3, 0x3, 0x3, 
0x1, 0xb, 0xc, 0xd, 0xe, 0xc, 0x3, 0x4, 0xa, 
0xa, 0xb, 0xa, 0xa, 0xb, 0x9, 0xa, 0xb, 0xa, 
0x9, 0x5, 0x6, 0xb, 0x4, 0x4, 0xb, 0x1, 0xb, 
0xc, 0x9, 0x1, 0xd, 0xd, 0xb, 0xb, 0x9, 0xb, 
0x5, 0x2, 0xb, 0x6, 0x4, 0x2, 0x2, 0x0, 0xc, 
0xe, 0xc, 0x3, 0xd, 0xa, 0x2, 0x2, 0x2, 0x0, 
0xa, 0x3, 0x9, 0x6, 0x6, 0x5, 0xc, 0xd, 0xb, 
0xd, 0xc, 0xc, 0xb, 0x0, 0xb, 0xd, 0xc, 0xc, 
0xd, 0xc, 0xc, 0xd, 0x6, 0xd, 0xc, 0xe, 0xa, 
0xb, 0xa, 0x0, 0xc, 0x4, 0x6, 0x3, 0x5, 0x2, 
0x5, 0x3, 0xa, 0x5, 0x6, 0xc, 0xb, 0xb, 0x4, 
0x4, 0x5, 0x1, 0x5, 0x5, 0xc, 0x4, 0xc, 0xc, 
0x9, 0xc, 0xe, 0x4, 0x3, 0xd, 0x3, 0xb, 0x0, 
0xa, 0xc, 0x4, 0xc, 0x9, 0x5, 0x9, 0x5, 0x6, 
0xd, 0xa, 0x3, 0x4, 0x6, 0xb, 0x5, 0x5, 0xd, 
0xc, 0xb, 0x3, 0xc, 0xb, 0xc, 0xd, 0xc, 0xd, 
0x1, 0x3, 0xc, 0x4, 0x6, 0x9, 0xc, 0x2, 0x3, 
0xb, 0xe, 0xc, 0x4, 0xb, 0xc, 0x3, 0x3, 0xd, 
0x4, 0xc, 0xd, 0x3, 0x2, 0xd, 0x9, 0xc, 0xd, 
0x3, 0x7, 0xb, 0xb, 0x4, 0x4, 0xc, 0x3, 0xa, 
0x4, 0x5, 0x0, 0x3, 0x2, 0x2, 0x4, 0x3, 0xb, 
0x3, 0xc, 0x2, 0x4, 0x7, 0xa, 0xc, 0xa, 0x4, 
0x2, 0x4, 0x9, 0x0, 0xb, 0x2, 0xd, 0xe, 0xd, 
0x9, 0xc, 0xd, 0x2, 0xb, 0xc, 0x9, 0xb, 0xb, 
0xd, 0xd, 0x4, 0xb, 0x3, 0x5, 0x5, 0x5, 0x3, 
0xc, 0xb, 0xc, 0xb, 0xa, 0xb, 0xc, 0xb, 0xc, 
0xc, 0xc, 0x3, 0x7, 0x3, 0xb, 0x5, 0xa, 0xc, 
0xa, 0x2, 0x9, 0x4, 0x4, 0x3, 0x6, 0xb, 0xb, 
0x5, 0xd, 0x2, 0x5, 0x6, 0x4, 0xc, 0x5, 0x1, 
0xa, 0x3, 0x5, 0xa, 0x6, 0x1, 0x3, 0x5, 0xd, 
0x2, 0xd, 0xc, 0x3, 0xc, 0xd, 0x1, 0x3, 0xb, 
0xe, 0xe, 0xc, 0x2, 0x4, 0x9, 0x0, 0xb, 0x3, 
0xb, 0xa, 0xa, 0xa, 0xa, 0xa, 0xa, 0xa, 0xb, 
0xc, 0x4, 0x4, 0xf, 0xb, 0x4, 0xc, 0x4, 0x4, 
0xd, 0xb, 0xc, 0x4, 0x5, 0xa, 0x3, 0x6, 0x4, 
0x4, 0xc, 0xe, 0x4, 0xa, 0xc, 0x2, 0x3, 0xc, 
0x6, 0x3, 0xb, 0x5, 0x3, 0xb, 0x1, 0xa, 0xa, 
0x6, 0xc, 0xa, 0x5, 0xd, 0x3, 0x4, 0xa, 0xb, 
0xc, 0xf, 0xd, 0x4, 0xc, 0x4, 0x1, 0x1, 0xb, 
0xe, 0x5, 0x3, 0xc, 0x5, 0xc, 0xd, 0xd, 0xc, 
0x4, 0xd, 0xe, 0x4, 0xb, 0xc, 0x3, 0x2, 0xb, 
0x4, 0x4, 0x2, 0x4, 0x4, 0x2, 0x4, 0x5, 0x4, 
0xb, 0xe, 0x4, 0x4, 0xe, 0x3, 0x4, 0x5, 0xc, 
0xf, 0x0, 0x5, 0xb, 0x2, 0x4, 0x4, 0x4, 0xb, 
0xc, 0xb, 0x3, 0xe, 0xb, 0xa, 0xc, 0xb, 0x4, 
0x2, 0xc, 0x4, 0x4, 0x4, 0x5, 0x5, 0x4, 0x4, 
0x0, 0xb, 0x4, 0x1, 0xe, 0xc, 0xb, 0x9, 0x3, 
0xc, 0xb, 0xc, 0xd, 0xc, 0x5, 0x4, 0xe, 0xb, 
0xe, 0x3, 0x3, 0xd, 0xc, 0x1, 0x2, 0xd, 0xb, 
0x5, 0x7, 0x4, 0x3, 0xd, 0x4, 0x2, 0xc, 0xb, 
0xe, 0xb, 0x3, 0xd, 0xb, 0x1, 0xd, 0xc, 0x2, 
0xb, 0xb, 0xb, 0xb, 0x9, 0x9, 0xc, 0xb, 0xb, 
0x3, 0x4, 0x3, 0xc, 0xc, 0xc, 0xd, 0xd, 0xd, 
0x4, 0xd, 0xa, 0x3, 0xd, 0x6, 0xb, 0xb, 0x5, 
0x0, 0xb, 0x9, 0xc, 0xc, 0x9, 0x6, 0x6, 0x5, 
0x6, 0x6, 0x4, 0x3, 0xb, 0x2, 0x0, 0x4, 0xb, 
0x2, 0x9, 0x3, 0x1, 0x4, 0xc, 0xd, 0xe, 0xc, 
0x2, 0xd, 0x9, 0xc, 0xb, 0x1, 0xb, 0xc, 0x0, 
0x5, 0xb, 0xe, 0x5, 0x5, 0xb, 0x3, 0x3, 0x4, 
};

static int neck_lateral_convs_0_relu2_threshold[64 * 7] =
{ // torch.Size([64, 7])
7, 50, 92, 134, 198, 282, 451,
18, 45, 73, 100, 141, 196, 305,
5, 44, 83, 122, 181, 260, 416,
9, 20, 30, 41, 57, 79, 122,
16, 35, 54, 72, 101, 139, 214,
9, 56, 103, 150, 221, 315, 503,
3, 10, 16, 23, 33, 46, 72,
17, 46, 74, 102, 145, 202, 316,
8, 36, 65, 93, 136, 193, 308,
37, 99, 162, 224, 318, 442, 692,
29, 66, 103, 140, 195, 269, 418,
25, 78, 131, 184, 263, 369, 581,
-38, 10, 59, 108, 182, 280, 477,
15, 53, 91, 129, 187, 263, 416,
19, 50, 81, 112, 159, 221, 345,
20, 52, 84, 116, 165, 229, 358,
9, 38, 67, 97, 140, 199, 315,
22, 49, 76, 103, 143, 197, 305,
26, 56, 86, 117, 162, 223, 344,
34, 77, 119, 161, 225, 310, 479,
16, 47, 79, 110, 156, 219, 343,
11, 42, 74, 105, 152, 215, 341,
11, 76, 141, 206, 304, 433, 693,
16, 48, 79, 110, 157, 219, 344,
7, 70, 132, 195, 289, 414, 664,
6, 39, 72, 106, 155, 221, 354,
23, 84, 145, 207, 299, 421, 666,
20, 57, 94, 132, 187, 262, 411,
9, 31, 53, 76, 109, 154, 243,
13, 58, 102, 147, 214, 303, 481,
33, 51, 69, 87, 114, 150, 222,
29, 69, 109, 149, 209, 289, 449,
14, 41, 69, 96, 137, 191, 301,
13, 53, 93, 133, 192, 272, 431,
14, 45, 76, 107, 154, 216, 340,
9, 33, 56, 80, 115, 163, 257,
20, 52, 85, 117, 165, 229, 358,
4, 12, 20, 28, 41, 57, 90,
37, 115, 192, 270, 387, 543, 855,
27, 73, 119, 165, 234, 326, 510,
21, 51, 81, 111, 156, 216, 336,
22, 53, 83, 113, 159, 219, 341,
3, 44, 84, 124, 185, 266, 427,
29, 125, 221, 318, 462, 654, 1039,
17, 51, 84, 118, 168, 236, 370,
50, 103, 156, 210, 289, 396, 609,
10, 29, 49, 68, 97, 135, 212,
22, 71, 120, 170, 243, 341, 537,
28, 69, 111, 152, 214, 297, 463,
17, 45, 72, 99, 141, 195, 305,
12, 68, 123, 179, 263, 374, 596,
16, 44, 72, 100, 141, 197, 308,
8, 55, 102, 149, 220, 315, 504,
18, 48, 78, 108, 153, 213, 332,
1, 52, 102, 153, 229, 330, 532,
11, 47, 82, 117, 170, 240, 381,
5, 21, 37, 53, 77, 109, 174,
8, 51, 95, 138, 204, 291, 465,
25, 67, 110, 152, 215, 300, 469,
23, 55, 87, 119, 168, 232, 360,
26, 72, 118, 163, 232, 323, 506,
13, 38, 63, 87, 125, 174, 274,
9, 27, 45, 62, 89, 125, 197,
33, 71, 108, 146, 203, 278, 429,
};

static uint64_t neck_lateral_convs_1_conv1_weight[64 * 1*4] =
{ // torch.Size([64, 1, 1, 64])
0x4455514b5cc5a5c3,0xd4535dc5c455d543,0x43cd6cc45d5dc359,0x3b54d445c4dcd444, 
0x44a443515315da4c,0x5b3cddbcb5ba94c4,0x4bd3b443cc40d34d,0x2324dcdbe3cb433a, 
0x93bad2bc0c3cccc4,0xbdccc33cbe134d2b,0xbbc3bccc4a0cdabc,0xbbbbccbc3cc4ccd3, 
0x54d43d42d334c2c6,0x4c541134c4cbc420,0xc449b4da43b53a3c,0xc1dc04a4934d455b, 
0x93cc0da9d4c5cbb4,0x15b2b325941b254a,0xda321bcbbac9523b,0xc4d19249c15a4454, 
0x94a6344232c4339b,0x334cab2035135bca,0x94d91c4934a0b2bc,0xbb446b3aa1534b3a, 
0x24a43333243b33b9,0xb2342252cc334a32,0x33a4b501c549beba,0x33302cc43ab34233, 
0xc20c0492eba4c9bc,0x24bbbdcbcb4cd2c3,0xb43cc3db3c4c2bb4,0xa49abc3d34dbc4d3, 
0x9bbccccdc4344399,0xaa54c044c1bb5c33,0x1532b0c9ab4a4cd9,0x1bc14b23a2c331d3, 
0xbd4ccaab5a3c539d,0x3cd490bca1c5bc5c,0xad0c3c5caac41abc,0xc25da4324b443d4a, 
0xccb425ccbd01bbc2,0x9dc4dccc25d343b4,0x1cacbeabceccd5dc,0xc3dabdcbd066ccad, 
0x44cc5555b534d1ac,0x52c55dbda461c414,0xa2040ba49235da52,0xc45b452d3249235d, 
0x43b44d2095cdd5c0,0x904d10235cc34ccc,0xcba3b4b551444442,0xa2bb924b435ccbb9, 
0xbdccc4bd994bb123,0x0cb4ac033adbe335,0xb223bb29bf1c1dc3,0xa4c2c2ccc34b393c, 
0xbb2cb3c4b0132b3b,0x0cb42244dd44e254,0xb445a3a3bb341cb3,0x435342d9c243521d, 
0xcb443acbc4c094b3,0x4b3dac3555d4dc32,0x04c4ba54344234cc,0xc4355d4d4031bd24, 
0x4425cc43c435c41d,0x3c43332c11104a40,0xd534a3b129a2a3b5,0xd49d1035b55c543c, 
0x49314c9123cbc499,0xcb3c2ba242210a3c,0x45a333340a094c10,0x3302a5bc1cacbbc1, 
0xa515d253444c5c5b,0x33e43343bc5d4453,0x24b1d4ddc5555cc4,0x352493534db554d5, 
0xb1b334353cc2ab24,0xa44244b5d44a3593,0x310c5b29c14b334b,0x9b24aa0393a63345, 
0x4a3d45cc4baa4aca,0xc4aca3339c1d25ad,0x3a2c3ce590c09b44,0x51964aac3ba0ca34, 
0xdc55cc3bc4214ccc,0xbc340ca443c9ac5d,0xbd5c3bc543d34cc1,0x0a33b0abc3a97bcd, 
0x556463955ce1455c,0x964db5d59466d3cd,0x44cc5d4bdc535534,0xcc3b4656632dc5d6, 
0xba5033ca5dcd494d,0xc1bdc42d3dd24dd9,0x33cca443ccbccbaa,0x5d35ccc4dbd3cdc5, 
0xc341d4441da05c39,0x14bc4cc5c9244144,0xcb393d9c0551943a,0x0d534b1494054443, 
0x454544b434b3c4ca,0xb34d214e4a5301cd,0xa4b495c54b23c943,0x4c542344cb0abb42, 
0xcbbdcbbdbcc01d59,0x3d4aabdd05ca3bbc,0xacc359baacbcd6c0,0xcdd334bc03bddacc, 
0x26c345d44ac30b4c,0xb4d3dcbebc5a3bd5,0x55b22b3c0adbbc93,0x4c303addc4d1d3b4, 
0x44144acc54cb40d9,0xc411b521a0b4acac,0xbca94b4b13abeecc,0x4b2b4b35ccd2c3d5, 
0xdbcccc3bcc3ccd29,0x49c5cd3cccc1401d,0x2bab4cce04543c4d,0xbd23bccc5cc23d23, 
0x33223cc4cbab3a4a,0x444c55524b5b3d43,0xb4b43c34363b450b,0x99545b425263b334, 
0x4adc292cd445d4c5,0x52c4ca9b32ac4443,0x9435a1cb3135a443,0x24cc449b233ac64c, 
0x44b4525425c5c34d,0x55b1a5d24543b5d4,0x4bc52353c345c54c,0xcc1345d42b594256, 
0xbdcc45d453cd3db5,0xc5ddcdc5bd23aac4,0x5de3243db43cc2dc,0x5cd5a3ddacd3c0b5, 
0xcc3d13ccd2baa3ba,0x4ca25c92d31a4b4d,0xcc3cbcbc030251cb,0x3bcca13c4be5cb33, 
0xc093cd4d34a9b15c,0x0d5aa33b44db6540,0xbbcc3c99b52cc12c,0xca3b4b39c0424213, 
0xaccecc4dcccbdc7c,0x5d9d4cc135cc431b,0xdaec4d91bdb316b4,0xdcdcd04cb3bc29cd, 
0xcd4b13a0540c4342,0x921ccaa3c1c23b4c,0x0b3dc3130c394092,0xc444313a1236db13, 
0x3cc9b3ccb943b25d,0xcddcbc4b1acb4c35,0xcad2dc2d4bc5b44c,0xdcc3cbbbab5dbccc, 
0x55442b4dc5dc93cc,0x1353abd35cb4cbbd,0x0b5c56465a535944,0x54cd565143d444bd, 
0x462395ac5abb495b,0xbc3b00ce42495dc1,0x45a3ca149cacc3c4,0xb15143b94b24d4c4, 
0x4cdc53342ccc4c44,0xc43b32b54b4134c4,0x45cab329b22c4ba9,0xa2c3bac14bcbd4d5, 
0x2badc30db333b4d9,0x3b9a434cb4cc244b,0xdcb20cd3aab43424,0x53c6413c3b4b5253, 
0xccc5ddcacd1ccdc4,0xdca5455d4edac4ad,0x5454dc4c4ddd5cdd,0x3cdc5cbd3dbdb2a4, 
0xa305554454d44012,0x9c5c3355c3404243,0x4533cd14c414b422,0xc4444444b96543b4, 
0x23d44aaa5cdcba34,0xca2cacd42143bcb4,0x56a3242bba115c9b,0x291d34dcb3cadbdc, 
0x13d5d5494a401c34,0x33b34dca34c42d53,0x34b5a35034b1d41b,0x53a4545bc3c6949e, 
0x3bd52dc52dc13c9b,0xccdadd952b350bc3,0x3c3cb1dc5a0bdccc,0xdc2edcd2b3d5bcc4, 
0xb034ce4d2bbbcb41,0xc53cdc42bb5c23c4,0xe50b2ccc131dbbac,0xcd3349c5acccbad4, 
0x441b35c54aa4cad0,0xc9dc3ad3dc54cbb5,0x6ec5aa4014cb92b4,0x5b412c3c24c225c0, 
0xcc5e54acb4cbd5cb,0xc524d3d34d3243db,0x4cc24c235b9acc04,0x4d4ac4bcc35ec3c5, 
0xb44354343bc941bb,0xb53ac1b3cc4b6bb3,0x04a045333241a433,0x2a39d0c3a364c3c5, 
0xcab4c4bcd043bdc4,0xccc5b329c44c499a,0xcc434cdc2bcbb4c4,0xb3c23a2103cb333c, 
0xc155adad4bb02bbd,0xd94cb59dd0d45acd,0x1d4b9cac334ddbdd,0x1dbcccc5dcb5cbd5, 
0x9c44ccd2bb3c5cbd,0xdcc2c414bba3cbcc,0xcd5c245521ca5bc4,0x4acc49c33ac00bc4, 
0x3c254d4db54b5442,0xe4b403d55352bc54,0x93cc556464414355,0x9cbd253454ccc4dd, 
0xd344c2a121433b2c,0x3dc5abcd45243dbc,0x3bb9b343acc14ba2,0x4a5b44aaccc53c5c, 
0x14dbdb4cc454c1d3,0x2cc4d52c34d43242,0xae544ccdcb0342ad,0xa5aca34cc24c3433, 
0x1a45cd4c3ab00422,0xc45bca434b4bbacb,0xd5cca0a44b4cdbb2,0xcaa3bc25cbd0c1b3, 
0xc1c9d409bb445c01,0x53939450b3ca3214,0xbdb3bbbcc3c4d4a2,0xc3a04d441334434a, 
0xbb53bd4daddcd3b2,0xc41dc544d04cc4e3,0xc4bcbccca4bcad1c,0x9dd3ccd5caac0bd5, 
0x3bc34dc53cdcc245,0x043dbd3443b44c45,0x4aa4445ac3adc43e,0xdd9d4bcbd44ebd9b, 
0xcb324cd44cdc34cb,0xd4dd635a55453bbc,0x2ddb6b2c44ddd34d,0xcc43d40d553bcb5c, 
0xa34ab0b31b0a309b,0x3cab42ad0b23eb30,0x3cb1a922adb3c323,0x9c523b4c34c2424b, 
};

static int neck_lateral_convs_1_quant1_threshold[64 * 14] =
{ // torch.Size([64, 14])
-1330, -831, -582, -395, -270, -146, -21, 102, 227, 352, 476, 663, 912, 1411,
-1258, -806, -580, -411, -298, -185, -72, 40, 153, 266, 379, 548, 774, 1226,
-1253, -834, -625, -468, -363, -259, -154, -49, 54, 159, 264, 420, 630, 1048,
-967, -609, -430, -296, -207, -117, -28, 60, 150, 239, 329, 463, 642, 1000,
-1016, -645, -460, -320, -228, -135, -42, 50, 143, 235, 328, 467, 653, 1024,
-1023, -636, -443, -298, -201, -104, -8, 88, 185, 281, 378, 523, 717, 1103,
-1057, -660, -461, -311, -212, -113, -13, 85, 185, 284, 384, 533, 732, 1129,
-965, -636, -471, -348, -266, -183, -101, -19, 62, 145, 227, 350, 515, 844,
-1200, -769, -554, -392, -284, -177, -69, 38, 146, 253, 361, 523, 738, 1169,
-1002, -648, -470, -338, -249, -160, -72, 16, 105, 193, 282, 415, 592, 947,
-1380, -906, -670, -492, -374, -256, -137, -19, 98, 216, 335, 512, 749, 1222,
-1078, -666, -461, -306, -204, -101, 1, 104, 207, 310, 412, 567, 772, 1184,
-1292, -811, -570, -389, -269, -148, -28, 92, 212, 332, 453, 634, 874, 1356,
-1027, -674, -498, -366, -277, -189, -101, -13, 74, 162, 251, 383, 559, 912,
-1023, -652, -467, -328, -235, -143, -50, 41, 134, 227, 319, 458, 643, 1014,
-1030, -646, -454, -310, -214, -118, -22, 73, 169, 265, 361, 505, 697, 1081,
-857, -535, -374, -253, -172, -92, -11, 68, 149, 230, 310, 431, 592, 915,
-1014, -640, -453, -312, -219, -125, -32, 60, 154, 247, 341, 481, 668, 1042,
-1651, -1016, -699, -461, -302, -143, 15, 173, 332, 491, 650, 888, 1205, 1840,
-1704, -1094, -789, -560, -407, -255, -102, 50, 202, 355, 507, 736, 1041, 1652,
-946, -603, -432, -303, -218, -132, -46, 38, 124, 209, 295, 423, 595, 937,
-1491, -931, -651, -441, -301, -161, -21, 118, 258, 398, 538, 747, 1027, 1587,
-1866, -1170, -821, -560, -386, -212, -38, 135, 309, 483, 657, 918, 1266, 1962,
-1305, -850, -623, -453, -339, -225, -112, 1, 114, 228, 342, 512, 739, 1194,
-1011, -632, -443, -300, -206, -111, -16, 77, 172, 267, 362, 504, 693, 1072,
-1371, -864, -610, -420, -293, -166, -40, 86, 213, 340, 467, 657, 911, 1418,
-1270, -837, -621, -459, -351, -243, -135, -27, 81, 189, 297, 459, 675, 1108,
-502, -335, -252, -189, -147, -106, -64, -22, 18, 60, 102, 164, 248, 414,
-1070, -685, -493, -349, -252, -156, -60, 35, 131, 228, 324, 468, 661, 1045,
-1504, -986, -727, -533, -403, -274, -145, -15, 113, 243, 372, 566, 825, 1343,
-940, -571, -387, -248, -156, -64, 27, 119, 212, 304, 396, 534, 718, 1087,
-1049, -654, -456, -308, -209, -110, -11, 87, 186, 285, 384, 532, 730, 1125,
-1064, -650, -443, -288, -185, -82, 21, 124, 228, 331, 434, 590, 796, 1210,
-1374, -890, -648, -466, -345, -224, -103, 17, 138, 259, 380, 561, 803, 1287,
-842, -550, -404, -295, -222, -149, -76, -3, 69, 142, 215, 324, 470, 761,
-943, -592, -416, -285, -197, -109, -21, 65, 153, 241, 329, 460, 636, 987,
-1746, -1128, -819, -587, -433, -278, -124, 30, 184, 339, 494, 725, 1034, 1652,
-669, -424, -301, -209, -148, -86, -25, 35, 97, 158, 219, 311, 434, 680,
-1080, -715, -532, -395, -303, -212, -120, -29, 61, 153, 244, 381, 564, 929,
-1130, -689, -468, -303, -192, -82, 27, 138, 248, 358, 469, 634, 855, 1297,
-1229, -777, -551, -381, -268, -155, -42, 70, 183, 296, 409, 579, 805, 1257,
-1127, -716, -510, -356, -254, -151, -48, 54, 156, 259, 362, 516, 721, 1132,
-1030, -652, -463, -321, -227, -132, -38, 56, 150, 245, 339, 481, 670, 1048,
-1267, -826, -606, -440, -330, -220, -110, 0, 110, 220, 330, 496, 716, 1157,
-1081, -664, -456, -299, -195, -91, 13, 117, 221, 325, 430, 586, 795, 1212,
-1204, -773, -557, -395, -288, -180, -72, 35, 143, 251, 359, 520, 736, 1168,
-1050, -660, -465, -319, -221, -124, -26, 70, 168, 265, 363, 509, 704, 1094,
-1125, -741, -549, -405, -309, -213, -117, -21, 74, 170, 266, 410, 602, 986,
-1123, -730, -534, -387, -289, -190, -92, 5, 103, 201, 299, 447, 643, 1036,
-617, -393, -281, -197, -141, -85, -29, 26, 82, 138, 194, 278, 390, 614,
-1535, -978, -699, -489, -350, -210, -71, 67, 207, 346, 486, 695, 974, 1532,
-759, -472, -328, -220, -149, -77, -5, 66, 138, 209, 281, 389, 532, 820,
-1458, -939, -679, -485, -355, -225, -95, 34, 164, 293, 423, 618, 878, 1397,
-1202, -786, -578, -422, -318, -214, -110, -6, 97, 201, 305, 462, 670, 1086,
-980, -621, -442, -308, -218, -129, -39, 49, 139, 229, 318, 453, 632, 990,
-1227, -746, -506, -326, -206, -86, 33, 153, 274, 394, 514, 694, 934, 1414,
-1132, -723, -519, -366, -263, -161, -59, 42, 145, 247, 349, 502, 707, 1116,
-1453, -937, -678, -485, -356, -227, -97, 31, 160, 289, 418, 612, 870, 1386,
-961, -614, -440, -310, -223, -136, -50, 36, 123, 210, 297, 427, 601, 948,
-1118, -713, -510, -359, -257, -156, -55, 45, 147, 248, 349, 501, 703, 1108,
-1238, -812, -600, -440, -334, -227, -121, -15, 91, 197, 303, 463, 675, 1101,
-1278, -825, -598, -429, -315, -202, -89, 23, 137, 250, 363, 533, 759, 1212,
-1623, -1048, -761, -545, -401, -258, -114, 29, 172, 316, 460, 675, 963, 1538,
-669, -432, -313, -224, -164, -105, -45, 13, 72, 132, 191, 281, 399, 637,
};

static uint64_t neck_lateral_convs_1_conv2_weight[64 * 9] =
{ // torch.Size([64, 3, 3, 1])
0xd, 0xc, 0xc, 0xf, 0x4, 0xd, 0xc, 0x3, 0x4, 
0x9, 0x0, 0xa, 0x5, 0x2, 0x4, 0x5, 0x5, 0x6, 
0xb, 0xc, 0xa, 0x0, 0xd, 0xd, 0x4, 0xd, 0xc, 
0x3, 0x4, 0xc, 0xe, 0x5, 0x3, 0xf, 0xc, 0x4, 
0x4, 0x3, 0xe, 0xd, 0x3, 0xd, 0xd, 0x0, 0xd, 
0xd, 0xd, 0x5, 0xd, 0xd, 0x5, 0xb, 0x3, 0x3, 
0xb, 0xc, 0xb, 0xb, 0xd, 0xb, 0xa, 0xc, 0x9, 
0x4, 0x6, 0x3, 0xa, 0x6, 0x9, 0xd, 0xd, 0x4, 
0xd, 0xd, 0xc, 0xc, 0xb, 0xc, 0xb, 0xb, 0x2, 
0x9, 0x4, 0xa, 0xd, 0xb, 0xc, 0xd, 0xe, 0xc, 
0x1, 0x5, 0x5, 0x5, 0xd, 0x5, 0x5, 0x5, 0x5, 
0x3, 0x5, 0x3, 0xd, 0xd, 0xc, 0xd, 0xd, 0xd, 
0x4, 0x0, 0x0, 0x4, 0x4, 0x3, 0x4, 0x4, 0x5, 
0x0, 0xc, 0x3, 0xa, 0x7, 0xb, 0x4, 0x4, 0x4, 
0xe, 0xd, 0xe, 0xb, 0x4, 0xb, 0x4, 0x5, 0x0, 
0xa, 0xe, 0xd, 0xa, 0xd, 0xc, 0x4, 0x0, 0xa, 
0xf, 0xd, 0x4, 0xc, 0x3, 0x2, 0x4, 0x1, 0x0, 
0x5, 0x3, 0x9, 0x5, 0x1, 0xb, 0x5, 0x3, 0xb, 
0xd, 0x3, 0xe, 0xc, 0x4, 0xb, 0xd, 0xb, 0xe, 
0x0, 0x3, 0xe, 0x3, 0x4, 0xe, 0x4, 0x4, 0xc, 
0x1, 0x6, 0xb, 0x5, 0x5, 0xc, 0x6, 0xc, 0xb, 
0xe, 0xd, 0x9, 0xe, 0xc, 0x4, 0xe, 0xb, 0x4, 
0xc, 0x1, 0xb, 0xc, 0xd, 0xd, 0xd, 0xc, 0xe, 
0x0, 0x4, 0xa, 0xb, 0x7, 0x4, 0xb, 0x5, 0x2, 
0xb, 0x4, 0x3, 0xd, 0xa, 0xd, 0xd, 0xd, 0xc, 
0x9, 0x5, 0x6, 0x3, 0x4, 0x5, 0x1, 0x4, 0x5, 
0x4, 0x4, 0x5, 0x4, 0x4, 0x5, 0x2, 0x4, 0x4, 
0x0, 0x6, 0x4, 0x4, 0x5, 0x5, 0xb, 0xd, 0xb, 
0xb, 0x4, 0x5, 0x1, 0x6, 0x4, 0x4, 0x3, 0xc, 
0xd, 0xc, 0xd, 0xb, 0x3, 0xb, 0xc, 0xc, 0xc, 
0x2, 0x5, 0x0, 0xe, 0xe, 0xc, 0xc, 0xd, 0xa, 
0x5, 0xd, 0xe, 0x3, 0x0, 0xd, 0x4, 0x3, 0xc, 
0x4, 0x5, 0xe, 0x4, 0x4, 0xe, 0xd, 0xd, 0xd, 
0x4, 0xc, 0xc, 0xc, 0xc, 0x5, 0xc, 0x5, 0x7, 
0xd, 0x5, 0x1, 0x6, 0x5, 0xb, 0x3, 0xc, 0xa, 
0x9, 0x4, 0x3, 0xb, 0xd, 0x5, 0x4, 0x7, 0xa, 
0x3, 0x3, 0x4, 0x5, 0x5, 0x5, 0x5, 0x4, 0x4, 
0x3, 0xc, 0x6, 0xc, 0xd, 0x4, 0xc, 0x1, 0xd, 
0xb, 0x4, 0x5, 0xc, 0x5, 0x6, 0xc, 0x4, 0x9, 
0xc, 0xb, 0xd, 0x4, 0x5, 0xd, 0xb, 0xd, 0xe, 
0x2, 0x4, 0x4, 0xb, 0x4, 0x5, 0x2, 0x5, 0x6, 
0x5, 0x4, 0xd, 0x5, 0x5, 0xc, 0x5, 0x4, 0xa, 
0xb, 0x0, 0xd, 0x4, 0xb, 0xe, 0x4, 0xe, 0xd, 
0x4, 0xc, 0xb, 0x5, 0x4, 0xa, 0x3, 0x7, 0x5, 
0xb, 0xe, 0xc, 0xc, 0xe, 0x4, 0x4, 0xc, 0x2, 
0x6, 0x4, 0x1, 0x5, 0x0, 0x3, 0x5, 0x3, 0xb, 
0xc, 0x0, 0x4, 0xc, 0xe, 0x3, 0x2, 0xe, 0xd, 
0x3, 0x2, 0x0, 0xb, 0x6, 0x5, 0x5, 0x5, 0xa, 
0x3, 0x4, 0x4, 0x4, 0x6, 0x5, 0xc, 0xd, 0x9, 
0x6, 0x6, 0x6, 0x4, 0x0, 0x4, 0x4, 0xb, 0x3, 
0xc, 0xd, 0x9, 0xd, 0xb, 0xb, 0x3, 0xd, 0xd, 
0xc, 0x4, 0x3, 0x4, 0xf, 0xb, 0x9, 0x4, 0xb, 
0xd, 0xc, 0x9, 0xd, 0xc, 0xb, 0xc, 0xc, 0xa, 
0x7, 0x5, 0xc, 0x5, 0xc, 0xc, 0x3, 0xa, 0x2, 
0x3, 0x6, 0x6, 0xb, 0xb, 0x3, 0x4, 0xd, 0xc, 
0xb, 0xc, 0xb, 0xd, 0xd, 0x2, 0xe, 0xd, 0x3, 
0xc, 0x2, 0x3, 0xd, 0x1, 0xd, 0xe, 0xd, 0xa, 
0xc, 0xe, 0xb, 0x3, 0xb, 0xb, 0xc, 0xb, 0xc, 
0xb, 0xb, 0x9, 0xa, 0x1, 0x5, 0x5, 0x6, 0x5, 
0xd, 0xb, 0x1, 0xd, 0xb, 0x4, 0xd, 0xc, 0x3, 
0x4, 0x7, 0x5, 0xd, 0xc, 0x5, 0x1, 0xb, 0x4, 
0x2, 0x3, 0x3, 0x5, 0x6, 0xb, 0x5, 0x6, 0x2, 
0x6, 0x5, 0x6, 0x5, 0x2, 0x9, 0x0, 0xc, 0xc, 
0xb, 0x5, 0x4, 0xe, 0x5, 0x3, 0xc, 0xc, 0x4, 
};

static int neck_lateral_convs_1_relu2_threshold[64 * 7] =
{ // torch.Size([64, 7])
47, 156, 264, 373, 535, 752, 1186,
1, 88, 176, 263, 395, 570, 920,
19, 72, 126, 179, 259, 366, 579,
40, 99, 158, 217, 305, 423, 659,
15, 61, 106, 152, 220, 311, 493,
14, 55, 96, 136, 197, 279, 442,
25, 57, 88, 120, 167, 230, 357,
13, 113, 213, 314, 464, 664, 1065,
17, 54, 90, 127, 182, 255, 400,
24, 64, 105, 145, 206, 287, 448,
27, 90, 154, 217, 312, 439, 692,
36, 91, 147, 202, 285, 396, 618,
6, 41, 75, 110, 162, 232, 370,
25, 94, 163, 233, 337, 475, 753,
23, 84, 146, 207, 300, 423, 670,
26, 70, 114, 157, 223, 310, 485,
46, 104, 163, 221, 309, 426, 660,
16, 42, 69, 96, 136, 190, 297,
39, 113, 187, 262, 373, 521, 817,
-8, 39, 86, 134, 205, 301, 491,
29, 114, 199, 285, 413, 583, 925,
41, 119, 197, 275, 392, 548, 861,
6, 73, 140, 206, 306, 440, 707,
25, 89, 152, 216, 312, 439, 694,
14, 102, 191, 279, 411, 587, 939,
22, 86, 151, 215, 312, 441, 698,
23, 92, 162, 232, 336, 476, 754,
56, 182, 309, 435, 625, 878, 1384,
28, 96, 163, 230, 331, 466, 735,
16, 43, 70, 97, 138, 192, 301,
33, 94, 156, 217, 308, 430, 675,
22, 59, 97, 134, 190, 265, 415,
33, 95, 156, 218, 310, 433, 678,
48, 101, 154, 207, 286, 392, 604,
15, 59, 103, 148, 214, 303, 480,
29, 108, 187, 266, 385, 543, 860,
4, 49, 94, 139, 207, 297, 477,
27, 117, 207, 296, 431, 611, 971,
38, 93, 147, 201, 283, 392, 609,
30, 87, 144, 201, 287, 401, 630,
24, 70, 116, 162, 231, 324, 508,
26, 67, 108, 149, 210, 292, 455,
29, 80, 131, 182, 258, 359, 562,
27, 89, 151, 213, 305, 429, 676,
7, 78, 149, 221, 328, 470, 755,
24, 63, 101, 140, 197, 274, 428,
41, 88, 135, 183, 254, 349, 538,
26, 74, 121, 169, 241, 336, 527,
38, 84, 131, 177, 247, 340, 525,
116, 236, 357, 477, 657, 897, 1377,
33, 81, 129, 177, 250, 346, 539,
21, 90, 159, 228, 332, 470, 747,
26, 63, 101, 138, 194, 268, 418,
37, 94, 152, 209, 294, 409, 637,
20, 63, 106, 149, 213, 299, 470,
40, 116, 193, 269, 383, 536, 842,
9, 62, 115, 169, 248, 355, 568,
17, 59, 102, 145, 208, 294, 464,
19, 62, 105, 148, 213, 299, 472,
15, 38, 60, 82, 115, 160, 249,
40, 108, 175, 243, 345, 480, 751,
37, 100, 163, 227, 322, 449, 702,
31, 84, 137, 190, 270, 376, 589,
21, 117, 213, 309, 453, 645, 1029,
};

static uint64_t neck_lateral_convs_2_conv1_weight[64 * 1*4] =
{ // torch.Size([64, 1, 1, 64])
0x2bd995eddea96dd9,0x6cc6ccba320cdac5,0xeb4c53cdb50ddcac,0xd293c4d1b24bdc0d, 
0x0b5c16dc2c4d554c,0xcdc615c43d49c4b4,0xcb5b544ce4cd9d4c,0xd4bb4dd4542c2556, 
0xb53cbb5cbb6b2b3d,0xa53bccddc43cd26c,0xc4cb5c9d465ba4d4,0x5dcd5c4ac353c32c, 
0x554bc9454d944d9c,0x2be43de546c43dc4,0x3dd3244455c4cd55,0x545555d5db55c49c, 
0xbc2d9ac42a94caa9,0xdc9c4dc3b5bcbabc,0x4ccbb43c59dc4c39,0x3144cbd5cb115b2b, 
0xdc4ca4149944bb4c,0xd5345cddb322443a,0xbd464bb5dc5495d3,0xd0cb36543d4c3410, 
0x5544c4bd43b4cc23,0xbcd345451ec3bd45,0xc4b0a2435bd4cc4c,0xc021b1be43c5544c, 
0x53344cbabd45dd3d,0xd44c3c5ca59b1ba9,0x3d03a565235145a5,0x1544dd44addd34dc, 
0x42a3cc4bbb2c25cd,0xdcacc4c1bc0bc94c,0xc4a4e4d4a3adde33,0x14cc00c332a12354, 
0x1a4bcd3a443204a0,0x42a2b542debcc352,0x1529d143394bbc03,0x94db4acecb5b2042, 
0xac30593cdbbc3f4b,0xd3404cc34532cdb2,0x3d4c4424124455ba,0x4edbccd4d35e4ddc, 
0x4ccdbc34434c5114,0x45c2444c4c94bd9a,0xc4312bc4cc4b5199,0xa355424c4344b2b3, 
0x453ccc456563e54d,0x2db34542c595b35e,0xc4a45424133ccc20,0x23435da45dd4c455, 
0x45554adc9224c445,0x94534563c30db4d4,0x5dc5344434b245bb,0x35249b552deca446, 
0xbd3dd14b545d5333,0xddd45cc33334dcc1,0x444d1d4e0d2c05c4,0x62dc5bcdb4b331b5, 
0xc30ddbdbdaa5d54d,0xbc459cc51b1c35b3,0x3cc1d249d2cb3d23,0x2d4ccbc44bbbc433, 
0x530cd9a43253cdc1,0xc3455cce43c444ae,0x494ccbd3d34344c3,0x4bc54b94bb354a22, 
0xed54b3cd9a455455,0x4dcc4ba6e343c445,0x5144a553c4ccc54d,0x2d5dd495d45e4d44, 
0x65034495ab3b14dd,0x320ca5542c4a3b51,0x932b440bbdc45043,0x3bc5d3a3acc51bdb, 
0x4c405a5b34c4bd45,0xd56b443c5cca4dbb,0x3442b4b5bb5536a4,0xcb145c6cb32ac4cb, 
0x13d3b359a0544564,0xb5bc39c2d56556b4,0x55b524c3254443cb,0x43b33435394a2b35, 
0xd539c441416d655c,0x5b21334dccc44c45,0xd4c34d65bc4dc31e,0xdcad55cd345e5bb3, 
0x0c4ed5544aed4d4b,0x0d3b44da4da54dda,0xc5244ddc3dcc9ddc,0xadcc43eca51c4a4a, 
0xc0cd32c54434c025,0xbcdbd0d6d3243b0c,0xa4309cdd4ecbcc0b,0x1cdc9bcda31d4555, 
0xcd4b44bab4543512,0x534c56cb5e465599,0x4cbc4beab4dd494c,0x40cd4d4965dcb424, 
0xa42cdceddbc3bcdb,0xdbbdccc4dbcdcb5d,0x3dc2d9ddcdd444bc,0xbdeddbcd44cc5c5d, 
0xd5c1ca54c4c4a55c,0x1cd4ccc4cb22b945,0x3cdbcd55dc2ccddc,0xcdacdaccad3b43bb, 
0x5343dd3641a44bdc,0x5bc333ad93ddae4d,0xc3d4d4eb61453d9c,0xe6d454d1b4b56145, 
0xb25bdbb290dcccab,0x92d6c94d3c9dd204,0x2c62d014f1c4dcb0,0x9cdbdc443ca3cc0d, 
0xacb4d3345adc4d54,0x14d45454d4555d13,0xa41cc2534145534e,0xd54432c5455e4d0a, 
0x3ccc3bc91cc9cbc3,0xc3e3bdc4b40bd5db,0xc3add3bb3bec4bbc,0xa14cbdd033d5bc33, 
0xb44ad32c53499140,0x6234d5541c453c55,0x94665c24d053bd93,0xdccd54649345b142, 
0xd9d3e34dcbec5d4c,0xd441442bd3cdcb55,0xdcc9ac34b5234bcd,0xac6cb6bad4cddbbd, 
0x44ca1435a3334cd3,0x5d4bba34c3a5bd4d,0xdbcc51dc555dca34,0x544543cb3255291c, 
0x44a53565dcd3dc3d,0xca4934dbc5c9255d,0x2c54c43435c9b359,0x44046dc6dcddc294, 
0xc45a9c3cd9ccdcac,0x3bb6cb31aa49a003,0xcabcdbc1a93bdbba,0xbbb242da12a22a3c, 
0xcd4c234444cc3cb3,0xdcdb5ad4dc39ddd3,0x3d454555ccc4e534,0xd944c5d4ddcddd3e, 
0xaba4e5b12ae063ac,0x92b4b5b1c03cce55,0xbb45b434d31dcdcd,0xd2cb44cab56bdcdc, 
0x4b5244304e5524cb,0x5d542c3d5ccd46b3,0x95dccbad44dedd5d,0xc6b46225c3c5b645, 
0x42a4ba4504940ddb,0xb1bcac4d4ccc9b3c,0x4cccdadc5dd44c9b,0xb5c5bb1bb9d55d1d, 
0x1c1cabb0135ac33c,0xdcda3dd3b4a2a9cc,0xadbb12ac4cc4033b,0x9144cb443dc34494, 
0xdc3c95cddce24e43,0xdd4cb9ad4ccc44b5,0x2ec5dd455dddcca4,0x0c4db5cced3e45cc, 
0xcdd43b5320cca649,0xb5b3359cecb43142,0x4a4bcb44455443ca,0x4ddc425d132bb51e, 
0xdc24c4dd652bc1b4,0x4d5cb5595c9564d3,0x44bb0dbd4d41ac43,0xccc6545bc21334b5, 
0x55444355bdde5e45,0xccdb524ad35c3ac5,0x534345cc5651a23c,0x5c3545c6c55c5cc4, 
0x45d6b55b5b5d253c,0x5414d54d5c3344a3,0x24244d333c3d3bac,0x0b1a555c3235d3d4, 
0x4c236330a4a4de52,0xb65334433ddd4a22,0x453c64a4dbc65594,0x95323b4911c0c53c, 
0xa4d4a3ecdbdc3b45,0xcd591c615b3ddc24,0x4a5c5254dc266e5a,0x5ccbdab343c3b4bd, 
0x3cbdc1432db4cc0d,0xdc2b3dd94213aacd,0x0b304bb5dd504bd5,0xcccd4d4ddb54242d, 
0x034459445c5b4b04,0x5d544b5c24eabb45,0xc425cc53434d2d25,0x195c5543d320c522, 
0xcadbd451a943b23b,0xcd5dbc04b54555a1,0x22b66cc4c06e54e3,0xb9cb5661b262cb35, 
0xcc464b1945235d24,0x5522d33cbcb54cb5,0x444b4c5aa54b3ad0,0xcbd31b4dc5449dc4, 
0xbccac224cdb10db4,0x5d2b1539bed5b41c,0x43bcc2bc5c3dcd9c,0xb0cb5dded4dd253c, 
0x442ddc96554c460a,0x5d5ca344b555fc54,0xcce3555ec34abdbd,0xd545454334a03d53, 
0x55155ce04b9d45ca,0xad993453443ab49a,0x04a333c09dbbc45b,0xc4a6a5349523c101, 
0xc516c4c33dcb4d5e,0xdbd45d4b4c4dccd3,0xcd1c933cdcdbbb2c,0x4bd53ce5cdc0ccdc, 
0xb5daec4d10da0dbc,0x0ccdc539a9dadc45,0xcdccd34453bed93c,0x9c3bdadacabbbccd, 
0x54d63151b21c41c3,0x354db344b3b0bb3c,0xc4c24cec435ce4b3,0x54d3942055a54242, 
0x35c2b1db54bbd9dc,0xcd92cd5343ab2ad2,0xba33cc4c3ecdbd9c,0x9bd6c6c4cb5c210c, 
0x14c4dc3d44ed4de5,0x3ce1b53c5bdcce4b,0xc95debcd4495dc35,0x5dbcdbddd5ba4eee, 
0x35cbc653dcca5cdd,0xe524d4dbdcdcd455,0xedc43cc4c33eadba,0xd30d13c322c203bd, 
0x4b44cbd4cccdd5b9,0x5ddabccebb2a3c9d,0xccbdc4cbcc4ccd3b,0xc1344ddbbc63b353, 
0x36450b9c04c43cbc,0xcb155d4ac20c1a50,0x9cc34c45c433a41c,0x44d24355ce6c53c5, 
0xde4b5a55b44a5c41,0x9b4dc55a5bb55314,0x434ecb403cc44c60,0xa2ccce4c4cbb31c5, 
};

static int neck_lateral_convs_2_quant1_threshold[64 * 14] =
{ // torch.Size([64, 14])
-1056, -680, -492, -351, -257, -163, -69, 24, 118, 212, 306, 447, 635, 1011,
-928, -587, -417, -289, -204, -119, -34, 50, 135, 221, 306, 433, 604, 944,
-751, -476, -339, -236, -167, -99, -30, 38, 106, 175, 244, 347, 484, 759,
-1319, -849, -614, -438, -320, -203, -86, 31, 148, 266, 383, 559, 794, 1264,
-949, -607, -435, -307, -221, -135, -50, 35, 121, 206, 292, 420, 592, 934,
-1087, -687, -487, -338, -238, -138, -38, 61, 161, 261, 361, 510, 710, 1110,
-874, -559, -401, -282, -203, -125, -46, 32, 111, 190, 269, 388, 545, 861,
-717, -453, -321, -222, -156, -90, -24, 42, 108, 174, 240, 339, 471, 735,
-974, -629, -456, -326, -240, -154, -67, 18, 104, 191, 277, 407, 579, 925,
-736, -470, -337, -237, -171, -104, -38, 27, 94, 160, 227, 326, 459, 725,
-945, -605, -435, -308, -223, -138, -53, 31, 116, 201, 286, 414, 584, 924,
-941, -598, -427, -298, -212, -126, -41, 44, 130, 216, 301, 430, 602, 945,
-913, -576, -407, -281, -197, -112, -28, 55, 140, 224, 308, 435, 603, 940,
-853, -536, -377, -257, -178, -98, -19, 60, 139, 219, 298, 417, 576, 894,
-811, -518, -371, -261, -188, -115, -42, 31, 104, 177, 250, 360, 507, 800,
-939, -601, -432, -305, -221, -136, -52, 32, 116, 201, 285, 412, 581, 918,
-755, -479, -340, -237, -168, -99, -29, 39, 108, 177, 246, 350, 488, 764,
-953, -601, -424, -292, -204, -116, -27, 60, 148, 236, 324, 457, 633, 986,
-691, -439, -313, -218, -155, -92, -29, 33, 96, 159, 222, 316, 442, 694,
-1001, -629, -443, -304, -211, -118, -25, 67, 160, 253, 346, 485, 671, 1043,
-1108, -688, -478, -321, -216, -111, -6, 98, 203, 308, 413, 570, 780, 1200,
-951, -601, -426, -295, -207, -120, -33, 54, 141, 229, 316, 447, 622, 972,
-911, -583, -420, -297, -215, -133, -51, 29, 111, 193, 275, 398, 562, 889,
-897, -571, -407, -285, -203, -121, -40, 41, 123, 204, 286, 409, 572, 899,
-935, -590, -417, -288, -202, -115, -29, 56, 142, 228, 315, 444, 616, 961,
-918, -599, -440, -320, -240, -160, -81, -1, 78, 158, 238, 357, 517, 836,
-867, -557, -402, -286, -208, -131, -53, 23, 101, 178, 256, 372, 527, 837,
-1039, -665, -477, -337, -243, -149, -56, 37, 131, 224, 318, 459, 646, 1021,
-936, -608, -444, -320, -238, -156, -74, 7, 89, 171, 253, 377, 541, 869,
-777, -486, -340, -231, -159, -86, -13, 59, 131, 204, 277, 386, 531, 822,
-966, -623, -452, -324, -238, -152, -67, 18, 104, 189, 275, 403, 575, 917,
-1135, -709, -497, -337, -231, -124, -18, 88, 194, 301, 407, 567, 780, 1205,
-953, -611, -440, -312, -226, -141, -56, 29, 114, 200, 285, 414, 584, 926,
-727, -458, -323, -222, -155, -88, -20, 46, 113, 181, 248, 349, 483, 753,
-792, -500, -354, -244, -171, -98, -25, 47, 120, 193, 266, 376, 522, 814,
-729, -470, -340, -243, -178, -113, -48, 16, 81, 145, 210, 308, 437, 697,
-865, -559, -406, -291, -215, -138, -62, 14, 90, 166, 243, 358, 510, 816,
-891, -575, -417, -299, -220, -141, -62, 16, 95, 173, 252, 371, 528, 844,
-842, -535, -381, -266, -189, -112, -36, 40, 117, 194, 271, 386, 539, 847,
-777, -498, -358, -253, -184, -114, -44, 25, 95, 165, 234, 339, 479, 758,
-852, -543, -388, -272, -195, -118, -40, 36, 113, 190, 268, 383, 538, 847,
-995, -642, -466, -333, -245, -157, -69, 18, 106, 195, 283, 415, 591, 944,
-829, -521, -366, -251, -174, -97, -19, 57, 134, 211, 288, 404, 558, 866,
-828, -522, -370, -255, -178, -102, -26, 50, 126, 203, 279, 394, 547, 853,
-1068, -667, -466, -316, -216, -115, -15, 84, 185, 285, 385, 536, 737, 1138,
-947, -597, -421, -290, -203, -115, -27, 59, 147, 234, 322, 453, 628, 978,
-1063, -674, -479, -334, -236, -139, -42, 55, 152, 249, 347, 493, 687, 1076,
-867, -558, -404, -288, -211, -134, -57, 20, 97, 174, 251, 367, 521, 830,
-858, -548, -393, -277, -200, -122, -45, 32, 109, 187, 264, 380, 535, 845,
-853, -537, -378, -260, -181, -102, -22, 56, 135, 214, 293, 412, 570, 886,
-954, -596, -417, -282, -193, -103, -14, 75, 164, 254, 344, 478, 657, 1015,
-850, -534, -376, -258, -179, -100, -21, 57, 136, 215, 294, 413, 571, 886,
-864, -554, -400, -284, -207, -129, -52, 24, 102, 179, 256, 372, 527, 836,
-927, -589, -420, -294, -209, -125, -40, 43, 127, 212, 296, 423, 592, 929,
-665, -420, -298, -206, -145, -84, -23, 37, 99, 160, 221, 313, 435, 680,
-855, -559, -410, -299, -225, -151, -77, -3, 71, 145, 219, 330, 478, 775,
-1053, -684, -499, -360, -268, -175, -83, 8, 101, 193, 285, 424, 609, 978,
-924, -583, -413, -286, -201, -116, -31, 54, 139, 224, 309, 436, 606, 947,
-834, -539, -391, -280, -207, -133, -59, 14, 87, 161, 235, 345, 493, 788,
-1228, -789, -570, -405, -296, -186, -76, 32, 142, 252, 361, 526, 745, 1184,
-873, -562, -407, -290, -213, -135, -57, 20, 97, 175, 253, 369, 525, 835,
-960, -621, -451, -324, -239, -155, -70, 14, 99, 184, 268, 395, 565, 904,
-709, -447, -316, -217, -152, -86, -21, 44, 109, 175, 241, 339, 470, 732,
-827, -521, -368, -254, -178, -101, -25, 51, 127, 203, 280, 394, 547, 853,
};

static uint64_t neck_lateral_convs_2_conv2_weight[64 * 9] =
{ // torch.Size([64, 3, 3, 1])
0x4, 0xa, 0x4, 0x4, 0x6, 0x5, 0x1, 0x2, 0x4, 
0xe, 0xc, 0xd, 0xc, 0x1, 0xc, 0xc, 0x2, 0xc, 
0xb, 0xd, 0x9, 0x4, 0xd, 0xc, 0x7, 0x2, 0xa, 
0xc, 0x3, 0xa, 0xe, 0xc, 0xc, 0xd, 0x9, 0xc, 
0xc, 0xa, 0x3, 0x4, 0x4, 0x5, 0x4, 0x4, 0x5, 
0xb, 0xc, 0xd, 0xd, 0xc, 0xb, 0xd, 0xc, 0xb, 
0x5, 0x5, 0xc, 0x5, 0x5, 0xb, 0x5, 0x3, 0xd, 
0xd, 0xe, 0xe, 0xd, 0xd, 0x0, 0x5, 0x4, 0x4, 
0x3, 0x5, 0x5, 0xc, 0xa, 0x4, 0xc, 0x3, 0x5, 
0xc, 0x2, 0x5, 0xd, 0xc, 0x5, 0xd, 0xc, 0x6, 
0xd, 0xd, 0xd, 0xe, 0xd, 0xd, 0xd, 0x4, 0x2, 
0x2, 0x1, 0xb, 0xa, 0xb, 0xc, 0xa, 0xc, 0xe, 
0x4, 0xb, 0xb, 0x5, 0x1, 0xe, 0x9, 0xc, 0xe, 
0xd, 0xb, 0x5, 0xc, 0xe, 0xd, 0x3, 0xb, 0xd, 
0x5, 0x2, 0xb, 0xb, 0xc, 0x1, 0xe, 0xe, 0xc, 
0x4, 0x3, 0x3, 0x5, 0x3, 0x4, 0x1, 0x4, 0x3, 
0xc, 0xc, 0xe, 0x9, 0x5, 0xb, 0x1, 0x4, 0x9, 
0x4, 0x2, 0x3, 0x5, 0x9, 0x2, 0x4, 0x6, 0x6, 
0xb, 0xd, 0xb, 0xd, 0xc, 0x6, 0xc, 0x5, 0x4, 
0xe, 0xb, 0x4, 0xd, 0x1, 0xc, 0xe, 0xb, 0x3, 
0x5, 0x5, 0x5, 0x3, 0x5, 0x5, 0x1, 0x3, 0xa, 
0xa, 0xc, 0xc, 0x5, 0x4, 0x3, 0x6, 0x6, 0x5, 
0xa, 0x5, 0x4, 0x4, 0x5, 0x4, 0x5, 0x5, 0x2, 
0x3, 0x3, 0x1, 0x3, 0xb, 0x0, 0x6, 0x5, 0x5, 
0x2, 0xc, 0xe, 0x4, 0x2, 0xd, 0xc, 0xd, 0xd, 
0x5, 0x4, 0x5, 0x3, 0xa, 0x4, 0x5, 0x3, 0x5, 
0xb, 0x3, 0x9, 0x0, 0x5, 0x5, 0x5, 0x5, 0xc, 
0x6, 0x4, 0x7, 0xb, 0xc, 0xa, 0x4, 0xc, 0x4, 
0x6, 0x5, 0x6, 0x9, 0xc, 0x3, 0xc, 0xd, 0x0, 
0xe, 0xd, 0xd, 0xc, 0x2, 0x9, 0xa, 0x4, 0xc, 
0x4, 0x4, 0x2, 0x5, 0x4, 0x2, 0x4, 0x4, 0xb, 
0xd, 0xd, 0xd, 0xb, 0xc, 0xa, 0x9, 0xc, 0xa, 
0x6, 0x5, 0x1, 0x6, 0x3, 0xc, 0x4, 0xc, 0xc, 
0xd, 0xa, 0x0, 0xe, 0xa, 0xc, 0xc, 0xa, 0xc, 
0xc, 0xd, 0x5, 0xb, 0xd, 0x4, 0xd, 0xe, 0xb, 
0xc, 0xb, 0xa, 0x5, 0x5, 0x5, 0x1, 0x9, 0x9, 
0x2, 0xc, 0xc, 0x0, 0x0, 0x9, 0x6, 0x6, 0x5, 
0x5, 0x7, 0x4, 0x5, 0x4, 0xb, 0xa, 0xc, 0x9, 
0x2, 0x0, 0x9, 0xc, 0xc, 0xb, 0xe, 0xe, 0xe, 
0x6, 0x4, 0x6, 0xb, 0xc, 0x1, 0xc, 0xc, 0x9, 
0xa, 0xb, 0xa, 0x5, 0x5, 0x4, 0x3, 0xa, 0xb, 
0x4, 0x1, 0x2, 0x5, 0x5, 0x5, 0x3, 0x3, 0x6, 
0xd, 0x3, 0x0, 0xd, 0x0, 0x2, 0xe, 0xc, 0x3, 
0xc, 0x1, 0xe, 0x3, 0x3, 0xd, 0xc, 0xd, 0xd, 
0xd, 0x1, 0xb, 0xd, 0xa, 0x1, 0xe, 0xa, 0xd, 
0x0, 0x2, 0xd, 0xb, 0x3, 0xc, 0xd, 0xd, 0xe, 
0xc, 0xd, 0xd, 0x2, 0xb, 0xc, 0xc, 0xb, 0xd, 
0x5, 0x2, 0xc, 0x6, 0x3, 0xc, 0x6, 0x3, 0x2, 
0x3, 0x4, 0x5, 0xb, 0x2, 0x4, 0x2, 0x4, 0x6, 
0xc, 0xc, 0xd, 0x0, 0xc, 0xe, 0x4, 0xc, 0xc, 
0xe, 0x2, 0xc, 0xd, 0xa, 0x3, 0xe, 0xd, 0xd, 
0x3, 0xb, 0xe, 0x9, 0x9, 0xe, 0x4, 0xb, 0xd, 
0x4, 0xc, 0xd, 0x4, 0xa, 0xd, 0x3, 0xc, 0xe, 
0x5, 0x4, 0xc, 0x5, 0xc, 0xf, 0xc, 0xa, 0xe, 
0x3, 0xa, 0xc, 0x4, 0x2, 0xc, 0x6, 0x5, 0x9, 
0xc, 0x2, 0x4, 0x3, 0x9, 0x1, 0x5, 0x5, 0x6, 
0x5, 0x6, 0x5, 0x3, 0xc, 0x3, 0x3, 0x2, 0x2, 
0x5, 0x5, 0x6, 0x0, 0xc, 0x4, 0x4, 0xa, 0x4, 
0x4, 0x6, 0x4, 0x4, 0x5, 0xa, 0x1, 0xb, 0xc, 
0x2, 0x2, 0x4, 0x5, 0x5, 0x4, 0x6, 0x5, 0x5, 
0x3, 0x2, 0x5, 0xa, 0x6, 0xa, 0x5, 0x5, 0xc, 
0x1, 0x5, 0x4, 0x3, 0x6, 0x3, 0x9, 0x3, 0x3, 
0x2, 0x1, 0x3, 0x4, 0x6, 0xc, 0xb, 0xc, 0xf, 
0xe, 0x4, 0x4, 0xe, 0xc, 0xa, 0xc, 0xc, 0x2, 
};

static int neck_lateral_convs_2_relu2_threshold[64 * 7] =
{ // torch.Size([64, 7])
17, 61, 105, 149, 215, 303, 480,
26, 85, 144, 203, 292, 410, 647,
32, 97, 161, 226, 323, 452, 711,
-6, 39, 85, 132, 201, 293, 477,
23, 66, 109, 153, 218, 304, 477,
24, 63, 103, 142, 202, 281, 440,
24, 70, 116, 162, 232, 324, 509,
36, 102, 168, 233, 332, 463, 726,
17, 50, 84, 118, 168, 236, 370,
23, 63, 102, 142, 201, 279, 437,
31, 83, 134, 186, 263, 366, 573,
10, 50, 90, 130, 190, 270, 429,
18, 74, 131, 187, 272, 384, 610,
22, 74, 126, 178, 256, 360, 569,
25, 94, 162, 230, 333, 470, 744,
8, 49, 89, 130, 190, 271, 432,
19, 57, 96, 135, 193, 270, 425,
22, 80, 138, 196, 283, 399, 631,
27, 61, 96, 130, 182, 251, 389,
18, 55, 92, 129, 184, 258, 405,
20, 70, 120, 170, 245, 345, 545,
22, 78, 134, 190, 274, 386, 610,
13, 83, 152, 222, 326, 464, 742,
9, 89, 169, 249, 369, 528, 847,
23, 79, 134, 190, 274, 385, 608,
12, 78, 143, 209, 307, 438, 699,
11, 46, 81, 116, 169, 239, 379,
36, 118, 199, 281, 403, 566, 893,
27, 75, 124, 173, 246, 343, 537,
18, 81, 145, 209, 304, 432, 687,
11, 38, 64, 90, 130, 183, 289,
21, 61, 102, 142, 203, 284, 446,
24, 83, 143, 202, 291, 410, 647,
22, 83, 144, 204, 295, 416, 659,
20, 81, 142, 203, 294, 416, 659,
21, 44, 66, 89, 124, 169, 261,
24, 84, 144, 203, 293, 412, 651,
52, 151, 251, 350, 499, 698, 1096,
19, 120, 220, 321, 472, 673, 1075,
12, 56, 100, 145, 211, 300, 477,
16, 63, 109, 156, 226, 320, 507,
18, 86, 153, 220, 321, 456, 725,
22, 81, 140, 199, 288, 405, 641,
19, 75, 130, 186, 269, 380, 603,
22, 89, 157, 224, 325, 460, 729,
23, 86, 150, 213, 308, 435, 689,
2, 46, 91, 136, 204, 293, 473,
33, 96, 159, 222, 316, 441, 692,
4, 55, 107, 158, 235, 338, 543,
15, 77, 138, 200, 292, 415, 661,
37, 108, 179, 250, 357, 499, 784,
27, 77, 127, 177, 252, 352, 552,
21, 74, 127, 180, 259, 364, 575,
29, 116, 202, 288, 418, 590, 936,
28, 71, 115, 158, 224, 311, 485,
30, 115, 199, 284, 411, 580, 918,
22, 77, 132, 187, 269, 379, 598,
31, 80, 130, 180, 254, 353, 552,
30, 72, 115, 157, 221, 306, 476,
2, 73, 144, 214, 321, 462, 745,
14, 65, 116, 167, 243, 345, 548,
16, 80, 144, 208, 304, 432, 688,
42, 100, 157, 215, 302, 417, 647,
31, 79, 127, 176, 248, 345, 538,
};

static uint64_t bbox_head_multi_level_share_convs_0_0_conv1_weight[64 * 1*4] =
{ // torch.Size([64, 1, 1, 64])
0xa9213a20b91b4adb,0xba42904c2a909caa,0x2b1322a1abc9bbba,0xb2ba2c1b4a91ab33, 
0x3943c13a4254a2cb,0x143a32b330921041,0xc229cb1343a2a302,0x49b9b9cb49a30c11, 
0x003301224b231222,0xa29124121493a094,0x91a333b2a943322b,0x21b3229392210201, 
0x32b4a4341a324323,0x42a32b2bb331a349,0x3a04a033a21b4c3c,0xbc4b3332339b9322, 
0xb0bbab31baab93bc,0xb3c3cbbbccac2b33,0x15a3cb4324a3c313,0x33b51baaaab43aba, 
0xca1a291a299c22a2,0x2a23bb0db3a2bba9,0x4933a4c2aaca0c9a,0xa313103029ba0d0a, 
0xb23a44b50a3bbb43,0xa14302b9314324b3,0x49b551341c41b31b,0xa4b5a34253b3929a, 
0xa2db24c21ddb3b32,0x3a342b31191014cb,0x3ac00913323c2d4c,0xaa3b4943413b90c2, 
0xba931ca9102b4a3b,0x290a2b5dba939d29,0x33292312aaab1cab,0x9a2b3a2caaa22dab, 
0x1a033a432aa2b4bd,0xa2cbd022cca31190,0xa512b24ba394d029,0x22b49b99bac54a20, 
0x33a39333bc203302,0x43334c32323120a3,0x2b23ab911333313a,0x9a3c1321243ba9a1, 
0x30aa9abb0c9bb2bb,0x321ba9b2ca992a3b,0xda2adda00ac99abb,0xcbbbd3cb2aaa9aba, 
0x3130c9a94b31b9bb,0x2aab1a14ba244a33,0xb112bb2c31ccb043,0x3ac2b3bb41010a21, 
0xbbcab9432ca3b5cd,0xb9cacbc9cdbca133,0x951ca243b90acccc,0x20253c1a3bc40ba9, 
0x2b34a9a12a02bb00,0x022bb939aa953a33,0xb2249a3c43aa0bb3,0x4ab012b1ba330a3a, 
0xd21c43ba92ac910a,0x3a9b309aba90cac2,0x22ca33b9b213b9b2,0xc2c1a040b9dc092b, 
0xa9ab9b1bb204baab,0x21b2baa9339099ba,0xa9aaa20b93b1a100,0x9a1abaa9a90909a9, 
0x3bcb33cdabb32c24,0x3c344ba943c3b33b,0x293d33a2bb4c5bcb,0x9caa43b9dc419a3b, 
0xb2cb4912a23a232a,0x01110090111aa1b0,0xa0ba32b0b12003ba,0x1332131301b91243, 
0x33211a03993a2bb0,0xb4a30cb431221433,0xb324ba2aa9b33c53,0x00a323a053ab2922, 
0x2023c9a10b03a19a,0xa99b3092aa932929,0x2930cb9019a3ba29,0x2ac9b0a9203919cb, 
0x310a041331320933,0x2932aa39a32103a3,0x339343323a20521c,0x11434122321300c4, 
0xc9cabb42dccc95bc,0x0cc3c2abcb0c31ab,0x4babab24b3bcbcbc,0x2a259b3baac520b2, 
0xa9422b213531ba21,0x212a0a1a2120a130,0xb433b43a32b01300,0x1ab9339ab14b205c, 
0xa4922a2a2295b02b,0xa1c23522333b4032,0xb42bab3c44131b4b,0xccc2a2b3b4412404, 
0x91ba932b4202aaca,0x1aa4a3c42200121b,0xbb9121912a3ba193,0x3303a0b2312194a3, 
0x11a3132bb92512cb,0x2132243332324a3b,0x2a049b3a3ab3ab03,0xc1a32ac4234a9534, 
0xb109cc3ac40c3093,0x32b22c2b32aaacc0,0x3b1b2aa2b04b3bcb,0xbc3b2293ca3aa990, 
0x2aa1321a140399c0,0xaaa3a4a331a91b1b,0x2b1a223a2123a1a3,0xa21a2cbb9a3aa404, 
0xb1cbbbaa2cbc0a34,0xbbaa3cbbb221baac,0x3cc301c3aa2b394c,0x3bbacb5232daaacc, 
0x390b00229993a0b1,0x9a0a24c42aaa254b,0xc9caabb229309930,0x2bab13003ab09d02, 
0x93c32a231a2bab3c,0x93ab2b2aba22a99b,0x11a22ba0b2099ba9,0x1bb9b033a2aa109b, 
0xb00a3003b3dc233a,0x3c22aa3ba209c1b3,0x432b331ab13292a9,0x013a1240b9292b03, 
0xaa03b4a92213310a,0x9242a13c99209292,0x231aa2224bbaa142,0x14221bb911420002, 
0xb9ac519b033b2291,0x2920a10922bdc3d9,0xa1bb34b0aa22a390,0x03416433aba11143, 
0x32b40224243c9a43,0xb042aa22a3332333,0x3014b4b43ab0230a,0x92a3323a32039a3b, 
0x29a340a4cbc11143,0xac3a204b2a1ca0b3,0x4a324a4b331424a1,0xb4134232c1310aa2, 
0xd3ad1433b33334c3,0x0290a9bbb30db4b3,0x1ecb43b4c33b9cbc,0x104d0109b3ccbc9a, 
0x4a34cb0333b594ac,0xc5cabaa243354c43,0xb323333a55aca441,0x4c390ccd334313a9, 
0x4a341bb24a42c23d,0xb439a3333aa53c9a,0xb433ba1c42a33543,0x1aa4a1b24bb43232, 
0x3b19ba1bc2ccaa01,0xaaa12dd22bb2a4ab,0xc21a0ab2b9390231,0x392b230b2b99199b, 
0x34332c55b2a335bc,0x94b9bbb42b4c3224,0xc2b4cc3325b3b941,0xa343b3b3343a1b1a, 
0x432424a4300c5234,0xb144b34433303222,0x4a2344349c5a39ab,0x9334543342210233, 
0x0a09b4113142b134,0x0992a1b091921303,0x220ba20311aa3029,0x29299191a9220102, 
0xbacbbb3c92abcbcc,0xbad1919bb3bcbc3b,0xc99cd0bdb3b12922,0x3c3ccbcccbba02a3, 
0xa19ba339b4223901,0x1024ab12010b10b1,0x22b1329aaa300a29,0x09313a2930b012a2, 
0x1193c32222221230,0x1120233b2a2a9b23,0x913b3a10223b33c9,0x2c429092b24304a9, 
0xcb40db3b03b14442,0x9b2c3c2cb2b3bda3,0x3041aba2bc033bdb,0x3b3acc4bab32999b, 
0x093b3a3aa49b1b49,0x10baaa4222aaa3a3,0x43aa541b022202a9,0xb243124aa0b21340, 
0x40431493201aa033,0xd9b2baa330213321,0x310244023a3a2013,0x2213403111b0013b, 
0xab3b21cc232bbbbb,0xcbbbb3abcbb9a132,0xb31ca13bbabbbab3,0xa0b3cbbcabb30a1b, 
0x91aaba29a01a33aa,0x311222aba192bb31,0x190922a3c22a3bac,0x1c423013a9a90c12, 
0x91124aa32aab932b,0xa2bb3a04cc93a4a0,0xba9b3cbac33133ab,0xbc99122b00bb0b3a, 
0x39aa0593a3a2ba22,0x9b11aac3a9222531,0xa2a422233b213a20,0x43322a2b42a12ba5, 
0x2094bbc11d199b3c,0x019b212a1ba51a4c,0x2332bc29911a2203,0xa9c31a332a391201, 
0xa05341c33a31cbac,0x1a0c21932a3403b0,0xb3322ca031b4b334,0xc4d2b23293111a39, 
0xb93c43a2b1abaacb,0xaaaa20b222aba4ab,0xbacb39ba3994ca32,0xa3cab9422ada0b3a, 
0xa2bba133cacb23a4,0x2b242ba2432b13c2,0x3cbb39a3b30a9c0b,0xaa3c3939939bb292, 
0x90b02139b2b942cb,0x39a303903a90933c,0xb90929b4bb322aac,0xbb4c9aa4399a0db9, 
0xbb23b2b93bc2aa4b,0xabbc9c390ba49ab2,0xa24bcb3c40a394a2,0x23a1bbc9ba3204aa, 
0x9aa29baa3b10bc32,0xb1bca400bcb29bb2,0x030bba2a9bab12a1,0x10a3ab22aba29ba3, 
0xb92bbb31333b240c,0xc3c2eb09ddb02b31,0xa700ba432433c2b3,0x03943dc2b3945a00, 
0xbaab1cac3b94b22b,0xb1cab3aa93bbac22,0xb1bca3ad11baaa29,0x2cbbabc0bc2b13ad, 
0xa3255bb44c3b2c53,0xab2b2949bb4549a3,0x53443b3239b1a333,0xa4c41a5944c3141a, 
};

static int bbox_head_multi_level_share_convs_0_0_quant1_threshold[64 * 14] =
{ // torch.Size([64, 14])
-347, -224, -162, -116, -85, -55, -24, 6, 37, 68, 99, 145, 206, 330,
-266, -166, -116, -78, -53, -28, -3, 21, 46, 71, 96, 134, 184, 284,
-567, -362, -259, -183, -131, -80, -29, 21, 73, 124, 175, 252, 355, 560,
-298, -184, -127, -84, -56, -27, 0, 29, 57, 86, 114, 157, 214, 328,
-561, -358, -256, -180, -130, -79, -28, 22, 73, 123, 174, 250, 352, 555,
-383, -249, -182, -132, -99, -65, -32, 0, 34, 67, 101, 151, 217, 351,
-598, -376, -266, -183, -127, -72, -17, 38, 93, 148, 203, 286, 397, 618,
-261, -167, -120, -85, -61, -38, -15, 8, 31, 55, 78, 113, 160, 254,
-433, -282, -207, -150, -113, -75, -37, 0, 37, 75, 113, 170, 245, 396,
-529, -338, -242, -170, -122, -74, -26, 20, 68, 116, 164, 236, 331, 523,
-329, -206, -144, -98, -68, -37, -6, 24, 54, 85, 116, 162, 223, 346,
-216, -146, -110, -84, -67, -49, -31, -14, 3, 20, 38, 64, 99, 170,
-167, -106, -76, -53, -37, -22, -7, 7, 23, 38, 53, 76, 107, 168,
-552, -354, -255, -180, -131, -81, -32, 17, 66, 116, 165, 240, 339, 537,
-137, -86, -61, -42, -30, -17, -5, 7, 19, 32, 45, 63, 89, 139,
-349, -228, -167, -122, -91, -61, -31, -1, 29, 59, 89, 135, 195, 317,
-339, -219, -159, -114, -84, -54, -24, 6, 36, 66, 96, 141, 201, 322,
-647, -413, -296, -208, -150, -91, -33, 25, 83, 142, 200, 288, 405, 639,
-219, -138, -97, -67, -46, -26, -6, 14, 34, 54, 75, 105, 146, 227,
-486, -306, -216, -149, -104, -59, -14, 30, 74, 119, 164, 232, 321, 501,
-95, -61, -44, -32, -23, -15, -6, 1, 10, 18, 27, 40, 57, 91,
-295, -182, -126, -83, -55, -27, 0, 29, 57, 85, 113, 156, 212, 325,
-617, -398, -288, -205, -150, -96, -41, 13, 68, 123, 178, 260, 370, 590,
-333, -208, -146, -99, -68, -36, -5, 25, 56, 88, 119, 166, 228, 353,
-410, -253, -174, -115, -76, -37, 2, 41, 80, 119, 159, 217, 296, 453,
-367, -229, -161, -109, -75, -40, -6, 27, 62, 96, 130, 182, 251, 388,
-430, -262, -178, -115, -73, -31, 10, 52, 94, 136, 178, 241, 325, 493,
-353, -229, -167, -121, -90, -59, -28, 2, 33, 64, 95, 141, 203, 327,
-635, -397, -278, -189, -130, -70, -11, 47, 107, 166, 226, 315, 434, 671,
-212, -144, -110, -85, -68, -51, -34, -17, 0, 16, 33, 58, 92, 160,
-199, -128, -92, -65, -48, -30, -12, 5, 23, 40, 58, 85, 120, 191,
-477, -305, -219, -155, -112, -69, -26, 16, 59, 101, 144, 209, 294, 466,
-295, -189, -136, -96, -70, -43, -17, 8, 35, 61, 88, 127, 180, 286,
-265, -165, -115, -78, -53, -28, -3, 21, 46, 70, 95, 133, 183, 282,
-325, -206, -146, -102, -72, -42, -12, 17, 47, 76, 106, 151, 211, 330,
-461, -289, -203, -139, -96, -53, -10, 32, 75, 117, 160, 225, 311, 482,
-266, -165, -114, -76, -51, -25, 0, 25, 50, 75, 101, 139, 190, 291,
-495, -322, -235, -171, -127, -84, -41, 1, 44, 88, 131, 196, 282, 455,
-437, -273, -191, -129, -88, -47, -6, 34, 75, 116, 157, 219, 301, 465,
-303, -188, -130, -87, -59, -30, -1, 27, 55, 84, 113, 156, 213, 328,
-368, -242, -179, -131, -100, -68, -37, -5, 25, 57, 88, 135, 198, 325,
-729, -460, -326, -225, -158, -91, -24, 42, 109, 176, 244, 344, 479, 747,
-722, -460, -330, -232, -166, -101, -36, 29, 94, 159, 225, 323, 453, 715,
-255, -161, -113, -78, -54, -30, -7, 16, 40, 63, 87, 123, 170, 265,
-658, -424, -307, -219, -160, -101, -43, 15, 73, 132, 191, 278, 396, 630,
-248, -157, -111, -77, -55, -32, -9, 13, 35, 58, 81, 115, 161, 252,
-333, -207, -144, -96, -65, -33, -2, 29, 61, 92, 124, 171, 234, 361,
-402, -261, -191, -138, -103, -68, -33, 2, 37, 72, 107, 160, 230, 371,
-338, -213, -151, -104, -72, -41, -10, 20, 52, 83, 114, 161, 224, 349,
-337, -211, -147, -100, -68, -37, -5, 25, 57, 89, 120, 168, 231, 357,
-361, -237, -175, -129, -98, -67, -36, -5, 25, 56, 87, 133, 195, 319,
-329, -210, -150, -106, -76, -46, -16, 12, 42, 72, 102, 146, 206, 325,
-437, -282, -205, -147, -109, -70, -32, 6, 45, 83, 122, 179, 257, 411,
-346, -215, -149, -100, -67, -34, -1, 31, 63, 96, 129, 178, 244, 375,
-347, -220, -157, -109, -78, -46, -14, 16, 48, 80, 112, 159, 223, 349,
-364, -233, -168, -119, -86, -53, -20, 11, 44, 77, 109, 159, 224, 355,
-157, -106, -81, -62, -49, -37, -24, -11, 0, 13, 25, 44, 70, 120,
-428, -275, -198, -140, -102, -64, -25, 12, 50, 89, 127, 185, 262, 415,
-533, -349, -257, -187, -141, -95, -49, -3, 42, 88, 134, 204, 296, 480,
-167, -109, -79, -57, -42, -28, -13, 1, 16, 30, 45, 67, 97, 156,
-274, -178, -130, -94, -69, -45, -21, 2, 26, 50, 74, 110, 158, 255,
-273, -167, -114, -74, -48, -21, 4, 31, 57, 84, 110, 150, 203, 309,
-394, -257, -188, -137, -102, -68, -34, 0, 34, 68, 102, 153, 222, 359,
-565, -356, -251, -173, -121, -68, -16, 35, 87, 139, 192, 270, 374, 583,
};

static uint64_t bbox_head_multi_level_share_convs_0_0_conv2_weight[64 * 9] =
{ // torch.Size([64, 3, 3, 1])
0xb, 0x4, 0x3, 0x1, 0x5, 0xb, 0x1, 0x5, 0x3, 
0xa, 0x3, 0x5, 0xc, 0xe, 0x5, 0x5, 0xa, 0x9, 
0x3, 0x9, 0xd, 0x9, 0x2, 0xd, 0x4, 0x1, 0xc, 
0x4, 0xb, 0xb, 0x2, 0xe, 0x4, 0xd, 0x1, 0x2, 
0x2, 0x4, 0x4, 0x4, 0x5, 0x4, 0xb, 0x4, 0x1, 
0x5, 0xa, 0x2, 0x6, 0xa, 0xa, 0x5, 0x3, 0xa, 
0xd, 0xc, 0x9, 0xd, 0xc, 0x3, 0xb, 0xb, 0x9, 
0xe, 0xe, 0xb, 0x4, 0x6, 0x1, 0xc, 0x4, 0xc, 
0x5, 0x4, 0x2, 0x5, 0xb, 0x9, 0x5, 0x0, 0xa, 
0x4, 0x4, 0x4, 0x4, 0xc, 0x4, 0x5, 0x4, 0x5, 
0x3, 0x1, 0x3, 0xc, 0xf, 0x0, 0x1, 0x9, 0x3, 
0x0, 0xd, 0xd, 0x5, 0x6, 0x4, 0xb, 0x5, 0x2, 
0x5, 0xd, 0xd, 0x4, 0x5, 0xc, 0xc, 0x5, 0xa, 
0x5, 0x3, 0x9, 0x5, 0xb, 0x1, 0x4, 0x4, 0x2, 
0xd, 0xe, 0xa, 0x4, 0x6, 0x5, 0x3, 0x5, 0x0, 
0xb, 0x3, 0x1, 0x4, 0x0, 0xc, 0x5, 0x6, 0xb, 
0x1, 0x3, 0x2, 0x9, 0x5, 0x1, 0x9, 0x5, 0x9, 
0xc, 0x2, 0xb, 0x4, 0x6, 0xb, 0x4, 0x4, 0x0, 
0xa, 0xb, 0x1, 0xc, 0xd, 0xa, 0x4, 0x6, 0x0, 
0x3, 0x4, 0x4, 0xc, 0xb, 0x5, 0xc, 0x2, 0x5, 
0x9, 0xc, 0x2, 0x4, 0x6, 0xa, 0xc, 0xd, 0x2, 
0xb, 0x3, 0xc, 0x4, 0x3, 0xb, 0xc, 0xe, 0x2, 
0x3, 0x4, 0x4, 0x4, 0x4, 0x4, 0xa, 0x0, 0x4, 
0xc, 0xc, 0x9, 0xd, 0xd, 0xa, 0x3, 0x2, 0x3, 
0x3, 0x2, 0xe, 0x2, 0x4, 0xe, 0x0, 0x2, 0xd, 
0xd, 0x2, 0x3, 0xc, 0x3, 0x9, 0xd, 0x9, 0x3, 
0xc, 0x2, 0x2, 0xe, 0x3, 0xa, 0xd, 0xb, 0x2, 
0x4, 0x4, 0xd, 0xc, 0x6, 0xc, 0x3, 0x4, 0xc, 
0xd, 0xb, 0xa, 0xc, 0xa, 0x2, 0xa, 0x2, 0x2, 
0x5, 0x5, 0xb, 0x5, 0x5, 0xc, 0xb, 0xb, 0xa, 
0xb, 0x0, 0x4, 0xa, 0x6, 0xb, 0xc, 0x6, 0x3, 
0x3, 0x4, 0x4, 0x3, 0x3, 0xa, 0x4, 0x4, 0x0, 
0xa, 0xd, 0x3, 0x5, 0xd, 0x3, 0x5, 0x4, 0xc, 
0xc, 0xd, 0x2, 0xd, 0xa, 0x3, 0xa, 0xb, 0x1, 
0xd, 0xd, 0x2, 0x4, 0xb, 0x3, 0x6, 0x7, 0x9, 
0x2, 0xe, 0x4, 0x4, 0x1, 0x9, 0xc, 0xd, 0x9, 
0x4, 0xc, 0xb, 0x4, 0xd, 0xb, 0x7, 0x4, 0x9, 
0xb, 0xf, 0x3, 0xb, 0xc, 0x4, 0xc, 0x9, 0x4, 
0x4, 0xf, 0xd, 0x4, 0x5, 0xa, 0x3, 0x2, 0xb, 
0xc, 0x7, 0x0, 0x3, 0x5, 0x1, 0xc, 0xb, 0xb, 
0x2, 0x3, 0x5, 0x0, 0xb, 0x6, 0x0, 0xa, 0x5, 
0x1, 0x2, 0xd, 0xb, 0x0, 0xe, 0x4, 0xb, 0xd, 
0xc, 0xd, 0xc, 0xc, 0x2, 0x2, 0xd, 0xd, 0xd, 
0xa, 0xb, 0xc, 0xa, 0x9, 0xa, 0x1, 0xb, 0xc, 
0x4, 0x5, 0x3, 0x4, 0x3, 0x3, 0x2, 0x3, 0x3, 
0x4, 0x5, 0xb, 0xc, 0xc, 0xc, 0x9, 0xc, 0x5, 
0x1, 0x9, 0xc, 0x4, 0xb, 0xd, 0x3, 0xd, 0xd, 
0xc, 0xc, 0xc, 0xe, 0xc, 0x4, 0xc, 0x4, 0x6, 
0xc, 0x4, 0x5, 0xd, 0xd, 0xb, 0x5, 0xd, 0xb, 
0xb, 0x3, 0x3, 0xd, 0xe, 0xa, 0x9, 0xc, 0x4, 
0xb, 0x3, 0xa, 0x4, 0x6, 0x3, 0xc, 0xc, 0xa, 
0x2, 0x4, 0x9, 0x6, 0xc, 0xa, 0x3, 0xc, 0x3, 
0x4, 0x3, 0x2, 0x3, 0x2, 0x9, 0x4, 0x4, 0x0, 
0xb, 0xd, 0x9, 0x5, 0xe, 0x4, 0xb, 0xe, 0x4, 
0x4, 0x7, 0x2, 0xa, 0xb, 0xb, 0xb, 0x2, 0xb, 
0x3, 0xe, 0xb, 0xd, 0xc, 0x3, 0x4, 0x5, 0x9, 
0x1, 0x3, 0xa, 0xc, 0x5, 0x4, 0x3, 0x6, 0x4, 
0xa, 0xe, 0xa, 0xb, 0xe, 0x9, 0x3, 0x2, 0x1, 
0xd, 0x5, 0x2, 0xd, 0x5, 0x1, 0xc, 0x4, 0xa, 
0xd, 0xc, 0x4, 0xd, 0x6, 0x0, 0x1, 0x3, 0xb, 
0x3, 0x5, 0xb, 0x0, 0x5, 0xe, 0x2, 0x0, 0xc, 
0x5, 0x5, 0x4, 0x3, 0x4, 0x4, 0x4, 0x5, 0x4, 
0x4, 0x3, 0xb, 0xc, 0x7, 0xc, 0x9, 0x4, 0x3, 
0x4, 0xd, 0xb, 0x9, 0xe, 0xc, 0x1, 0xd, 0x3, 
};

static int bbox_head_multi_level_share_convs_0_0_relu2_threshold[64 * 7] =
{ // torch.Size([64, 7])
14, 37, 60, 82, 116, 162, 252,
26, 60, 94, 128, 179, 247, 383,
-9, 6, 22, 37, 60, 91, 154,
1, 28, 55, 82, 122, 176, 284,
-13, 29, 71, 114, 178, 263, 434,
7, 46, 85, 124, 182, 260, 416,
-10, 24, 60, 96, 149, 220, 363,
40, 106, 171, 237, 335, 466, 728,
10, 35, 60, 85, 122, 172, 272,
-5, 38, 82, 126, 192, 279, 455,
13, 67, 120, 174, 254, 361, 575,
10, 71, 133, 195, 287, 410, 657,
25, 80, 135, 190, 273, 383, 603,
-9, 46, 102, 158, 242, 354, 579,
46, 132, 218, 304, 432, 604, 947,
3, 26, 50, 73, 108, 155, 249,
9, 27, 46, 64, 92, 129, 203,
9, 43, 78, 113, 165, 234, 372,
3, 22, 41, 60, 88, 126, 201,
15, 36, 57, 78, 110, 152, 237,
26, 73, 120, 167, 238, 332, 520,
6, 37, 68, 99, 146, 208, 332,
-3, 41, 86, 131, 199, 289, 469,
3, 31, 59, 86, 128, 183, 293,
13, 51, 89, 127, 184, 260, 413,
8, 25, 43, 60, 85, 120, 188,
15, 46, 78, 109, 156, 218, 344,
17, 53, 88, 124, 177, 249, 392,
7, 24, 41, 58, 84, 118, 186,
23, 85, 146, 208, 300, 423, 669,
5, 84, 163, 242, 361, 520, 837,
2, 27, 52, 78, 115, 166, 266,
3, 28, 52, 77, 114, 164, 263,
14, 36, 57, 79, 111, 154, 240,
-43, 29, 102, 174, 283, 429, 720,
2, 25, 49, 72, 108, 154, 248,
42, 86, 131, 175, 242, 330, 507,
13, 60, 106, 152, 222, 314, 500,
19, 67, 114, 162, 234, 329, 521,
33, 75, 116, 158, 220, 304, 470,
12, 47, 82, 117, 169, 238, 377,
0, 49, 100, 150, 225, 326, 527,
-27, -9, 7, 24, 49, 83, 151,
2, 14, 26, 37, 55, 79, 126,
-6, 18, 42, 67, 104, 153, 252,
13, 37, 61, 86, 122, 171, 268,
14, 40, 67, 93, 133, 186, 292,
32, 88, 145, 201, 286, 399, 625,
3, 35, 66, 97, 144, 206, 330,
10, 36, 63, 89, 129, 182, 288,
3, 29, 55, 81, 120, 172, 276,
6, 30, 55, 79, 116, 164, 262,
8, 32, 57, 81, 117, 166, 262,
0, 53, 107, 161, 242, 349, 565,
14, 65, 116, 167, 244, 347, 552,
-3, 22, 48, 73, 112, 164, 267,
32, 110, 189, 267, 384, 541, 854,
9, 42, 76, 110, 161, 229, 365,
16, 43, 69, 95, 135, 187, 293,
24, 71, 118, 165, 236, 330, 518,
8, 37, 66, 96, 139, 198, 315,
-121, -34, 53, 140, 270, 445, 793,
0, 56, 111, 167, 250, 361, 583,
-10, 34, 79, 124, 191, 281, 460,
};

static uint64_t bbox_head_multi_level_share_convs_1_0_conv1_weight[64 * 1*4] =
{ // torch.Size([64, 1, 1, 64])
0x0393b29a233b24b2,0x2022b0494c2ca329,0x23a14c4b4343b323,0x3ab50b0b0d0434a4, 
0x329aa42c93b32943,0x3d1495c5cc63ba43,0x43245354414bcb3c,0x2ac4b591b4ad143b, 
0x421a422ac3442421,0x5bcb34b342c439b3,0x52cccb5c52dd4339,0xbc44b4d3433b52b2, 
0x63545cc953343dd3,0xc443cd4e2413c12a,0x4d31dbb1cb43a344,0x2393d31b44a15a14, 
0xdc52cc3cedabac35,0xcd49d95ccb4ddb45,0xa3ccc1d3bd4351a5,0xb4cc5cbdaab35c2d, 
0xca9b9dc2a013b96e,0x912c29aba13bd432,0x34b3402c4bbabab5,0xbacbdbc402b3abac, 
0xb235c3344c52bb35,0x9c9cc4416410435c,0xa4b1bccd053ca3c5,0x323cd633c9c3ccc4, 
0x0353cbc34bdcc03a,0xa35a904c3b0cdb39,0xdbab3cdccc5013c2,0x24dbbc4a41cacb3a, 
0xdb341bca9b42c4d9,0xbd9d9c4ab339c2b4,0x42ab4bb25391d403,0xc6cdd09cc1c9d3a0, 
0xb3b02cc9323cb1ba,0x44bb1bbc0b54ccc4,0x42b4cbda0bcacb1b,0xc3cb34dcc9bdd2cb, 
0x4204b3344553bb2a,0xa93b5953433cc312,0x3d3b5c5b33502234,0xabd4c444cbc3a444, 
0x5c3343b41aa443bc,0xc5540b5db1339343,0x440bd3d3b4355444,0x9c43a53a22509404, 
0x3c94e335c35c4364,0x343e344413545334,0x5b53cbbcc433abd6,0xcb3d455c43c43ac5, 
0x2c242b5cbabbb313,0x34cd41cba1b3da34,0x2b3cbbba53db2a02,0xbadcb3c0c1ddc13c, 
0x0c331c3ab9bb5cc5,0x3b1d92414c2a9b24,0x3a1a31aa2b91432c,0xb3ca952c10b032a3, 
0x5d5b9dcd4d4bcca4,0xcb3dbd3c23c3d454,0xddc54ccc4454cdc5,0xc53c312cc4dd41c4, 
0xb2b3b954b1a46a5b,0xbd4431a42b530413,0x440c6443a94ab4a5,0x3303c544a343b413, 
0xbd44a2323b3dcc93,0x22ccc22c49dccdcb,0xcc9d3c9cbcbc3bbe,0xa3dc0d5a51cccb3b, 
0xcbc3b0bd394dccc4,0xd34cbd910ccbbba0,0xdca34c4cbc3424b4,0x42cc1c4c50db5c00, 
0xc3ccbacb491ac34c,0xb434c53494d1b5cc,0x122aa340c9095aaa,0x29c2ad9340243c19, 
0x3d4543a0444ab2e4,0x344ccc3c43b45334,0x4de292c3b3c23b4c,0xa434545d449cbba4, 
0xc3bb0c4b3934c342,0xc2440c4022d04513,0xc34b4599ba544003,0x4b43bb2342004033, 
0x5b33353bc0c21b3b,0xd44cab4d3b42a1dc,0x29a4cb21ab43a205,0x2c59cbc233cc21c0, 
0x24caaa4211c3c2c9,0x433bbb43390cc4bc,0xab0c5a9bbc50a1b4,0x3ebbdbc3a2b2aacc, 
0xcb44a32baab3d4a4,0xc1433b12c4e33431,0xcc3ac432a3255194,0x33503c5154bb4441, 
0xb943a24233c44339,0x1b232313333b494c,0x44493b5b1a31bbb3,0x2b44c144c33a9323, 
0xbccd5adbc5cd241c,0x44345c4ddd9cc5e5,0x5b35cbb4dec32b45,0xcdb45e12593559cc, 
0x04ac14c410b25c6c,0xa414a31a4b9293c9,0x22333331b9029ba5,0x12da3514ab13a3b2, 
0x4335a33bb45a4414,0x421349413c3dda44,0x3ba45c5b4954b304,0x3094042b4d4334c1, 
0x5bc43945b3dc4dba,0x04a44b422435504a,0x644bd54545e4cc2c,0xcd59354ab342b4b4, 
0xaab0c43cdd32b3dc,0xbbdcc4c4e9ac1dec,0xbc5cc950432a04cb,0xc4cbbc53d9c2bb5c, 
0x5b9c4bab3cc33c11,0xbba3d9c23294c0ba,0xb41cd5d3c9bcab1c,0x334c04bb259cbd4c, 
0x9c9c55dc34cdb430,0xb4535c5bcd9224c4,0x3d45c0c3db442cb3,0xb3d15d6b5ab23444, 
0x3234e4442c5b4334,0x43cdc4344433434c,0xab243b4d3311adc4,0xb34c244ab3c44cb5, 
0x5cdca925b52b535c,0xbbd413542a3bb3cb,0x4553b29bba322dac,0xcb524c45a925e431, 
0x549c3c42c3d41054,0xc5354c4ca20ae33b,0x3c6dc444d3334643,0xbdb4c4d4cc35c415, 
0x4430b15430342b51,0xb34a994d4a3bc5cc,0xb43c44acc39323bb,0x21bbd424b31342b4, 
0xd403b333b439a499,0x142c429acb2ccb43,0x3b045c5b4933b333,0xbcd41213bcbaa49a, 
0xd29525232c4330ac,0x933b22bc30444402,0x4a1b514ac43ac2a2,0xa42cb3a9413403c3, 
0x5ccc45abc5cd5a4d,0xb924b240cc5b53eb,0x34a4dc4cb1c0bd43,0xbb645c3c5db4b2ba, 
0xb33b4c9a0cdbcc4d,0xabbba93ccaccdc4b,0xccbb3cbb2bba0239,0x3dc1dcb440bbb3bc, 
0xcbbcad4310dccc4d,0x420cc33c59adeabc,0x0b2b5cbc9dbbd3b2,0x2edcecb352cbb3ac, 
0x1124b33cb44144a4,0x433442424c9d9a44,0x3394515b4c45b303,0xa0441c414ca434c3, 
0xbac54552c34a43c6,0x344c05bc4a243a05,0x433dd3c3c0c2334c,0xcd523453444434a4, 
0xa3aca6b403246b2a,0xcb34c4343a5b443b,0xc4214153bb50b323,0x34b4a453524442b2, 
0x13c324a1ac99cab2,0xbbb2c2b4a9bbbbac,0xdb3c29c4d39bc32c,0x22c0a15c51bb3c0a, 
0xabadc1d4d9dcbb6d,0xb4352934dcaadada,0x306d2431cc431ab6,0x0cb0cd053acbb04d, 
0x3c43c3c5adb4ccdc,0xddcacb44c04dcdcd,0xdc5cbb45435a04c0,0xa3c4dc5bdacad25c, 
0x453dc4d4a44b005c,0xb4c5cb4a31345433,0x3345d5b32b4c53a3,0x366364b220424b23, 
0xdc5a4ddc5bacbc14,0x3dbbc2d549ccbd6c,0xdda45d534dbbda4d,0x1ac4ddaa592b0b4c, 
0xdc9a9a331c4300cb,0xa23c2c4c211cb2d2,0xba0cdbd2c49a5bbc,0xcbebc2c0cbb44129, 
0x413ab4a42ca391d2,0x0cc4b4b4b5c2435d,0xbb32335a2abc2221,0xc344b93b3144cb3b, 
0xab3b5dcd0cb5cdec,0xcc15cdddcac4dabd,0xccdc53c5402bc55b,0x4b45dcd01c5bbbbd, 
0x435b24b9c9a30312,0x5c24b634c4544b32,0x3b3aca94b40eab3c,0xbb34a4913051c0ab, 
0xed44bcbebbcaca45,0x1c4d43cd9bccdb4c,0xd3dc9c4d44d94dba,0x91dca4cda9cd6dbb, 
0x4bd114a449a94b40,0xd4342daab4144402,0x4421c44319c73425,0x2a49053003431123, 
0x644da49124a4344d,0x424235369ad24b3d,0x5b5de3dbb5cc5413,0xbc4aa5344ac5c346, 
0xc4d423b113a44cb4,0xd3032bc501244431,0x0925344441a5b29b,0x11311432412c53b2, 
0xb5ca06bcaaa443b3,0xd45c544bc35244d9,0xc552d244d5520494,0x2b444555d103a444, 
0x9bbb9b9451cccc29,0xd4ca1dcc39ccccbc,0x4aba9b434de5ca03,0xaacaac4111209c4c, 
0x4c32bb1a3cb3c424,0x3a044413c2322d43,0x3c35335b4243b93e,0x12434054344a5449, 
0xb4c4b33bb14c0bc2,0xc1ac0cba393b95e9,0x9bbc4bc3dd4bd2bb,0xb1ccacaa3abbdcdd, 
0xd64c4a0c41bcd43c,0x45542d4c44c4d4b3,0xc45bc544cb643524,0x0be4c4c4a3bc9a41, 
0x1b9d4b11b2d33c2c,0xc2bd43b2c4355aca,0xc533cacbc5ca3a2c,0xa25cb601b2acbab5, 
};

static int bbox_head_multi_level_share_convs_1_0_quant1_threshold[64 * 14] =
{ // torch.Size([64, 14])
-656, -413, -291, -200, -139, -78, -17, 42, 103, 164, 225, 316, 437, 681,
-556, -342, -235, -155, -102, -49, 4, 57, 110, 164, 217, 297, 404, 617,
-656, -413, -292, -201, -140, -79, -19, 41, 102, 162, 223, 314, 435, 678,
-624, -391, -275, -187, -129, -71, -13, 44, 103, 161, 219, 306, 422, 655,
-1050, -670, -480, -337, -242, -147, -52, 42, 137, 232, 327, 470, 660, 1040,
-526, -340, -247, -178, -131, -85, -38, 7, 54, 100, 147, 216, 309, 495,
-947, -609, -440, -313, -229, -144, -60, 24, 108, 193, 277, 404, 573, 910,
-787, -507, -367, -262, -192, -122, -52, 17, 87, 157, 227, 332, 472, 752,
-643, -419, -307, -223, -167, -112, -56, 0, 55, 111, 167, 251, 363, 587,
-836, -540, -393, -282, -208, -134, -60, 13, 87, 160, 234, 345, 493, 788,
-823, -516, -363, -247, -171, -94, -17, 58, 135, 212, 289, 404, 557, 864,
-774, -480, -333, -223, -150, -76, -3, 69, 143, 216, 290, 400, 546, 840,
-823, -525, -375, -264, -189, -114, -40, 34, 108, 183, 258, 370, 519, 817,
-566, -373, -277, -204, -156, -108, -60, -12, 36, 84, 132, 204, 301, 493,
-296, -190, -137, -98, -72, -45, -19, 7, 33, 59, 86, 125, 178, 283,
-821, -531, -386, -278, -205, -133, -60, 11, 83, 156, 228, 337, 482, 771,
-550, -332, -224, -142, -88, -33, 20, 74, 129, 183, 237, 319, 428, 645,
-746, -489, -360, -264, -199, -135, -71, -6, 57, 121, 185, 282, 410, 667,
-608, -395, -289, -209, -155, -102, -49, 4, 57, 110, 163, 243, 350, 563,
-456, -287, -203, -140, -97, -55, -13, 28, 70, 113, 155, 218, 303, 471,
-837, -529, -375, -260, -183, -106, -29, 47, 124, 201, 277, 393, 547, 854,
-464, -284, -195, -128, -83, -38, 6, 51, 96, 140, 185, 253, 342, 522,
-490, -312, -223, -156, -111, -67, -22, 22, 66, 111, 155, 222, 311, 489,
-870, -555, -398, -280, -201, -123, -44, 34, 112, 191, 270, 388, 545, 860,
-459, -287, -201, -136, -93, -50, -7, 35, 78, 121, 164, 228, 314, 487,
-649, -407, -286, -196, -135, -75, -15, 45, 105, 165, 226, 316, 437, 679,
-822, -523, -374, -261, -187, -112, -37, 37, 112, 187, 261, 374, 523, 822,
-161, -99, -68, -44, -29, -13, 1, 17, 33, 48, 64, 87, 119, 181,
-759, -472, -328, -221, -149, -77, -5, 66, 137, 209, 281, 389, 532, 819,
-1006, -631, -443, -302, -208, -114, -20, 72, 166, 260, 354, 495, 683, 1058,
-920, -592, -428, -305, -223, -141, -59, 22, 104, 186, 268, 390, 554, 882,
-886, -567, -407, -287, -207, -128, -48, 31, 111, 191, 270, 390, 550, 869,
-678, -428, -303, -209, -146, -84, -21, 40, 103, 166, 228, 322, 447, 697,
-902, -575, -411, -288, -207, -125, -43, 38, 120, 202, 284, 406, 570, 898,
-580, -362, -253, -171, -117, -62, -8, 45, 100, 154, 209, 290, 399, 617,
-797, -499, -350, -238, -163, -89, -14, 59, 134, 208, 283, 395, 544, 842,
-551, -345, -241, -163, -112, -60, -8, 42, 94, 146, 198, 275, 379, 586,
-772, -489, -348, -242, -172, -101, -30, 39, 110, 181, 251, 357, 499, 781,
-1133, -727, -525, -373, -271, -170, -68, 32, 133, 235, 336, 488, 691, 1097,
-571, -361, -255, -176, -124, -71, -19, 33, 86, 138, 191, 270, 375, 586,
-872, -563, -409, -293, -216, -139, -61, 15, 92, 169, 246, 362, 517, 825,
-861, -563, -413, -301, -227, -152, -77, -3, 71, 146, 220, 332, 482, 780,
-404, -244, -164, -104, -64, -24, 15, 55, 95, 135, 175, 235, 315, 475,
-726, -457, -323, -222, -155, -87, -20, 46, 114, 181, 248, 349, 484, 753,
-599, -363, -245, -156, -97, -38, 20, 79, 138, 197, 256, 344, 462, 698,
-510, -328, -237, -168, -122, -77, -31, 13, 59, 105, 150, 219, 310, 492,
-1077, -674, -472, -321, -220, -119, -18, 82, 182, 283, 384, 535, 737, 1140,
-881, -563, -404, -285, -205, -126, -46, 32, 111, 191, 270, 390, 548, 866,
-825, -507, -348, -229, -149, -70, 9, 88, 167, 247, 326, 446, 605, 923,
-822, -532, -386, -277, -205, -132, -59, 12, 85, 158, 231, 340, 485, 776,
-540, -353, -259, -189, -143, -96, -49, -3, 43, 90, 136, 206, 300, 486,
-567, -355, -249, -170, -117, -64, -11, 41, 94, 147, 200, 279, 385, 597,
-856, -550, -396, -282, -205, -128, -52, 24, 101, 177, 254, 369, 522, 829,
-648, -408, -289, -199, -139, -79, -19, 40, 99, 159, 219, 309, 428, 668,
-443, -306, -237, -186, -151, -117, -83, -48, -14, 19, 53, 105, 173, 311,
-722, -449, -313, -211, -142, -74, -6, 61, 129, 197, 266, 368, 504, 777,
-855, -541, -384, -266, -188, -109, -31, 47, 125, 204, 282, 400, 557, 871,
-627, -391, -274, -185, -126, -67, -8, 50, 108, 167, 226, 315, 433, 668,
-796, -496, -346, -234, -159, -83, -8, 66, 141, 216, 291, 403, 553, 854,
-859, -554, -402, -288, -212, -136, -59, 16, 92, 168, 244, 358, 511, 815,
-549, -341, -237, -159, -107, -55, -3, 48, 100, 152, 204, 282, 386, 595,
-811, -524, -380, -272, -200, -128, -56, 15, 87, 159, 230, 338, 482, 770,
-1030, -650, -461, -318, -223, -128, -33, 61, 156, 251, 345, 488, 678, 1058,
-840, -534, -382, -267, -191, -115, -38, 37, 113, 190, 266, 380, 533, 838,
};

static uint64_t bbox_head_multi_level_share_convs_1_0_conv2_weight[64 * 9] =
{ // torch.Size([64, 3, 3, 1])
0x9, 0xc, 0x1, 0xb, 0xc, 0x9, 0xb, 0xc, 0x9, 
0xc, 0xc, 0x3, 0x4, 0xe, 0x5, 0x3, 0xd, 0x4, 
0xe, 0xa, 0x3, 0xd, 0x1, 0x4, 0xd, 0xc, 0xa, 
0x1, 0xb, 0xe, 0x2, 0xb, 0xe, 0x4, 0x4, 0xb, 
0xb, 0x9, 0x6, 0xb, 0x5, 0x5, 0xd, 0x3, 0x4, 
0x5, 0x6, 0x5, 0x3, 0x4, 0x4, 0xc, 0xa, 0xb, 
0xc, 0xb, 0x9, 0xd, 0xc, 0xb, 0xb, 0xb, 0xd, 
0x6, 0x4, 0xb, 0x5, 0x4, 0x9, 0x5, 0x4, 0x9, 
0xb, 0xd, 0xc, 0xb, 0x5, 0xc, 0x4, 0x6, 0x4, 
0x4, 0x2, 0x2, 0x5, 0xc, 0x4, 0x4, 0xb, 0x4, 
0xc, 0x3, 0x9, 0xc, 0xe, 0xd, 0x3, 0x4, 0x9, 
0x3, 0xc, 0xd, 0x4, 0xc, 0xd, 0x2, 0xc, 0xd, 
0xc, 0xd, 0xa, 0xc, 0xd, 0xa, 0xb, 0xc, 0x1, 
0xc, 0x3, 0xa, 0xd, 0x6, 0x3, 0xa, 0xc, 0x2, 
0x0, 0x2, 0xd, 0xd, 0xc, 0x4, 0x4, 0x6, 0x3, 
0x9, 0xa, 0x3, 0x3, 0x5, 0x6, 0xc, 0xc, 0x4, 
0x3, 0x4, 0x0, 0xd, 0xe, 0x3, 0x4, 0xb, 0xc, 
0x1, 0xb, 0xb, 0x3, 0x5, 0x3, 0x4, 0x5, 0x5, 
0x4, 0xc, 0xa, 0x6, 0xb, 0x9, 0x6, 0x4, 0xa, 
0x1, 0x1, 0x4, 0xe, 0x5, 0xc, 0xd, 0x3, 0x2, 
0xd, 0xe, 0xe, 0x2, 0x4, 0xd, 0x4, 0x4, 0x0, 
0x4, 0xa, 0xc, 0x4, 0xd, 0xb, 0x4, 0xe, 0x6, 
0xa, 0x3, 0x9, 0x4, 0x5, 0xd, 0x4, 0xc, 0xe, 
0x3, 0x3, 0x5, 0x5, 0x4, 0x5, 0x4, 0xa, 0xb, 
0xb, 0x2, 0x2, 0x2, 0xf, 0x4, 0x4, 0xa, 0xb, 
0xc, 0x3, 0xa, 0xc, 0x3, 0x3, 0xc, 0xd, 0x1, 
0x6, 0x4, 0xd, 0x5, 0x6, 0x3, 0x2, 0x4, 0xc, 
0xd, 0xe, 0x1, 0x3, 0x6, 0x1, 0xb, 0x3, 0x3, 
0x3, 0xd, 0x3, 0xa, 0xc, 0x0, 0x0, 0xd, 0x2, 
0xd, 0xb, 0x3, 0xd, 0x1, 0x3, 0xd, 0xc, 0xa, 
0xb, 0xa, 0x5, 0x3, 0x5, 0x5, 0x5, 0x4, 0x3, 
0x1, 0x4, 0xa, 0x3, 0x5, 0x0, 0xa, 0x4, 0x2, 
0x5, 0x4, 0xd, 0x6, 0x4, 0xb, 0x4, 0x5, 0xa, 
0xc, 0x0, 0xb, 0xd, 0x3, 0xd, 0xc, 0xb, 0xb, 
0x2, 0x5, 0xb, 0x2, 0x6, 0x3, 0xe, 0x2, 0x4, 
0xc, 0xf, 0xc, 0x1, 0x2, 0x5, 0x2, 0xc, 0x3, 
0x3, 0x4, 0x1, 0x3, 0xc, 0xe, 0xa, 0xc, 0xb, 
0xc, 0x9, 0x3, 0x0, 0xe, 0x4, 0xb, 0xb, 0x1, 
0xd, 0xd, 0xd, 0xb, 0xb, 0x0, 0x4, 0x3, 0x4, 
0x0, 0x4, 0xb, 0xa, 0x7, 0xb, 0x3, 0xc, 0xc, 
0x5, 0x4, 0x4, 0x3, 0x4, 0x1, 0x1, 0x2, 0x1, 
0x5, 0x5, 0x5, 0x4, 0x2, 0x3, 0x0, 0xb, 0x2, 
0x3, 0xd, 0x4, 0x0, 0xe, 0x0, 0x2, 0xb, 0x2, 
0xd, 0xc, 0xd, 0xc, 0xa, 0xc, 0xc, 0x0, 0xb, 
0x3, 0xe, 0x1, 0x3, 0x4, 0x0, 0xb, 0xc, 0xa, 
0xd, 0xc, 0xb, 0xb, 0xc, 0xb, 0x5, 0x5, 0x4, 
0x5, 0x6, 0x6, 0x5, 0x1, 0x2, 0x4, 0xb, 0xb, 
0x4, 0xc, 0xb, 0x4, 0x4, 0x5, 0xa, 0x5, 0x6, 
0xb, 0xe, 0xd, 0x3, 0xd, 0xa, 0xc, 0x5, 0xb, 
0xb, 0x9, 0x2, 0xc, 0x3, 0x4, 0x3, 0x5, 0x7, 
0xc, 0x4, 0xa, 0x1, 0x6, 0xc, 0x3, 0xc, 0x3, 
0xd, 0xc, 0x3, 0xd, 0x4, 0x2, 0xa, 0x5, 0x4, 
0xc, 0x2, 0x4, 0x2, 0x5, 0x5, 0x3, 0x5, 0x4, 
0xc, 0xd, 0x3, 0xd, 0xd, 0x4, 0xc, 0x1, 0x4, 
0x4, 0xd, 0xa, 0x3, 0x7, 0xd, 0x5, 0x5, 0x3, 
0x2, 0xa, 0xc, 0x4, 0xc, 0xe, 0x9, 0xb, 0xc, 
0x4, 0x4, 0xe, 0x4, 0x4, 0xe, 0x0, 0xc, 0xd, 
0xc, 0xd, 0x0, 0x9, 0x2, 0xb, 0x0, 0xc, 0xb, 
0x5, 0x5, 0xc, 0xc, 0xd, 0xc, 0xd, 0xe, 0x5, 
0x3, 0x4, 0x4, 0x4, 0x3, 0x3, 0x4, 0x4, 0x3, 
0x5, 0xc, 0xc, 0xd, 0xe, 0x2, 0x3, 0x4, 0x4, 
0xc, 0xb, 0x4, 0x4, 0x5, 0x5, 0x5, 0x5, 0x4, 
0xd, 0xc, 0x0, 0xe, 0x6, 0xc, 0xb, 0x2, 0x5, 
0x4, 0x4, 0x2, 0x4, 0x5, 0x3, 0x3, 0x5, 0x3, 
};

static int bbox_head_multi_level_share_convs_1_0_relu2_threshold[64 * 7] =
{ // torch.Size([64, 7])
4, 17, 30, 43, 62, 88, 139,
7, 40, 72, 105, 153, 218, 348,
17, 48, 79, 110, 157, 219, 344,
13, 53, 92, 132, 191, 270, 427,
29, 96, 163, 230, 331, 466, 735,
2, 35, 68, 100, 149, 215, 346,
-3, 33, 71, 109, 165, 240, 390,
17, 56, 95, 133, 191, 269, 423,
13, 42, 70, 99, 142, 199, 313,
0, 22, 44, 66, 100, 144, 233,
5, 41, 77, 113, 167, 239, 384,
9, 42, 74, 107, 156, 221, 352,
-5, 53, 113, 172, 262, 381, 619,
18, 49, 81, 112, 160, 223, 349,
10, 53, 97, 141, 206, 294, 469,
31, 98, 166, 234, 335, 470, 740,
12, 41, 70, 99, 143, 201, 317,
11, 40, 68, 97, 140, 197, 311,
10, 34, 58, 82, 118, 165, 261,
11, 45, 78, 111, 161, 227, 360,
6, 75, 144, 213, 316, 454, 729,
11, 40, 69, 98, 141, 199, 315,
8, 56, 103, 150, 221, 316, 505,
8, 51, 94, 137, 202, 288, 460,
8, 56, 104, 151, 223, 319, 510,
5, 33, 61, 89, 130, 186, 297,
28, 65, 102, 139, 195, 269, 417,
33, 152, 271, 390, 568, 806, 1283,
8, 24, 40, 56, 80, 113, 177,
13, 46, 80, 113, 162, 228, 361,
13, 55, 98, 141, 205, 290, 461,
3, 20, 36, 53, 78, 111, 178,
21, 54, 88, 121, 171, 238, 372,
-5, 59, 124, 189, 286, 415, 674,
22, 59, 97, 134, 190, 265, 415,
21, 84, 148, 211, 306, 433, 686,
11, 45, 80, 114, 165, 234, 371,
6, 27, 48, 69, 101, 143, 228,
-1, 11, 25, 38, 58, 84, 137,
4, 49, 94, 139, 207, 297, 477,
6, 33, 61, 88, 129, 184, 293,
12, 43, 75, 107, 155, 218, 345,
23, 60, 96, 132, 187, 260, 405,
10, 44, 78, 112, 162, 230, 364,
6, 27, 48, 69, 101, 143, 227,
7, 43, 79, 115, 169, 241, 386,
-5, 28, 62, 97, 148, 217, 354,
11, 60, 109, 158, 231, 329, 525,
21, 75, 128, 181, 261, 368, 581,
16, 53, 90, 127, 183, 257, 406,
18, 47, 76, 105, 148, 205, 320,
7, 29, 52, 75, 109, 155, 246,
7, 74, 140, 207, 307, 440, 707,
0, 23, 46, 68, 103, 148, 240,
79, 201, 323, 445, 628, 873, 1361,
2, 37, 72, 107, 160, 231, 371,
24, 77, 130, 183, 262, 368, 580,
9, 29, 48, 67, 96, 134, 211,
37, 93, 149, 205, 289, 401, 625,
13, 36, 58, 81, 115, 160, 251,
3, 25, 47, 69, 102, 145, 233,
13, 53, 94, 134, 195, 276, 438,
25, 75, 126, 176, 252, 353, 555,
-9, 2, 14, 26, 45, 69, 118,
};

static uint64_t bbox_head_multi_level_share_convs_2_0_conv1_weight[64 * 1*4] =
{ // torch.Size([64, 1, 1, 64])
0x9db433c3d3cdcacc,0xa4cbda3ac2b1b323,0xdbbcb3cdb95c0dbd,0x03aabcd3bbcc45ba, 
0x5430c4e0440ed2da,0xd3dde4a5d333b1c4,0x05b4d4dc9acdd5d4,0xc4ead34bcc02d5d3, 
0xa90ccc0c4c254cbd,0xa33d4d9c1cbb5e33,0x2223bcc4cee1324b,0xad493cf9cdc4da40, 
0xaa1bc431ba934424,0xcb4234b14940ecbb,0x53441a1991c4b494,0xc24a21103143425c, 
0x2dbcb231dc3dbccd,0x12cbd4c0babc34ca,0xdc2ab9bcb3bbbaab,0x0b02c4c2544bc3b3, 
0x3db2dccabe23529c,0xcc4d5c9bb2b92e92,0x34c2a0bccd3ba424,0x9a0bbb2addd0d3a4, 
0xbba34cb3de49acc2,0xd9ac5ddb2b4c4dd4,0xd34b3bc1cbbc1ccb,0xbd3aac44ad2bceaa, 
0x9c3a14e256a01401,0x203a33433325b241,0x5291334b4241a09b,0xb5d33bb9db4233bb, 
0xc4a133939e44b4ad,0x34ad4cd25b5ccdde,0x94434dddcdd31dee,0x2dc24ac49cccd3bb, 
0x1d3cb00c50364415,0x142324414bc2a2b9,0x4940abb5a441143b,0x9cc3242d4540c9a3, 
0xdd3abc4d6535a412,0x53b4344a52da9a3c,0x4b3e5b30bb55454c,0x1643444b3c3b234b, 
0xb53944545caee3b5,0x54e4d3cc4cdcc55b,0x5c3a3dcdd5d0dddd,0xbb4443bc355dc59b, 
0x0c1cc3d5d3bc39bd,0xd35dc4d1dcd4dcd5,0x5acecdddcced43cc,0xdb2cc240b4b3d34c, 
0x4c433a3264243631,0x502a544249b5bb3a,0x54493a442b3a243b,0x35c04922d44304bb, 
0xacb1baa5cbc94c24,0xab35c251c344d454,0x6bbe534a34551c55,0xb3b30329344b336b, 
0xd3142bb41c3dd63e,0x9b9d3bb33bdb4c3c,0x45249d3bd1dbbbc9,0x23e3323bc05bd3cb, 
0xae42b1ca440cc43a,0x3114b3a3b3342a32,0xd115c25a3cbc934b,0x44dab351bccbb4d0, 
0x4cc23554443505c3,0x4bdc4b4acc442343,0xb9042bd5d2cc04c9,0xd4bbdcca42535531, 
0xadadac91dd4cbccb,0xc45cd0d2149accda,0xd5442cdcbc0c9caa,0xcdd5dab25aa4cd44, 
0x63b5dc4a4e355dcb,0xa4343d4cc3bcecc1,0x9c5c3b25ddc242ac,0xdd2dbcd3cdc3535d, 
0x2d4bbcd2c4dc30ad,0xc00ccb4ad1359cb2,0x9bdbc3cbdd3cbc49,0xb5dcd93ce0c5ecb3, 
0xb3b5bc4c9acb32a4,0xc0446c40c323ca52,0x33aa9559a343b640,0x25bcc92aa43b5b22, 
0xc5b31cdccc9bbdb9,0xc3acccabc23c5bb3,0xdcdcd30b332bb2b2,0x2d49cc31bccbbbc3, 
0x2404bc4c54a99333,0x4a3452c333090cbc,0x5a4b4442b9439523,0x35cc445a414a140c, 
0xd9c31c54dc24cdb5,0xb4b55ccac3030c3c,0xdd3bb4444434ac32,0x3b5942304abb4e4b, 
0xc9bbabd9cc9bb1a9,0x2b4bbacc39b4ba2b,0xbacb4c0c3a931c2c,0xcbb231ba9c904caa, 
0xc43d4cb2443bd54c,0x5c3cd6043bbc3443,0x44c50c4b425bbd03,0x4cd4434bc949ddb3, 
0xddc2bb63e34449c1,0x33445b5b52b4c45d,0x4c2b534914453c54,0x455a35aa445b3d52, 
0xb9240b434bb32434,0xa93b53114114ac0b,0x434232342bba2303,0x132a3139ca33a23b, 
0x4c930b2343324530,0x4a4b44394ac2a002,0x53414c33bab3392a,0x24c34bcbc233a341, 
0x33c44d33ce4d94ce,0xcd235ccbbcbc4c45,0x34b5dcdcdcdc25cc,0x32c9cb142c0a04c2, 
0xd3b4a9aa3b92bdaa,0xb1c32c40b3cb20cc,0xdcccc4b3915aaca1,0x9312bb09bccb21b1, 
0xaa4ac2c343a34433,0x30534b4c9cbb9d33,0x04b12ab03cc435ba,0xb4010c20d2d44bbb, 
0xab234d34eccd1425,0x3b445dbabb9ab495,0xc459493d45439552,0x23bcc253555d33c3, 
0xbcababcbcbbabb93,0xaa3bbbab33b4ba3c,0xcaccac3a2bb33b1c,0xcbb092a0abab3caa, 
0xdc3b4943ac943ebb,0xd9cc2db124bc921d,0xedcc0523ccbcbac3,0xb002cb42bdcb4dc9, 
0x3c3d13d92431cd3d,0x931dd541ac0334d9,0x3cca94942c22adcb,0xb0c341c3cbc4dd1a, 
0x0b0cd9b4cd1ac0bc,0xc4123b5b12131cb0,0xc99abda9da292c2b,0xbcb4592b3abc2b93, 
0xb5bd4c55fdcccdc5,0x14a5b35cd4c4b354,0xdc45b21255559d53,0x3d64c4c3546b4e59, 
0x3093454544343402,0x3cdb4a93bb5c4535,0x5adbb2e4d453c315,0xbc33a49cc464b554, 
0xb103a34444caa4c3,0xa49bbb4a3c442a33,0xab124bd2c4c33331,0xc443924a43433434, 
0x4134329432a92319,0x903b31292a333ba3,0x3233213312a92910,0xa9303a90b222c123, 
0x333300923212230b,0x1a1a3332a14a1cb3,0x32421421342b9200,0x2240319a9211d324, 
0xb5234bbb5993254c,0x3c224bb24bcc3911,0x53b3133442acc546,0xabcb2b543d440dbb, 
0xabb23bccc42ddccd,0x3adbd9c4ca1da4b3,0xd3acb32c05699b1b,0x3440c4cb544bc4c3, 
0x45b4c34b52342c33,0x3c33413434349419,0x543329441b3b2234,0xaa3443335d455234, 
0x5c3b324433313433,0x334013a333433334,0x3334bc3ac9403134,0x3bc333aaa044c254, 
0x3b04433449239423,0x2329424042343b33,0x34443a34abbb30a4,0x22a34aa1c243bc43, 
0x65c4354324acb1b5,0xcbd5b913154c3535,0xc337444a554a16c5,0xba33c960cd335624, 
0x53c555645c9ccbcd,0x14cc5bcc5cddedcd,0x2c4f6d5cbcdb0bde,0xcac3aa943b2de34a, 
0x453354c44922321c,0x3a213330ab4c3bd4,0x443514c43322c415,0x434022a1a34315a0, 
0xec3cccd1dbbca19d,0xb33d2b9b4cc5cd99,0x3ccd3d4cddc3135a,0xa5dcc35ac3a1ddac, 
0xd532e0cdc2adb339,0xcc3bc4a9bcbd4cdd,0x43bcbb3e255da9d2,0xdc59a3525cdcdccc, 
0x5dc3b49b3d156e94,0xc45b4dcc4ab49db5,0x5b4353555bc4154c,0x3bcb9deacce4d423, 
0xdd44cc5b43254234,0x0c4c52c14c545d3c,0xed95a5464443b553,0x5354ab336cd3cdc4, 
0x4d32cbbd43033a9b,0xc351bab3b3341c91,0xdca5ba494ccc334d,0x45db3cb23bd4cbdb, 
0x3cac4c5ca103c455,0x5bb51db354344353,0xea46435bba65094e,0x54234443344b45d2, 
0x391222332b12241a,0xc93b230930339c0a,0x43342b33b1c22ab4,0xba4231212134ca42, 
0x4b33d45cdd345cd4,0xccb44cb3cb0b24c9,0xcb4b33dcb559b52b,0x935cc1bb52b25649, 
0xc495bec4ce9d14cd,0xed3c5dc9a90b2dc2,0x24314abcc1cdb5c0,0x94cdccc3d32ac2c3, 
0xdbc0ac4b053cc6bd,0x5b52b544b5a6343c,0xdb24b55c4a442c5b,0x46d4344245442cb4, 
0xdda50eb39cba3343,0xdb5369a2b4c2abc4,0x323a34499b34c5bb,0x25b0a540b43b33c1, 
0x3dbc2553b0435422,0x1c54b4b0bb54d304,0x6445bba433d4b344,0x9a3bb34b1244c25c, 
0x541544db25cdcedc,0xdcdddb59da5d0bc4,0xcbb5c4e4cccdd6d5,0xc59cda6aedd414c3, 
};

static int bbox_head_multi_level_share_convs_2_0_quant1_threshold[64 * 14] =
{ // torch.Size([64, 14])
-1063, -691, -505, -366, -273, -180, -87, 4, 97, 190, 283, 422, 608, 980,
-1325, -860, -627, -453, -337, -220, -104, 11, 128, 244, 360, 535, 767, 1232,
-1358, -886, -650, -473, -355, -237, -118, 0, 117, 235, 353, 530, 766, 1239,
-727, -454, -317, -215, -146, -78, -10, 58, 126, 194, 263, 365, 502, 776,
-1047, -682, -499, -362, -271, -179, -88, 2, 94, 185, 277, 414, 596, 962,
-1113, -725, -531, -385, -288, -191, -94, 2, 99, 196, 293, 439, 633, 1021,
-961, -628, -461, -336, -253, -170, -86, -3, 79, 162, 246, 371, 537, 871,
-831, -517, -360, -243, -165, -86, -8, 69, 148, 226, 305, 422, 579, 892,
-980, -639, -468, -340, -255, -170, -85, 0, 85, 170, 255, 383, 554, 895,
-907, -564, -393, -264, -178, -92, -7, 78, 164, 250, 335, 464, 636, 979,
-979, -611, -427, -289, -196, -104, -12, 79, 171, 263, 355, 493, 677, 1046,
-1099, -709, -514, -368, -270, -173, -75, 21, 119, 216, 314, 460, 655, 1045,
-1334, -875, -645, -473, -358, -243, -128, -14, 100, 215, 330, 502, 732, 1191,
-1422, -884, -615, -413, -278, -143, -9, 125, 259, 394, 529, 731, 1000, 1538,
-954, -592, -412, -276, -186, -95, -5, 84, 175, 265, 355, 491, 672, 1033,
-1260, -815, -592, -425, -314, -202, -91, 19, 131, 242, 354, 521, 743, 1189,
-1317, -833, -592, -410, -289, -168, -47, 72, 193, 314, 435, 617, 858, 1342,
-908, -580, -415, -292, -210, -128, -46, 36, 118, 200, 282, 405, 570, 898,
-880, -573, -420, -305, -228, -151, -74, 1, 78, 155, 231, 347, 500, 807,
-1207, -777, -562, -401, -294, -186, -79, 28, 135, 242, 350, 511, 726, 1156,
-992, -651, -480, -353, -268, -182, -97, -12, 72, 157, 242, 370, 541, 881,
-797, -497, -347, -234, -159, -84, -9, 65, 140, 215, 290, 402, 552, 852,
-1238, -807, -592, -430, -323, -215, -107, 0, 107, 215, 322, 484, 699, 1130,
-818, -509, -354, -238, -161, -84, -6, 70, 147, 225, 302, 418, 573, 882,
-256, -158, -109, -72, -47, -23, 1, 26, 50, 75, 99, 136, 185, 284,
-577, -374, -273, -197, -147, -96, -46, 4, 54, 105, 156, 231, 333, 535,
-1047, -661, -468, -323, -226, -130, -33, 62, 159, 255, 352, 497, 690, 1076,
-1064, -662, -462, -311, -211, -110, -10, 89, 190, 290, 390, 541, 741, 1143,
-988, -618, -433, -295, -202, -110, -17, 74, 166, 259, 351, 490, 674, 1044,
-1471, -925, -651, -446, -310, -173, -37, 99, 236, 372, 509, 714, 987, 1534,
-1126, -733, -536, -389, -290, -192, -94, 4, 102, 200, 299, 446, 643, 1036,
-1046, -676, -490, -351, -259, -166, -73, 18, 111, 204, 296, 435, 621, 991,
-777, -492, -350, -244, -173, -102, -31, 39, 110, 182, 253, 359, 501, 785,
-1047, -657, -462, -316, -218, -121, -23, 74, 171, 269, 366, 512, 708, 1098,
-620, -402, -293, -211, -157, -102, -48, 6, 60, 115, 169, 251, 360, 577,
-1394, -914, -674, -494, -374, -254, -134, -14, 105, 225, 345, 526, 766, 1246,
-808, -522, -379, -271, -199, -128, -56, 14, 86, 158, 229, 337, 480, 767,
-589, -382, -278, -200, -149, -97, -45, 6, 58, 109, 161, 239, 342, 550,
-357, -219, -150, -98, -63, -29, 5, 39, 74, 108, 143, 195, 264, 402,
-1053, -669, -476, -332, -236, -140, -43, 52, 148, 244, 340, 485, 677, 1062,
-919, -583, -414, -288, -204, -120, -36, 48, 132, 216, 300, 426, 595, 931,
-955, -602, -426, -293, -205, -117, -29, 59, 147, 235, 323, 456, 632, 985,
-748, -471, -333, -229, -160, -90, -21, 47, 116, 185, 255, 358, 497, 773,
-1071, -678, -482, -335, -237, -139, -41, 56, 155, 253, 351, 498, 694, 1087,
-1235, -798, -579, -415, -306, -197, -88, 20, 130, 239, 348, 512, 730, 1167,
-820, -506, -350, -232, -154, -76, 2, 80, 158, 236, 315, 432, 589, 902,
-945, -590, -413, -280, -191, -102, -13, 74, 163, 252, 341, 474, 651, 1006,
-1095, -685, -480, -326, -224, -121, -19, 83, 185, 288, 391, 544, 749, 1160,
-1007, -624, -433, -289, -194, -98, -2, 92, 188, 284, 380, 523, 714, 1097,
-1306, -841, -609, -434, -318, -202, -86, 30, 146, 262, 378, 553, 785, 1250,
-874, -548, -385, -262, -181, -99, -18, 63, 144, 226, 307, 430, 593, 919,
-1010, -660, -485, -353, -266, -178, -90, -3, 84, 172, 259, 391, 566, 917,
-1296, -838, -610, -439, -324, -210, -96, 18, 132, 246, 360, 532, 760, 1217,
-1244, -780, -548, -374, -258, -142, -26, 90, 206, 322, 438, 612, 844, 1308,
-1240, -776, -544, -370, -254, -138, -22, 93, 209, 325, 441, 615, 847, 1310,
-1355, -856, -606, -419, -294, -169, -44, 80, 204, 329, 454, 641, 891, 1390,
-594, -358, -241, -152, -93, -34, 24, 82, 141, 200, 259, 348, 465, 701,
-945, -596, -422, -291, -204, -117, -29, 57, 144, 231, 319, 449, 624, 973,
-1039, -664, -476, -335, -242, -148, -54, 39, 132, 226, 320, 461, 648, 1023,
-1023, -668, -490, -357, -269, -180, -91, -2, 86, 174, 263, 396, 574, 929,
-1286, -804, -563, -383, -262, -142, -21, 98, 219, 339, 459, 640, 881, 1363,
-751, -471, -330, -225, -155, -85, -15, 54, 124, 194, 264, 370, 510, 790,
-1167, -732, -514, -351, -242, -134, -25, 83, 191, 300, 409, 572, 790, 1225,
-1358, -882, -643, -464, -345, -226, -106, 12, 131, 250, 370, 548, 787, 1264,
};

static uint64_t bbox_head_multi_level_share_convs_2_0_conv2_weight[64 * 9] =
{ // torch.Size([64, 3, 3, 1])
0x4, 0x4, 0xb, 0x3, 0x5, 0x2, 0xb, 0x4, 0x3, 
0x3, 0x5, 0x6, 0xc, 0xd, 0x6, 0x3, 0xc, 0x4, 
0xa, 0x2, 0x6, 0x0, 0x4, 0x5, 0x3, 0x3, 0x5, 
0x0, 0x4, 0x5, 0xd, 0xd, 0xd, 0x0, 0xb, 0xb, 
0xc, 0x5, 0x3, 0x5, 0x5, 0xb, 0x4, 0x1, 0xc, 
0xc, 0x0, 0x3, 0x3, 0x3, 0x5, 0x2, 0x5, 0x6, 
0x2, 0x5, 0xb, 0xb, 0x5, 0x5, 0xb, 0x3, 0x5, 
0x2, 0xc, 0xd, 0x1, 0xd, 0xd, 0x5, 0x3, 0x4, 
0x5, 0x5, 0x6, 0x3, 0x2, 0x3, 0x1, 0xc, 0x3, 
0x3, 0xd, 0x3, 0xd, 0xc, 0x3, 0xb, 0x1, 0x4, 
0x2, 0x3, 0x3, 0xc, 0x5, 0xa, 0xb, 0xe, 0xe, 
0xe, 0xd, 0x1, 0x3, 0xd, 0x5, 0x1, 0xb, 0x7, 
0x5, 0x6, 0x5, 0x3, 0xa, 0xb, 0x3, 0x0, 0xa, 
0xc, 0xb, 0xb, 0x9, 0xd, 0xd, 0x4, 0xb, 0xb, 
0xe, 0xd, 0xd, 0x0, 0x3, 0x2, 0x1, 0x9, 0xc, 
0x5, 0x4, 0xa, 0x4, 0x3, 0x9, 0x6, 0x3, 0x2, 
0x5, 0x2, 0x3, 0x4, 0xc, 0x2, 0x5, 0x3, 0x4, 
0x1, 0x0, 0xc, 0x5, 0x3, 0xb, 0xd, 0xd, 0xd, 
0xc, 0xd, 0x1, 0x5, 0x5, 0x5, 0x5, 0x5, 0x3, 
0xc, 0x4, 0x3, 0xd, 0xb, 0x4, 0xb, 0xe, 0xb, 
0xc, 0x1, 0xa, 0x4, 0x4, 0x4, 0x5, 0x5, 0x5, 
0xd, 0xb, 0xb, 0xd, 0x9, 0x9, 0xb, 0xc, 0x9, 
0xc, 0xa, 0xa, 0x3, 0x4, 0x4, 0x3, 0x5, 0x4, 
0x4, 0xb, 0xb, 0xc, 0xc, 0xb, 0xc, 0xc, 0xb, 
0xc, 0x3, 0x4, 0xd, 0xc, 0x4, 0xe, 0xd, 0x3, 
0xb, 0x4, 0xc, 0x4, 0x5, 0x4, 0xb, 0x3, 0xc, 
0x5, 0xc, 0xb, 0x4, 0x2, 0x3, 0x5, 0x5, 0x4, 
0xd, 0xe, 0xd, 0x1, 0x3, 0xb, 0x1, 0x4, 0x4, 
0xc, 0xb, 0x3, 0xb, 0xc, 0x2, 0xc, 0xc, 0x2, 
0xa, 0xb, 0x2, 0xb, 0xa, 0x3, 0xc, 0xc, 0xb, 
0x6, 0xb, 0x3, 0x5, 0xb, 0x0, 0x5, 0x4, 0x3, 
0xc, 0x9, 0x4, 0xb, 0x5, 0x5, 0x2, 0x4, 0xb, 
0xc, 0xc, 0x4, 0xd, 0xc, 0x3, 0xc, 0x4, 0x5, 
0x3, 0xb, 0xd, 0xa, 0x3, 0xa, 0x4, 0xb, 0xe, 
0xa, 0x3, 0x9, 0x4, 0x5, 0x3, 0xb, 0x2, 0x9, 
0xc, 0x5, 0x3, 0xc, 0x5, 0xb, 0xc, 0x5, 0x4, 
0x4, 0x4, 0xb, 0x3, 0x3, 0x0, 0xb, 0x2, 0x5, 
0x3, 0x4, 0x5, 0x4, 0x4, 0x4, 0xb, 0xd, 0xc, 
0x4, 0x5, 0x1, 0xc, 0xe, 0xd, 0xd, 0xe, 0xd, 
0xd, 0xd, 0xe, 0x3, 0x5, 0x4, 0xc, 0xc, 0xc, 
0xc, 0x4, 0xa, 0xc, 0x3, 0x0, 0xd, 0xb, 0xc, 
0xa, 0xb, 0xb, 0xa, 0xb, 0xb, 0x0, 0x9, 0xb, 
0xa, 0xb, 0xa, 0xa, 0xb, 0xb, 0x9, 0xa, 0x9, 
0x4, 0xa, 0xd, 0x4, 0xb, 0xc, 0x4, 0xa, 0xd, 
0x4, 0xa, 0xd, 0x5, 0x4, 0xd, 0x5, 0x5, 0xc, 
0x4, 0xd, 0xb, 0x3, 0xd, 0xa, 0x4, 0xd, 0xd, 
0xd, 0xd, 0xc, 0x2, 0x3, 0x3, 0xc, 0xa, 0x3, 
0xb, 0x9, 0xb, 0x9, 0xb, 0xc, 0xb, 0xb, 0x9, 
0xd, 0xc, 0xd, 0xa, 0x2, 0xc, 0xc, 0xc, 0xd, 
0x6, 0x5, 0x6, 0x3, 0xa, 0x3, 0xa, 0x4, 0x4, 
0x0, 0xc, 0xb, 0xa, 0xb, 0x0, 0xa, 0xb, 0xc, 
0x4, 0x3, 0x4, 0x3, 0xb, 0x3, 0x5, 0x4, 0x4, 
0x5, 0x2, 0x5, 0x4, 0x1, 0x5, 0x4, 0xb, 0x4, 
0x5, 0x4, 0x6, 0x3, 0xc, 0xb, 0x4, 0x4, 0x6, 
0x5, 0x5, 0x4, 0xc, 0xa, 0x6, 0xb, 0x2, 0x6, 
0x4, 0x4, 0x5, 0x1, 0xb, 0x3, 0x5, 0x3, 0x4, 
0xc, 0xd, 0xe, 0x5, 0x2, 0x9, 0x4, 0x9, 0xc, 
0xc, 0x1, 0x3, 0xc, 0xc, 0xb, 0x1, 0xa, 0xc, 
0xb, 0x1, 0x0, 0xb, 0x3, 0xc, 0xe, 0xd, 0xb, 
0x2, 0xa, 0x5, 0xc, 0x4, 0x5, 0x4, 0x5, 0x2, 
0x4, 0x5, 0x3, 0xd, 0x4, 0x9, 0xe, 0xe, 0x4, 
0x5, 0xd, 0xb, 0x1, 0xc, 0x2, 0xd, 0xc, 0x4, 
0xd, 0xd, 0xd, 0xd, 0xc, 0xb, 0x3, 0x5, 0xa, 
0x6, 0x9, 0x4, 0x4, 0x6, 0x5, 0x1, 0x4, 0xc, 
};

static int bbox_head_multi_level_share_convs_2_0_relu2_threshold[64 * 7] =
{ // torch.Size([64, 7])
11, 38, 66, 94, 135, 190, 301,
42, 104, 167, 229, 322, 447, 696,
21, 61, 102, 143, 205, 286, 450,
11, 31, 51, 71, 101, 141, 222,
12, 40, 68, 96, 138, 195, 307,
18, 59, 101, 143, 205, 289, 456,
10, 44, 78, 113, 164, 232, 369,
11, 45, 78, 112, 162, 229, 364,
18, 55, 91, 128, 183, 256, 402,
19, 51, 83, 115, 163, 226, 354,
37, 90, 143, 195, 275, 381, 592,
60, 163, 266, 369, 524, 730, 1142,
21, 62, 102, 143, 204, 285, 448,
9, 41, 72, 104, 152, 216, 343,
20, 52, 83, 115, 162, 226, 352,
21, 65, 110, 154, 221, 311, 489,
6, 31, 56, 81, 118, 168, 268,
4, 65, 127, 188, 281, 403, 649,
13, 54, 95, 136, 197, 278, 441,
17, 47, 78, 108, 154, 215, 337,
13, 52, 91, 130, 188, 266, 422,
13, 43, 73, 102, 147, 207, 326,
11, 35, 60, 84, 120, 169, 267,
13, 40, 67, 95, 136, 190, 299,
60, 221, 382, 544, 786, 1108, 1754,
12, 34, 55, 76, 108, 151, 237,
9, 42, 75, 107, 156, 221, 352,
34, 77, 121, 164, 229, 316, 489,
9, 32, 54, 77, 111, 157, 248,
9, 35, 60, 86, 124, 176, 278,
28, 78, 129, 180, 255, 357, 559,
11, 38, 65, 93, 134, 188, 297,
12, 38, 64, 90, 130, 182, 287,
21, 60, 99, 138, 196, 274, 430,
9, 27, 45, 62, 89, 125, 197,
17, 36, 55, 74, 102, 140, 216,
10, 30, 49, 69, 98, 138, 216,
10, 45, 80, 116, 169, 239, 381,
127, 307, 488, 669, 939, 1300, 2023,
7, 74, 142, 209, 310, 445, 714,
9, 49, 89, 129, 189, 270, 430,
5, 19, 33, 47, 67, 95, 150,
3, 13, 23, 33, 48, 67, 107,
10, 47, 83, 119, 174, 246, 392,
15, 47, 78, 109, 155, 217, 342,
11, 47, 82, 118, 171, 243, 385,
9, 42, 75, 109, 158, 225, 358,
7, 28, 49, 70, 102, 144, 228,
20, 49, 77, 106, 148, 205, 320,
18, 74, 130, 186, 270, 382, 607,
6, 22, 37, 53, 77, 108, 172,
13, 35, 57, 79, 112, 155, 243,
11, 45, 78, 112, 163, 230, 365,
2, 40, 77, 114, 169, 243, 392,
20, 62, 104, 146, 209, 293, 461,
0, 24, 49, 74, 110, 160, 258,
36, 115, 194, 273, 391, 549, 865,
9, 34, 59, 84, 121, 171, 272,
10, 48, 87, 125, 182, 258, 411,
21, 60, 98, 136, 194, 271, 424,
36, 95, 153, 212, 300, 417, 651,
16, 52, 88, 124, 178, 251, 395,
13, 61, 110, 158, 230, 327, 520,
47, 139, 232, 324, 462, 647, 1016,
};

static uint64_t bbox_head_multi_level_cls_0_conv1_weight[1 * 1*4] =
{ // torch.Size([1, 1, 1, 64])
0x05cbfef01d95ed6d,0xe4d457d4ddff6b20,0xcd4dfd1ed45ccce6,0x4d4dcb44e5c4a5e3, 
};

static int bbox_head_multi_level_cls_0_quant1_threshold[1 * 14] =
{ // torch.Size([1, 14])
-3638, -2344, -1697, -1212, -888, -565, -242, 81, 404, 728, 1051, 1537, 2184, 3478,
};

static uint64_t bbox_head_multi_level_cls_0_conv2_weight[1 * 9] =
{ // torch.Size([1, 3, 3, 1])
0xd, 0xf, 0xd, 0xd, 0xf, 0xd, 0xd, 0xe, 0xc, 
};

static int bbox_head_multi_level_cls_0_quant2_threshold[1 * 14] =
{ // torch.Size([1, 14])
-9335, -5951, -4258, -2989, -2143, -1296, -450, 395, 1241, 2087, 2934, 4203, 5895, 9280,
};

static uint64_t bbox_head_multi_level_cls_1_conv1_weight[1 * 1*4] =
{ // torch.Size([1, 1, 1, 64])
0x5f3d5d4c3d17deed,0xee25b63dfc65ce3e,0x6ee5ee69c4ddec5b,0xdce4b55d4dcedb56, 
};

static int bbox_head_multi_level_cls_1_quant1_threshold[1 * 14] =
{ // torch.Size([1, 14])
-4037, -2580, -1852, -1306, -941, -577, -213, 150, 514, 879, 1243, 1789, 2518, 3974,
};

static uint64_t bbox_head_multi_level_cls_1_conv2_weight[1 * 9] =
{ // torch.Size([1, 3, 3, 1])
0xc, 0xe, 0xd, 0xb, 0xf, 0xd, 0xd, 0xf, 0xd, 
};

static int bbox_head_multi_level_cls_1_quant2_threshold[1 * 14] =
{ // torch.Size([1, 14])
-8131, -5177, -3701, -2593, -1855, -1116, -378, 359, 1098, 1836, 2575, 3682, 5159, 8112,
};

static uint64_t bbox_head_multi_level_cls_2_conv1_weight[1 * 1*4] =
{ // torch.Size([1, 1, 1, 64])
0x22339bb22333ae33,0x2cb30fdbc3a92e93,0x343a32d2d29251c1,0x129143a139232a4c, 
};

static int bbox_head_multi_level_cls_2_quant1_threshold[1 * 14] =
{ // torch.Size([1, 14])
-848, -543, -391, -277, -200, -124, -48, 27, 104, 180, 256, 371, 523, 828,
};

static uint64_t bbox_head_multi_level_cls_2_conv2_weight[1 * 9] =
{ // torch.Size([1, 3, 3, 1])
0x5, 0x6, 0x6, 0x7, 0x7, 0x7, 0x6, 0x6, 0x7, 
};

static int bbox_head_multi_level_cls_2_quant2_threshold[1 * 14] =
{ // torch.Size([1, 14])
-13830, -8808, -6296, -4413, -3157, -1902, -646, 608, 1864, 3119, 4375, 6258, 8770, 13792,
};

static uint64_t bbox_head_multi_level_bbox_0_conv1_weight[4 * 1*4] =
{ // torch.Size([4, 1, 1, 64])
0x4e45d3b5c0dddaa4,0xa5b93235143aaacd,0xd5ddbed633ca49bb,0xca4540bda3d45db4, 
0xbcca422d53124d45,0x3c4c3ac3242ace4c,0x59543c01545d3dcb,0xd5b55ab1a19bd092, 
0xed4bbd34cad3bbeb,0x24bece222422eab0,0x3955d535b3ca4ace,0x313bbb43be45ada9, 
0xee4abb25e1a4bceb,0x44ce4fcb3522c940,0x5154c93244cb41cd,0x5443dc50bf24b221, 
};

static int bbox_head_multi_level_bbox_0_quant1_threshold[4 * 14] =
{ // torch.Size([4, 14])
-1265, -811, -585, -415, -301, -188, -74, 38, 151, 265, 378, 548, 775, 1229,
-1143, -752, -557, -410, -313, -215, -117, -20, 77, 175, 273, 419, 615, 1005,
-1654, -1083, -797, -583, -441, -298, -155, -12, 130, 272, 415, 629, 915, 1486,
-1875, -1217, -888, -641, -477, -312, -148, 16, 180, 345, 509, 756, 1085, 1743,
};

static uint64_t bbox_head_multi_level_bbox_0_conv2_weight[4 * 9] =
{ // torch.Size([4, 3, 3, 1])
0xa, 0x7, 0x0, 0x2, 0x6, 0x3, 0x3, 0x4, 0x1, 
0xd, 0xf, 0xd, 0xa, 0xb, 0xa, 0x0, 0x2, 0x2, 
0x3, 0x5, 0x4, 0x3, 0x5, 0x3, 0x2, 0x4, 0x3, 
0x4, 0x4, 0x4, 0x3, 0x4, 0x4, 0x2, 0x4, 0x3, 
};

static int bbox_head_multi_level_bbox_0_quant2_threshold[4 * 14] =
{ // torch.Size([4, 14])
-1043, -630, -424, -269, -166, -63, 39, 142, 245, 348, 451, 606, 812, 1225,
-764, -462, -312, -199, -123, -48, 26, 102, 177, 252, 327, 440, 591, 892,
-565, -367, -268, -194, -144, -95, -45, 3, 53, 102, 152, 226, 325, 523,
-656, -439, -331, -250, -196, -142, -88, -34, 19, 73, 127, 208, 316, 532,
};

static uint64_t bbox_head_multi_level_bbox_1_conv1_weight[4 * 1*4] =
{ // torch.Size([4, 1, 1, 64])
0x0324d94dd44b54dc,0xb3abb902a23ca143,0xac633b4d32db5514,0xc0cce34a6ba4c569, 
0x1054ac31bc3244d5,0xc455ca632d3c923b,0x2cc3432460c4acdd,0xad3d1a2cab532b01, 
0xeb3c0ab43303bd53,0x4bbd5e33c4e3b9b9,0xe45e0aba4bd4c41c,0x3bd34eda432934de, 
0xf3dd342b242b0a55,0x53cb1e55addcca3a,0xe42e3ccc31a4b24c,0xcbb3addd4341230d, 
};

static int bbox_head_multi_level_bbox_1_quant1_threshold[4 * 14] =
{ // torch.Size([4, 14])
-891, -562, -397, -274, -192, -110, -27, 54, 136, 218, 300, 424, 588, 917,
-702, -441, -311, -213, -148, -83, -18, 47, 112, 177, 242, 340, 470, 731,
-1502, -967, -700, -500, -366, -233, -99, 33, 167, 300, 434, 634, 901, 1436,
-1540, -995, -723, -518, -382, -246, -110, 26, 162, 298, 434, 639, 911, 1456,
};

static uint64_t bbox_head_multi_level_bbox_1_conv2_weight[4 * 9] =
{ // torch.Size([4, 3, 3, 1])
0xc, 0xd, 0xc, 0x4, 0xf, 0xc, 0x3, 0xe, 0xc, 
0x1, 0x4, 0xb, 0xe, 0xf, 0xd, 0xc, 0xc, 0xc, 
0x4, 0x5, 0x3, 0x4, 0x5, 0x4, 0x3, 0x5, 0x4, 
0x4, 0x5, 0x3, 0x5, 0x6, 0x4, 0x3, 0x4, 0x3, 
};

static int bbox_head_multi_level_bbox_1_quant2_threshold[4 * 14] =
{ // torch.Size([4, 14])
-1627, -1005, -694, -460, -305, -149, 5, 161, 316, 472, 627, 861, 1172, 1794,
-1518, -934, -642, -423, -277, -131, 14, 161, 307, 453, 599, 818, 1110, 1694,
-975, -633, -461, -333, -247, -162, -76, 9, 94, 180, 266, 394, 565, 908,
-1196, -788, -584, -431, -328, -226, -124, -22, 79, 181, 283, 436, 640, 1048,
};

static uint64_t bbox_head_multi_level_bbox_2_conv1_weight[4 * 1*4] =
{ // torch.Size([4, 1, 1, 64])
0x0044bc3ecde06dbc,0x3c654dacdcabfde4,0xd6a5a6b65c5344c4,0x71c53153bdd64ec5, 
0x26cc145e693b44ed,0x251b23455654b44c,0x5222d435c5d63e46,0x36de04cbdd5d62b4, 
0x154bbe5c42b4e4ce,0x55566553cd3474d4,0x5d55ce3e55c10b4b,0xed6c145f44d5af36, 
0x4ecd46d5bc4a7c66,0xdd4d2cdbc6351c3c,0xdcddd395de159ec3,0x5ee63db5dd6ce5ac, 
};

static int bbox_head_multi_level_bbox_2_quant1_threshold[4 * 14] =
{ // torch.Size([4, 14])
-1322, -839, -597, -416, -296, -175, -54, 66, 187, 307, 428, 609, 851, 1334,
-1224, -764, -534, -362, -247, -132, -17, 97, 212, 327, 442, 614, 844, 1304,
-1671, -1059, -752, -523, -369, -216, -63, 89, 242, 395, 549, 778, 1085, 1697,
-1550, -995, -718, -510, -371, -233, -94, 44, 182, 321, 460, 668, 945, 1500,
};

static uint64_t bbox_head_multi_level_bbox_2_conv2_weight[4 * 9] =
{ // torch.Size([4, 3, 3, 1])
0xd, 0xe, 0xd, 0xd, 0xf, 0xe, 0xd, 0xe, 0xd, 
0x5, 0x5, 0x5, 0x6, 0x7, 0x7, 0x5, 0x5, 0x5, 
0xd, 0xd, 0xd, 0xd, 0xd, 0xd, 0xb, 0xd, 0xd, 
0x4, 0x5, 0x5, 0x5, 0x5, 0x5, 0x4, 0x5, 0x5, 
};

static int bbox_head_multi_level_bbox_2_quant2_threshold[4 * 14] =
{ // torch.Size([4, 14])
-1468, -891, -602, -386, -242, -97, 46, 190, 335, 479, 623, 840, 1128, 1705,
-1358, -837, -577, -381, -251, -121, 9, 139, 269, 399, 530, 725, 985, 1506,
-1873, -1214, -885, -638, -474, -309, -144, 19, 184, 348, 513, 760, 1089, 1747,
-1938, -1277, -947, -699, -534, -369, -204, -38, 126, 291, 456, 704, 1034, 1695,
};

static uint64_t bbox_head_multi_level_obj_0_conv1_weight[1 * 1*4] =
{ // torch.Size([1, 1, 1, 64])
0x4cfc55d23e2b3d44,0x6c42006be6eecb4d,0xb24153c4aeb4d962,0xa5e53dec6c3ecc65, 
};

static int bbox_head_multi_level_obj_0_quant1_threshold[1 * 14] =
{ // torch.Size([1, 14])
-2014, -1267, -894, -614, -428, -241, -54, 131, 318, 505, 691, 971, 1344, 2091,
};

static uint64_t bbox_head_multi_level_obj_0_conv2_weight[1 * 9] =
{ // torch.Size([1, 3, 3, 1])
0xb, 0xc, 0x9, 0xb, 0xf, 0xb, 0xb, 0xb, 0xa, 
};

static int bbox_head_multi_level_obj_0_quant2_threshold[1 * 14] =
{ // torch.Size([1, 14])
-2741, -1686, -1159, -764, -500, -237, 26, 290, 553, 817, 1080, 1476, 2003, 3057,
};

static uint64_t bbox_head_multi_level_obj_1_conv1_weight[1 * 1*4] =
{ // torch.Size([1, 1, 1, 64])
0xc64c665646bed545,0xefdbd40de3ce6ffe,0xce445fd3ae2f42a4,0x625fcdc4cfc6edb9, 
};

static int bbox_head_multi_level_obj_1_quant1_threshold[1 * 14] =
{ // torch.Size([1, 14])
-1817, -1167, -841, -597, -435, -272, -109, 52, 215, 377, 540, 784, 1109, 1760,
};

static uint64_t bbox_head_multi_level_obj_1_conv2_weight[1 * 9] =
{ // torch.Size([1, 3, 3, 1])
0x4, 0x4, 0x9, 0x2, 0x7, 0x1, 0xa, 0xa, 0xc, 
};

static int bbox_head_multi_level_obj_1_quant2_threshold[1 * 14] =
{ // torch.Size([1, 14])
-2598, -1691, -1238, -898, -671, -444, -218, 8, 235, 461, 688, 1028, 1482, 2388,
};

static uint64_t bbox_head_multi_level_obj_2_conv1_weight[1 * 1*4] =
{ // torch.Size([1, 1, 1, 64])
0x74565db5deee35e5,0xcccd49cee624a45d,0xb54b6d54430bebed,0xc535765adbcccc63, 
};

static int bbox_head_multi_level_obj_2_quant1_threshold[1 * 14] =
{ // torch.Size([1, 14])
-749, -477, -341, -240, -172, -104, -36, 31, 99, 167, 234, 336, 472, 743,
};

static uint64_t bbox_head_multi_level_obj_2_conv2_weight[1 * 9] =
{ // torch.Size([1, 3, 3, 1])
0x4, 0x5, 0x3, 0x4, 0x7, 0x4, 0x2, 0x3, 0x4, 
};

static int bbox_head_multi_level_obj_2_quant2_threshold[1 * 14] =
{ // torch.Size([1, 14])
-4355, -2808, -2035, -1455, -1068, -682, -295, 91, 477, 864, 1251, 1831, 2604, 4151,
};

static uint64_t bbox_head_multi_level_kps_0_conv1_weight[10 * 1*4] =
{ // torch.Size([10, 1, 1, 64])
0xd40d4b4a235e4b21,0x240bdb3e2394cae4,0x4e54b453c3391ac1,0x549ddb359b6bda43, 
0xcdcc4a3b40a40c44,0x334c5b3b221acf2b,0x2b5db433634e0dcb,0xa63559441c0bc332, 
0x354c420d406d5242,0xcc33623eccb93264,0x4ec11cacb130c023,0x3bbdb3a6946bc226, 
0x4454c2c0c93b35cc,0xbbc4c391aa3246c3,0xc3d43c9becd61544,0x3ebdd2bc249b41ba, 
0xc21a429d316e4941,0xb431599faa13b9e4,0x0e3bbd45b40a99a2,0x52cdc216b47bc336, 
0xbb3c433d539aac45,0x9c4b31320c9bbf4b,0xbb5d14c2644ecdba,0xc63551c513caba02, 
0x4c24c3b4bcd5d1b3,0xa9a353b6bcbc436b,0xc6d23bdb9bb2a14b,0xda3553bd03eb4acb, 
0x4349439e532d4b45,0xbd4313321b3aaebb,0xca4c3bc0545ebd39,0xd53560c4a4cbbbac, 
0x9da2ca35c3e3dbc4,0x44ccda3643922adb,0xb63324c41ac049bb,0xb4353b4eace4413e, 
0xcbc1cba6dbb5b3cd,0x15cb2cbb93a326a3,0x3ac2c242dcd645a3,0x5dbce94c2c434323, 
};

static int bbox_head_multi_level_kps_0_quant1_threshold[10 * 14] =
{ // torch.Size([10, 14])
-1631, -1038, -742, -520, -372, -224, -76, 72, 220, 368, 516, 738, 1034, 1627,
-1488, -960, -696, -498, -366, -234, -102, 29, 161, 293, 425, 623, 887, 1415,
-1594, -1004, -709, -488, -341, -193, -46, 100, 248, 395, 543, 764, 1059, 1648,
-1542, -965, -676, -459, -315, -170, -26, 117, 262, 406, 551, 767, 1056, 1634,
-1629, -1037, -741, -519, -371, -223, -75, 73, 221, 369, 517, 739, 1035, 1627,
-1721, -1112, -808, -580, -428, -275, -123, 28, 180, 332, 484, 712, 1017, 1625,
-1509, -963, -690, -485, -348, -212, -75, 60, 197, 333, 469, 674, 947, 1493,
-1740, -1120, -810, -577, -422, -267, -112, 43, 198, 353, 508, 741, 1051, 1671,
-1805, -1150, -822, -576, -412, -248, -84, 79, 243, 407, 571, 817, 1145, 1801,
-1789, -1126, -794, -546, -380, -214, -49, 116, 282, 448, 613, 862, 1193, 1856,
};

static uint64_t bbox_head_multi_level_kps_0_conv2_weight[10 * 9] =
{ // torch.Size([10, 3, 3, 1])
0xa, 0xf, 0xb, 0xa, 0xe, 0xb, 0x9, 0xc, 0xa, 
0xd, 0xf, 0xd, 0xb, 0xb, 0xb, 0x9, 0x1, 0x2, 
0xb, 0xf, 0xa, 0xa, 0xe, 0xb, 0xb, 0xd, 0xb, 
0x5, 0x7, 0x5, 0x3, 0x3, 0x3, 0x2, 0x9, 0x1, 
0xb, 0xe, 0xb, 0xb, 0xe, 0xb, 0xb, 0xd, 0xb, 
0xd, 0xf, 0xd, 0xb, 0xb, 0xb, 0xa, 0x3, 0x0, 
0x3, 0x6, 0x3, 0x1, 0x6, 0x3, 0x3, 0x5, 0x3, 
0xd, 0xf, 0xd, 0xb, 0xb, 0xb, 0x9, 0x3, 0x0, 
0x3, 0x6, 0x2, 0x3, 0x6, 0x3, 0x3, 0x5, 0x3, 
0x5, 0x7, 0x5, 0x3, 0x3, 0x3, 0x1, 0xb, 0x1, 
};

static int bbox_head_multi_level_kps_0_quant2_threshold[10 * 14] =
{ // torch.Size([10, 14])
-2201, -1370, -955, -644, -436, -228, -20, 186, 394, 602, 809, 1121, 1536, 2367,
-2380, -1489, -1043, -709, -486, -263, -40, 181, 404, 627, 850, 1184, 1630, 2521,
-2930, -1896, -1379, -991, -733, -474, -216, 42, 300, 559, 817, 1205, 1722, 2756,
-2523, -1578, -1106, -752, -516, -279, -43, 192, 428, 664, 900, 1254, 1727, 2671,
-2121, -1347, -959, -669, -475, -282, -88, 105, 298, 492, 686, 976, 1363, 2138,
-2569, -1645, -1183, -836, -605, -374, -143, 87, 318, 549, 780, 1126, 1588, 2512,
-2097, -1311, -918, -624, -427, -231, -34, 161, 358, 554, 750, 1045, 1438, 2223,
-2491, -1625, -1191, -866, -650, -433, -216, 0, 216, 433, 649, 974, 1408, 2274,
-2141, -1381, -1001, -716, -526, -335, -145, 44, 234, 424, 614, 899, 1279, 2040,
-2504, -1633, -1198, -872, -654, -436, -219, -1, 215, 433, 651, 977, 1412, 2283,
};

static uint64_t bbox_head_multi_level_kps_1_conv1_weight[10 * 1*4] =
{ // torch.Size([10, 1, 1, 64])
0x2c2a4b6c6cd392a0,0xbc33c3cc39222ab9,0x3aa9c9a6b952ce22,0xb23433b29ca33cb2, 
0x20acb0ab23b4b91d,0x2aade3cc1c243122,0x24b0d93b423b3255,0x1633a323baebba29, 
0x33a3625aeb6399dc,0x0a92c1abbc3ba232,0x0cb3bb4c42cb54a4,0xa323d24313bcb359, 
0x3b3b9ac323b1b2aa,0x2bade2cc2c2339b2,0x33a0e93c30403156,0xa694b3a3bbf99230, 
0x020362d4f4739bc2,0x32b03b32bba132b0,0xb9c3aaad22cb4613,0x193c3339d3bcb541, 
0x094db3c234c39b43,0xb9cdd93b9cb3333a,0x24a0e11d423a3464,0xa60b4aa2a2e9a339, 
0x0333c2e5e55c43b4,0x43b94b05a213313a,0xb33241aeb2c346ab,0x1bbbab292320a53a, 
0xc9dd443b34bbcc59,0x30dddc32bbc333b2,0x04aac32d213b1465,0xb5bb3ab933d0b29a, 
0xb1cce3db6be1cb59,0x341b412113bab0b1,0xa32b44269943cdbc,0x4b2b51aaba344cd9, 
0xcbcd441034bbcb53,0x2bdddb33bbc432c2,0x042bd2aeb14a9465,0xc5bb2ab933d3b30a, 
};

static int bbox_head_multi_level_kps_1_quant1_threshold[10 * 14] =
{ // torch.Size([10, 14])
-1181, -755, -542, -382, -275, -169, -62, 43, 150, 256, 363, 523, 736, 1162,
-1105, -708, -509, -360, -261, -161, -62, 36, 136, 235, 334, 483, 682, 1080,
-1262, -804, -575, -403, -289, -174, -60, 54, 168, 283, 397, 569, 798, 1256,
-1357, -871, -628, -446, -324, -202, -81, 40, 161, 283, 404, 587, 830, 1316,
-1374, -875, -626, -439, -314, -189, -64, 60, 184, 309, 434, 621, 871, 1370,
-1096, -699, -500, -351, -252, -152, -53, 45, 145, 244, 343, 492, 691, 1089,
-1091, -687, -485, -333, -232, -131, -30, 70, 171, 272, 373, 524, 726, 1130,
-1188, -762, -549, -389, -282, -175, -69, 37, 143, 250, 357, 517, 730, 1156,
-1415, -897, -638, -443, -314, -184, -55, 74, 203, 333, 463, 657, 916, 1434,
-1237, -794, -572, -405, -295, -184, -73, 37, 148, 259, 370, 536, 758, 1201,
};

static uint64_t bbox_head_multi_level_kps_1_conv2_weight[10 * 9] =
{ // torch.Size([10, 3, 3, 1])
0x4, 0x6, 0x5, 0x2, 0x6, 0x5, 0x1, 0x6, 0x5, 
0x4, 0x0, 0x3, 0x6, 0x7, 0x5, 0x5, 0x5, 0x5, 
0xc, 0xe, 0xd, 0xc, 0xf, 0xc, 0xb, 0xe, 0xc, 
0x3, 0x1, 0x4, 0x6, 0x7, 0x6, 0x5, 0x5, 0x6, 
0xd, 0xe, 0xc, 0xc, 0xf, 0xd, 0xc, 0xe, 0xd, 
0x3, 0x2, 0x4, 0x6, 0x7, 0x6, 0x5, 0x5, 0x5, 
0xa, 0xd, 0xd, 0x9, 0xe, 0xd, 0xb, 0xf, 0xd, 
0x4, 0x0, 0x4, 0x6, 0x7, 0x6, 0x4, 0x5, 0x6, 
0x4, 0x6, 0x3, 0x4, 0x7, 0x5, 0x4, 0x7, 0x4, 
0x4, 0x0, 0x4, 0x6, 0x7, 0x6, 0x4, 0x5, 0x5, 
};

static int bbox_head_multi_level_kps_1_quant2_threshold[10 * 14] =
{ // torch.Size([10, 14])
-2750, -1721, -1206, -820, -563, -306, -48, 208, 465, 723, 980, 1366, 1880, 2909,
-3636, -2277, -1598, -1088, -749, -409, -69, 270, 609, 949, 1289, 1799, 2478, 3837,
-3237, -2088, -1514, -1083, -796, -509, -222, 65, 352, 639, 926, 1357, 1931, 3080,
-4130, -2586, -1814, -1235, -849, -463, -77, 308, 694, 1080, 1466, 2045, 2817, 4361,
-3375, -2143, -1527, -1065, -756, -448, -140, 167, 475, 783, 1091, 1553, 2169, 3401,
-4229, -2697, -1931, -1356, -974, -591, -208, 174, 557, 940, 1323, 1898, 2664, 4196,
-3754, -2356, -1656, -1132, -782, -432, -83, 266, 616, 965, 1315, 1839, 2539, 3937,
-3526, -2286, -1666, -1201, -891, -581, -271, 38, 348, 658, 968, 1433, 2053, 3293,
-3907, -2512, -1815, -1292, -944, -595, -247, 101, 449, 798, 1146, 1669, 2366, 3760,
-3482, -2256, -1643, -1183, -876, -570, -263, 42, 349, 656, 962, 1422, 2035, 3261,
};

static uint64_t bbox_head_multi_level_kps_2_conv1_weight[10 * 1*4] =
{ // torch.Size([10, 1, 1, 64])
0x03cc6d949323b29e,0xa51ba3344c4c43a9,0x54bcae4e33da3b3a,0x3c3d904d264cbc11, 
0xa4c5cc3dc19994dc,0xbc239134bc62049b,0x4003c21b34c61b44,0xcdbca3bfcb4c4ca5, 
0x3154d43cba9bc4be,0x315444440c06a432,0xb925b4395c723144,0xbc2a92bdbde43db5, 
0x1cb0a1b210493b54,0x3b0a49bc34e32b0b,0xd0314ababc5d03c2,0x15462cb744a4a33c, 
0xa2dc6db192b4532c,0x9aabb2ab4a3e10ca,0x35ac9d2dc4fabac3,0x59001a43066bac33, 
0xa24b2b39a9aad34d,0x343133334bec0449,0xb4235c3d9c6eb434,0x423a2bb655c4c29a, 
0x91d45e2cb432239e,0xb12a33344cb3423c,0x332c9e3e33d32b44,0xac41bbbc366c1b34, 
0x914b9c24a9a9f53e,0x24a1b4554dbda5b4,0x13a34a4c3b4ec54b,0x034c204554d4c22b, 
0xbbd33dccb4434c16,0xadcc9ccca5dd4ccc,0x990c3cbce5e1cac3,0x231409c5367c053b, 
0x111b45c441226d96,0x9329bccdc5540d4b,0x3aacd1c5a4d63ccb,0x1acba22ddd4c2aa0, 
};

static int bbox_head_multi_level_kps_2_quant1_threshold[10 * 14] =
{ // torch.Size([10, 14])
-937, -600, -431, -305, -221, -137, -52, 31, 115, 199, 283, 410, 578, 915,
-1022, -652, -467, -329, -236, -144, -51, 40, 133, 225, 318, 456, 641, 1011,
-1007, -637, -452, -314, -221, -129, -36, 55, 148, 240, 333, 471, 656, 1026,
-885, -560, -397, -275, -194, -112, -31, 49, 131, 212, 293, 415, 578, 904,
-824, -526, -377, -265, -190, -116, -41, 32, 107, 181, 256, 368, 517, 815,
-945, -599, -426, -297, -210, -124, -38, 48, 134, 221, 307, 436, 609, 955,
-988, -632, -454, -321, -232, -143, -54, 34, 122, 211, 300, 434, 611, 967,
-976, -620, -442, -308, -219, -130, -42, 46, 135, 224, 313, 447, 625, 980,
-1120, -714, -511, -358, -257, -155, -54, 47, 149, 250, 352, 504, 707, 1114,
-943, -600, -428, -299, -214, -128, -42, 43, 129, 215, 300, 429, 601, 944,
};

static uint64_t bbox_head_multi_level_kps_2_conv2_weight[10 * 9] =
{ // torch.Size([10, 3, 3, 1])
0x6, 0x7, 0x6, 0x5, 0x7, 0x6, 0x5, 0x6, 0x6, 
0x5, 0x6, 0x5, 0x7, 0x6, 0x6, 0x6, 0x5, 0x5, 
0xd, 0xf, 0xd, 0xe, 0xe, 0xd, 0xd, 0xe, 0xd, 
0xe, 0xe, 0xe, 0xe, 0xe, 0xe, 0xd, 0xd, 0xe, 
0x6, 0x6, 0x5, 0x5, 0x6, 0x5, 0x5, 0x6, 0x6, 
0xd, 0xe, 0xd, 0xf, 0xf, 0xf, 0xd, 0xd, 0xd, 
0x3, 0x6, 0x5, 0x5, 0x6, 0x6, 0x5, 0x7, 0x6, 
0xd, 0xd, 0xd, 0xe, 0xf, 0xe, 0xe, 0xf, 0xe, 
0x5, 0x6, 0x5, 0x5, 0x6, 0x5, 0x6, 0x7, 0x6, 
0x5, 0x5, 0x5, 0x6, 0x6, 0x6, 0x5, 0x6, 0x6, 
};

static int bbox_head_multi_level_kps_2_quant2_threshold[10 * 14] =
{ // torch.Size([10, 14])
-5340, -3340, -2340, -1590, -1090, -590, -90, 409, 909, 1409, 1908, 2658, 3658, 5658,
-4798, -3010, -2116, -1446, -999, -552, -105, 341, 788, 1235, 1682, 2352, 3246, 5034,
-4873, -3139, -2272, -1622, -1189, -755, -322, 111, 544, 978, 1411, 2061, 2928, 4662,
-4466, -2802, -1970, -1346, -930, -514, -98, 318, 734, 1150, 1566, 2190, 3022, 4686,
-4789, -3040, -2165, -1510, -1072, -635, -198, 238, 676, 1113, 1550, 2206, 3080, 4829,
-6662, -4256, -3054, -2151, -1550, -949, -347, 253, 855, 1456, 2058, 2960, 4163, 6568,
-4713, -2955, -2076, -1417, -978, -538, -99, 340, 779, 1218, 1658, 2317, 3196, 4953,
-4742, -3070, -2235, -1608, -1190, -772, -354, 63, 480, 898, 1316, 1943, 2779, 4450,
-5129, -3299, -2384, -1698, -1240, -783, -325, 131, 589, 1046, 1504, 2190, 3105, 4935,
-4293, -2778, -2021, -1453, -1074, -695, -316, 62, 440, 819, 1198, 1766, 2524, 4039,
};
