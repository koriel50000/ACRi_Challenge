static uint64_t backbone_model0_conv1_weight[16 * 9] =
{ // torch.Size([16, 3, 3, 3])
0xc33, 0xc34, 0xc33, 0xc33, 0xc44, 0xc33, 0xb32, 0xc33, 0xc33,
0xbc9, 0xddc, 0xbcb, 0x3a2, 0x3c1, 0x3c4, 0x4a4, 0x534, 0x425,
0xb48, 0x853, 0x249, 0xc4a, 0xd59, 0xb59, 0xb4a, 0xd4c, 0xb5b,
0xc23, 0xd33, 0xc33, 0xd32, 0xd44, 0xc33, 0xc4a, 0xc54, 0xc33,
0x32a, 0x323, 0x433, 0x322, 0xbc8, 0xbc1, 0x234, 0xcdb, 0xcdc,
0x433, 0x443, 0x443, 0xbcb, 0x91b, 0x443, 0xdcb, 0xddc, 0x111,
0x433, 0x432, 0x222, 0x444, 0x392, 0xdcc, 0x423, 0xbbb, 0xddc,
0x33b, 0x41c, 0x30c, 0x42c, 0x4ac, 0x43c, 0x31c, 0x39c, 0x42c,
0x94c, 0xc4c, 0xc4c, 0xb4b, 0xb4c, 0xb4c, 0xb4b, 0x34b, 0x24b,
0xb18, 0xdcc, 0xddd, 0x433, 0xab1, 0xccb, 0x433, 0x444, 0x434,
0xb22, 0x913, 0x922, 0x022, 0x4b3, 0x4a2, 0x3b1, 0x4c0, 0x4b0,
0x344, 0x555, 0x544, 0x223, 0x303, 0x182, 0xccc, 0xded, 0xcdc,
0x432, 0xaa9, 0xccc, 0x445, 0x23b, 0xddd, 0x444, 0x334, 0xbab,
0x0b4, 0x3c4, 0x2c4, 0x3c4, 0x4c4, 0x4d4, 0x3c3, 0x4c3, 0x4c4,
0x2c4, 0x3c3, 0x3c4, 0x0c4, 0x3d3, 0x3d3, 0x2c3, 0x3d3, 0x4c4,
0xccc, 0xccc, 0x322, 0xcdc, 0xb9b, 0x444, 0xb03, 0x434, 0x544,
};

static int backbone_model0_relu1_threshold[16 * 7] =
{ // torch.Size([16, 7])
-399, -139, 120, 381, 771, 1292, 2333,
-158, -31, 94, 220, 409, 662, 1167,
-5, 370, 746, 1122, 1687, 2439, 3944,
-1167, -841, -515, -188, 300, 952, 2257,
-480, -335, -190, -45, 171, 460, 1039,
-416, -242, -68, 105, 366, 713, 1409,
-490, -349, -209, -68, 142, 423, 986,
18, 375, 733, 1091, 1628, 2344, 3775,
-742, -492, -243, 6, 380, 879, 1877,
-1404, -1036, -668, -300, 251, 987, 2459,
831, 1013, 1195, 1377, 1650, 2014, 2741,
-425, -280, -135, 10, 227, 517, 1098,
-367, -264, -160, -56, 98, 306, 721,
-224, -12, 199, 410, 728, 1152, 2000,
-771, -544, -318, -92, 247, 699, 1605,
-312, -177, -43, 91, 293, 562, 1101,
};

static uint64_t backbone_model0_conv2_conv1_weight[16 * 1] =
{ // torch.Size([16, 1, 1, 16])
0x4884d0433ccb8343,
0x4b81ba408bbe8b30,
0xca3c4bda335283c2,
0xcb155b0b253322b3,
0x1eea1d35483b44a4,
0x330d4bdbac4390ca,
0xd824b14014c51121,
0x418bca419cac2138,
0x4558323d32134344,
0x502daab01d4c2021,
0x39c0aa24c1346586,
0x428cc0221c1c0140,
0x941aaa946ab0dcbc,
0xa804d3420bdbaa48,
0x294906295b2b8433,
0x5ba2c3531cca3343,
};

static int backbone_model0_conv2_quant1_threshold[16 * 14] =
{ // torch.Size([16, 14])
-434, -273, -192, -132, -92, -51, -11, 28, 69, 109, 149, 209, 290, 451,
-782, -561, -450, -367, -312, -257, -201, -146, -91, -35, 19, 102, 213, 434,
-366, -225, -154, -100, -65, -30, 5, 40, 76, 111, 147, 200, 271, 413,
-403, -184, -74, 8, 63, 117, 172, 227, 282, 337, 392, 474, 584, 804,
-757, -514, -393, -302, -241, -180, -120, -59, 1, 62, 122, 213, 335, 577,
-739, -506, -389, -302, -243, -185, -126, -68, -10, 48, 106, 194, 310, 544,
-390, -214, -127, -61, -17, 25, 69, 113, 157, 200, 244, 310, 397, 573,
-612, -431, -340, -272, -227, -182, -136, -91, -46, 0, 44, 112, 203, 384,
-507, -121, 71, 216, 313, 409, 506, 602, 699, 796, 892, 1037, 1230, 1616,
-943, -688, -560, -464, -401, -337, -273, -209, -145, -81, -17, 77, 205, 461,
-651, -317, -150, -25, 58, 141, 225, 308, 392, 475, 559, 684, 851, 1185,
-563, -386, -297, -231, -186, -142, -98, -54, -9, 34, 78, 145, 233, 410,
-730, -478, -353, -258, -195, -132, -70, -7, 55, 118, 181, 275, 401, 653,
-648, -408, -288, -198, -138, -78, -18, 41, 101, 161, 221, 311, 431, 671,
-616, -292, -130, -8, 72, 153, 234, 315, 396, 477, 558, 679, 842, 1166,
-546, -329, -220, -139, -84, -30, 23, 78, 132, 186, 241, 322, 431, 648,
};

static uint64_t backbone_model0_conv2_conv2_weight[16 * 9] =
{ // torch.Size([16, 3, 3, 1])
0x2, 0x3, 0x3, 0xb, 0xd, 0xd, 0x3, 0x3, 0x3,
0x0, 0x9, 0xa, 0x2, 0xc, 0xc, 0x8, 0xc, 0xc,
0x0, 0x2, 0x4, 0xa, 0xa, 0x3, 0xa, 0xd, 0xd,
0x2, 0x1, 0xa, 0x3, 0xa, 0xd, 0x3, 0xe, 0xa,
0xb, 0x8, 0xa, 0x8, 0x3, 0x4, 0x2, 0x4, 0x5,
0x3, 0x8, 0xb, 0xa, 0x6, 0xb, 0xb, 0x2, 0x5,
0x2, 0x0, 0xa, 0x3, 0x4, 0xd, 0x1, 0x5, 0xd,
0xa, 0xb, 0x3, 0x3, 0x5, 0x3, 0x2, 0xc, 0xd,
0xb, 0xa, 0x2, 0x9, 0x4, 0x4, 0x0, 0x4, 0x5,
0x2, 0x1, 0xb, 0x3, 0x4, 0xd, 0x4, 0x4, 0xd,
0x3, 0x3, 0x4, 0x3, 0xb, 0xc, 0x3, 0xc, 0xe,
0x2, 0xa, 0xb, 0xa, 0xd, 0x3, 0xb, 0x3, 0x5,
0x4, 0x2, 0x4, 0x2, 0xb, 0xc, 0x3, 0xd, 0xd,
0x0, 0x3, 0xb, 0x0, 0x3, 0x6, 0xb, 0xb, 0x3,
0xa, 0xa, 0xb, 0x2, 0x3, 0x4, 0x3, 0x4, 0x4,
0x2, 0x2, 0x3, 0x2, 0xb, 0xc, 0x1, 0xd, 0xd,
};

static int backbone_model0_conv2_relu2_threshold[16 * 7] =
{ // torch.Size([16, 7])
51, 133, 216, 298, 422, 587, 916,
-103, -51, 0, 52, 131, 235, 443,
40, 148, 255, 363, 524, 739, 1169,
-62, 16, 94, 173, 291, 448, 763,
-84, -13, 56, 127, 233, 375, 658,
-11, 55, 121, 187, 286, 418, 682,
88, 152, 216, 280, 376, 504, 760,
44, 96, 148, 201, 279, 383, 592,
45, 77, 110, 142, 191, 255, 385,
25, 102, 179, 256, 371, 524, 831,
-153, -82, -10, 61, 169, 312, 599,
51, 114, 178, 241, 336, 463, 716,
-102, -46, 10, 66, 151, 263, 489,
-80, -16, 46, 110, 205, 332, 586,
-114, -58, -1, 54, 138, 250, 475,
-102, -29, 43, 117, 227, 373, 666,
};

static uint64_t backbone_model1_conv1_conv1_weight[16 * 1] =
{ // torch.Size([16, 1, 1, 16])
0x4c9c059d209da939,
0x2abb58b05bcb5b03,
0x0543020b3a3333b9,
0x330300ca4ec39289,
0xcb1db38bcb999ac9,
0x3bd8b3bac34bca31,
0x31c8986b3acbbb9b,
0x31d1413931d34c2b,
0x343ad4022aa0c2c9,
0xca1a2219b0db403d,
0x232d130d2a2d33c4,
0xa5aa1424ba9baaaa,
0x432023b319122153,
0xc3041341a4485b1d,
0x040cb513099420ca,
0xca3a3aaba0cb2533,
};

static int backbone_model1_conv1_quant1_threshold[16 * 14] =
{ // torch.Size([16, 14])
-609, -405, -303, -226, -175, -124, -73, -22, 28, 79, 130, 206, 308, 513,
-518, -306, -200, -121, -68, -15, 37, 90, 142, 195, 248, 328, 433, 645,
-331, -129, -27, 47, 98, 149, 199, 250, 301, 351, 402, 478, 579, 782,
-561, -368, -272, -199, -151, -103, -55, -7, 40, 89, 137, 209, 305, 498,
-751, -567, -475, -406, -359, -313, -267, -221, -175, -129, -83, -14, 77, 261,
-557, -372, -280, -211, -165, -119, -72, -26, 19, 65, 111, 181, 273, 458,
-415, -258, -180, -121, -82, -42, -3, 35, 74, 114, 153, 212, 290, 447,
-630, -423, -319, -242, -190, -138, -87, -35, 16, 67, 119, 197, 300, 507,
-484, -306, -217, -151, -106, -62, -18, 26, 70, 115, 159, 226, 314, 492,
-605, -419, -326, -256, -210, -163, -117, -70, -24, 22, 68, 138, 231, 417,
-724, -458, -325, -225, -158, -92, -25, 40, 107, 173, 240, 339, 472, 738,
-529, -308, -198, -115, -60, -5, 50, 105, 160, 215, 270, 353, 463, 684,
-347, -122, -10, 73, 129, 186, 242, 298, 354, 410, 466, 551, 663, 888,
-453, -245, -141, -62, -10, 41, 93, 145, 197, 249, 302, 380, 484, 693,
-556, -335, -224, -141, -86, -31, 24, 79, 134, 189, 245, 327, 438, 659,
-441, -265, -178, -112, -68, -24, 19, 62, 106, 150, 194, 260, 347, 523,
};

static uint64_t backbone_model1_conv1_conv2_weight[16 * 9] =
{ // torch.Size([16, 3, 3, 1])
0x2, 0x9, 0xb, 0x0, 0x6, 0xa, 0xb, 0x4, 0xb,
0x3, 0x4, 0xa, 0x3, 0x6, 0x9, 0x9, 0x1, 0x2,
0xb, 0xc, 0xb, 0xb, 0xc, 0xc, 0xa, 0x6, 0x1,
0x9, 0x2, 0x0, 0xb, 0xe, 0xb, 0x2, 0xc, 0x2,
0xb, 0xa, 0xa, 0x2, 0x6, 0xa, 0xb, 0x3, 0xb,
0x8, 0xa, 0x1, 0x8, 0x2, 0xb, 0xb, 0x6, 0x3,
0x0, 0xa, 0x1, 0x9, 0x6, 0xb, 0x3, 0x3, 0xa,
0xa, 0x3, 0xb, 0x0, 0xd, 0xa, 0x0, 0xd, 0x9,
0xb, 0x0, 0x0, 0xb, 0xb, 0x2, 0xb, 0x5, 0x5,
0x2, 0x3, 0x2, 0x9, 0x6, 0x2, 0xb, 0x9, 0x8,
0x0, 0x3, 0xa, 0xb, 0x6, 0x1, 0x0, 0x3, 0xb,
0x3, 0x5, 0x5, 0xa, 0x3, 0x1, 0xc, 0xc, 0xc,
0x9, 0xc, 0xa, 0x8, 0x9, 0x0, 0x3, 0x6, 0x2,
0x0, 0x3, 0xa, 0xb, 0x6, 0x0, 0x2, 0x3, 0x9,
0xc, 0xd, 0x4, 0xc, 0xe, 0x0, 0x3, 0x3, 0x3,
0x0, 0x1, 0x1, 0xa, 0x6, 0x1, 0xa, 0xc, 0x3,
};

static int backbone_model1_conv1_relu2_threshold[16 * 7] =
{ // torch.Size([16, 7])
-227, -153, -80, -7, 102, 249, 542,
-226, -130, -34, 61, 205, 397, 781,
-112, -59, -5, 47, 127, 234, 448,
-238, -129, -21, 87, 249, 466, 900,
-309, -226, -143, -60, 64, 229, 561,
-151, -86, -21, 44, 142, 273, 534,
-180, -74, 32, 138, 297, 510, 935,
-167, -102, -36, 29, 127, 259, 521,
-133, -69, -5, 58, 155, 283, 539,
-271, -187, -102, -18, 107, 276, 613,
-86, -31, 22, 76, 158, 266, 483,
-127, -79, -31, 16, 87, 183, 375,
-28, 25, 79, 133, 214, 322, 538,
-267, -175, -83, 7, 145, 328, 695,
-147, -60, 26, 113, 243, 416, 763,
-121, -56, 8, 73, 171, 301, 562,
};

static uint64_t backbone_model1_conv2_conv1_weight[64 * 1] =
{ // torch.Size([64, 1, 1, 16])
0xc13113ba9d413b02,
0x3bc222ab43a2d9ab,
0x483a1241cdb4c332,
0xa3b32cdaa23b904b,
0x43c1abbcc3cbab59,
0xabca22b3cba3dbb1,
0x233cc3520a343c39,
0xbb40aa4d3144bb80,
0x210ba4b41d33b333,
0x4140a141bb551b2b,
0xb250cb42d228229b,
0xc1c13b2ed330ab13,
0x4543293249bc432c,
0x3a33a35038c3b609,
0xc3b45c1bc04ca4bb,
0x4acab41ad3bbc358,
0x0301abcc248b5310,
0xad3b348384241c24,
0xbc533394b2bb209e,
0x2a912a1b40b43ae2,
0xc003b32bd0a29b40,
0xd2333108da320b00,
0xcb392b9b24a069c2,
0xac2a359a82123095,
0x2699cc0b294c232b,
0x9b14eab50a1aa3b2,
0xd3104aca9c5b3c4a,
0x3ab40cbcb4ad11ba,
0x3c2ba220aa59bda9,
0xbdaa242229343115,
0xa4898aaa323e3c48,
0x33bbb3d34b2c3c8b,
0x432cc2a4b1c4343a,
0x33420c3a4abbaabe,
0xd8433b2d4a09ca81,
0x511392c34acb025b,
0xa4d420bb4c80c002,
0xca3cbd39c4b2483c,
0xcb3328d14c5c41c2,
0xd10c83bbc3244c32,
0x3231b3a2d3adaa43,
0xc0449843c34ccd49,
0xac32a12915a2a2ca,
0x425299342cb18440,
0x2bb134caa0dc9052,
0x4b3412503391043b,
0x1b243425229ab38d,
0xcc235bcb245cadab,
0x29210b00b6aab81a,
0x4ac889043d83d2bb,
0x0ca435c323938a45,
0x2c8bc3c9823b0d4a,
0x44a52a9c430b3324,
0x2aac5b3b3bb30a3c,
0xc2d13ab92c41d422,
0x443db9243aa3314b,
0x22343220100d293d,
0x0b4333341090ba5b,
0xa382bdbc2cbc941d,
0xbb2bb35bd3c30c32,
0x25a2bb3a29bc83bc,
0xb254a8a1055b5232,
0xc4333c53b033b2c2,
0xbb18ab13bbb2b2cd,
};

static int backbone_model1_conv2_quant1_threshold[64 * 14] =
{ // torch.Size([64, 14])
-599, -395, -293, -216, -165, -114, -63, -12, 38, 89, 140, 216, 318, 523,
-757, -535, -424, -340, -285, -229, -174, -118, -63, -7, 47, 131, 242, 464,
-579, -333, -210, -118, -57, 3, 65, 126, 187, 249, 310, 402, 525, 770,
-926, -600, -437, -315, -233, -151, -70, 11, 92, 174, 255, 378, 541, 867,
-713, -506, -402, -325, -273, -221, -169, -117, -66, -14, 37, 114, 218, 425,
-1013, -736, -597, -494, -424, -355, -286, -216, -147, -78, -8, 95, 233, 510,
-535, -260, -122, -19, 49, 117, 186, 255, 324, 392, 461, 564, 702, 976,
-526, -304, -193, -110, -54, 0, 56, 112, 167, 223, 278, 362, 473, 695,
-615, -364, -238, -144, -81, -19, 43, 106, 169, 231, 294, 388, 514, 765,
-397, -158, -39, 50, 110, 169, 229, 289, 349, 409, 468, 558, 678, 917,
-636, -388, -263, -170, -108, -46, 15, 77, 140, 202, 264, 357, 481, 730,
-1335, -922, -716, -561, -458, -355, -252, -149, -46, 57, 160, 315, 521, 933,
-570, -305, -173, -74, -8, 58, 124, 190, 256, 322, 388, 487, 619, 884,
-711, -345, -162, -25, 65, 157, 248, 340, 431, 522, 614, 751, 934, 1300,
-1078, -725, -549, -416, -328, -240, -152, -63, 24, 112, 200, 333, 509, 862,
-853, -593, -463, -365, -300, -235, -170, -105, -40, 24, 89, 187, 317, 577,
-674, -424, -299, -205, -143, -80, -18, 44, 106, 169, 231, 325, 450, 700,
-728, -436, -289, -180, -107, -34, 38, 112, 185, 258, 331, 440, 587, 879,
-1356, -935, -725, -567, -462, -357, -252, -147, -41, 63, 168, 326, 536, 957,
-826, -532, -385, -275, -201, -128, -55, 18, 91, 165, 238, 349, 496, 790,
-733, -508, -396, -312, -256, -199, -143, -87, -31, 24, 80, 165, 277, 502,
-833, -555, -416, -312, -242, -172, -103, -33, 35, 105, 174, 279, 418, 696,
-882, -541, -371, -243, -157, -72, 12, 97, 183, 268, 353, 481, 652, 993,
-695, -379, -222, -103, -24, 53, 132, 211, 290, 369, 448, 566, 724, 1039,
-1025, -611, -404, -248, -145, -41, 61, 165, 268, 372, 475, 630, 838, 1252,
-953, -652, -501, -388, -312, -237, -161, -86, -10, 64, 140, 253, 404, 705,
-873, -582, -436, -327, -254, -182, -109, -36, 36, 109, 182, 291, 436, 728,
-946, -665, -525, -419, -349, -279, -209, -138, -68, 1, 71, 177, 317, 598,
-663, -444, -334, -252, -197, -142, -87, -32, 21, 76, 131, 213, 323, 542,
-530, -266, -134, -35, 30, 96, 162, 228, 294, 360, 426, 525, 657, 921,
-1121, -773, -600, -470, -383, -296, -209, -122, -35, 50, 137, 268, 441, 788,
-886, -637, -513, -420, -358, -295, -233, -171, -109, -47, 15, 108, 232, 481,
-554, -301, -175, -80, -17, 45, 108, 171, 235, 298, 361, 456, 582, 835,
-1126, -752, -566, -426, -332, -239, -146, -52, 40, 134, 227, 367, 554, 927,
-685, -464, -354, -271, -215, -160, -105, -50, 5, 60, 115, 198, 309, 530,
-804, -514, -369, -260, -187, -115, -42, 29, 102, 174, 247, 356, 501, 791,
-810, -564, -441, -349, -288, -227, -165, -104, -43, 18, 79, 171, 294, 539,
-815, -539, -401, -298, -229, -160, -91, -22, 45, 114, 183, 287, 424, 700,
-871, -576, -429, -318, -244, -170, -97, -23, 50, 124, 197, 308, 456, 751,
-688, -452, -334, -246, -187, -128, -69, -10, 48, 107, 166, 254, 372, 608,
-782, -533, -409, -316, -254, -192, -129, -67, -5, 56, 118, 211, 336, 584,
-925, -595, -430, -307, -224, -142, -59, 22, 105, 187, 270, 393, 558, 888,
-493, -297, -198, -125, -76, -27, 22, 71, 120, 169, 218, 292, 390, 586,
-469, -194, -56, 46, 114, 183, 252, 321, 389, 458, 527, 630, 767, 1042,
-1122, -767, -590, -457, -368, -279, -190, -102, -13, 75, 164, 297, 474, 829,
-382, -152, -37, 48, 105, 163, 220, 278, 335, 393, 450, 537, 652, 882,
-608, -367, -246, -156, -96, -36, 23, 84, 144, 204, 264, 355, 475, 716,
-1022, -710, -553, -436, -358, -280, -201, -123, -45, 32, 110, 228, 384, 697,
-707, -425, -283, -177, -107, -36, 34, 104, 175, 246, 316, 422, 564, 846,
-825, -563, -432, -334, -269, -203, -138, -73, -7, 57, 122, 221, 351, 613,
-837, -500, -332, -205, -121, -37, 46, 131, 215, 299, 383, 510, 678, 1015,
-892, -654, -535, -446, -386, -327, -267, -208, -148, -89, -29, 59, 178, 416,
-505, -253, -128, -34, 28, 91, 154, 216, 279, 342, 405, 499, 624, 875,
-455, -267, -172, -102, -55, -7, 39, 86, 133, 180, 227, 298, 392, 581,
-907, -609, -459, -347, -273, -198, -123, -49, 25, 100, 174, 286, 436, 734,
-565, -310, -182, -86, -23, 40, 104, 168, 231, 295, 359, 455, 582, 837,
-876, -598, -460, -356, -286, -217, -148, -78, -9, 59, 129, 233, 371, 649,
-421, -208, -102, -23, 29, 83, 136, 189, 242, 295, 348, 427, 534, 746,
-1174, -855, -695, -575, -496, -416, -336, -256, -176, -97, -17, 102, 262, 581,
-691, -441, -316, -222, -159, -97, -34, 27, 90, 152, 215, 309, 434, 684,
-837, -548, -404, -295, -223, -151, -79, -7, 65, 137, 209, 317, 462, 751,
-668, -322, -149, -20, 66, 152, 239, 325, 412, 498, 585, 714, 887, 1233,
-659, -365, -218, -107, -34, 39, 112, 186, 259, 333, 406, 516, 663, 958,
-859, -611, -487, -393, -331, -269, -207, -145, -83, -21, 40, 133, 257, 505,
};

static uint64_t backbone_model1_conv2_conv2_weight[64 * 9] =
{ // torch.Size([64, 3, 3, 1])
0x4, 0xc, 0x9, 0x5, 0x3, 0xc, 0xb, 0x5, 0xc,
0x2, 0xc, 0x2, 0x3, 0xd, 0x3, 0x1, 0xc, 0x3,
0x1, 0xb, 0x4, 0x4, 0x5, 0x9, 0x5, 0xc, 0xc,
0x4, 0x5, 0x4, 0x4, 0xc, 0xb, 0xc, 0xc, 0xc,
0xb, 0x4, 0x4, 0xb, 0xc, 0x3, 0xb, 0xe, 0xb,
0x4, 0xd, 0xd, 0x4, 0xc, 0xb, 0x4, 0x3, 0x9,
0x3, 0x0, 0x4, 0x4, 0x4, 0x4, 0xa, 0xc, 0xb,
0xa, 0xc, 0xa, 0x5, 0x4, 0x4, 0xb, 0xd, 0xc,
0xb, 0x4, 0x4, 0x8, 0x5, 0xb, 0x4, 0x9, 0x8,
0x4, 0x4, 0x2, 0xb, 0xd, 0xc, 0x2, 0x4, 0x3,
0xa, 0xa, 0xb, 0x1, 0xd, 0x1, 0xb, 0xd, 0x4,
0x9, 0xa, 0x3, 0x2, 0x5, 0x3, 0x5, 0x4, 0xc,
0x3, 0x2, 0x4, 0x3, 0x0, 0xa, 0x8, 0xe, 0x9,
0xa, 0xc, 0xb, 0x2, 0xc, 0xd, 0x9, 0xb, 0xb,
0xa, 0xa, 0xc, 0x0, 0xd, 0xc, 0x8, 0xc, 0x9,
0x2, 0xa, 0xc, 0x1, 0x2, 0xd, 0xb, 0xb, 0xb,
0xd, 0xd, 0xd, 0x9, 0x2, 0xb, 0x3, 0x4, 0x0,
0xc, 0x2, 0x3, 0xd, 0xa, 0x5, 0xd, 0x1, 0x4,
0x9, 0xb, 0xd, 0x2, 0xa, 0xa, 0x3, 0xc, 0xc,
0x1, 0x3, 0xc, 0xb, 0x4, 0x1, 0xc, 0x5, 0x5,
0xc, 0x1, 0x4, 0xa, 0xc, 0x3, 0x4, 0x9, 0xd,
0x4, 0xc, 0xc, 0x5, 0x2, 0xb, 0x3, 0x4, 0x3,
0x3, 0x3, 0x3, 0x3, 0xc, 0xc, 0xc, 0xe, 0xc,
0xc, 0xc, 0xc, 0x0, 0xc, 0xb, 0x2, 0x6, 0x4,
0xb, 0x2, 0x3, 0xd, 0x4, 0x4, 0xc, 0x4, 0x5,
0x8, 0x2, 0x9, 0x2, 0x5, 0x4, 0x9, 0x3, 0x3,
0xc, 0x3, 0x3, 0xd, 0xb, 0x4, 0x3, 0xd, 0x2,
0x0, 0x4, 0x0, 0x5, 0xc, 0xb, 0x5, 0xc, 0x9,
0xa, 0xd, 0xb, 0x2, 0x6, 0x4, 0xb, 0x0, 0x3,
0xb, 0x4, 0x4, 0xc, 0x3, 0x6, 0xc, 0xd, 0x3,
0xa, 0xb, 0xb, 0xb, 0x2, 0xa, 0x9, 0x6, 0x5,
0x4, 0x4, 0xa, 0x4, 0x3, 0xc, 0x2, 0xd, 0xc,
0x2, 0x3, 0x5, 0xc, 0xd, 0xc, 0x9, 0x3, 0xb,
0xb, 0xd, 0xc, 0x1, 0x1, 0x3, 0x4, 0x5, 0x4,
0x4, 0x4, 0x4, 0xb, 0xd, 0xc, 0xa, 0x3, 0x2,
0x2, 0x8, 0xc, 0x3, 0x2, 0xd, 0x4, 0x2, 0xd,
0x2, 0xb, 0xa, 0x9, 0x3, 0x3, 0xb, 0x5, 0x5,
0x3, 0x5, 0x4, 0x0, 0x3, 0x4, 0xc, 0xc, 0xb,
0x4, 0x1, 0xc, 0xb, 0x6, 0x8, 0xb, 0xb, 0x4,
0x4, 0xb, 0x0, 0x2, 0x9, 0x0, 0x1, 0x6, 0x3,
0xb, 0xb, 0x4, 0xc, 0x4, 0x4, 0x2, 0x5, 0xc,
0xb, 0x2, 0x5, 0x2, 0x5, 0x4, 0x3, 0x2, 0x0,
0x1, 0x3, 0x2, 0xc, 0x4, 0xb, 0xb, 0x5, 0xc,
0x9, 0xb, 0x3, 0xc, 0xb, 0x5, 0x3, 0x5, 0xb,
0xb, 0x3, 0x3, 0xb, 0x4, 0x4, 0xc, 0xc, 0x5,
0x2, 0x2, 0xa, 0xb, 0x5, 0x4, 0xc, 0xd, 0xb,
0xb, 0x9, 0x4, 0xd, 0x8, 0x5, 0xc, 0x2, 0x2,
0x8, 0x3, 0xb, 0xb, 0xb, 0x2, 0xb, 0xe, 0xb,
0x0, 0xc, 0x0, 0x2, 0xd, 0xb, 0xa, 0xc, 0x1,
0x2, 0x0, 0x3, 0xc, 0x5, 0x6, 0xb, 0xc, 0x9,
0x2, 0xc, 0xd, 0x4, 0x1, 0xd, 0x6, 0x4, 0x8,
0xb, 0xa, 0xa, 0xb, 0xd, 0xc, 0x9, 0x0, 0x0,
0x4, 0x3, 0xd, 0x5, 0x2, 0xd, 0x0, 0x3, 0xd,
0xc, 0xc, 0xb, 0xb, 0x3, 0x2, 0x3, 0x5, 0x3,
0x4, 0x5, 0x4, 0x4, 0x2, 0x3, 0xa, 0xd, 0xc,
0x0, 0x0, 0xd, 0xb, 0xd, 0xb, 0xa, 0x4, 0x5,
0x3, 0x4, 0x4, 0x2, 0x3, 0x2, 0x9, 0xd, 0xc,
0x9, 0xc, 0xb, 0xb, 0xc, 0x4, 0xb, 0x3, 0x5,
0xc, 0xd, 0xc, 0x8, 0xb, 0xc, 0x3, 0x3, 0x4,
0x2, 0x4, 0xc, 0x1, 0x3, 0xb, 0x5, 0x5, 0x0,
0x3, 0x5, 0x4, 0x4, 0x2, 0xa, 0x4, 0xd, 0xc,
0x4, 0x4, 0x2, 0x4, 0x3, 0x3, 0xc, 0xd, 0xd,
0x8, 0x2, 0x1, 0x3, 0xc, 0x3, 0x1, 0xe, 0xc,
0x5, 0x5, 0xb, 0x5, 0x8, 0xc, 0x5, 0xb, 0xd,
};

static int backbone_model1_conv2_relu2_threshold[64 * 7] =
{ // torch.Size([64, 7])
-13, 37, 88, 139, 216, 318, 523,
27, 72, 116, 161, 227, 316, 494,
-1, 45, 92, 139, 210, 304, 491,
27, 63, 98, 134, 187, 258, 401,
-100, -4, 92, 188, 333, 526, 912,
-45, 12, 71, 129, 217, 333, 567,
-15, 25, 66, 108, 170, 252, 418,
52, 106, 159, 212, 292, 398, 611,
-2, 40, 83, 126, 191, 277, 449,
53, 97, 141, 185, 250, 338, 514,
28, 94, 160, 226, 325, 457, 721,
8, 59, 110, 161, 237, 339, 543,
-6, 41, 89, 137, 209, 305, 498,
42, 83, 124, 164, 225, 306, 468,
-17, 44, 105, 167, 259, 382, 628,
-77, -16, 43, 104, 194, 315, 557,
18, 72, 126, 181, 262, 371, 589,
55, 92, 128, 165, 220, 294, 440,
-24, 33, 90, 148, 235, 350, 581,
-57, 11, 79, 147, 250, 386, 659,
-36, 10, 58, 105, 176, 271, 460,
34, 76, 117, 158, 220, 303, 468,
-26, 37, 102, 167, 264, 393, 652,
6, 64, 122, 179, 266, 381, 612,
5, 43, 80, 117, 173, 248, 397,
34, 69, 104, 139, 191, 261, 401,
12, 56, 100, 143, 209, 297, 472,
34, 73, 111, 149, 207, 283, 436,
51, 123, 194, 266, 373, 516, 802,
81, 133, 186, 238, 317, 422, 632,
37, 99, 161, 223, 316, 439, 687,
-15, 37, 89, 141, 219, 324, 533,
45, 87, 130, 173, 238, 324, 495,
0, 52, 104, 156, 233, 337, 544,
15, 62, 109, 156, 226, 320, 507,
-26, 19, 66, 113, 183, 276, 463,
-12, 48, 108, 169, 260, 382, 625,
41, 85, 129, 173, 240, 328, 505,
48, 100, 152, 203, 281, 385, 592,
-83, 4, 92, 179, 311, 486, 836,
8, 53, 98, 144, 212, 303, 484,
-8, 39, 87, 134, 206, 302, 493,
37, 75, 112, 150, 207, 282, 433,
22, 68, 114, 160, 229, 320, 504,
56, 95, 133, 171, 229, 306, 460,
40, 85, 130, 175, 242, 332, 512,
50, 87, 123, 159, 213, 285, 429,
-63, 24, 111, 198, 329, 503, 851,
-48, 10, 68, 126, 213, 330, 562,
-21, 46, 113, 181, 282, 417, 687,
10, 97, 183, 270, 400, 573, 919,
-6, 38, 83, 128, 195, 284, 463,
11, 68, 125, 181, 266, 380, 607,
111, 149, 188, 226, 284, 361, 515,
-28, 32, 92, 152, 243, 364, 605,
47, 96, 145, 195, 269, 367, 565,
46, 76, 105, 135, 180, 239, 358,
40, 80, 121, 161, 222, 302, 464,
25, 90, 155, 220, 317, 448, 708,
-34, 36, 107, 177, 283, 425, 707,
39, 81, 123, 165, 228, 312, 479,
25, 65, 105, 145, 205, 284, 444,
26, 101, 177, 252, 366, 517, 819,
21, 70, 120, 169, 243, 341, 538,
};

static uint64_t backbone_model2_conv1_conv1_weight[64 * 1*4] =
{ // torch.Size([64, 1, 1, 64])
0xb393c323ad35b802,0xc443bb58443381c4,0xa3333cab24c1cb53,0x4cb44339432bbb41,
0xc0334c34a449524b,0x4c3a3cc8334bbb4b,0x29a2c45144b349c1,0x243410c2bba439b0,
0x02423cb44a4a24cd,0x2485a9cbc8c4a21b,0xc30c333203abc42c,0x5039b92c2b4b1343,
0x3bba03abca85a4dc,0x1abc23b33bad4abb,0x1a9c92b33cc22c3b,0x39c91ccbbb4b9320,
0xc3444c44455a4c44,0x433133343244db52,0xc5cb4c43b4333ca2,0x2a4c2b43cc3b444a,
0x1b1b35bc54bcb3cc,0x1b3b33c4db9cc43b,0xb3cbc302bc1bb4b3,0x2cbbb34a2dabbbbb,
0x24bb4c4cba241b3a,0xa2234534bbcdc33c,0x42b944b3c294841d,0xc4cccb032c44c442,
0x1542ac43344382bb,0x48434132bcabb423,0x54b21a1232bba9a1,0x343b434b4a5d40cb,
0xb34abbc8cc33bbc2,0x4d24ae31cbb23c3a,0x4c84c222b42a33cc,0x9441b3a3c1442cdd,
0x3cc53c24134b4c0a,0x4b3c4b4443ba28c4,0x34b5223244418294,0x93443ca5b43b443c,
0x204b09a4bd254352,0xb4a22d204a323cb0,0x914c3424245c3b9c,0x424a35cc045ab2bc,
0x3c0c4b4b34244343,0x44225534c4bc1a93,0xb44ab4b59b343448,0x48cc2cac3034c324,
0x444ca30c435bb28b,0x3840b33ac433a3b4,0xd429b49c4b8ba3b4,0x3dcc235a43bda32b,
0x53c24c4ca1343bc2,0xa4ca4435331a3bdc,0x120c3083c2a18c5c,0x4a1c3bc9cb4ab352,
0xcbccc43bb2cbb2ba,0xa2b4ccccc1802dbc,0x1aadc4cc3ecc33b3,0x3b2c04bcbc92bd83,
0xcc0b4d43b3abb9ac,0x2a3ab2bbb4cbb3bb,0x1bcbc4b23c3a44c8,0x4330c43bc2824acc,
0xb14ab0b4b3a04434,0x0c4bc3dca43b25a4,0x3340c43a2b334c9a,0x53a3a44c4a4abc44,
0x8c4b342b3a44bc52,0xa282424584034b44,0x433a0433c5434b31,0xcb014c9bd234c34c,
0x3c95bca4b3b43513,0x434cc40ccd4b45b4,0xc344b95a5abbbc43,0xc3c3dc4043b03b3c,
0xc9abc4dc43ccb03c,0xb11bb3daa1aac389,0xcc023b9cac3344b2,0xc3dad19b9bd49d04,
0xb8c4228482305542,0xc820a350b2425294,0x94c1bc324444a1c4,0x3c3a9a2ba40493c4,
0xb45b3a23324b204c,0x5d4bb308c3403351,0x354bc15c04b45c93,0x3c1324493c4cc1bb,
0xb9cc3bbcc3434940,0x43bcb4cc3c415cac,0x43cc3ab5c03a2bb0,0x3dcc4bcc23b33c51,
0xcc300039b1443b94,0x4cd4bbc0dc23842c,0x49cc3acc0bbcb23c,0x84cbc803cb3333bc,
0x43b3492b1cca34c0,0x12dab39a3cccb421,0x4c1c33b29a280319,0x05c3bd10b23c244b,
0xcc8c02b3c01c9945,0x1c2cc2bab40c8933,0x2393d32b40882cc4,0x5338c2c499a4c380,
0xac5404c12c4c4234,0x3b3c4db39945d420,0xbc33cb3a35c543ab,0x44b4b4383c4a0bbc,
0xbbcca34cbab134bc,0x23bd3aaa83b14049,0x4cb0c1243ccac3cb,0x3b4538bc1bbd9b9b,
0x3d405b33acacbc34,0xb5acb83233b1344a,0x3b334223b3444942,0x4ab42c02c4b344bc,
0xab0b0c5825a42d85,0x43bc30c931cb2c2b,0x3c0b4da0bbbbcb38,0xbb3b4cc4cb0b3c11,
0x4cc44cb39c2d4b1d,0xa24243acbb3accb3,0xc4aa424441533243,0x80513bccb234233b,
0xa5acccbc43ca4d4a,0x4c44321bcb31b5b4,0xc4d413cbd09bb4c9,0xb3c83b5442bb33ab,
0xdc443b34434a5c3a,0x4c4d394439bcc345,0x14b3a242a23bbbb4,0x25239c50249944bb,
0xab2cbb3cc9b333b2,0x234848ccc1b0a2b3,0xdb3944c3bb2a33ad,0x54bdbb2b2a59ab38,
0xaccbcabb4a04a34c,0xc00cb213542d4930,0x4b434202b4434193,0x38054ba583c52394,
0xd4410db314c4b53b,0x44bd3a2304848ab3,0xa2e9b34298212cda,0x3340b84b333c333a,
0xbbacb20ccbb33433,0xa33ca52145433ca3,0xc85ab4203c355b40,0x394cccbab333cc54,
0x3bb02c4ba39303db,0xbbba3a13a3cc4ccc,0x3b4db3c230a8534c,0x32a433ccba5aca42,
0xad99943b4bac23b3,0x0bcd4b393c3b3c4b,0x2cca3d21c3aaccab,0xbbc550c3c33ca393,
0x1c33c95454303842,0x538c5944c5232a44,0x0c34354404244c94,0x3c535bc4433b44c4,
0x3ab43cc4cbac4442,0xaabaa24b2030bbd3,0xcb913aa35931ab44,0x34c3a8bc15304a29,
0x0b4cb3b2cda43b93,0xcd3aac03332ba4b1,0x3b44d3bc249413ad,0xb4c4bbad3445aca0,
0xaacab4cd21bba1c8,0xdc4ccbca48a2b403,0xb1a3cdcc0cbcc4a3,0xcaa3b2545abbbac0,
0x53c4b04333bc44ab,0xbdc403224d0ca4c9,0x2daa13ac543cb4c9,0xcc3444413caa33b3,
0xcc2c292b322bbc43,0x2a4b2c44c1b5bb44,0x94c9cb54d3421890,0x0c410cbbaa84cb3b,
0xaa2c324b2494b2c4,0x52a0cb4ac4a22ad3,0x42cbc3b423b2ab9b,0x2bbba0200c3bb40d,
0xabbc344bbc02acb3,0x92c43234bd4c3bcc,0xaacc3cd9c30cca4c,0xccc234b21b02c159,
0x9c403dbbb230435a,0xccb2cb2b295a2cbc,0x4c9c0cbac33b4da3,0xab24bbcaa0c5cb0b,
0x19ac4ccbc233452b,0xa542b4aa443c4cbc,0x2a4b9494c2443a40,0x32411bccbc52cc44,
0x2c234ac4442b232b,0x3ccba3aacdb402b4,0x3cc033c22cc125db,0xcb4ba23ca8c04cbc,
0x42a24b5c4b312bb8,0x240344253d29089a,0x4ab31b12c2c2cc4c,0xc3245dc9c848b458,
0x4c440a2335535441,0x045b4549335b4343,0x3244c54443333c44,0xada54b313024b344,
0xa9b002ca3b4ac8cd,0xdc0ada4349b449bb,0x213441b3a12233a3,0x1b43a0b13202b23b,
0x3c1432343b901a3b,0xcacbbb0349bac3c1,0xbdc442b0333bc3b2,0xa02502a4a4ac3333,
0x44c2334a3b3c902c,0xd2b30424225b4c92,0x3440b344c5423c24,0x9b04443b2c5ad3b4,
0xcb32c59301425343,0xc03c3d333514b345,0xb344c95884443b14,0x3c5a4b0c449ba4d5,
0x3b4914442b44a3c2,0x49a429b324443d3c,0x438db52484b4334d,0x4ba054cbdc40102b,
0xbca243a0c2b211a2,0x3aca10bc33a8accc,0x0c1b38ca3a4b324d,0x554bccd4d2941033,
0xcb3da3bcbabb8445,0x1b2393adc9a33323,0x4c8c03cb9a103bcb,0x4acbc93933232d34,
0x2b33402349ac1c4a,0xac1c0c542c30d234,0x44ca0a3b43b2bcb3,0xcb452b34941c45cc,
0x3bbbd3b233b34440,0xb35433ab9a4d3a40,0xa443c4441cc5ac44,0xdacaabbcab30cc33,
0x4b9833cbb4c9c2c1,0xc42323da44cccc2c,0xcc432302ae34494c,0x933cabccab05bc44,
0x8233cdb2ac34045c,0xb349a22301443c2b,0x23384445c4933a43,0xbd2b3d1c2cacb92a,
0x39044a242a31333b,0xa2b4bc4a4b0b44c8,0x4bc33dc443abc9c3,0x3a25a533a4b143a3,
};

static int backbone_model2_conv1_quant1_threshold[64 * 14] =
{ // torch.Size([64, 14])
-1071, -664, -461, -308, -207, -105, -3, 98, 199, 301, 403, 556, 759, 1166,
-978, -538, -319, -154, -44, 65, 175, 285, 395, 505, 614, 779, 999, 1439,
-970, -638, -472, -347, -264, -181, -98, -15, 67, 150, 233, 358, 524, 856,
-1220, -809, -604, -450, -347, -245, -142, -39, 62, 165, 268, 422, 627, 1038,
-991, -554, -336, -173, -64, 44, 153, 262, 371, 480, 589, 753, 971, 1407,
-1269, -880, -685, -539, -442, -345, -248, -150, -53, 43, 140, 286, 481, 870,
-1128, -714, -507, -352, -248, -145, -41, 61, 164, 268, 371, 527, 733, 1147,
-1036, -637, -438, -288, -189, -89, 10, 109, 209, 309, 408, 558, 757, 1156,
-1328, -888, -667, -502, -392, -282, -171, -61, 48, 158, 268, 434, 654, 1095,
-769, -397, -212, -72, 19, 112, 205, 298, 391, 484, 577, 716, 902, 1273,
-867, -507, -327, -192, -102, -12, 77, 167, 257, 348, 438, 573, 753, 1113,
-724, -341, -149, -6, 89, 185, 281, 377, 472, 568, 664, 808, 1000, 1383,
-1220, -776, -553, -387, -275, -164, -53, 57, 168, 279, 391, 557, 780, 1224,
-1023, -611, -404, -250, -147, -43, 59, 162, 265, 368, 471, 626, 832, 1244,
-1390, -1010, -820, -678, -583, -488, -393, -298, -203, -108, -13, 128, 318, 698,
-970, -627, -456, -327, -242, -156, -70, 14, 100, 186, 271, 400, 571, 914,
-988, -586, -384, -233, -132, -32, 68, 169, 269, 370, 471, 622, 823, 1226,
-729, -377, -201, -69, 19, 107, 195, 283, 371, 459, 547, 679, 855, 1207,
-1108, -675, -459, -297, -188, -80, 27, 135, 243, 351, 460, 622, 838, 1271,
-1408, -975, -759, -596, -488, -380, -272, -164, -56, 52, 160, 322, 538, 971,
-868, -444, -232, -74, 31, 137, 243, 349, 455, 561, 666, 825, 1037, 1460,
-1101, -654, -430, -262, -150, -38, 72, 184, 296, 408, 520, 688, 911, 1359,
-1126, -702, -491, -332, -226, -121, -15, 90, 196, 301, 407, 566, 778, 1201,
-1183, -793, -598, -452, -355, -257, -160, -62, 34, 132, 229, 375, 570, 960,
-1037, -676, -495, -359, -268, -178, -88, 2, 92, 183, 273, 409, 590, 952,
-1079, -676, -475, -324, -223, -122, -22, 78, 179, 279, 380, 531, 732, 1135,
-1034, -611, -399, -241, -135, -29, 76, 182, 288, 394, 499, 658, 870, 1293,
-1004, -670, -504, -378, -295, -212, -128, -45, 38, 121, 205, 330, 497, 830,
-666, -340, -176, -54, 27, 108, 190, 271, 353, 435, 516, 639, 802, 1128,
-1138, -732, -528, -376, -274, -172, -70, 30, 132, 234, 335, 488, 691, 1098,
-952, -592, -412, -277, -187, -97, -7, 82, 172, 262, 352, 487, 667, 1028,
-1194, -774, -564, -406, -302, -197, -92, 12, 117, 222, 327, 485, 694, 1114,
-732, -397, -230, -105, -21, 61, 145, 228, 312, 395, 479, 604, 771, 1105,
-1317, -833, -591, -409, -288, -167, -46, 74, 195, 316, 437, 619, 861, 1345,
-862, -465, -267, -118, -19, 80, 179, 278, 377, 477, 576, 725, 923, 1320,
-1194, -759, -541, -377, -269, -160, -51, 57, 166, 275, 384, 547, 765, 1201,
-1036, -605, -389, -227, -120, -12, 95, 203, 311, 419, 526, 688, 904, 1335,
-964, -613, -438, -306, -218, -130, -43, 44, 132, 220, 308, 439, 615, 966,
-1001, -660, -490, -363, -277, -192, -107, -22, 62, 147, 232, 360, 530, 871,
-758, -336, -125, 33, 138, 244, 350, 455, 561, 666, 772, 930, 1141, 1564,
-1030, -641, -447, -301, -204, -106, -9, 87, 184, 282, 379, 525, 720, 1109,
-962, -607, -430, -296, -208, -119, -30, 58, 146, 235, 324, 457, 635, 990,
-1351, -941, -736, -583, -480, -378, -275, -173, -71, 31, 133, 287, 491, 901,
-1317, -848, -613, -437, -320, -202, -85, 31, 149, 266, 383, 559, 794, 1263,
-1168, -752, -545, -389, -285, -181, -77, 26, 130, 234, 338, 494, 701, 1117,
-844, -533, -377, -261, -183, -105, -28, 49, 127, 205, 282, 399, 555, 866,
-1264, -887, -698, -557, -463, -369, -274, -180, -86, 7, 102, 243, 432, 809,
-1498, -977, -716, -520, -390, -259, -129, 1, 131, 261, 392, 588, 848, 1370,
-840, -458, -267, -124, -28, 66, 162, 257, 352, 448, 543, 687, 878, 1259,
-1185, -776, -572, -419, -316, -214, -112, -10, 91, 194, 296, 449, 654, 1063,
-1115, -693, -483, -324, -219, -114, -8, 96, 202, 307, 412, 570, 781, 1203,
-642, -226, -18, 138, 242, 346, 450, 554, 658, 762, 866, 1022, 1231, 1647,
-529, -336, -240, -168, -119, -71, -23, 24, 73, 121, 169, 241, 338, 531,
-1017, -641, -454, -313, -219, -125, -31, 61, 155, 249, 343, 484, 671, 1046,
-946, -578, -395, -257, -165, -73, 18, 110, 201, 293, 385, 523, 707, 1074,
-976, -539, -321, -157, -48, 61, 170, 279, 388, 497, 607, 770, 989, 1426,
-1241, -748, -502, -317, -194, -70, 52, 175, 298, 422, 545, 730, 976, 1469,
-1004, -638, -455, -317, -226, -134, -43, 48, 139, 231, 322, 460, 643, 1009,
-1104, -717, -524, -379, -282, -186, -89, 6, 103, 200, 296, 441, 635, 1021,
-942, -558, -367, -223, -127, -31, 64, 160, 255, 351, 447, 591, 782, 1166,
-1078, -684, -487, -340, -241, -143, -45, 53, 151, 249, 348, 495, 692, 1086,
-1316, -855, -625, -452, -337, -222, -107, 7, 122, 237, 353, 525, 755, 1216,
-931, -565, -382, -245, -154, -62, 28, 119, 211, 302, 393, 530, 713, 1079,
-860, -497, -316, -179, -88, 1, 92, 183, 274, 365, 455, 592, 773, 1137,
};

static uint64_t backbone_model2_conv1_conv2_weight[64 * 9] =
{ // torch.Size([64, 3, 3, 1])
0x1, 0xa, 0xb, 0x0, 0xb, 0xd, 0x1, 0xb, 0xd,
0xb, 0xc, 0xc, 0x3, 0xc, 0x1, 0x2, 0xc, 0xc,
0x3, 0xb, 0xc, 0x4, 0x8, 0xe, 0x4, 0x3, 0xc,
0x4, 0x3, 0xc, 0x3, 0x4, 0xd, 0x3, 0x4, 0xe,
0xa, 0x3, 0xc, 0xa, 0x2, 0xc, 0xb, 0xd, 0xd,
0xa, 0xc, 0x4, 0xa, 0x5, 0x4, 0x0, 0x4, 0xc,
0xc, 0xc, 0xa, 0x9, 0xc, 0x3, 0xb, 0xd, 0xc,
0xc, 0x1, 0x5, 0xd, 0x2, 0x4, 0xd, 0xb, 0x2,
0x2, 0x4, 0x4, 0x3, 0x5, 0x4, 0x0, 0xb, 0x3,
0x3, 0xb, 0x4, 0xb, 0xc, 0x3, 0xe, 0xc, 0x3,
0x0, 0xd, 0xd, 0x1, 0xb, 0x3, 0xc, 0x3, 0x4,
0x3, 0x0, 0x9, 0x2, 0x3, 0xb, 0x4, 0xa, 0xe,
0x1, 0x0, 0x1, 0xb, 0x5, 0x5, 0xb, 0x4, 0x5,
0xd, 0xb, 0x3, 0xc, 0xb, 0x1, 0xd, 0xb, 0x1,
0xb, 0x0, 0x4, 0xb, 0xc, 0x4, 0xb, 0x4, 0x6,
0x0, 0xb, 0x4, 0x3, 0x2, 0x6, 0xb, 0xc, 0x1,
0xe, 0xd, 0x4, 0xc, 0xc, 0x2, 0x3, 0x0, 0x1,
0x0, 0x3, 0x3, 0xb, 0x0, 0xd, 0xb, 0x2, 0xd,
0xc, 0xc, 0xc, 0xa, 0xd, 0xb, 0xc, 0xa, 0x0,
0xb, 0x3, 0x4, 0xb, 0xb, 0x5, 0x0, 0xc, 0x4,
0x8, 0xd, 0xc, 0x0, 0xb, 0xc, 0xa, 0x2, 0xc,
0xc, 0xc, 0x2, 0x9, 0xd, 0xc, 0x4, 0x2, 0x9,
0xc, 0xb, 0xc, 0x2, 0x3, 0x3, 0x5, 0x6, 0x4,
0x3, 0x2, 0xa, 0xc, 0xa, 0x3, 0xb, 0x5, 0x5,
0xc, 0xc, 0xb, 0xb, 0xc, 0xc, 0x4, 0x4, 0x3,
0x5, 0x5, 0x3, 0x4, 0x3, 0xc, 0x3, 0xc, 0xc,
0x3, 0x3, 0x4, 0xb, 0x4, 0x6, 0xb, 0xc, 0x3,
0xa, 0x8, 0x4, 0xc, 0x5, 0x4, 0xc, 0x5, 0x1,
0x0, 0x2, 0x3, 0x4, 0x5, 0x4, 0x3, 0xc, 0xd,
0x5, 0x5, 0xb, 0x4, 0x4, 0xc, 0x4, 0xa, 0xd,
0xd, 0xd, 0x3, 0xc, 0xd, 0x4, 0x9, 0xa, 0x3,
0xc, 0xc, 0x0, 0xc, 0xc, 0x8, 0xb, 0xa, 0xb,
0x3, 0x4, 0x4, 0xb, 0xb, 0xb, 0xd, 0xd, 0xb,
0x9, 0x9, 0xd, 0x3, 0x9, 0xc, 0xb, 0xc, 0x0,
0x3, 0x2, 0xb, 0x2, 0x5, 0xd, 0x4, 0x2, 0xd,
0x5, 0x3, 0x0, 0x3, 0x4, 0x2, 0x4, 0x5, 0x3,
0xb, 0xd, 0x8, 0x3, 0xc, 0xc, 0x3, 0xa, 0xc,
0xb, 0xc, 0x5, 0xa, 0xc, 0x5, 0xa, 0x0, 0x3,
0xd, 0xb, 0x0, 0xb, 0x4, 0x5, 0xc, 0x2, 0x5,
0x8, 0xe, 0xd, 0x8, 0xb, 0x9, 0xa, 0xb, 0x2,
0x2, 0x2, 0x3, 0xa, 0x3, 0x4, 0xb, 0xd, 0xe,
0x9, 0xb, 0xb, 0xa, 0xc, 0xb, 0x4, 0x5, 0x5,
0xc, 0x3, 0x9, 0xc, 0x5, 0x5, 0x2, 0x3, 0x5,
0x4, 0xb, 0xc, 0x9, 0xb, 0xc, 0xc, 0xc, 0xc,
0x0, 0x4, 0x0, 0xa, 0xd, 0x9, 0xc, 0xd, 0x4,
0x9, 0x5, 0xc, 0xc, 0xc, 0x5, 0x1, 0xc, 0x3,
0x3, 0x5, 0x5, 0xb, 0xb, 0x4, 0xc, 0xc, 0xc,
0x2, 0xb, 0x9, 0x2, 0xc, 0xb, 0xa, 0xd, 0xd,
0x3, 0xb, 0xb, 0x3, 0xb, 0xd, 0x2, 0x3, 0xe,
0x8, 0x0, 0x2, 0xb, 0x0, 0x4, 0x0, 0x5, 0x5,
0x3, 0xc, 0xd, 0x1, 0xd, 0x1, 0xb, 0xc, 0x3,
0x2, 0x3, 0x3, 0x3, 0x4, 0x3, 0x0, 0x5, 0x4,
0x4, 0xb, 0xb, 0xb, 0xd, 0x4, 0xc, 0x5, 0x5,
0x3, 0x1, 0xa, 0x5, 0x4, 0xd, 0xb, 0xc, 0xb,
0xb, 0xb, 0x3, 0xd, 0xb, 0x3, 0xd, 0xd, 0x0,
0xb, 0x4, 0xb, 0xd, 0xd, 0xc, 0xa, 0xb, 0xa,
0x3, 0xd, 0xa, 0x3, 0xc, 0xc, 0xc, 0xb, 0xd,
0x2, 0x9, 0x2, 0x0, 0x2, 0x4, 0xb, 0x5, 0x5,
0x4, 0x3, 0xb, 0x3, 0xc, 0xd, 0xd, 0xc, 0x2,
0xc, 0xd, 0xc, 0xc, 0x9, 0x3, 0x2, 0x5, 0x3,
0x4, 0x5, 0x4, 0xb, 0xb, 0x4, 0xb, 0xc, 0x4,
0xc, 0x3, 0x4, 0xc, 0xa, 0x4, 0xd, 0xc, 0x3,
0xd, 0x2, 0x4, 0xc, 0xb, 0x5, 0xc, 0x3, 0x5,
0xb, 0x3, 0x4, 0xc, 0xc, 0x4, 0x4, 0xd, 0xc,
};

static int backbone_model2_conv1_relu2_threshold[64 * 7] =
{ // torch.Size([64, 7])
-56, 1, 59, 117, 204, 321, 553,
-5, 50, 105, 161, 244, 356, 578,
1, 91, 180, 270, 405, 584, 943,
-53, 37, 129, 221, 358, 542, 909,
-53, 30, 115, 200, 327, 497, 836,
41, 85, 130, 174, 241, 330, 508,
0, 66, 133, 199, 299, 433, 699,
-17, 37, 92, 148, 230, 341, 561,
15, 66, 116, 166, 242, 343, 544,
-74, 22, 119, 216, 361, 555, 942,
43, 83, 123, 163, 222, 302, 461,
-15, 39, 94, 149, 232, 342, 563,
23, 98, 173, 249, 362, 513, 815,
5, 79, 153, 227, 338, 486, 782,
-52, 21, 96, 170, 282, 431, 730,
16, 81, 145, 209, 306, 435, 692,
-49, 46, 141, 237, 380, 571, 952,
31, 77, 124, 171, 240, 334, 520,
-9, 74, 159, 243, 370, 538, 876,
8, 48, 87, 127, 186, 265, 424,
6, 74, 143, 211, 313, 450, 723,
-43, 2, 49, 95, 165, 259, 445,
44, 118, 192, 266, 377, 526, 822,
-29, 17, 64, 111, 181, 275, 463,
41, 83, 125, 167, 230, 314, 482,
8, 68, 128, 188, 278, 398, 639,
40, 99, 158, 217, 305, 423, 658,
-32, 36, 104, 173, 276, 413, 687,
28, 69, 110, 152, 213, 296, 460,
1, 69, 137, 205, 307, 442, 714,
-16, 57, 130, 203, 313, 460, 753,
52, 103, 154, 205, 281, 383, 587,
-43, 23, 91, 158, 259, 394, 664,
51, 97, 143, 189, 257, 349, 531,
58, 93, 128, 163, 215, 284, 423,
-14, 87, 189, 291, 444, 648, 1055,
-38, 22, 83, 144, 236, 358, 603,
-5, 43, 91, 139, 212, 308, 502,
-5, 45, 96, 147, 224, 326, 530,
47, 117, 188, 258, 364, 506, 788,
12, 99, 187, 274, 405, 579, 928,
-18, 36, 91, 146, 228, 338, 559,
73, 131, 188, 246, 332, 447, 678,
8, 49, 91, 133, 195, 279, 446,
5, 68, 132, 195, 290, 416, 669,
41, 90, 139, 187, 260, 358, 552,
-2, 48, 99, 149, 226, 327, 530,
86, 152, 217, 282, 380, 511, 772,
-47, 58, 163, 269, 428, 639, 1062,
-26, 28, 83, 138, 221, 331, 551,
-91, -18, 54, 128, 238, 385, 679,
66, 120, 174, 228, 309, 417, 633,
86, 180, 274, 369, 510, 698, 1075,
17, 53, 90, 127, 182, 256, 403,
-100, -34, 31, 97, 196, 328, 592,
-82, -12, 56, 126, 231, 370, 648,
34, 88, 143, 198, 280, 390, 609,
-16, 47, 112, 176, 272, 400, 657,
40, 93, 146, 199, 278, 384, 596,
0, 62, 124, 187, 281, 407, 658,
40, 90, 140, 190, 264, 364, 564,
-45, 17, 81, 144, 239, 366, 620,
69, 119, 168, 218, 293, 392, 591,
40, 87, 134, 181, 252, 347, 536,
};

static uint64_t backbone_model2_conv2_conv1_weight[64 * 1*4] =
{ // torch.Size([64, 1, 1, 64])
0x0bdcdcac0c2ba854,0x3a3ccc4acdb4c5c3,0x3b19ca8c3b82b304,0xcc93c34c5b305c23,
0xa228cc4343bc35c2,0x33312aaca4442234,0x34233cba83544415,0x34c9c34b2c33b420,
0x4143495432c3322b,0xa4cb433ab3433d5c,0x443aa4a4c33a3a34,0x0a9bdcc5b54b51d4,
0xc4363348d22ab1cd,0xad3b90b3a02c0ac4,0x4cbab234daac343a,0x4cb9b2bc22b0bc04,
0x44cc4003ab934c44,0xabb3aca023cc3244,0x224383bd23403c11,0xbad1404c2da03142,
0xbc9acbd41cc1303c,0x4bc09b8d3cbb44cc,0xc8512bc43bb4444b,0xb2b6b54c914d2c4b,
0x2ca235bccc34bb92,0x313d4222dabcdb22,0xbd039bca42c544c0,0x14dbb9ccb42ab34b,
0x324b31abc9423b2b,0xbab432ca044443a5,0x3015a554845cd333,0x254abc41a3bcabb0,
0x32ca3d323525ccd4,0xa8334c33cb092ccc,0x843102cc3d24cc02,0xaccaa0cacb0ab4ec,
0x314445cb9c4c543c,0x4348b29954ab422b,0x2acc43433ac332bb,0x3460c3344039b224,
0xa913c933b2332c4c,0x2ac323c20b2c9342,0xc4411333c84d448a,0x33d2354dcab3bc85,
0x03c4ccd4bc0c83b1,0xcc3bc4a323a45044,0x34d2a344c3bbc419,0x3c442032494a0322,
0xc243531c399b4c9b,0xb5ab3a3c3b504ab1,0x4344c45344c225b4,0xcb54b942443cba94,
0xdb3c34ab4a453c43,0x4cd4cab20432a3bb,0xc0558c1b53b918c3,0xcd2444ba4b4b5a3b,
0xb4b32c5b2b449bb1,0x344a3ca0cdcd59bd,0xba33b3a354a29443,0xb0b42bc32a3d38a3,
0x134bd480c04c343a,0x33b8c1c24ccb2c44,0x2b5a355094430522,0x24a4c34ac43b4044,
0x11ccbc4241a03534,0x2345448b04934013,0x9a3248b4391cbb34,0x40b15103c385a4bc,
0xb5b3b3b4ac2c413b,0x3312231c4c8c4895,0x2c29b543d44b9382,0x4443a39442c44cb5,
0xdb2ccbb434cac3ab,0x4bd2b4a408dcad41,0xc4b43ccb3bcc4bb2,0x5c3b063bcacad44a,
0x1d44dca1d301b4cc,0xb4acc3b40c1db8ca,0xdbbc99c30bcc2cbd,0x324acab3d5c8d204,
0xc84a25449b223a1c,0xcb00394cedac3b2a,0x3b84c34843d45931,0x0834a1c3bc9c39a2,
0xb94b431a5b2b4b53,0x3b124c48b3b2920b,0xb384332b54c4ca33,0x3a358134ac49baa5,
0xb44424c24c22343a,0x3abcbbdc2c34b4bb,0x4144c32444c22443,0xc344a3c2444dcb34,
0xb353c3524d483acd,0x4db84c8d23bb44b4,0x2b4db4cdc22b3c33,0xb4cc13cbaca4b328,
0x1abcd9d8b38ac544,0x549222a5bbc2bb28,0xcaa393c5292dbdb4,0x4234c93cc1aac45c,
0x23b51310b5c149c4,0x35ac42c434a24c4a,0x854cc4cb343aa541,0xccc253c33b2c154d,
0x2c44325514cc4920,0xd3cc3bcd24243c42,0xb40ca3a32405422b,0xb21d52b424c242c5,
0xa5cbbccbca54cc3d,0x22ac5bd091cb9cad,0xd42b49cc0c4b24cc,0xcc4c134d2c5dab23,
0xcccca9b514ac840a,0x3cca054bd25bbca3,0xab1d4baab2cb4122,0x2d249b0b1b45bbb1,
0xa93b03454403444a,0xc123343bdc5b4c3b,0x2a43a04494ca3244,0x5b45bcb9d34c1ca3,
0x1c34cd42333d35c3,0xa4202b42bba143d4,0x2cc094c425123434,0x5321cb44b4c03225,
0x4442425a3cdb5a88,0x45b23c8a44bc4c3c,0x450205c54524832a,0x3ca4ca55bcac3444,
0x5b33c3b033d8c4b3,0x2ac4d424b938aba3,0xca1cca33ba830a03,0x44dc31e0b8b3c02b,
0x94cc33b2bc4a0d04,0xb1cab1223ac3c4ac,0x1311b42dccbca888,0xbcb89a4d3c3c4a19,
0xdac52c335a4c453c,0xb345352ba4545136,0x21301425c4bbb1b3,0x3c44a41343c5083c,
0x54443c13a3db43ab,0x555bbb43035da3ab,0xb1cb2cb49a424c9e,0x3c5a213258c4b343,
0xb0bb039b3b30d44b,0x0a5b5c49d1bcd0bc,0xab2343cc0cb34c2c,0x3bcbc32a1b3138c4,
0x22ba43cbcba414c9,0x443434324b3444d9,0x2dd3433c4013d424,0xa2454d333ab0251c,
0x2aba443d5382105a,0x4915bd9c2cb353c8,0xbbca41253dc20d4a,0x3203d2cacabbabd4,
0x02a13bd200ccc4b2,0xa48a24bb3424ba04,0x4a243b2ccc4cccc3,0xa30b5c9344c50a4c,
0x24412b4454ba3302,0x21b0433ac03a3d0d,0x43430cb3b3a35a34,0x5c0ab9c3c3484d30,
0xc44ba34c41bcd2ba,0xccc331dd144ba4bb,0x524a2b3dcd4223a5,0x34cdbc0c4ca3a951,
0x449acb2c23c4a44c,0x3d3b1cdbcc9c2534,0x18324d3abc524aa4,0x33ccc11c51b21332,
0xc25ca44d1404c294,0x42443c23c135b03b,0x9b3ab9a03c4ba434,0x4933cba8834abc0d,
0x582b113323c23bb4,0x1ccd2454b224c02a,0x3939d33b234bb353,0x3c8b4b2933a30b42,
0x4c4344abcb43043c,0x024a31c3431a3223,0x34b583382022aaba,0x4649d283a4abc3ba,
0xb5c9acc1c43bcbaa,0x3dbbc504dc4cacc4,0x3d45ac3cbc5b9cb2,0x3ac3baad3b03d32d,
0xc4405142ab2a421b,0xb3ca4bbc052c5042,0x45cb544484c03abb,0xc15a1044c41903c2,
0x3b34440ccd494939,0x13521cc449ca3593,0x22b5c5334233c3bb,0x163cb833a4cc24a2,
0x2ccd8c2c95b3d35a,0x8c41cb3cb2b330dc,0xcd4443c41a32cd32,0x59acbac439bb0cd4,
0x24ab34035baa4c54,0xa2cc444902469ac1,0x4b88b42bb443b455,0x4cb45031434b4ca4,
0x9c414529c995435c,0x544b2b44b38aca89,0xbc0c4c533a3db435,0x04a0c1c23432bc3b,
0x49224ad0caa0cc44,0x313c12931429d38b,0xb2134cabdc3339cc,0x342aa3d023944dbc,
0xa0c3323153b23b44,0x35a3a54440d2255a,0xb3ac3db3049a92c2,0xdcb4818bac4c444c,
0x9a5a3354d0b44a15,0x94bbc33bbbba3324,0x52b4b24144c4a450,0xcb4454a3a35233b3,
0x1adacc2353c2c3cb,0xbc44c42bdc43cad3,0xbc0c8cb2dc043a51,0x43db39bc3c34cbbc,
0x339bb1cdc3c5b3cc,0x2c331bb334285d34,0xbbccbbbdcb2cdabb,0xcb4c4d5bbca4a52c,
0x4b4c2b4122b38c35,0x3bcc9a44a4a3c30a,0x3493aa3b3324b453,0x9c485441a2331a5c,
0xbc3bcc42b3abc83a,0x5c1b34da9dd3bcac,0xd3cbbbd1bdc048b2,0xb81acb94c895b033,
0xd4a23bdb28a4ac31,0x42c2d4d423bcb21d,0x0ac04d549bc2d24c,0xcb494cb4daa3d132,
0xa399a2315b334a13,0x1c344d4bb495342c,0x3cba831b41c38434,0xb9a2bca54c48a924,
0x06a3bc2b4a3bbd4d,0x30241c8bbc3d11c2,0xab434db0b2443d8d,0x2a40cc9d3c3c4a4b,
0x23c4c323aabb4295,0x34ca1aca4dc1bc44,0x2d43c4bc14b40353,0xc804b424532c594a,
0x1958033a32b34a4a,0xb4c4b3cb418c3053,0xa5425b45b53b33ac,0xa4c40d8cd4bba549,
};

static int backbone_model2_conv2_quant1_threshold[64 * 14] =
{ // torch.Size([64, 14])
-1516, -965, -689, -482, -344, -207, -69, 68, 206, 344, 481, 688, 964, 1515,
-1083, -598, -356, -174, -53, 68, 189, 310, 431, 553, 674, 856, 1098, 1583,
-987, -578, -374, -221, -118, -16, 85, 187, 290, 392, 494, 647, 852, 1261,
-1546, -1047, -797, -610, -485, -361, -236, -111, 13, 137, 262, 449, 699, 1198,
-1106, -677, -463, -302, -195, -88, 19, 126, 233, 340, 448, 609, 823, 1252,
-1534, -1044, -800, -616, -494, -371, -249, -127, -4, 117, 239, 423, 667, 1157,
-1360, -918, -696, -531, -420, -310, -199, -89, 21, 131, 242, 408, 629, 1071,
-943, -498, -276, -109, 1, 112, 223, 334, 445, 557, 668, 834, 1057, 1501,
-1398, -939, -709, -537, -422, -307, -193, -78, 36, 151, 266, 438, 667, 1126,
-1343, -781, -500, -289, -148, -8, 132, 272, 413, 553, 694, 905, 1186, 1748,
-1052, -683, -499, -361, -269, -177, -85, 6, 98, 190, 282, 420, 604, 973,
-1393, -882, -626, -435, -307, -180, -52, 75, 202, 330, 458, 649, 905, 1416,
-786, -384, -183, -32, 67, 168, 268, 369, 469, 570, 670, 821, 1022, 1424,
-1290, -805, -563, -381, -260, -138, -17, 103, 224, 345, 467, 648, 891, 1376,
-1163, -729, -512, -349, -240, -132, -23, 84, 193, 301, 410, 573, 790, 1224,
-811, -432, -243, -101, -7, 87, 181, 276, 371, 465, 560, 702, 891, 1269,
-808, -423, -230, -86, 10, 106, 203, 299, 395, 492, 588, 733, 925, 1311,
-985, -569, -361, -204, -100, 3, 107, 211, 315, 419, 524, 680, 888, 1305,
-1271, -839, -623, -461, -353, -245, -137, -29, 78, 186, 294, 456, 672, 1104,
-1541, -1091, -867, -698, -585, -473, -361, -248, -136, -23, 88, 257, 482, 931,
-1378, -911, -677, -502, -385, -268, -151, -34, 81, 198, 315, 490, 724, 1192,
-869, -470, -271, -121, -22, 77, 177, 276, 376, 476, 575, 725, 924, 1323,
-1058, -656, -455, -305, -204, -104, -3, 96, 196, 297, 397, 548, 749, 1150,
-1427, -962, -730, -555, -439, -323, -207, -90, 25, 141, 257, 432, 664, 1129,
-1743, -1084, -755, -508, -344, -179, -15, 149, 313, 478, 643, 889, 1219, 1877,
-1386, -872, -615, -422, -294, -165, -37, 91, 219, 348, 476, 669, 926, 1439,
-1204, -709, -461, -275, -151, -28, 95, 219, 343, 467, 591, 777, 1024, 1520,
-1451, -993, -764, -593, -478, -364, -250, -135, -21, 92, 207, 378, 607, 1065,
-1207, -781, -569, -409, -303, -196, -90, 15, 122, 228, 334, 494, 706, 1132,
-913, -549, -367, -231, -140, -49, 41, 132, 223, 314, 405, 541, 723, 1087,
-457, -190, -57, 42, 109, 176, 243, 309, 376, 443, 509, 609, 743, 1010,
-1133, -638, -390, -204, -80, 43, 167, 291, 414, 538, 662, 848, 1096, 1591,
-1246, -849, -651, -503, -404, -304, -205, -106, -7, 91, 190, 339, 537, 933,
-1494, -1024, -788, -612, -494, -376, -259, -141, -23, 93, 211, 388, 623, 1094,
-1101, -594, -341, -151, -24, 102, 228, 355, 482, 609, 735, 925, 1179, 1686,
-1371, -846, -584, -387, -256, -124, 6, 137, 268, 400, 531, 728, 990, 1515,
-1175, -811, -628, -492, -400, -309, -218, -127, -36, 54, 146, 282, 465, 829,
-981, -587, -390, -242, -144, -45, 52, 151, 249, 348, 446, 594, 791, 1185,
-1673, -1056, -748, -517, -363, -209, -54, 99, 253, 407, 561, 792, 1101, 1717,
-1141, -671, -435, -259, -141, -23, 93, 211, 329, 446, 564, 741, 976, 1447,
-949, -559, -365, -219, -121, -24, 73, 170, 267, 365, 462, 608, 803, 1192,
-1354, -866, -622, -439, -317, -195, -73, 48, 170, 292, 414, 597, 841, 1330,
-1529, -992, -723, -522, -388, -253, -119, 14, 148, 283, 417, 618, 887, 1424,
-1067, -608, -379, -208, -93, 21, 135, 250, 364, 479, 593, 765, 994, 1452,
-822, -473, -299, -168, -81, 6, 93, 180, 268, 355, 442, 573, 748, 1097,
-1072, -632, -412, -247, -137, -27, 82, 193, 303, 413, 523, 688, 908, 1348,
-1608, -1109, -860, -673, -549, -424, -299, -175, -50, 73, 198, 385, 634, 1132,
-988, -557, -342, -181, -73, 34, 141, 249, 356, 464, 572, 733, 948, 1378,
-1125, -667, -438, -266, -151, -37, 77, 191, 306, 421, 535, 707, 936, 1395,
-1619, -1015, -712, -486, -335, -183, -32, 118, 269, 420, 571, 798, 1100, 1705,
-934, -478, -250, -79, 34, 148, 263, 377, 491, 605, 719, 890, 1118, 1575,
-1078, -638, -418, -253, -143, -34, 75, 185, 295, 405, 515, 680, 900, 1339,
-1101, -762, -592, -465, -380, -296, -211, -126, -41, 43, 128, 255, 424, 764,
-1369, -858, -602, -410, -282, -154, -26, 101, 229, 356, 484, 676, 932, 1444,
-845, -431, -224, -68, 34, 138, 242, 345, 449, 552, 656, 811, 1018, 1433,
-1661, -1122, -852, -650, -515, -380, -245, -110, 24, 159, 294, 496, 766, 1305,
-1151, -766, -573, -428, -332, -236, -139, -43, 52, 149, 245, 390, 582, 968,
-786, -414, -228, -89, 3, 96, 189, 282, 375, 468, 561, 700, 886, 1258,
-1596, -1128, -894, -718, -601, -484, -367, -250, -132, -15, 101, 276, 511, 979,
-1755, -1208, -935, -730, -593, -456, -320, -183, -46, 90, 226, 431, 705, 1251,
-940, -542, -344, -195, -95, 3, 102, 202, 301, 401, 500, 649, 848, 1245,
-1671, -1131, -861, -658, -523, -388, -253, -118, 16, 151, 286, 489, 759, 1299,
-1221, -760, -529, -356, -241, -125, -10, 104, 220, 335, 450, 623, 854, 1315,
-1310, -793, -534, -339, -210, -81, 48, 177, 307, 436, 566, 760, 1019, 1537,
};

static uint64_t backbone_model2_conv2_conv2_weight[64 * 9] =
{ // torch.Size([64, 3, 3, 1])
0xa, 0x4, 0x4, 0x4, 0x5, 0x4, 0x4, 0x4, 0x3,
0xc, 0xc, 0xd, 0xc, 0xc, 0xb, 0x3, 0x3, 0x3,
0xb, 0x3, 0xb, 0xc, 0xd, 0xc, 0xc, 0xd, 0xb,
0x4, 0xb, 0xd, 0x3, 0x4, 0xa, 0x2, 0x4, 0x5,
0xc, 0xc, 0x5, 0xc, 0xb, 0x5, 0xc, 0x3, 0x5,
0xa, 0xb, 0xc, 0xb, 0xa, 0xc, 0xb, 0xc, 0xd,
0x4, 0x4, 0xb, 0x3, 0x5, 0x2, 0x3, 0x4, 0x4,
0x3, 0x4, 0x5, 0xd, 0xb, 0x0, 0xc, 0xd, 0xc,
0x3, 0x4, 0x5, 0x4, 0x4, 0x3, 0x4, 0x3, 0x2,
0xc, 0xd, 0x2, 0xc, 0xd, 0x2, 0xa, 0xa, 0x4,
0x9, 0xa, 0x4, 0xd, 0x0, 0x5, 0xd, 0xb, 0x5,
0xb, 0x9, 0xb, 0xb, 0xc, 0xc, 0xb, 0xc, 0xd,
0x4, 0xb, 0xd, 0x3, 0xd, 0xc, 0x4, 0xb, 0xd,
0xc, 0xb, 0xa, 0xc, 0xb, 0xc, 0xa, 0xb, 0xd,
0xc, 0xb, 0x4, 0xe, 0xd, 0x5, 0xc, 0x3, 0x5,
0x3, 0x4, 0x0, 0xa, 0xd, 0xe, 0x2, 0xc, 0xc,
0xd, 0x8, 0x5, 0xc, 0xc, 0x4, 0xb, 0xd, 0xb,
0xc, 0x0, 0x4, 0xb, 0xc, 0x9, 0xc, 0xd, 0xd,
0x2, 0x5, 0xd, 0xc, 0x5, 0x4, 0xc, 0x0, 0x5,
0x4, 0x6, 0x5, 0x0, 0x4, 0x4, 0xb, 0xb, 0x2,
0x3, 0xc, 0xc, 0x5, 0xd, 0xd, 0x5, 0x4, 0x3,
0x9, 0xd, 0xc, 0x4, 0xb, 0xe, 0x5, 0x4, 0xc,
0xc, 0xb, 0x3, 0xd, 0xc, 0x3, 0xd, 0xd, 0x3,
0x4, 0x0, 0x3, 0x3, 0xd, 0xc, 0x1, 0xd, 0xe,
0x5, 0x5, 0x4, 0x4, 0x5, 0x3, 0x2, 0x9, 0x8,
0x0, 0xd, 0xc, 0x9, 0xc, 0xd, 0x8, 0x9, 0xd,
0xa, 0xb, 0x3, 0xb, 0xd, 0xd, 0xb, 0xc, 0xd,
0xc, 0x4, 0x3, 0x3, 0x6, 0x4, 0x4, 0x5, 0x2,
0x9, 0x6, 0x6, 0x0, 0xc, 0x0, 0xb, 0xb, 0xa,
0xc, 0x4, 0x4, 0x2, 0x4, 0x4, 0xc, 0xe, 0xe,
0x2, 0xd, 0xc, 0xc, 0xc, 0x4, 0xd, 0x3, 0x5,
0xb, 0xa, 0xc, 0xc, 0xd, 0xd, 0x3, 0xd, 0x3,
0xc, 0x9, 0x3, 0xb, 0x6, 0xb, 0x4, 0x4, 0xe,
0x4, 0x4, 0x3, 0x5, 0x4, 0xc, 0x4, 0xa, 0xd,
0xc, 0x4, 0x4, 0xd, 0x4, 0x5, 0xe, 0xe, 0xc,
0xc, 0xc, 0xa, 0xd, 0xc, 0xc, 0xc, 0xb, 0xb,
0x3, 0xb, 0xa, 0x4, 0x5, 0xc, 0x3, 0x5, 0x4,
0xb, 0xe, 0xd, 0x9, 0xd, 0xc, 0x4, 0x5, 0x3,
0x4, 0x3, 0x1, 0x4, 0x4, 0x1, 0x3, 0x5, 0x5,
0x5, 0x4, 0x5, 0x4, 0x4, 0x4, 0xc, 0xc, 0xd,
0x5, 0x3, 0x5, 0xb, 0xe, 0xc, 0xa, 0xd, 0xb,
0x3, 0x4, 0x4, 0x3, 0x4, 0x4, 0x0, 0x4, 0x4,
0xb, 0xb, 0xb, 0xd, 0xc, 0xb, 0xc, 0xc, 0xb,
0x3, 0x0, 0x3, 0x3, 0x3, 0x5, 0x4, 0x4, 0x4,
0x0, 0xb, 0x3, 0x2, 0xe, 0x3, 0x6, 0xd, 0x4,
0xb, 0xc, 0x3, 0xd, 0x4, 0x6, 0xd, 0xc, 0xc,
0x4, 0x5, 0x5, 0x3, 0x4, 0x3, 0x2, 0x9, 0x9,
0xc, 0xb, 0x9, 0xd, 0x8, 0x0, 0xe, 0x4, 0x4,
0xb, 0x4, 0x5, 0xd, 0xe, 0xc, 0x4, 0x3, 0xb,
0x4, 0x5, 0x4, 0x5, 0x4, 0x4, 0x9, 0xa, 0xa,
0x0, 0xb, 0xd, 0x5, 0x9, 0xd, 0x4, 0x4, 0xd,
0xc, 0xa, 0xb, 0xc, 0xb, 0xb, 0xc, 0xc, 0xc,
0xc, 0xd, 0xb, 0xc, 0x2, 0x5, 0x5, 0x5, 0x2,
0xb, 0xd, 0xd, 0x9, 0x4, 0xd, 0x4, 0x4, 0x9,
0x3, 0xb, 0x0, 0x5, 0xc, 0x3, 0xb, 0xe, 0xc,
0xa, 0x9, 0x3, 0xb, 0x5, 0x0, 0x3, 0x6, 0x4,
0xb, 0xc, 0x5, 0xc, 0xb, 0x6, 0x9, 0x5, 0x5,
0xb, 0xb, 0xc, 0x2, 0x4, 0xd, 0x3, 0x5, 0xd,
0xb, 0xb, 0xc, 0xb, 0xc, 0xd, 0xa, 0xc, 0xd,
0xb, 0xb, 0xc, 0xb, 0xc, 0xc, 0xc, 0xc, 0xc,
0xb, 0x3, 0x5, 0xc, 0xc, 0x4, 0xb, 0xd, 0xd,
0x4, 0x3, 0xc, 0x4, 0x4, 0xb, 0x5, 0x5, 0xb,
0xd, 0xc, 0xc, 0xc, 0xd, 0xc, 0xc, 0xc, 0x2,
0xc, 0xc, 0xc, 0xd, 0xc, 0xb, 0xd, 0xc, 0xc,
};

static int backbone_model2_conv2_relu2_threshold[64 * 7] =
{ // torch.Size([64, 7])
25, 86, 148, 210, 302, 425, 672,
21, 82, 143, 204, 295, 417, 660,
131, 215, 298, 382, 507, 674, 1007,
116, 166, 216, 265, 340, 440, 640,
75, 142, 208, 275, 374, 507, 774,
37, 106, 175, 244, 348, 486, 762,
55, 121, 188, 254, 353, 485, 750,
152, 224, 295, 367, 475, 618, 905,
-20, 42, 104, 167, 261, 386, 637,
38, 95, 151, 207, 292, 404, 629,
164, 216, 267, 319, 397, 500, 707,
1, 63, 125, 187, 281, 405, 654,
111, 191, 272, 353, 474, 636, 960,
59, 125, 192, 258, 358, 491, 757,
212, 303, 393, 483, 618, 798, 1158,
201, 281, 361, 441, 562, 722, 1043,
148, 211, 274, 338, 433, 559, 812,
79, 156, 232, 309, 424, 577, 883,
157, 213, 268, 324, 408, 519, 741,
110, 205, 301, 396, 539, 729, 1110,
182, 245, 308, 372, 467, 594, 848,
162, 244, 327, 410, 534, 699, 1029,
61, 127, 193, 259, 359, 491, 756,
108, 192, 276, 360, 486, 654, 990,
-43, 32, 108, 185, 299, 452, 758,
-14, 43, 100, 158, 245, 361, 592,
26, 146, 267, 388, 569, 810, 1293,
35, 124, 213, 302, 435, 613, 969,
221, 290, 358, 426, 529, 666, 939,
149, 255, 361, 466, 625, 836, 1258,
170, 302, 435, 567, 765, 1030, 1559,
-27, 40, 107, 174, 275, 410, 679,
148, 226, 304, 383, 500, 656, 969,
126, 187, 248, 309, 400, 522, 766,
108, 213, 318, 424, 582, 792, 1213,
35, 117, 199, 280, 403, 566, 893,
74, 139, 204, 269, 366, 496, 756,
178, 245, 313, 380, 481, 616, 885,
2, 68, 134, 201, 300, 432, 697,
115, 175, 234, 293, 382, 501, 738,
206, 281, 355, 430, 541, 690, 988,
-23, 53, 129, 206, 322, 475, 783,
63, 126, 189, 252, 346, 472, 724,
85, 147, 209, 271, 364, 487, 735,
140, 211, 282, 353, 460, 602, 886,
210, 282, 354, 427, 535, 680, 969,
6, 71, 136, 202, 300, 430, 692,
21, 113, 205, 297, 436, 620, 988,
154, 224, 294, 363, 468, 607, 886,
-107, -48, 11, 70, 159, 278, 516,
152, 226, 301, 375, 486, 635, 932,
23, 82, 141, 201, 290, 408, 645,
113, 183, 252, 322, 426, 566, 844,
97, 146, 195, 243, 316, 413, 607,
141, 207, 273, 339, 438, 570, 834,
31, 110, 188, 267, 385, 542, 856,
198, 282, 366, 450, 576, 744, 1080,
118, 185, 251, 318, 419, 552, 820,
68, 134, 200, 267, 366, 498, 762,
72, 118, 163, 209, 277, 368, 550,
94, 166, 238, 311, 419, 563, 851,
63, 146, 228, 311, 434, 600, 930,
53, 131, 208, 286, 402, 558, 869,
-13, 55, 124, 194, 298, 437, 714,
};

static uint64_t backbone_model3_conv1_conv1_weight[64 * 1*4] =
{ // torch.Size([64, 1, 1, 64])
0x853da3a33aa33440,0xb1129234c34c0430,0xcb93cb38d0bb4444,0x4ba334a4b4b1332c,
0x4a15415ac13ac44b,0x0304ccb3ba45b40a,0xcb9bc283c36444b4,0x2aaac41c42a16c24,
0x42ac3bba28a99043,0x9c0943d191c44c3b,0x3b31a3c04c09bb99,0x54bbbbc434cbd321,
0x33193cc9cc315a40,0xa32b4852bb43c0cc,0xbd141c34443421aa,0x3b4b401a3349abcc,
0x243c44ac191c3ab8,0xacab353c40d14b3b,0xc2329d3394b11b9b,0x33292c2c1b4b1c28,
0x49233bc2aaa3023c,0x20b2c2d322d424a8,0x9c39c2cb9103a0b4,0x5942dbc3234c3234,
0xc4a4c4b98323b531,0x3a0b0bba3bccb834,0x3bb0bb24da536c4a,0x4b3a8ac2a003cc2c,
0x4149543d225d39a3,0x2c3325abc84b40ac,0xcd44d9c433c43bc4,0xab43ba4dbc543293,
0x3c13a0423820bdb4,0xc43c34384bbcb4c3,0x3b44131930b5ca14,0x3a54b24134bc3a28,
0x21cc304b2baad03b,0xbc3a534ca3b35c34,0x36ac04a9bb51bc8c,0xcb594c24c22b60c3,
0x2da241a59cab41ca,0x4ba030aa4d2c849a,0xc3b1a3d43283b448,0x3bb4c003434a312a,
0x81c4cb00a3b3cab3,0x0b3ac9d34dc1a212,0x333291a52a234192,0xa320cccc334b3a43,
0xaaaccd4ba3c2032a,0xb33a3a2b4aa3d524,0x3c044cbb90a5cc44,0xb1d4494a1ba09bc2,
0xda92a8b112321bb3,0x88341c42aa3ab3c9,0x2c34c943a43943c1,0xb449a31d392144c2,
0x20dabba13b3003c9,0xbcc303bcd9d441b4,0xc244bbb9b8249333,0xbd53bda4863c52cc,
0xd4333b8c4ba89b02,0x134a439ba1c241c2,0xba39ccbb452acc82,0xca249c5512291cb9,
0x22301ccb4599333a,0x5c95c92ba424b435,0x4243bc4848242b92,0xa983a1b3cb30ab9c,
0x4b0cc8b592919434,0x44484323032c8ccb,0xbba82993cbbcb5a1,0xa21cc2bb2ca4459b,
0x4bc412b3a84c28b3,0x434c19bcad04ba12,0xbb2324a45b049cc8,0x0abccb312adbbbc5,
0x22b0a43a42331034,0x30393309d2acb234,0x0c54c9a0c5dc13b0,0x3a31cc334c8024b4,
0xbc992322dc51a33d,0x44393c405d232042,0x14db45443c33b243,0xb329334a33214cca,
0x844a44c1a2ba3bc0,0x8342b34bcdaa4ba9,0xc1bbbbcab0abcb42,0x4ab2324093b2c3d3,
0x3a030a31ab0c3b40,0xb2a15421b2bbc0cb,0xce1293bb413b3b34,0x225bba1300b880da,
0x234342c2ccc03d20,0x23ccc42444234cdc,0xd234b3c444c3d43a,0x4112449b43ac3340,
0xb3bc3ac334bbcbaa,0x488aa04a13b95a22,0x343b3a9b12a9d93c,0x38c0b0219b09ea32,
0x4bda43533a4bba4a,0x842d3c4b043c4bba,0x432a9b8cacd9213b,0x243cc5bbacad3aa9,
0x23c9b0381c093a2c,0xdc2b40330a393c23,0xaa24eb8442c4a412,0x0b03103a344c92c4,
0x2da4a4a5494c3384,0x333323c3db2a3a3a,0xab33b3a4bb2c84cb,0x3d342cb33233c431,
0x2ac8301dc29bb1b9,0xdc8004bc4413b143,0xc1814c135c340db4,0xb04bbbccc5124c38,
0xc3bcc40393b4c0c8,0xa0324442ca0b5b42,0x139335a4dcbb5341,0x9442a412c8041414,
0xd2b92b1529b0b232,0x43903ca48454c0c4,0x354405443214c428,0x03b343b324c2b3ac,
0xbc3bbbc8224c21c5,0x942bbb4c2cdc34ca,0x4b452b3bb884aab3,0xc423bc4b44b3baac,
0x343cc9cac2d3cb8b,0x3219a82a42ca2a93,0x140c5acb28b3c84a,0x41c02313a03bbb3c,
0x2bac32ba92cb2c2a,0xcb9043a0a434c3b0,0xbcabbcc940ccbb2a,0xbb0bc1c4ccaa1b5c,
0xc3b4b3cadda4ac4d,0x090bb492344bcabc,0xccbbb4a121a54b03,0x093024c93b4b4b4b,
0xb12ab0ac5a4ba33b,0x04633acc32b31c4a,0x11cea33b4c0c0b8a,0xbcb2bb334b830da4,
0x53bbbc3aaa8c303a,0x2b3a0ad3a4c4c410,0xa9844cbb0cb34245,0x23a93bd3441b1084,
0x13cb522024313443,0x4b13513aba4b1bcb,0xac9c8ab1342b04ad,0x3b4d33c3a34d119c,
0xacbb2bbccb4b4b40,0xb4bc034bbcab32bb,0x4b2c4c5b3cb98ca9,0xdb392d38c21ac98d,
0x33d4a9c9ba932442,0x042b93c34cd802a1,0x124330c44543b13c,0x3b22cc35494bcb3c,
0x4c9b3204babb94ad,0x4c23a835a20ab333,0x48c4acca34230438,0xcc202aa2d03b34b3,
0xcb3c15ba34bc4ddb,0xccc9a52bb33a53b9,0xcbc2488b3cd4ca3b,0xc53babc1b3c3b35a,
0x923a44cbbdad42cb,0xdc4dda4b3d3c3cad,0xbac0bdbc2ba828aa,0xba4caaacca1433ab,
0x25a4422ca34cbbaa,0xcbbbb23b3adb38b0,0x49a8bb5013304d3a,0x540a2184bc32ac32,
0x34434c4b43443b44,0x0bc93cab54440bc9,0xb3903b323cac814b,0x5ccb453330c24d9c,
0xc4c43db0cbc504cb,0x49921cb33c4bab30,0x42bcbccb42acb43c,0x1bccb4acac4bb4d4,
0x1ccc3bcc0ba3cb42,0x434c2ad433ac5349,0x420333c412b0220c,0xcccacb443abdcb53,
0xd95b3409cbca4acc,0xb302334c2b4daa42,0xb5bc0ccd3bbbccb4,0xa2c55444c3558b34,
0xbbba5a993c21b22c,0xb32a24abc3b3b39a,0x0220dbccbb024c43,0x2b025a45c3cbad31,
0xd41b01cbc12b8b44,0x9403843b4a31a3da,0x13493143c9c0c9a4,0xcb442b338a130a2d,
0x0ab203c343441384,0xb2ba5420248c3d3b,0x3b54d333a32c20c3,0xabc04c1ccc43c234,
0x3bc4c139b24049cb,0xc291358bac4c3b9a,0x4bcc3004ccbc201c,0xbb3bc9cbbd5a3a4c,
0x9cd32aba2b43c24b,0xac3343b3494213a3,0x5b22cca15ab3523b,0xbc8b30020b5cb813,
0xb44cb92b924433c3,0x414a13da492ba139,0xcb3303335ba43c44,0x3cccbb3ba3d4a0a1,
0x3c33432b31bb44c4,0x1408cbb03d4ca043,0x5bc253dccc3983cc,0xc2cb4344acc5c3a3,
0xb9cb9c49cba3cb09,0x3b0c4c423dbca4a3,0xb4345bbab02b8052,0xc4c3b444ccbd3ac3,
0xccc2c40930a30842,0x813323c2424a4941,0x31cc24d4bccc3a0d,0xbbcb92342d321c5b,
0x9aab32dabccb5cbb,0x9bc2b30432ba1cbc,0x00b222b290cbd21c,0x02cc24ba3a41b3b9,
0xc1032114c3c0ab94,0xccdba1a5a33c9892,0xa94482bd22130bd3,0xa3aa3dc9ca32b43b,
0x44b035bb228494cc,0x2423935bcccc2943,0xa3ac333b25c23b3b,0x0438c42dc00bc3c3,
0xbbac1ab8b90cbb0b,0xa19bb43aca8bca0c,0x8caab0c2b3bbbbbb,0xbb9b09acbabccaa0,
0x23b2333bb5c2a409,0x3cc39b4c21c33b22,0xc3cc323ab4429d4b,0x34394339c3b40cc4,
0xabc3cac89a93ca3c,0xc3b225d3214b101a,0xbbaac2b44daa223a,0x3bb23ac3b39bb25c,
0x52b2abbab8c2ab43,0x203c3bb3b3c22448,0x4331444bcabb9cc0,0x35ccbc320c3a2325,
};

static int backbone_model3_conv1_quant1_threshold[64 * 14] =
{ // torch.Size([64, 14])
-963, -604, -425, -290, -201, -111, -22, 67, 157, 246, 336, 470, 649, 1008,
-1086, -620, -387, -212, -95, 21, 137, 254, 370, 487, 604, 779, 1012, 1478,
-1152, -771, -581, -438, -343, -248, -153, -58, 36, 131, 227, 369, 560, 940,
-847, -524, -362, -241, -160, -79, 1, 82, 163, 244, 325, 446, 608, 931,
-834, -539, -392, -281, -208, -134, -60, 12, 86, 159, 233, 344, 491, 785,
-979, -644, -477, -351, -267, -183, -100, -16, 67, 151, 234, 360, 527, 862,
-922, -571, -395, -263, -175, -87, 0, 88, 176, 263, 351, 483, 659, 1011,
-1114, -718, -521, -373, -274, -175, -76, 22, 121, 219, 318, 466, 664, 1059,
-776, -477, -327, -215, -140, -65, 9, 84, 159, 233, 308, 420, 570, 869,
-952, -579, -392, -252, -159, -66, 27, 120, 213, 307, 400, 540, 726, 1100,
-811, -534, -395, -291, -222, -152, -83, -14, 55, 124, 193, 297, 436, 714,
-1090, -712, -523, -381, -286, -192, -97, -3, 91, 186, 280, 422, 611, 989,
-888, -572, -415, -296, -217, -138, -59, 18, 97, 176, 255, 374, 531, 847,
-939, -600, -431, -304, -219, -134, -49, 35, 119, 204, 289, 416, 586, 925,
-981, -659, -498, -378, -297, -217, -136, -56, 24, 104, 185, 305, 466, 788,
-677, -411, -279, -179, -113, -46, 19, 85, 152, 218, 285, 384, 517, 783,
-731, -416, -259, -141, -63, 15, 93, 172, 251, 329, 408, 526, 683, 997,
-685, -432, -305, -210, -147, -84, -20, 42, 105, 168, 232, 327, 453, 707,
-977, -636, -465, -337, -251, -166, -81, 4, 89, 175, 260, 388, 559, 900,
-1001, -633, -449, -310, -218, -126, -34, 57, 149, 241, 333, 472, 656, 1024,
-776, -434, -263, -134, -48, 36, 122, 207, 293, 379, 464, 593, 764, 1106,
-962, -630, -464, -340, -257, -174, -91, -8, 74, 157, 240, 365, 530, 862,
-974, -648, -485, -363, -281, -200, -118, -37, 44, 125, 207, 329, 492, 818,
-834, -525, -371, -255, -177, -100, -23, 53, 130, 208, 285, 401, 555, 864,
-996, -646, -471, -339, -252, -164, -77, 10, 97, 185, 272, 404, 579, 929,
-1066, -705, -525, -390, -300, -209, -119, -29, 60, 150, 241, 376, 556, 917,
-1107, -740, -556, -418, -327, -235, -143, -51, 40, 132, 223, 361, 545, 912,
-767, -484, -342, -236, -166, -95, -24, 45, 116, 187, 257, 363, 505, 787,
-1112, -732, -542, -400, -305, -210, -115, -20, 74, 169, 264, 406, 596, 975,
-827, -496, -330, -206, -123, -40, 41, 124, 207, 290, 373, 497, 662, 994,
-862, -501, -321, -185, -95, -4, 85, 175, 265, 356, 446, 582, 762, 1123,
-976, -616, -436, -302, -212, -122, -32, 57, 147, 237, 327, 461, 641, 1001,
-781, -499, -358, -253, -182, -112, -41, 28, 99, 169, 240, 345, 486, 768,
-1092, -731, -550, -415, -324, -234, -143, -53, 36, 127, 217, 353, 533, 895,
-986, -650, -482, -356, -272, -188, -104, -20, 63, 147, 231, 357, 525, 861,
-852, -540, -383, -266, -188, -110, -32, 46, 124, 202, 280, 397, 554, 866,
-902, -566, -398, -272, -188, -104, -20, 63, 147, 231, 315, 441, 609, 945,
-1014, -665, -491, -360, -273, -186, -99, -12, 74, 162, 249, 379, 554, 902,
-1060, -707, -530, -397, -308, -220, -131, -43, 45, 133, 222, 354, 531, 885,
-915, -563, -387, -254, -166, -78, 9, 97, 185, 273, 362, 494, 670, 1022,
-676, -416, -287, -189, -124, -60, 4, 69, 134, 199, 264, 361, 491, 750,
-1231, -845, -653, -509, -412, -316, -220, -123, -27, 68, 164, 309, 501, 886,
-1455, -1013, -792, -626, -516, -406, -295, -185, -74, 35, 146, 311, 532, 974,
-722, -443, -304, -199, -129, -60, 9, 79, 149, 218, 288, 393, 532, 811,
-783, -443, -273, -146, -61, 23, 108, 193, 278, 363, 448, 575, 745, 1084,
-996, -661, -493, -367, -283, -199, -115, -31, 52, 136, 220, 346, 514, 850,
-1083, -693, -498, -351, -254, -156, -58, 38, 136, 233, 331, 477, 672, 1063,
-1070, -667, -466, -315, -214, -114, -13, 87, 187, 288, 389, 540, 741, 1144,
-851, -529, -368, -247, -167, -87, -6, 73, 154, 234, 315, 435, 596, 918,
-726, -460, -327, -227, -160, -94, -28, 38, 104, 171, 237, 337, 470, 736,
-807, -512, -364, -253, -179, -105, -32, 41, 115, 189, 263, 374, 521, 817,
-1041, -694, -520, -390, -303, -216, -129, -42, 43, 130, 217, 347, 521, 868,
-959, -606, -429, -296, -208, -120, -31, 56, 144, 233, 321, 453, 630, 983,
-915, -576, -407, -280, -195, -111, -26, 57, 142, 227, 311, 438, 608, 946,
-1060, -693, -509, -371, -279, -187, -95, -3, 88, 180, 272, 409, 593, 961,
-832, -542, -397, -288, -216, -143, -71, 1, 73, 146, 218, 327, 472, 762,
-897, -553, -382, -253, -167, -81, 4, 90, 176, 262, 348, 477, 649, 992,
-952, -641, -486, -369, -292, -214, -136, -59, 18, 96, 173, 290, 445, 756,
-1030, -709, -549, -428, -348, -268, -188, -108, -27, 52, 132, 252, 413, 733,
-812, -487, -324, -203, -121, -40, 40, 121, 202, 284, 365, 487, 649, 974,
-1116, -765, -590, -458, -370, -282, -195, -107, -19, 68, 155, 287, 463, 814,
-763, -461, -309, -196, -120, -44, 31, 106, 182, 258, 333, 447, 598, 901,
-1171, -778, -582, -435, -337, -239, -141, -43, 54, 152, 250, 397, 593, 985,
-901, -547, -369, -236, -148, -59, 29, 117, 206, 294, 383, 516, 693, 1048,
};

static uint64_t backbone_model3_conv1_conv2_weight[64 * 9] =
{ // torch.Size([64, 3, 3, 1])
0x9, 0x0, 0xa, 0xc, 0xc, 0x0, 0xc, 0xc, 0xa,
0xa, 0xa, 0xc, 0xa, 0xc, 0xc, 0xb, 0xc, 0x9,
0x1, 0xc, 0x2, 0x4, 0xb, 0xc, 0x3, 0x3, 0xc,
0x4, 0x3, 0xb, 0xb, 0xd, 0x1, 0xb, 0xc, 0x2,
0x4, 0xa, 0x2, 0x3, 0xc, 0xd, 0x3, 0xa, 0xc,
0xc, 0xb, 0x3, 0xc, 0xb, 0x4, 0xb, 0xb, 0x4,
0xb, 0x4, 0x5, 0xc, 0x4, 0x4, 0xa, 0x2, 0xa,
0x4, 0x3, 0x3, 0x3, 0x4, 0x2, 0x0, 0x4, 0x3,
0xc, 0xa, 0xa, 0x4, 0xd, 0xb, 0x4, 0x2, 0x2,
0xb, 0x3, 0xc, 0xb, 0xd, 0xb, 0x2, 0xc, 0x3,
0x3, 0xb, 0xd, 0xa, 0x4, 0xc, 0x3, 0x4, 0xa,
0x4, 0x4, 0x4, 0x1, 0xb, 0x9, 0xc, 0xc, 0xc,
0x0, 0x4, 0x9, 0xc, 0x5, 0x3, 0xc, 0xd, 0xb,
0xc, 0xc, 0x3, 0xb, 0x3, 0x4, 0x3, 0x4, 0x2,
0xc, 0x9, 0xc, 0x2, 0xc, 0xc, 0x0, 0xc, 0x1,
0x5, 0x2, 0xb, 0x4, 0xc, 0xb, 0x2, 0xc, 0xa,
0xb, 0xa, 0x2, 0xa, 0x6, 0xb, 0x2, 0xa, 0x2,
0xc, 0x2, 0x5, 0x0, 0xc, 0x5, 0xa, 0xc, 0xa,
0x3, 0xa, 0xb, 0x9, 0xc, 0x4, 0x9, 0x5, 0x5,
0x1, 0x5, 0x9, 0xc, 0xb, 0xb, 0xc, 0xb, 0xa,
0x4, 0x5, 0x3, 0x0, 0x3, 0x9, 0xb, 0x1, 0xa,
0xb, 0x4, 0x5, 0xb, 0x2, 0x3, 0xc, 0xb, 0xc,
0xe, 0xb, 0x1, 0xb, 0x4, 0x2, 0x1, 0x3, 0x2,
0xa, 0xe, 0x0, 0xa, 0xa, 0x2, 0x2, 0x2, 0x9,
0x4, 0xb, 0xd, 0x4, 0x2, 0xb, 0x2, 0x3, 0x3,
0x3, 0xd, 0x9, 0x3, 0xc, 0xb, 0xa, 0x9, 0xc,
0x9, 0x2, 0x2, 0x3, 0xd, 0x3, 0x1, 0xd, 0x3,
0x4, 0x4, 0xc, 0x3, 0xc, 0xc, 0xc, 0xc, 0xb,
0xa, 0x2, 0xb, 0xb, 0xb, 0xb, 0xc, 0xd, 0xa,
0x0, 0x4, 0x4, 0xb, 0xc, 0x3, 0xc, 0xd, 0x9,
0x5, 0x4, 0xb, 0x5, 0xb, 0xb, 0xb, 0xb, 0xb,
0x2, 0xb, 0x0, 0x1, 0x6, 0x1, 0x0, 0x3, 0xb,
0x0, 0x4, 0x3, 0x2, 0x1, 0xd, 0x0, 0xc, 0xc,
0xa, 0x2, 0x3, 0x3, 0x4, 0x5, 0xa, 0x2, 0x8,
0x0, 0xe, 0xb, 0x0, 0x3, 0x9, 0xc, 0xa, 0x2,
0x1, 0x2, 0xa, 0x3, 0x5, 0x3, 0x8, 0xd, 0x1,
0x3, 0x4, 0x5, 0xb, 0x3, 0x3, 0xc, 0xc, 0xb,
0xb, 0xb, 0xa, 0xd, 0x4, 0x0, 0xd, 0x0, 0xa,
0x4, 0x4, 0x4, 0x4, 0x3, 0x3, 0xd, 0xc, 0xc,
0xc, 0xb, 0x4, 0x0, 0x3, 0x5, 0x3, 0x2, 0x3,
0x2, 0x0, 0x1, 0x8, 0xc, 0xc, 0x2, 0x5, 0xb,
0xb, 0xd, 0x8, 0xc, 0x2, 0x3, 0x1, 0x3, 0xb,
0x2, 0x1, 0x4, 0xc, 0xe, 0x0, 0x8, 0x0, 0x0,
0x9, 0x4, 0x3, 0xd, 0x4, 0x3, 0xc, 0xa, 0x4,
0x1, 0x2, 0x4, 0x3, 0x5, 0x3, 0xc, 0xd, 0xc,
0x2, 0x2, 0x8, 0x0, 0x4, 0x0, 0xa, 0x5, 0x4,
0x3, 0x5, 0x3, 0xb, 0x4, 0x0, 0xb, 0x3, 0xb,
0x2, 0xc, 0xc, 0x9, 0xd, 0x0, 0xa, 0xc, 0x0,
0x1, 0x3, 0x3, 0x3, 0x4, 0xc, 0x5, 0x3, 0xb,
0x3, 0xa, 0x8, 0x0, 0xd, 0x1, 0xa, 0x3, 0x4,
0x4, 0x3, 0x1, 0x0, 0xd, 0xc, 0xc, 0x0, 0xa,
0x4, 0xa, 0xc, 0x4, 0x3, 0xc, 0x4, 0x2, 0xd,
0x4, 0x3, 0xd, 0x3, 0x3, 0xc, 0x4, 0x9, 0xc,
0x3, 0xc, 0xc, 0x3, 0x1, 0xb, 0x5, 0x4, 0x0,
0xa, 0xd, 0x0, 0xb, 0xc, 0x3, 0xa, 0xb, 0xa,
0x2, 0x0, 0xc, 0xb, 0x5, 0x4, 0xa, 0xb, 0x5,
0xd, 0xc, 0x0, 0xc, 0xa, 0x3, 0x2, 0x3, 0x3,
0xb, 0x4, 0x4, 0x4, 0x8, 0x0, 0x3, 0xd, 0xb,
0xc, 0xd, 0x3, 0x3, 0x5, 0x3, 0x2, 0xa, 0xa,
0xb, 0x3, 0xb, 0x0, 0x0, 0xa, 0x2, 0x5, 0x5,
0x3, 0x3, 0x2, 0x2, 0x4, 0x1, 0x2, 0x4, 0x0,
0xd, 0x1, 0x3, 0xd, 0x3, 0x1, 0xa, 0x2, 0x9,
0xc, 0x1, 0x3, 0xc, 0x8, 0x3, 0xc, 0x2, 0x5,
0x3, 0x3, 0xb, 0x2, 0x4, 0xb, 0xa, 0x4, 0x5,
};

static int backbone_model3_conv1_relu2_threshold[64 * 7] =
{ // torch.Size([64, 7])
15, 57, 99, 141, 203, 287, 454,
28, 79, 131, 182, 259, 362, 568,
14, 50, 87, 123, 177, 249, 393,
-14, 28, 71, 114, 179, 265, 437,
11, 62, 114, 165, 243, 346, 552,
32, 65, 99, 132, 183, 250, 384,
-1, 50, 103, 156, 235, 340, 551,
27, 78, 129, 180, 256, 357, 561,
-3, 36, 76, 115, 175, 254, 413,
-63, -12, 38, 88, 165, 266, 469,
7, 47, 88, 128, 189, 269, 431,
35, 68, 101, 134, 183, 249, 381,
17, 58, 98, 139, 201, 282, 445,
19, 53, 88, 122, 174, 243, 381,
-18, 37, 94, 150, 235, 348, 573,
82, 127, 173, 219, 288, 379, 562,
-76, -15, 45, 107, 199, 322, 568,
86, 125, 163, 202, 261, 338, 493,
-2, 38, 79, 120, 181, 263, 427,
13, 50, 87, 124, 179, 253, 400,
36, 98, 160, 222, 315, 439, 687,
-55, -10, 34, 80, 147, 238, 418,
30, 69, 108, 147, 206, 284, 440,
16, 70, 125, 179, 261, 370, 588,
4, 46, 87, 128, 190, 272, 437,
-15, 29, 74, 120, 187, 278, 458,
17, 65, 113, 161, 233, 328, 520,
51, 89, 127, 166, 223, 299, 451,
9, 59, 109, 159, 234, 334, 533,
20, 70, 121, 171, 247, 347, 548,
-26, 31, 88, 145, 232, 347, 577,
4, 58, 112, 166, 248, 356, 572,
-60, -8, 43, 95, 173, 277, 486,
0, 37, 73, 109, 164, 237, 382,
-2, 55, 113, 170, 257, 372, 603,
48, 93, 137, 181, 248, 337, 514,
24, 62, 99, 137, 193, 269, 419,
-28, 21, 71, 121, 197, 297, 498,
4, 48, 91, 134, 198, 285, 457,
-4, 43, 91, 139, 211, 308, 500,
55, 86, 117, 147, 193, 255, 377,
-33, 12, 58, 104, 173, 265, 450,
-7, 65, 139, 213, 324, 472, 768,
68, 103, 137, 172, 224, 294, 433,
-6, 42, 92, 141, 215, 314, 512,
4, 48, 93, 137, 204, 293, 471,
-20, 51, 124, 196, 305, 450, 739,
-71, -11, 49, 110, 201, 322, 565,
-17, 27, 72, 117, 185, 275, 455,
37, 79, 121, 164, 227, 312, 481,
4, 43, 83, 123, 182, 261, 420,
-38, 14, 68, 122, 203, 310, 525,
6, 52, 98, 144, 214, 306, 490,
-17, 31, 80, 130, 203, 301, 497,
1, 40, 80, 120, 179, 259, 417,
-36, 16, 69, 122, 201, 307, 519,
-3, 40, 84, 128, 194, 282, 458,
24, 56, 87, 118, 164, 227, 351,
43, 74, 105, 136, 183, 245, 369,
-5, 41, 89, 137, 208, 304, 495,
13, 38, 64, 90, 129, 180, 284,
41, 80, 119, 158, 216, 295, 451,
-21, 19, 60, 100, 161, 243, 406,
-18, 25, 68, 112, 177, 264, 438,
};

static uint64_t backbone_model3_conv2_conv1_weight[64 * 1*4] =
{ // torch.Size([64, 1, 1, 64])
0x0cbd2ca343c403a5,0x2bb80bac3ccda4c3,0xa2a4aa14a4402331,0x4c3bd3ba3a5bb34a,
0xccaba313338242a3,0xbc33291ac90c0a24,0x0bd130a02a9203b0,0x23432094cba41258,
0xad4c8a4cbb82abba,0x5bb2bc39a2d4bcc4,0x4b8bab052aac2b23,0xcd3242bba2c3b2da,
0xa452b0b9bbba30a3,0x24ab1cc0aa9aa133,0x3c444bc9314cbcb9,0xbaa94b33532c1a4c,
0xc43a3283bc414baa,0xcc120abb3bbbcbc0,0xc2bab38ccd23bbbb,0x34cac0ba4c0242a3,
0xabc421922b214023,0xaca024b1b4ac14c2,0xa3b23334a423829a,0x93a994c1b33249b1,
0xcb2c831bb1c1aa4c,0x33245893cb90b8ac,0xb0b3c8ab3ba522bb,0x22b9034cc39aac9b,
0xc0c308bca232b9a3,0xba23334243bc0aa8,0xc5a43832b9383ab1,0xcb399193a3bcb3bc,
0x33cc33099ac3ba3b,0x0334bb49bdabc2b9,0xac09cbc2bbc3a230,0x33a9cc091ca4a4c2,
0x43a1c2bc9d90bb1b,0x34b0cccbc94c4aca,0x1b1a222434c0b390,0xc22b2bb8c4c804b4,
0x34040bb4abc504a3,0x0acad0b3b3c31934,0x0c33b3224b3b234b,0x43934d903da43234,
0xa3b3bbbcccc13b34,0x239ccca234bb0324,0xbba3d40a304a0349,0x42100d801c142234,
0x2bb4a34a33bca343,0x3c33234323caa831,0xba3a42c435938a0b,0xabbacbd302b14ca3,
0x434313ab24bb4412,0x4482b403b19b3432,0x039429caa4bbaa04,0x3481b3443a0b3c52,
0xb9a50b40194283a4,0x3adb00a2a44a2844,0xa9c9c449b2c3a3ab,0xa4b45cbbab5301bb,
0x38334253cb2a2b43,0x23411cb392294caa,0xb3030292c228a32b,0x1a2d2b02928a4b19,
0x40cd33cb30c3c240,0x45a9c038cbbb33ba,0x0b4bc0c2b1b0235b,0x339bdc0a1cb880c4,
0x123ac91b14b233c3,0x3b1a024a833ba59b,0x4cc243bc4a1c4324,0xa3a8c243a2403b33,
0x23c4ab3ababc9aba,0x33c533b4a5144043,0x9cb4cba34311c2c1,0x9a444a9a32aa932a,
0xbb20bb228b923424,0xcbc090aa30c903a1,0x1bac932bb8aa3249,0xcca322bbb83030bc,
0xb303913243ba4333,0xc3b31c9303c2b332,0x142a2db3a329383e,0x2192232c0a22baaa,
0xc0c113b984a2c3c3,0x422324311a13a942,0x243112323a323204,0x3b3334433b1bc24a,
0x4229a313badc10aa,0xbb349a42d3abba24,0x4c99bcb299a21580,0x223a4bb32d2423a2,
0xb9a3bb2b33888402,0x441cb2b2b12939b9,0xc39a1a3a1ac4cb3a,0x0bc24b2b141cb4b2,
0xac42a0322a134222,0xacab3bb2ab3023c9,0x92343ab1343da912,0xda00b033a03b424b,
0x943c0944933d344a,0xaabbc29c48a3c4b2,0xc43b4340c34c3433,0xb2c34cc129324010,
0x2bb382bb3bb4b32a,0x3223b24bcb213420,0x4b8c33b0502a4ba4,0x34a4bb41c4999232,
0xab0aa4cb32b2aad4,0x1193b4344322ba4c,0x49ac020c4b39b133,0x3233b832b118b88b,
0x940cdb25cb9cc1b3,0x428c2a294baa93bb,0x315bbc9baa3a54a3,0xccc9bbb31a03bac3,
0x1a443a24a43b123d,0x422a3b21c33bc4b3,0xb4ac282c9c453abb,0x423b9b4b39414333,
0x0b99323bb8aac408,0x28220548aaaa43a2,0x04c4942433c89b03,0x303824b392b221bb,
0xcbca0b922bbacca2,0xcb4aac5aa8ccaac3,0x3491b81bac0c9caa,0x4b00bcbbc999b492,
0x2a9b2ab93bc23399,0xb4bbcab3394392a3,0x42aa3bb9b5b335ab,0x10523accac2b4d44,
0xa280dc331b2b234b,0xba8bbaac84b333b4,0xc04a3b23c12c4344,0xc1844ab3802b3392,
0xa0332cb9323334b1,0x193ca291332d3ba9,0x209ba0503bc3039c,0xaa12b93043d43834,
0x3ab3cb4bcc2b094a,0xabcba90daa3a3ca3,0xda30a231a31cc033,0xc9322dc484ab42ab,
0x94ac34ac0a1cc9a1,0x21532123232bb233,0xb1c9aabbcbb3c3b3,0x44b9cb43c0c429a3,
0x39c48b20cacb3294,0xab82bb4b11940a02,0x093bc24a1388b343,0xaa33ab2139a394d1,
0x33b21d01cc093a01,0x900321b532215b42,0x3b049b301090baaa,0x8b4b20a2048a2110,
0xb29b5b4b4223c8a2,0xb3d33cbcb894bab2,0x3c4b22a442c21210,0x4a3834b4531d3123,
0x89aa4a94b3a45ca0,0x9b2b4232c03c83b9,0x3a84333b2b8abc04,0xb30bc42b9c40b3cb,
0x258b903cc0babb22,0x2bc0a91bb1323ca9,0x9a933480b523c1c3,0xa13c9bc4913c2a09,
0xbbbcbb3dc0b3943a,0x33c0c6baa20bbaac,0xc322c330bacbbbb3,0xcab830c283b440b0,
0xc335bb323c4bc3bb,0x01adcbba5b3c21c4,0x442b34523031321b,0xbac34ca2492b3214,
0x2b34991abab52a23,0xbcc3a433a3b13bbc,0x2a0495313c22199c,0x12aaa2bbbb1313c2,
0x0bd138422bc23b44,0x2439c3c3a8a23339,0x4c12b9c12bb44a22,0xa2b4312d20a940b0,
0xb29c0a8cc20bcbb0,0x44403294a5334c43,0x4ba4ccb30abb2b9a,0x5a49313203c0cc89,
0x482490a214842b03,0xd9c4393a38a32c31,0x004c38328c44330c,0x15241483232cc4c2,
0xcc9a333c4c5aa1cc,0x9a33b93b4a880931,0xb3cb40cbb1c0bcca,0xa4ca4b33c242b4bc,
0xbb2cbcb2244108c4,0x40bca31bb5112b22,0xaccca3a28ba3292a,0x3102b5bbb2ab3304,
0xb23230a3ccb84a22,0xccc30cb80c840cc9,0xac20923313b3b01a,0xcc2300cb2a3433cb,
0xb213a398221cbaa2,0x343aa32449134443,0x31300bbabbc83a43,0xab92804b2cb0bcba,
0x3333aa829342090b,0x43bb11a240b5330b,0xb140a34a23339d8b,0x4cc9cb33340a2c20,
0x533b4a10cab422ab,0x3bb3aacacb334b44,0xb224a424c332db9b,0x333caba333383230,
0x42225329caac4ac3,0x9bb323ba3b033a34,0x44c5c94322b4c2bb,0xac4a0aca4833224c,
0xa3cac9bc0b3cb2b9,0x953c189c8343b2c1,0x3b038bc4c5bd20c2,0x4a3004c3c339bba0,
0xb043ab82194341b3,0x2bacc29ac3393ab2,0x4aca11314b91320b,0xbc88b31840aa3a45,
0xaa2544cca1203d33,0x3439333b38ab4c8a,0x3c9342a3b0930433,0xba2c8c2944334243,
0x8158b229cab1340b,0x3cb84ba4b4394a32,0x30b3339232aba2db,0x23000a2cb38bbbb0,
0xc9bc281a0ccbb43b,0xcba3a290acc3a4cb,0x839bcc9a34b8aa3a,0xcd95b2cbd2b240cb,
0xab3403c234032a93,0x404b8a49a0b3c32d,0x8900223c03c04032,0x33b3a3493b82ba33,
0x234c2341cb334b22,0xc2c9accab33909b2,0xbd2cc32bbb4abba0,0x24039250233341bb,
0x14ba02089b2cc22a,0xb2b8bccc0b43cac4,0x23ba4ab4b4aa18b0,0xb9382bc0c3b03393,
0x3b3bb3d334244c33,0x4331134a03333bbc,0x3c3a1ab543c392ab,0xb4bb4b2314a33b0b,
};

static int backbone_model3_conv2_quant1_threshold[64 * 14] =
{ // torch.Size([64, 14])
-1148, -718, -504, -343, -235, -128, -21, 86, 193, 301, 408, 569, 784, 1213,
-779, -482, -334, -223, -148, -74, 0, 73, 148, 222, 296, 407, 556, 853,
-1171, -777, -579, -431, -332, -234, -135, -36, 62, 160, 259, 407, 605, 1000,
-832, -508, -347, -226, -145, -64, 16, 97, 177, 258, 339, 460, 622, 945,
-1156, -778, -589, -447, -353, -258, -164, -69, 24, 119, 213, 355, 544, 922,
-866, -533, -366, -241, -158, -75, 8, 91, 174, 258, 341, 466, 632, 965,
-1093, -719, -532, -391, -298, -204, -111, -17, 75, 169, 262, 403, 590, 964,
-796, -494, -343, -230, -154, -79, -3, 71, 147, 222, 298, 411, 562, 864,
-996, -682, -525, -407, -328, -250, -171, -93, -14, 63, 142, 260, 417, 731,
-1152, -695, -467, -296, -181, -67, 46, 160, 274, 388, 502, 674, 902, 1358,
-979, -598, -408, -265, -170, -75, 20, 115, 210, 305, 400, 543, 733, 1114,
-894, -573, -413, -293, -213, -133, -53, 26, 106, 187, 267, 387, 547, 867,
-1019, -651, -468, -330, -238, -147, -55, 36, 128, 220, 311, 449, 633, 1000,
-599, -310, -165, -56, 15, 87, 160, 232, 305, 377, 449, 558, 703, 992,
-1075, -675, -475, -325, -225, -125, -25, 74, 174, 274, 374, 524, 724, 1124,
-732, -453, -313, -208, -138, -68, 0, 70, 140, 210, 280, 385, 524, 804,
-976, -662, -505, -388, -309, -231, -153, -74, 3, 81, 160, 277, 434, 748,
-807, -480, -317, -194, -113, -31, 50, 131, 213, 295, 376, 499, 662, 989,
-764, -461, -309, -195, -119, -43, 32, 108, 184, 260, 336, 449, 601, 905,
-820, -538, -397, -291, -221, -150, -80, -9, 60, 131, 201, 307, 448, 730,
-1246, -838, -633, -480, -378, -275, -173, -71, 30, 132, 235, 388, 592, 1001,
-553, -281, -144, -42, 25, 93, 161, 230, 298, 366, 434, 536, 673, 945,
-760, -473, -330, -223, -151, -80, -8, 63, 134, 206, 277, 385, 528, 814,
-806, -516, -371, -262, -189, -116, -44, 28, 101, 173, 246, 355, 500, 791,
-754, -471, -330, -225, -154, -83, -13, 57, 127, 198, 268, 374, 515, 797,
-891, -551, -381, -254, -169, -84, 0, 85, 170, 255, 340, 468, 638, 978,
-903, -509, -312, -164, -66, 31, 130, 228, 327, 425, 524, 671, 868, 1262,
-692, -424, -291, -191, -124, -57, 8, 75, 142, 209, 275, 376, 509, 776,
-1209, -779, -564, -403, -295, -188, -80, 26, 134, 241, 349, 510, 725, 1155,
-827, -507, -346, -226, -146, -66, 13, 94, 174, 254, 334, 454, 615, 935,
-941, -612, -448, -325, -243, -161, -79, 3, 85, 167, 249, 372, 536, 865,
-1010, -705, -553, -438, -362, -286, -210, -134, -57, 18, 94, 208, 361, 665,
-906, -572, -405, -279, -195, -112, -28, 54, 138, 222, 305, 431, 598, 932,
-823, -514, -359, -244, -166, -89, -12, 65, 142, 219, 296, 412, 567, 876,
-909, -578, -412, -288, -205, -122, -39, 43, 126, 208, 291, 416, 581, 913,
-924, -597, -434, -311, -230, -148, -66, 14, 96, 178, 259, 382, 545, 872,
-904, -563, -393, -265, -180, -94, -9, 75, 160, 245, 331, 458, 629, 970,
-915, -585, -420, -297, -214, -131, -49, 33, 115, 198, 280, 404, 569, 899,
-564, -338, -226, -141, -85, -29, 27, 83, 139, 196, 252, 337, 449, 675,
-1025, -626, -427, -278, -179, -79, 20, 119, 219, 318, 418, 567, 766, 1164,
-967, -593, -407, -267, -173, -80, 13, 106, 199, 293, 386, 526, 713, 1086,
-854, -563, -417, -308, -236, -163, -90, -18, 54, 127, 200, 309, 454, 745,
-1336, -785, -510, -304, -166, -28, 108, 246, 384, 521, 659, 865, 1141, 1691,
-1028, -642, -448, -304, -207, -110, -14, 82, 178, 275, 372, 517, 710, 1096,
-964, -652, -496, -379, -301, -223, -145, -67, 10, 88, 166, 283, 439, 751,
-759, -480, -341, -236, -166, -97, -27, 42, 111, 181, 251, 355, 494, 773,
-1079, -683, -485, -336, -237, -138, -39, 59, 158, 257, 356, 504, 702, 1098,
-784, -466, -307, -187, -108, -28, 50, 130, 209, 289, 369, 488, 647, 965,
-819, -535, -393, -287, -216, -145, -74, -3, 67, 137, 208, 315, 456, 740,
-878, -551, -388, -265, -183, -102, -20, 61, 143, 224, 306, 429, 592, 919,
-1147, -759, -564, -419, -321, -224, -127, -30, 66, 163, 260, 406, 600, 989,
-914, -543, -358, -219, -127, -34, 57, 150, 243, 335, 428, 567, 752, 1122,
-645, -381, -249, -150, -84, -18, 47, 113, 179, 245, 311, 411, 543, 807,
-842, -513, -349, -226, -144, -62, 20, 102, 184, 266, 348, 472, 636, 965,
-901, -563, -393, -266, -182, -97, -12, 71, 156, 241, 326, 453, 622, 961,
-990, -623, -439, -302, -210, -118, -26, 64, 156, 248, 340, 477, 661, 1028,
-841, -505, -337, -211, -127, -43, 40, 124, 209, 293, 377, 503, 671, 1007,
-693, -404, -259, -151, -79, -6, 65, 137, 210, 282, 354, 463, 607, 896,
-803, -510, -363, -253, -180, -106, -33, 40, 113, 186, 260, 370, 516, 810,
-1112, -801, -646, -529, -451, -374, -296, -218, -140, -63, 14, 131, 286, 597,
-737, -445, -299, -189, -116, -43, 29, 102, 175, 248, 321, 431, 577, 869,
-902, -543, -364, -229, -139, -49, 39, 129, 219, 309, 398, 533, 713, 1072,
-808, -538, -403, -302, -235, -167, -100, -33, 34, 101, 169, 270, 405, 674,
-630, -381, -256, -162, -100, -37, 24, 87, 149, 211, 274, 367, 492, 742,
};

static uint64_t backbone_model3_conv2_conv2_weight[64 * 9] =
{ // torch.Size([64, 3, 3, 1])
0x4, 0x3, 0x4, 0x3, 0x3, 0x4, 0x4, 0x2, 0x3,
0x0, 0xb, 0x0, 0xd, 0xb, 0x4, 0xc, 0xb, 0x5,
0x3, 0x5, 0x5, 0x3, 0x3, 0x5, 0xa, 0x9, 0x2,
0x3, 0x1, 0x1, 0x9, 0xc, 0xc, 0xb, 0xd, 0xd,
0x4, 0x5, 0xd, 0x4, 0x9, 0xd, 0x4, 0x3, 0xb,
0xc, 0xb, 0xc, 0x9, 0xa, 0xa, 0xa, 0xb, 0xb,
0xc, 0x5, 0x6, 0xa, 0xb, 0x0, 0x2, 0xa, 0xb,
0x4, 0x2, 0xa, 0x4, 0x3, 0xc, 0x5, 0x3, 0xc,
0xa, 0x5, 0x4, 0x9, 0x4, 0x9, 0x9, 0x2, 0xa,
0x4, 0x6, 0x5, 0xa, 0xa, 0x0, 0xb, 0xc, 0xa,
0x0, 0xc, 0xc, 0xa, 0xd, 0xa, 0xb, 0xd, 0xb,
0xd, 0xb, 0xa, 0xc, 0xa, 0x2, 0xc, 0x9, 0xb,
0xb, 0xb, 0xc, 0xa, 0xa, 0xa, 0xc, 0xb, 0xc,
0xb, 0xd, 0xc, 0x3, 0x9, 0xc, 0x2, 0x2, 0xc,
0xc, 0x3, 0xb, 0xc, 0xc, 0xc, 0xc, 0xc, 0x0,
0x1, 0x5, 0xb, 0x8, 0xd, 0x3, 0x3, 0xa, 0x2,
0x4, 0x0, 0x9, 0x5, 0x3, 0x0, 0x5, 0x3, 0x9,
0x8, 0x4, 0x9, 0x4, 0x5, 0xc, 0xd, 0xd, 0xc,
0xd, 0xd, 0xc, 0xb, 0xb, 0xc, 0x2, 0xb, 0x1,
0x3, 0xc, 0xb, 0x4, 0xc, 0x9, 0x5, 0x2, 0x0,
0x3, 0xe, 0x2, 0x3, 0x3, 0x2, 0x0, 0xa, 0x9,
0x3, 0xd, 0xb, 0xa, 0xd, 0x4, 0xc, 0x3, 0x4,
0x9, 0x5, 0x0, 0x4, 0x4, 0xc, 0x5, 0xa, 0xd,
0x4, 0x4, 0x4, 0x3, 0x1, 0x3, 0xc, 0xc, 0xb,
0xd, 0xc, 0x2, 0xc, 0xb, 0x1, 0x1, 0x3, 0x2,
0xa, 0xc, 0xa, 0xb, 0xe, 0x1, 0x3, 0x1, 0x3,
0xb, 0xa, 0xb, 0x5, 0xb, 0x1, 0x5, 0xc, 0x8,
0x8, 0xb, 0x0, 0xc, 0xc, 0x2, 0x4, 0x6, 0x3,
0x4, 0xa, 0x1, 0x4, 0x4, 0x3, 0x2, 0x4, 0x5,
0xd, 0xd, 0xb, 0xd, 0x5, 0x2, 0xb, 0x3, 0x3,
0xb, 0xd, 0xb, 0xb, 0xd, 0xc, 0x4, 0x9, 0xa,
0x4, 0x3, 0xb, 0x4, 0x3, 0x2, 0x3, 0x3, 0x3,
0x4, 0x4, 0x4, 0x4, 0x4, 0x4, 0x3, 0x0, 0xa,
0xc, 0xd, 0x2, 0x4, 0x3, 0x2, 0x2, 0x2, 0x3,
0xc, 0xd, 0xc, 0xa, 0xa, 0xb, 0x4, 0x3, 0x4,
0x4, 0x5, 0x0, 0x9, 0xb, 0x4, 0x3, 0xd, 0x3,
0x3, 0xb, 0xb, 0x5, 0xa, 0x3, 0x5, 0x1, 0x2,
0x8, 0x4, 0x3, 0xa, 0xa, 0xc, 0xd, 0xc, 0x9,
0x3, 0x5, 0x9, 0xb, 0xd, 0xa, 0x0, 0xb, 0x3,
0x3, 0x3, 0x1, 0x4, 0x4, 0x4, 0x3, 0x3, 0x3,
0x4, 0x4, 0x1, 0x2, 0x3, 0x2, 0x1, 0x4, 0x2,
0x8, 0xd, 0xb, 0x5, 0x4, 0x9, 0x9, 0x4, 0x0,
0x4, 0x5, 0x4, 0x3, 0x3, 0x4, 0x8, 0x2, 0x2,
0x0, 0xb, 0xa, 0xb, 0xc, 0xc, 0x1, 0xc, 0xd,
0x5, 0x3, 0xc, 0x4, 0x3, 0xc, 0x5, 0x3, 0xb,
0xa, 0x4, 0xc, 0x0, 0x4, 0xd, 0x1, 0x4, 0xb,
0xa, 0x8, 0x3, 0xb, 0x3, 0x4, 0xa, 0x5, 0x4,
0xb, 0xa, 0xb, 0xd, 0xb, 0xb, 0xb, 0xb, 0xa,
0x4, 0x5, 0xc, 0xb, 0x4, 0x4, 0xc, 0x2, 0x4,
0x3, 0x4, 0x5, 0x2, 0x4, 0x5, 0x9, 0xb, 0xc,
0x5, 0xb, 0xc, 0x4, 0x4, 0xb, 0x1, 0x5, 0x4,
0xb, 0xa, 0x5, 0x2, 0x0, 0x5, 0x2, 0xc, 0x3,
0x4, 0x2, 0xd, 0x4, 0xb, 0xc, 0xa, 0xc, 0xb,
0x1, 0x9, 0x0, 0x1, 0x4, 0x9, 0xe, 0xa, 0x2,
0xa, 0x4, 0x0, 0x1, 0x3, 0x9, 0x8, 0xe, 0xc,
0x5, 0x5, 0x3, 0x3, 0xb, 0xc, 0x2, 0x9, 0xb,
0xa, 0x4, 0x4, 0xc, 0xc, 0xb, 0xb, 0xb, 0xb,
0x9, 0x3, 0xc, 0xc, 0xd, 0x9, 0xb, 0x3, 0x9,
0x3, 0xb, 0xb, 0x2, 0x4, 0xb, 0xc, 0x5, 0x3,
0xb, 0x2, 0xc, 0x0, 0x5, 0xb, 0x4, 0x4, 0x4,
0x5, 0x4, 0xd, 0x3, 0xb, 0xb, 0x3, 0xb, 0xb,
0x0, 0x0, 0x4, 0x3, 0x4, 0x4, 0x0, 0x3, 0x3,
0x4, 0x4, 0x3, 0x5, 0x4, 0xb, 0xb, 0xc, 0xc,
0x3, 0x4, 0xc, 0x4, 0x5, 0xd, 0xa, 0xb, 0xd,
};

static int backbone_model3_conv2_relu2_threshold[64 * 7] =
{ // torch.Size([64, 7])
29, 76, 124, 171, 242, 336, 525,
136, 177, 218, 260, 322, 405, 571,
16, 78, 141, 204, 297, 423, 673,
32, 113, 193, 274, 395, 556, 878,
114, 162, 210, 259, 331, 428, 621,
7, 42, 77, 112, 164, 234, 373,
69, 115, 162, 208, 278, 371, 558,
28, 73, 117, 161, 227, 316, 493,
76, 112, 148, 184, 238, 309, 452,
-62, -18, 26, 71, 137, 227, 405,
72, 122, 172, 222, 297, 397, 597,
31, 73, 116, 158, 222, 306, 476,
58, 100, 141, 183, 246, 329, 496,
-41, 8, 58, 109, 184, 285, 486,
18, 67, 116, 165, 238, 336, 531,
38, 73, 108, 142, 194, 264, 403,
65, 119, 173, 227, 308, 416, 631,
25, 76, 126, 177, 252, 353, 555,
68, 128, 187, 246, 334, 453, 689,
42, 77, 112, 147, 200, 270, 411,
-90, -28, 32, 94, 186, 310, 557,
11, 63, 115, 167, 246, 350, 558,
100, 149, 197, 246, 319, 416, 611,
36, 75, 114, 153, 211, 289, 444,
61, 107, 154, 201, 270, 364, 550,
0, 60, 122, 184, 276, 399, 646,
33, 70, 108, 145, 201, 275, 424,
71, 137, 203, 269, 368, 501, 765,
32, 78, 123, 168, 236, 327, 508,
-6, 42, 91, 140, 214, 312, 509,
-201, -128, -54, 19, 130, 278, 573,
5, 46, 87, 129, 191, 273, 439,
27, 78, 130, 181, 259, 362, 568,
65, 109, 153, 197, 263, 351, 527,
28, 71, 113, 156, 220, 305, 475,
-54, 7, 69, 130, 223, 346, 593,
56, 101, 147, 192, 260, 350, 531,
37, 72, 107, 143, 195, 266, 406,
22, 80, 138, 196, 284, 400, 634,
69, 106, 143, 180, 236, 310, 458,
-7, 32, 71, 110, 169, 248, 405,
46, 84, 122, 159, 216, 292, 444,
-197, -151, -105, -58, 10, 102, 287,
4, 49, 94, 138, 205, 294, 472,
81, 121, 162, 202, 263, 343, 505,
-53, 18, 90, 162, 270, 413, 701,
53, 85, 118, 151, 200, 266, 397,
14, 78, 142, 206, 302, 429, 685,
81, 128, 176, 223, 294, 388, 577,
67, 125, 182, 240, 327, 442, 673,
42, 85, 129, 173, 239, 326, 502,
-4, 42, 88, 135, 205, 299, 486,
58, 102, 147, 192, 258, 348, 526,
5, 65, 126, 186, 277, 398, 640,
13, 67, 120, 173, 253, 360, 574,
20, 60, 100, 140, 200, 279, 439,
48, 89, 130, 171, 233, 315, 480,
-12, 24, 62, 100, 157, 233, 384,
60, 93, 125, 158, 207, 272, 402,
18, 58, 98, 139, 199, 280, 441,
62, 103, 145, 186, 248, 331, 497,
-10, 22, 55, 88, 137, 203, 335,
76, 123, 171, 218, 289, 384, 574,
95, 159, 223, 287, 383, 510, 766,
};

static uint64_t backbone_model4_conv1_conv1_weight[64 * 1*4] =
{ // torch.Size([64, 1, 1, 64])
0xbb921a2c91283cb4,0x200bbbc3b24314ac,0x0b1ca09aba91c38c,0x2c3a82b949c253c4,
0xa030482b3b35bc90,0x5a2a4ba03ab03823,0x3a3db24dc3321bb9,0xa3cbb28449b4bbc3,
0x2133b30c412ca3bc,0x80bbbcc550430ba4,0x2cb58343ca9a22a8,0x3bb12abacb023435,
0xa433132938384bbb,0x04213343b32b2b94,0x02ab4c2bb9401bb9,0x11bac04babc5bb8b,
0x034abacc1c40bc23,0x9433a3c42a45a3b3,0x1acc343038438c2a,0x322443cc2a30b42b,
0xb021bbabbba99b32,0x302ccc2c4180bb20,0xaacb98ca9ab2b93b,0x1483ba0b8a09c09c,
0xabb0ab23aa3ac842,0xcb2a5bc42b33a3a3,0xc8289b0313801a02,0x13d243ca2a483c29,
0xa32a2abb04bd3a30,0x3410acb34b32bb01,0xbbb2ac32cb3ab4c8,0x8c91b2db220bb3c1,
0x302212a991ab925b,0xab822104aa4b0d13,0xb31893248b300122,0x0b913babac28b142,
0x34c24438321a043c,0x881a2b41c2492a34,0xa24baa3bac0b323a,0xaa3c3341bad303c9,
0xbbbb2cab9434d329,0xac9b43babb4b9120,0x320b2c3b4c42832b,0x05ac40ca3cbb1a1c,
0xb39022c232293324,0x22a0d39ba09bbc04,0x8cb09bb439102334,0x1b39043382aac4ac,
0xc3b0bb14543abca8,0x339a30bbca24213b,0x43338a0903bbb9a2,0x13ab3b424cbbb01b,
0x4842a3ac38b32530,0x9214cc445bcb31bb,0x44a2c0440ca94bc2,0xac532b304b35331b,
0x229a22ab00294104,0x83b3c0adb134331b,0x20bca0b3b9a03222,0xbd4ab402201349bb,
0x3c22483baa2942b3,0x4b03ba0032ca9242,0x33a28203921a32a3,0xb2c433a44443adb3,
0xbbd0bbba2c284cbb,0x203b323a33bb3333,0x5a43189bc9b93bb4,0x34ba29b84b424014,
0xb1234b44adc3244b,0xb22a329b41a3b310,0xca0cbbc89ababa4c,0x3c2a1cabc1aa33a9,
0x302a922542a3cb4b,0xd1a24484b2002a9a,0xa0142a3343ba2c23,0xaaa802208acacb43,
0x8bacba988a3a2a89,0x29cc12c04c29c01b,0x3c8bba002bcbacbb,0xbac4ab4aca2bbbb3,
0x551394a93330a9bb,0xa5232cc8c3a32c3c,0x314b3158cbba4b13,0xb14bb24ab924c3c2,
0x1139133b840b89cc,0x44a24295393c1d32,0x4433283cbd3993a1,0xb5ba4c924b2bd223,
0xa84bbbb032b4bb45,0x9b4cba9a59aa24bb,0xbb1ab3bb25233aa4,0x02939338bad3c05b,
0x43d322b83444b042,0xb0390d30c922248a,0x421b434333392c0b,0xb84c394933c449bc,
0x221b4c3330a3a420,0x2c433423baab24b3,0x001a09ba3453232c,0x482db3b432c24d29,
0x0b343c4ab094daa8,0x4b3bab213b889a12,0x232bb3c83432a33b,0x24cabec38ccb3cb8,
0x315bc23333229c32,0xc384b305cab492cb,0xc39822a82a23382c,0x1b44cc3b39a33c1d,
0x933c323a2ac8a3c9,0x43abcc1c00c23b0c,0xbaa39aa81ca12cac,0x9c84a49ba832dbbb,
0x42b410cc9a04b423,0x1c24c9243abcab02,0x42c9a433233232aa,0x0a2b3bb03b234040,
0xc328aab9b43d8a3c,0x92bbba2abac4b9a4,0xb29492bcd4322a3a,0x3a9ab39ab2cb3bcc,
0x320319c4bbb43343,0xbb2ac41bc3bc1bb2,0xb3da22b242b92a33,0x9bab014244b1ac48,
0xab214b333131421c,0x498b9c114a8b2293,0x54841a9bbba8132d,0x2422b8422c22b4b3,
0xbc2caac998023392,0x22b0bbbb3bb3c194,0x83ba8914422b0ba9,0x9ad3b0b33133bc4b,
0xcc3c0b9a89333ab4,0x2b1a8cb4aba3b41b,0x42b2b20bc481aabb,0x1930b2c33cac41c4,
0xa43930903398b090,0x5c83bb830233ba24,0xb3dbb2339a2aaaa3,0x23ab3344b3c9d1ac,
0x45a4c1c334b344b0,0xc238bd4b4a4c4425,0x354c3333423c3a52,0xaa2b414a9c45db45,
0xc12caab5334c3b4c,0x0abc34ac30b12433,0xbb041cc23b2b1a39,0x22abcc4ab3bb33bc,
0x1822ab0141118922,0x4202c9bb31a2b324,0x1ab429a4b330101a,0x3cc213a92a342e34,
0xbb03283bca4c34db,0xd920aa03b203aa2d,0x12c32b030c92243b,0x2a483932028a3b3b,
0xb4b3cb302cc2a4aa,0x93b44aa33b32c334,0xbc3acac233cbc8b0,0xbbba2ac282ca2932,
0x9b4c8b4113a3a022,0xbb0333343bcb23bd,0x330aa3ac29b2adb8,0x2c2310ab3d00b143,
0xc3ab29248b1c4418,0x449a0b2441322b1a,0x434219aacdba243b,0x232931984a23c334,
0x13b1b3a023318423,0xc1b423b200a39238,0x4334029403104413,0xa33b24a434b34ba3,
0xb32389c293b33b30,0x20ab211b0c33c3b3,0xa3ca2b24244dc2ca,0xc3ba0ab443b13123,
0x32a4323bb3ab22bc,0x183bcc2cb4cb4b41,0x4ab38492bb34a143,0x440b2239aa43ca3d,
0x90985b1bb32ab432,0xbb4aa40ab9bb338b,0xcc9a4c30224b3ba8,0x0cbbb31b2a234c3b,
0x4b994b40ca5aa912,0x014c9c52b3b83cc2,0x32aa56baba44bc52,0x540ac3421b43c1c0,
0x9502a32c5a828ccc,0x54a40bbba99b2324,0x9c30babcac3ba00b,0x0aabca3ccbc3c3bc,
0x0b3b110b1883cbb2,0x33032b9b3a1ab00b,0x4b1b10334dc392cb,0x24b333ac4c02ba43,
0x1129bbc31bab3c29,0xc3ac20b220239182,0xc3982bb439a9bbac,0x1ba4a88ba24c94bc,
0xc32980abbb3923a3,0x4b9c3ba33a31a2a2,0xb0c2333030322a0c,0x3903434dd0a4b32c,
0x322411492a9acbc8,0x32b2ba30ba0a0b32,0xb2aca4b0bb0ab433,0xbc3c2bbabababc2a,
0x3343a22433ab2439,0xb3a3353239123a83,0xd393913342aaa813,0xaacb234aa3b2433b,
0x09b9380c3b2849ba,0x42293ca43901939d,0x5c2b124a0baa2ccb,0x0c44bb91212333c3,
0xba31b3c201a03a22,0xc4322cb23134b1a3,0x82a29b3331baa4a8,0xb325a838b14bc332,
0xb34aaab03a2043aa,0x2082bc334c2289da,0x04c4308b2b2aa0cb,0xa344abac9943b33a,
0x38530240cbaca4bc,0x9225ac0548923c1c,0xa3cb023bca334429,0x0934baa49433bada,
0x0cbc23a3b4aba5b4,0xa9a2ba10b0ccacbd,0x82a5abbbb1b143b4,0x933b348430cabc2a,
0xa330243433c134b9,0xa4333ba5c2841c2c,0x930bb342c33b35b2,0xa233b3b4b5a3c0cb,
0xa439290d29b22023,0xab80c305391a9c12,0x5cbdb229b3389b94,0xac0833a03bd34093,
0xca9c99c324333b34,0xabad4ab9a99aa0ba,0x33931b481389a201,0xa4c01334214aa33c,
0x031a31333b0ba442,0x32b9a32b513033c4,0x2b9aa31320abbca1,0x9c4a9a0b2ab0d593,
0x39140a30cbb20baa,0xa41491b0c24ca222,0x922c909c9c29b38a,0xa13b0caa2ac1ac42,
0x883babb12314ad2b,0x3830a93bb2b2cb24,0x283c42133b44049c,0x31d4cbb34343bd41,
};

static int backbone_model4_conv1_quant1_threshold[64 * 14] =
{ // torch.Size([64, 14])
-1041, -698, -527, -398, -313, -227, -141, -56, 29, 115, 201, 329, 500, 843,
-936, -572, -391, -254, -163, -73, 17, 108, 199, 290, 381, 517, 699, 1062,
-1304, -824, -584, -404, -284, -164, -44, 75, 195, 315, 435, 615, 855, 1335,
-889, -521, -336, -198, -106, -14, 77, 170, 262, 354, 446, 584, 769, 1137,
-952, -576, -388, -247, -152, -58, 35, 129, 223, 317, 411, 552, 740, 1116,
-1582, -1081, -831, -643, -518, -393, -268, -142, -17, 107, 232, 420, 670, 1171,
-1179, -791, -597, -451, -354, -257, -160, -63, 33, 130, 227, 373, 567, 956,
-1241, -828, -621, -466, -363, -259, -156, -53, 50, 153, 257, 412, 618, 1032,
-843, -518, -356, -234, -153, -72, 9, 90, 171, 252, 333, 455, 618, 943,
-977, -597, -406, -264, -169, -74, 20, 115, 211, 306, 401, 543, 733, 1114,
-1139, -735, -533, -382, -281, -180, -79, 21, 122, 223, 324, 476, 677, 1081,
-1070, -703, -519, -381, -289, -197, -105, -13, 78, 170, 262, 399, 583, 951,
-1198, -769, -555, -395, -287, -180, -73, 33, 140, 247, 354, 515, 729, 1158,
-1187, -694, -447, -262, -139, -15, 107, 230, 354, 477, 600, 785, 1032, 1525,
-820, -525, -378, -267, -194, -120, -46, 26, 100, 174, 247, 358, 505, 800,
-830, -493, -324, -197, -113, -28, 55, 140, 224, 308, 393, 519, 688, 1026,
-1080, -676, -474, -322, -221, -120, -19, 81, 183, 284, 385, 536, 739, 1143,
-1333, -903, -688, -526, -419, -311, -203, -96, 11, 118, 226, 387, 602, 1033,
-750, -458, -312, -203, -130, -57, 15, 88, 161, 234, 307, 416, 562, 854,
-1552, -1092, -861, -689, -574, -459, -343, -228, -113, 1, 116, 289, 519, 979,
-927, -518, -314, -161, -58, 43, 145, 247, 350, 452, 554, 708, 912, 1321,
-995, -596, -397, -247, -147, -48, 51, 151, 251, 351, 450, 600, 799, 1198,
-1108, -712, -513, -365, -266, -167, -68, 31, 130, 229, 328, 476, 675, 1071,
-1005, -571, -353, -190, -82, 26, 135, 243, 352, 461, 569, 732, 950, 1384,
-1088, -607, -366, -186, -65, 54, 174, 294, 415, 535, 655, 835, 1076, 1557,
-1315, -868, -644, -476, -365, -253, -141, -29, 82, 193, 305, 473, 696, 1144,
-1338, -758, -468, -250, -105, 39, 184, 329, 474, 619, 764, 982, 1272, 1852,
-1278, -858, -648, -491, -386, -281, -176, -71, 33, 138, 243, 400, 610, 1030,
-858, -507, -332, -200, -113, -25, 61, 149, 237, 324, 412, 544, 719, 1069,
-1147, -788, -609, -475, -385, -296, -206, -116, -27, 62, 152, 286, 465, 824,
-960, -601, -421, -287, -197, -107, -18, 71, 161, 251, 340, 475, 655, 1014,
-712, -394, -236, -117, -38, 41, 120, 199, 278, 358, 437, 556, 714, 1032,
-1464, -1009, -781, -610, -496, -382, -268, -155, -41, 72, 186, 357, 585, 1040,
-1117, -722, -525, -377, -278, -180, -81, 17, 115, 214, 312, 460, 658, 1052,
-1068, -688, -498, -355, -260, -165, -70, 24, 119, 214, 309, 452, 642, 1022,
-1056, -566, -321, -137, -15, 107, 229, 352, 474, 597, 719, 903, 1148, 1638,
-1235, -819, -611, -456, -352, -248, -144, -40, 63, 167, 270, 426, 634, 1049,
-1085, -695, -499, -353, -255, -158, -60, 37, 134, 232, 329, 476, 671, 1061,
-1164, -723, -502, -337, -227, -116, -6, 103, 213, 324, 434, 599, 820, 1261,
-1389, -964, -752, -593, -487, -381, -275, -168, -62, 43, 149, 308, 520, 945,
-1245, -767, -528, -349, -229, -110, 9, 128, 247, 367, 486, 666, 904, 1382,
-850, -499, -324, -192, -104, -17, 70, 158, 246, 333, 421, 553, 728, 1079,
-1088, -589, -340, -153, -28, 96, 220, 345, 470, 594, 719, 906, 1155, 1654,
-1546, -1067, -827, -647, -527, -407, -288, -168, -48, 71, 191, 371, 610, 1090,
-1034, -616, -407, -250, -146, -41, 62, 167, 271, 376, 480, 637, 846, 1265,
-1007, -638, -454, -315, -223, -131, -39, 52, 144, 237, 329, 467, 651, 1020,
-1447, -717, -352, -78, 103, 286, 468, 650, 833, 1015, 1198, 1472, 1837, 2567,
-1061, -707, -529, -396, -308, -219, -130, -41, 46, 135, 224, 357, 534, 889,
-1002, -652, -478, -347, -259, -172, -85, 2, 89, 176, 264, 395, 569, 919,
-1352, -896, -668, -497, -383, -269, -155, -41, 72, 186, 300, 471, 699, 1155,
-928, -591, -422, -295, -211, -127, -42, 41, 125, 210, 294, 420, 589, 926,
-984, -642, -470, -342, -256, -171, -85, 0, 85, 171, 257, 385, 556, 899,
-1029, -588, -368, -203, -93, 16, 126, 236, 346, 456, 566, 732, 952, 1392,
-1160, -752, -547, -394, -292, -190, -87, 14, 116, 218, 320, 474, 678, 1087,
-951, -581, -396, -257, -165, -72, 19, 112, 204, 297, 389, 528, 713, 1083,
-1113, -715, -516, -367, -267, -167, -68, 31, 130, 230, 329, 479, 678, 1076,
-1358, -826, -560, -361, -228, -95, 37, 170, 303, 435, 568, 768, 1034, 1565,
-1212, -807, -605, -453, -352, -251, -150, -49, 52, 153, 254, 406, 608, 1012,
-1185, -693, -447, -263, -140, -17, 104, 227, 350, 473, 596, 780, 1026, 1517,
-1300, -867, -651, -489, -380, -272, -164, -56, 51, 160, 268, 430, 647, 1080,
-1620, -1080, -810, -608, -473, -338, -203, -68, 66, 201, 336, 539, 809, 1349,
-1056, -666, -470, -324, -226, -128, -31, 66, 164, 261, 359, 505, 701, 1091,
-932, -590, -419, -291, -206, -120, -35, 49, 135, 220, 305, 434, 604, 946,
-1374, -882, -636, -452, -329, -206, -83, 39, 162, 285, 408, 593, 839, 1330,
};

static uint64_t backbone_model4_conv1_conv2_weight[64 * 9] =
{ // torch.Size([64, 3, 3, 1])
0xa, 0x2, 0xd, 0xb, 0x4, 0x4, 0xc, 0xc, 0x4,
0xc, 0xc, 0x2, 0xd, 0xb, 0x4, 0x0, 0x3, 0x4,
0x4, 0x3, 0x4, 0x4, 0x2, 0x3, 0x2, 0x2, 0x2,
0xc, 0x3, 0x4, 0xc, 0x5, 0x4, 0x3, 0x2, 0xb,
0xb, 0x3, 0x2, 0xa, 0xd, 0x1, 0x0, 0xc, 0xa,
0x3, 0x4, 0x4, 0x4, 0x4, 0x2, 0xb, 0xc, 0xc,
0x9, 0xd, 0xb, 0x5, 0x1, 0xc, 0x4, 0x4, 0xa,
0x3, 0x4, 0x0, 0xe, 0xb, 0xc, 0xa, 0x8, 0x3,
0xb, 0xa, 0x2, 0x3, 0x3, 0x4, 0xd, 0xc, 0xb,
0xc, 0xc, 0xa, 0xc, 0xa, 0x4, 0xc, 0x4, 0x5,
0x9, 0x9, 0x3, 0x2, 0x4, 0x3, 0x2, 0x4, 0x3,
0x4, 0x4, 0x5, 0xb, 0x9, 0xa, 0xc, 0xc, 0xc,
0xc, 0x5, 0x3, 0xc, 0x4, 0x2, 0xc, 0x9, 0x0,
0x3, 0x9, 0x3, 0x1, 0xc, 0xa, 0xc, 0xd, 0xc,
0x3, 0xb, 0xc, 0x4, 0xc, 0xc, 0x4, 0x4, 0xb,
0xc, 0x0, 0x3, 0xd, 0xa, 0x4, 0x3, 0x3, 0x0,
0x5, 0xa, 0x3, 0x3, 0x2, 0x3, 0x4, 0x3, 0x2,
0xb, 0xe, 0x2, 0x3, 0x4, 0x3, 0x0, 0x9, 0x2,
0x2, 0x5, 0x4, 0xb, 0xa, 0x3, 0xa, 0xc, 0xc,
0x4, 0x3, 0x3, 0x4, 0x3, 0x4, 0xb, 0x3, 0x0,
0x0, 0x9, 0x2, 0x6, 0x2, 0xb, 0x8, 0x3, 0xa,
0xd, 0xb, 0x4, 0xd, 0xb, 0x4, 0x3, 0x3, 0x1,
0x3, 0x4, 0x3, 0x4, 0x3, 0x9, 0x4, 0x5, 0x3,
0x4, 0x5, 0x0, 0x0, 0x2, 0x4, 0x2, 0x3, 0x3,
0xc, 0x1, 0x3, 0xc, 0x4, 0x5, 0x1, 0x4, 0x4,
0xb, 0xd, 0x8, 0xc, 0x9, 0x4, 0xb, 0x2, 0x4,
0xc, 0xa, 0xa, 0x2, 0xa, 0x3, 0x4, 0x5, 0x5,
0xc, 0xc, 0x5, 0xc, 0xb, 0x4, 0xb, 0xa, 0x5,
0xc, 0xc, 0x0, 0xc, 0xb, 0x3, 0x3, 0x3, 0x5,
0xd, 0xd, 0x2, 0x8, 0x4, 0xa, 0x4, 0x4, 0xb,
0xd, 0xc, 0xc, 0xb, 0xb, 0xa, 0x4, 0x5, 0x3,
0x3, 0xb, 0x8, 0x4, 0xa, 0xd, 0x4, 0x4, 0xb,
0xb, 0x4, 0x4, 0xc, 0x3, 0x4, 0xd, 0xb, 0x4,
0x4, 0x4, 0x2, 0xc, 0xb, 0x1, 0xd, 0xc, 0x2,
0x4, 0x4, 0xb, 0x4, 0x0, 0xb, 0xa, 0xc, 0xc,
0xa, 0xa, 0xb, 0xc, 0xc, 0xc, 0xa, 0xb, 0xb,
0xb, 0x2, 0x4, 0xb, 0x3, 0x4, 0xb, 0x4, 0x4,
0x4, 0xb, 0xe, 0x1, 0x3, 0x9, 0x9, 0x8, 0x0,
0x5, 0x3, 0xa, 0xb, 0xa, 0x3, 0xd, 0xc, 0x3,
0x0, 0x0, 0xc, 0xb, 0xc, 0xc, 0x4, 0x4, 0xb,
0xc, 0xd, 0xc, 0x1, 0xc, 0xb, 0x3, 0x4, 0x9,
0x4, 0x2, 0xc, 0x4, 0xd, 0xb, 0x1, 0xa, 0xa,
0xc, 0x3, 0x4, 0xc, 0xa, 0x5, 0xc, 0xc, 0x1,
0xa, 0x0, 0x3, 0x2, 0xe, 0x0, 0x1, 0x2, 0x8,
0x1, 0x0, 0x8, 0x1, 0xc, 0x3, 0x1, 0x5, 0x4,
0xa, 0xa, 0xa, 0x6, 0xb, 0xa, 0x1, 0x1, 0x8,
0x1, 0x8, 0x9, 0x5, 0x6, 0xc, 0x4, 0x2, 0x3,
0x5, 0x5, 0x3, 0x0, 0xc, 0xb, 0x2, 0xb, 0xc,
0xa, 0x3, 0xb, 0x4, 0x4, 0xc, 0x5, 0x9, 0xc,
0xc, 0xa, 0xb, 0x4, 0x4, 0x4, 0x2, 0x3, 0x4,
0x3, 0x3, 0xa, 0x2, 0xc, 0xd, 0x9, 0xc, 0xb,
0xc, 0x2, 0x4, 0x8, 0x5, 0xb, 0x2, 0x0, 0xb,
0xd, 0xb, 0x3, 0xc, 0xc, 0x3, 0xa, 0x2, 0x3,
0x9, 0xc, 0xc, 0x4, 0xa, 0xc, 0x4, 0x4, 0x4,
0x4, 0x4, 0x4, 0x8, 0x1, 0x4, 0xc, 0xd, 0xc,
0x3, 0x3, 0x1, 0x0, 0xe, 0x1, 0x9, 0x1, 0x0,
0xc, 0xd, 0xa, 0xa, 0xb, 0x0, 0x1, 0xc, 0x9,
0xa, 0xc, 0xa, 0x4, 0x1, 0x8, 0x5, 0x5, 0xa,
0xa, 0x4, 0x2, 0x9, 0x5, 0x2, 0xa, 0x3, 0xa,
0x4, 0x4, 0x3, 0xc, 0xb, 0x1, 0xd, 0xd, 0xb,
0x3, 0x4, 0xd, 0x4, 0x4, 0xc, 0x3, 0xb, 0xc,
0xc, 0x3, 0xb, 0xb, 0xc, 0x0, 0x4, 0x3, 0x5,
0xa, 0x4, 0x3, 0x9, 0x4, 0xc, 0x4, 0x2, 0xc,
0xb, 0xd, 0x2, 0x0, 0xb, 0xc, 0x4, 0x1, 0xc,
};

static int backbone_model4_conv1_relu2_threshold[64 * 7] =
{ // torch.Size([64, 7])
57, 93, 128, 163, 216, 287, 428,
5, 65, 125, 185, 275, 395, 635,
34, 85, 136, 187, 263, 364, 567,
31, 75, 120, 164, 231, 320, 499,
0, 44, 88, 133, 200, 289, 468,
-20, 19, 59, 99, 158, 238, 397,
46, 87, 127, 168, 229, 311, 474,
93, 145, 196, 247, 324, 427, 633,
33, 65, 97, 129, 177, 241, 368,
66, 104, 142, 181, 238, 315, 468,
22, 64, 107, 150, 214, 300, 471,
41, 85, 129, 173, 239, 328, 504,
43, 78, 112, 147, 199, 268, 407,
-14, 47, 110, 172, 265, 390, 639,
26, 63, 100, 136, 192, 265, 412,
42, 75, 108, 141, 191, 256, 388,
29, 81, 132, 184, 262, 365, 571,
35, 84, 133, 182, 255, 352, 547,
40, 97, 154, 211, 297, 411, 640,
-4, 32, 70, 108, 165, 240, 391,
60, 109, 158, 207, 281, 380, 577,
65, 106, 146, 186, 247, 328, 490,
71, 114, 158, 202, 267, 355, 530,
18, 91, 163, 236, 346, 491, 783,
28, 116, 205, 294, 427, 604, 959,
23, 65, 108, 151, 215, 301, 472,
-104, -35, 32, 101, 203, 340, 614,
73, 116, 158, 201, 264, 349, 519,
-8, 38, 86, 133, 204, 299, 489,
39, 79, 120, 160, 221, 302, 464,
91, 133, 174, 215, 277, 360, 526,
61, 101, 142, 183, 244, 325, 488,
31, 70, 109, 148, 207, 285, 441,
10, 56, 103, 150, 220, 313, 499,
29, 62, 95, 128, 177, 243, 375,
-47, 23, 94, 166, 272, 414, 699,
0, 47, 96, 145, 218, 315, 510,
-20, 50, 122, 194, 301, 445, 732,
2, 42, 83, 123, 183, 264, 426,
2, 37, 73, 108, 161, 232, 374,
-4, 63, 131, 199, 302, 438, 710,
50, 84, 117, 151, 201, 268, 403,
31, 64, 97, 129, 178, 243, 374,
15, 69, 122, 176, 257, 364, 579,
-9, 34, 78, 123, 189, 277, 454,
25, 78, 131, 184, 263, 369, 581,
29, 87, 145, 203, 289, 405, 636,
29, 82, 135, 188, 268, 374, 587,
42, 82, 122, 163, 223, 303, 465,
7, 35, 63, 91, 133, 189, 301,
92, 135, 178, 220, 284, 369, 540,
0, 38, 77, 116, 174, 251, 405,
-6, 48, 103, 157, 240, 349, 569,
28, 63, 99, 134, 187, 257, 398,
55, 95, 134, 173, 232, 311, 468,
0, 58, 117, 176, 265, 383, 619,
-39, 12, 64, 115, 193, 297, 504,
4, 62, 120, 178, 265, 382, 614,
34, 65, 96, 128, 174, 237, 361,
-49, 3, 55, 107, 185, 290, 499,
31, 68, 104, 141, 197, 271, 418,
6, 44, 82, 120, 177, 253, 406,
13, 43, 74, 104, 149, 210, 331,
-55, 14, 84, 154, 259, 398, 678,
};

static uint64_t backbone_model4_conv2_conv1_weight[64 * 1*4] =
{ // torch.Size([64, 1, 1, 64])
0xbc904048bac1bcc3,0xb3a42ab209312c28,0x4babbb4b2b23bbb1,0x00b0b483a8223d02,
0xabbba19b34bd98cb,0xac34aca29a936222,0xba83d2b42babd29a,0xab5abbc3aac0a2bb,
0xa343b3143a934012,0x42310b212c2a13bc,0x01b201ab23bb2392,0xca443222933018b3,
0x9ab03ccac34b1a4a,0xaabbb9a3c2bbc10b,0xc10923bb1bbcba33,0x983b2aa2a8bcb03b,
0xc21314bccb329ad3,0xbbbc411a2bb3ab38,0x1ab1052dca2bb99b,0x32934bd390bcbb38,
0x2243c92303c03a02,0x4820a02432c42942,0x931b94c443124d2c,0x4cb3b322034330b3,
0x92cb92401bb9c443,0x8924833ab3a3590b,0x5b1300a0235b02d1,0x409b9382122c239a,
0x110bb0bbb31b4a9b,0xa3513aab49993822,0x1aaab9abcba3abba,0x0a0abc0bca9cc0b9,
0x02222b39bacb2cb3,0x9c4b98cc003aba40,0xbbc9325abc4b930b,0x34b314aab3acba3b,
0x83aba3caa220d20c,0x329a33aa40a2a802,0xb3a3bba2c9842bc3,0x23a20b034331220b,
0x82b2881c021a11bc,0xccb9302c03ccbb22,0x00aa33a88020b19a,0x59bcbcb029baba92,
0x9cac9aa410bcc9bd,0xbb40a2c4191b2b43,0xba290b3c294bcb9a,0x3842b4abb9cac152,
0x4cac1a53c22ccb29,0x31a8310339343ca3,0x28b3c43143033213,0x38d82c9430aaab32,
0xbb2b4a99b3042a23,0xa2a9232410c93920,0x922d20134a40343b,0xb9030a8aac131439,
0x0b1aab231034b1a8,0x9810910399b3b9d3,0x215bc2ca33b10b99,0x2bb81cb2432309c4,
0x1a4a9bbcb4abbbb1,0xb100aa0c24d04c02,0xaab4c3abcbac310c,0x319abb02893b8ca0,
0x535bca3a4b243bba,0x3b1b28ab0a2bb0cb,0x21182d92bccbb492,0xc3a303a104ab0bb1,
0x4b0b94bab0bcba31,0xb19b13bb33bd2c48,0xc12208b343434c03,0x303bc31b33bac243,
0xbdbb2ba234acac29,0x144200aa9c292c48,0xc4aaa4c84a4bc92c,0xb3a0b2244cbac28a,
0x2343138c3234444b,0xc31ba1bab3d33433,0x9b1c3ab33ca14209,0x321bbb3bbb3a341a,
0x38aa33c9a0340412,0xb3c2223233b93124,0x514a43bb0bc24b14,0x2cbc2c0b90259909,
0x3992242bb143394a,0x24ba3333b32330d3,0x40c83331b4a40303,0xb320cbc38bb428cd,
0x0b9abb0cc032b8b3,0x29aaababb2a33bca,0xb14a04d423bcacc2,0xc2bbcc02abbc03b0,
0x1942a99333232233,0xa34a233b33035b3b,0x0a93ad3a89b24343,0xca11123149342392,
0x4b495121993bbb0b,0x18b30bbc4381393b,0xb222cabc9489c449,0xaa3c39b23932ba82,
0x49c4123baaa322b8,0x28abb48cb9bcb3c9,0x13aa43a4223bb0b1,0x3b0ca9a3a3cbaaba,
0x22b9b4cd8011b0ba,0x02bac4bc9a18aa34,0x29b12183bac2c2ad,0xaab3bb3a08a32bac,
0xb9bb9a0bc29bbac2,0xc1b31c3c3bb0aa43,0x01a291ca3c251cab,0x42bbba3a1a4b1233,
0x483bca043ca332c1,0xa33a3aab0b9a4332,0x82abb0b4432a39a3,0x139a0200419439bb,
0xa4233a013bcc933b,0x292bba2c12bbb230,0x204020b3422b2c9c,0x4c313b0a320bba23,
0x1b0b41ab3a2a3293,0xb044038900b0b430,0x398c2ac5439bb4ab,0xab2b321444131ca3,
0x20841cc2420a8a2c,0x94bb5a123242b828,0x34a302b42cbbcb3b,0xaa3b3a39a3abbb89,
0xcab2c09cb4b41c80,0xc6354c2b4cab3b24,0xbacababcbcb4cca3,0xc1abc41b2c8ccbbb,
0xa1834babb1320cb2,0xbba32a31acb3bb32,0xb230933bb113db80,0x0391ba282acc3233,
0x303c31aba033313b,0x33ba33c423033332,0xc5a3b202bcd34a33,0x4b293935b243423c,
0x223a334c092b0b4c,0xa32332b539b440b4,0xbdbb90bbb913323b,0xac342b2bb4421a2b,
0x2a832b2204bca80a,0x424933833b49a3a4,0xbc8922b4acbdba09,0xab43439b8433acb0,
0x381932ddb3233ba0,0xc1ca359924ba3939,0x3a03aa13bba0303b,0xaabdbc2b9b9ba93a,
0x02913d13c23cbb93,0xa3433c4bcba34334,0xa32a34b4b4203cc3,0x333b3bd991bcd239,
0xc23c3b49c022abbb,0x302a2b9840822394,0xb0abb80c0cb21b24,0xa4c421aac334100c,
0xc023c2c423cb2a83,0x23329c32a12b301c,0x2a14b993b33993aa,0x0a1a23821b3b1ab9,
0xc099bca212bca4ba,0x423b4bca0054b4b2,0xb3990aa21cb0ab22,0xabb489b10ca2abbb,
0xbc9bbb43b1abbcb3,0xbba31c5b9baa9baa,0x4c4bc0ab0342b381,0xa0938a0d20c09c95,
0x8a44c42233c9144c,0x5c338410a44b84ca,0x22c32c91a3c823ac,0x4b35a0d4b532ccbc,
0xbb223cb448bc0300,0xc4434b1b4b3cb132,0x3a3b22044a42c333,0xb3ab09495cc34cb4,
0xd32a33cb1ac8a422,0x3239b91bb2c3c42c,0xb3c0c204302034aa,0x902382344c3c4cb9,
0x24a52aba324459c2,0x0991a422c4cbb23a,0x021a5b93c939922b,0x3a280328b2b13241,
0x0030323b23d3402a,0x20000a3022b22a32,0x43ca20833a382c0a,0x2d28c420c10a932c,
0xb3931322413323b3,0x824a32232a9454ab,0x14a3332324bc3303,0x193343c32232b399,
0x33a592ac3a8b33c3,0x0ba1113aa4ac0ac2,0x1cb04b42ccb0aaa0,0x3313a9abb8c2a41b,
0x2838111aa433b92a,0x2bc802b3c23222ba,0xb434b39b9ab9bba9,0x2a2213add04ab2a3,
0xa32424bca3343343,0xcb29333bbcca4ca4,0x331b43334da94ab3,0x30b3a2a035020959,
0xcb88ac3339c4a5a9,0x8b940a5bbba383a2,0x4a3949bbacc9c214,0x1ccbcbb39ba3cbcb,
0x0bbc3294b32ac440,0x28349420323b42aa,0x0442cb9bbbcb82b3,0x224443c293a2c400,
0x002bbac95a1b32bb,0x09095b1231bbb12b,0xbbbc10909c99aa10,0x9bab9baacab08aba,
0x80b9233b20c38243,0x281a11b2bd3a22c2,0x4c9844304823a2c4,0x9320138aba9ba3b0,
0xb22aa8843a2a20a3,0x2399bc23ba42ca1b,0x2339243b2141b3b1,0x8a0a83130c8c4b10,
0x9913bb0ab3a30b08,0x04c53b0a4bab31bc,0xbbc3b3b5ac2bcbaa,0xb0abbb4a1bb143bb,
0x002b9893401c1b48,0x81233cc139223ba2,0xb3b2bc2c434a4a13,0x234b83c23138b929,
0x32b3c41320ba3243,0x3298803b883a8abb,0xa3c24210344a529b,0xb330c2344b443bbb,
0x03aa929bd10b41aa,0x0243d281322aa219,0x02aa20b11a1300ba,0x3b981b98b3a930a2,
0x14cb443cbb9b93bb,0xa02a23ac1bac03b4,0xac0c32a23b19a9cb,0xb3b3288313a0bbb1,
0xa0a238392d2b2aab,0xb0933b89b9bbabca,0x9d9c1b3b32123283,0x0b1219c3a8c8b328,
0xc09954383b03a2cc,0x3a889ab09b033ba9,0x0332a943bc8400bb,0x2b4a043920b02139,
};

static int backbone_model4_conv2_quant1_threshold[64 * 14] =
{ // torch.Size([64, 14])
-744, -484, -354, -256, -191, -126, -61, 3, 68, 133, 198, 296, 426, 686,
-758, -485, -349, -246, -178, -110, -41, 26, 94, 163, 231, 333, 470, 743,
-491, -288, -186, -110, -59, -8, 42, 93, 144, 195, 246, 322, 424, 628,
-759, -519, -399, -309, -249, -189, -129, -69, -9, 50, 110, 200, 321, 561,
-858, -572, -429, -321, -250, -178, -107, -35, 35, 107, 178, 286, 429, 715,
-740, -442, -293, -182, -108, -33, 40, 115, 189, 263, 338, 449, 598, 895,
-635, -400, -282, -194, -136, -77, -18, 40, 98, 157, 216, 304, 422, 657,
-706, -456, -331, -237, -175, -112, -50, 12, 74, 137, 199, 293, 418, 668,
-617, -398, -288, -206, -151, -96, -41, 12, 67, 122, 177, 259, 369, 588,
-429, -275, -197, -139, -101, -62, -23, 14, 53, 92, 130, 188, 266, 420,
-812, -562, -437, -343, -280, -218, -155, -93, -30, 31, 94, 187, 312, 562,
-959, -633, -470, -348, -267, -185, -104, -22, 58, 139, 221, 343, 506, 832,
-658, -405, -278, -184, -120, -57, 5, 68, 132, 195, 258, 353, 479, 732,
-766, -494, -359, -257, -189, -122, -54, 13, 81, 149, 216, 318, 454, 725,
-573, -363, -257, -179, -126, -73, -21, 31, 83, 136, 189, 267, 373, 583,
-987, -608, -419, -277, -183, -88, 6, 100, 195, 290, 384, 526, 716, 1094,
-741, -473, -339, -238, -171, -104, -37, 29, 95, 162, 229, 330, 464, 732,
-882, -588, -441, -331, -257, -183, -110, -36, 36, 110, 183, 294, 441, 735,
-856, -577, -438, -333, -263, -194, -124, -54, 15, 84, 154, 258, 398, 677,
-747, -462, -319, -212, -140, -69, 1, 73, 144, 215, 287, 394, 537, 822,
-634, -378, -249, -153, -89, -25, 38, 102, 166, 231, 295, 391, 519, 775,
-695, -431, -299, -200, -134, -68, -2, 63, 129, 195, 261, 360, 492, 756,
-863, -604, -474, -376, -311, -246, -182, -117, -52, 12, 77, 175, 304, 564,
-540, -290, -165, -71, -8, 54, 116, 179, 241, 304, 367, 460, 586, 836,
-743, -453, -308, -200, -127, -55, 17, 89, 162, 234, 307, 415, 560, 850,
-888, -611, -472, -369, -300, -230, -161, -92, -23, 45, 115, 218, 357, 633,
-833, -539, -392, -282, -209, -135, -62, 10, 84, 157, 231, 341, 488, 781,
-709, -472, -354, -265, -205, -146, -87, -28, 31, 90, 149, 238, 357, 594,
-690, -428, -297, -198, -133, -67, -2, 63, 129, 194, 260, 358, 489, 751,
-630, -396, -279, -192, -133, -75, -17, 41, 99, 157, 216, 303, 420, 654,
-794, -503, -358, -249, -176, -103, -30, 41, 114, 187, 260, 369, 514, 805,
-614, -373, -252, -161, -101, -40, 19, 80, 140, 201, 261, 352, 473, 714,
-1302, -860, -639, -474, -363, -253, -142, -32, 78, 188, 299, 465, 685, 1127,
-995, -667, -504, -381, -299, -217, -135, -53, 28, 110, 192, 315, 479, 806,
-577, -308, -174, -74, -7, 59, 126, 193, 260, 327, 394, 495, 629, 897,
-770, -462, -309, -194, -117, -40, 36, 113, 189, 266, 343, 458, 612, 919,
-714, -426, -283, -175, -103, -31, 40, 112, 184, 255, 327, 435, 579, 866,
-757, -461, -312, -201, -127, -52, 21, 95, 169, 243, 317, 429, 577, 874,
-804, -531, -394, -292, -223, -155, -86, -18, 49, 118, 186, 289, 425, 699,
-744, -467, -329, -225, -156, -86, -17, 51, 120, 190, 259, 363, 501, 778,
-653, -420, -304, -217, -158, -100, -42, 15, 73, 131, 190, 277, 393, 626,
-853, -545, -391, -275, -198, -121, -44, 32, 109, 186, 263, 378, 532, 840,
-812, -557, -430, -334, -271, -207, -144, -80, -16, 46, 110, 205, 333, 587,
-638, -382, -253, -157, -93, -29, 34, 98, 162, 226, 290, 386, 515, 771,
-943, -583, -404, -269, -179, -89, 0, 90, 179, 269, 359, 494, 674, 1033,
-758, -500, -370, -273, -209, -144, -79, -15, 49, 114, 178, 275, 405, 663,
-766, -467, -318, -206, -131, -56, 18, 92, 167, 242, 317, 429, 578, 878,
-630, -391, -271, -181, -121, -61, -1, 58, 117, 177, 237, 327, 447, 686,
-514, -274, -155, -65, -5, 54, 114, 174, 234, 294, 353, 443, 563, 803,
-866, -577, -433, -325, -252, -180, -108, -36, 35, 108, 180, 288, 433, 722,
-603, -358, -235, -143, -81, -20, 41, 102, 164, 225, 286, 379, 501, 747,
-632, -377, -250, -154, -90, -27, 36, 100, 163, 227, 291, 386, 514, 768,
-746, -492, -366, -270, -207, -144, -80, -17, 46, 109, 172, 267, 394, 648,
-1082, -714, -531, -393, -301, -209, -117, -25, 66, 158, 249, 387, 571, 938,
-724, -481, -359, -268, -207, -146, -85, -24, 36, 96, 157, 249, 370, 614,
-640, -396, -274, -183, -122, -61, 0, 60, 121, 182, 243, 334, 456, 700,
-705, -447, -319, -222, -158, -94, -30, 34, 98, 162, 227, 323, 452, 709,
-766, -482, -340, -234, -163, -92, -21, 49, 120, 191, 262, 368, 510, 794,
-755, -467, -322, -214, -142, -70, 1, 73, 145, 217, 290, 398, 542, 830,
-606, -353, -226, -131, -67, -4, 58, 122, 185, 248, 312, 407, 534, 787,
-589, -371, -262, -180, -126, -71, -17, 37, 91, 146, 200, 282, 391, 609,
-943, -633, -479, -363, -285, -208, -130, -53, 23, 101, 178, 294, 449, 759,
-789, -537, -410, -316, -253, -190, -126, -63, 0, 62, 125, 220, 346, 598,
-695, -420, -282, -179, -110, -41, 27, 96, 164, 233, 302, 405, 543, 818,
};

static uint64_t backbone_model4_conv2_conv2_weight[64 * 9] =
{ // torch.Size([64, 3, 3, 1])
0x3, 0xb, 0x3, 0x3, 0x2, 0x3, 0x5, 0x5, 0x3,
0x4, 0x3, 0x4, 0x5, 0x4, 0x4, 0x2, 0x3, 0x3,
0xd, 0x3, 0x4, 0xc, 0xd, 0x4, 0x3, 0xc, 0xb,
0xc, 0xc, 0xc, 0x4, 0x5, 0x5, 0x5, 0x4, 0x4,
0x4, 0x3, 0x2, 0x3, 0x0, 0x0, 0x4, 0x4, 0x3,
0x9, 0x8, 0xa, 0xc, 0xc, 0xb, 0xc, 0xd, 0xc,
0x2, 0x4, 0x4, 0x4, 0x4, 0xb, 0xc, 0xd, 0xd,
0x4, 0xc, 0x2, 0x9, 0x6, 0xa, 0xb, 0x3, 0xa,
0xc, 0x3, 0x4, 0xc, 0x4, 0x4, 0x1, 0x5, 0x8,
0x2, 0x1, 0x2, 0x4, 0x3, 0x5, 0x4, 0xe, 0x2,
0xc, 0x4, 0x5, 0xb, 0xc, 0x5, 0x0, 0x8, 0x3,
0x4, 0x3, 0x4, 0x3, 0x3, 0x4, 0x3, 0x3, 0x3,
0x4, 0x9, 0xc, 0x1, 0xa, 0xc, 0xb, 0xc, 0xd,
0xc, 0xd, 0xd, 0x1, 0xa, 0xb, 0x3, 0x4, 0x3,
0xa, 0x5, 0x3, 0x4, 0x5, 0xd, 0x4, 0x8, 0xc,
0x5, 0x4, 0x3, 0x3, 0x4, 0x3, 0xb, 0xb, 0x0,
0x3, 0x0, 0xc, 0x0, 0x5, 0x4, 0x0, 0x3, 0x5,
0xd, 0xb, 0x2, 0xc, 0xc, 0xb, 0x3, 0xc, 0xc,
0x4, 0x3, 0xb, 0x5, 0x4, 0x2, 0x2, 0x3, 0x3,
0xc, 0xd, 0xc, 0x9, 0xb, 0xa, 0x1, 0x1, 0x3,
0xc, 0xb, 0x1, 0xc, 0xd, 0x0, 0x3, 0xd, 0x9,
0xc, 0x3, 0x4, 0xd, 0xc, 0x1, 0x9, 0xc, 0xc,
0xd, 0xc, 0x4, 0xd, 0xa, 0x4, 0x8, 0x4, 0x4,
0x4, 0x4, 0x4, 0xb, 0xb, 0xb, 0xc, 0xc, 0xd,
0x4, 0x3, 0x1, 0x4, 0x3, 0x3, 0x4, 0x4, 0x2,
0x4, 0x5, 0xb, 0x3, 0x3, 0xc, 0x0, 0x4, 0xc,
0x5, 0xb, 0xb, 0x5, 0xc, 0xb, 0x4, 0xc, 0xb,
0x4, 0x4, 0x2, 0xb, 0x4, 0x5, 0xc, 0xd, 0x4,
0xc, 0xa, 0xb, 0xb, 0xb, 0xa, 0xb, 0xb, 0xb,
0x4, 0xc, 0xc, 0x4, 0x2, 0xc, 0x4, 0x3, 0xd,
0xa, 0x9, 0xa, 0xc, 0xb, 0x9, 0xc, 0xc, 0xc,
0x1, 0x4, 0x4, 0xb, 0xb, 0x5, 0x9, 0x4, 0x0,
0x5, 0x3, 0x5, 0x6, 0xb, 0x1, 0x4, 0x4, 0xa,
0xa, 0xc, 0xa, 0xb, 0xc, 0xa, 0xc, 0xa, 0xb,
0xc, 0xe, 0xd, 0x8, 0x9, 0xb, 0x0, 0x1, 0xa,
0xd, 0xb, 0x8, 0xc, 0xc, 0xa, 0xb, 0xc, 0x9,
0x4, 0x4, 0x4, 0x4, 0x4, 0x4, 0x0, 0x1, 0x3,
0x5, 0xc, 0xd, 0x4, 0xb, 0xc, 0x5, 0x0, 0xb,
0x3, 0xb, 0x1, 0x0, 0xc, 0xe, 0xb, 0x4, 0xd,
0x9, 0xc, 0xc, 0x4, 0x3, 0xd, 0x5, 0x4, 0xc,
0xc, 0x0, 0x1, 0xc, 0xb, 0xa, 0x1, 0xc, 0xc,
0x4, 0x4, 0x0, 0x6, 0x2, 0xc, 0xa, 0xb, 0x1,
0xb, 0xc, 0xb, 0x4, 0xb, 0xb, 0x5, 0x4, 0xb,
0xd, 0xb, 0x2, 0x4, 0x5, 0x4, 0x4, 0x5, 0x3,
0x2, 0x9, 0x4, 0x4, 0x4, 0x5, 0xb, 0xb, 0x0,
0xc, 0xc, 0xc, 0xb, 0xa, 0xb, 0x9, 0x1, 0xc,
0x4, 0x5, 0x4, 0x4, 0x0, 0xc, 0x3, 0xb, 0xc,
0xc, 0xd, 0xc, 0xa, 0xa, 0xb, 0x3, 0x4, 0x5,
0xc, 0xa, 0x2, 0xc, 0x2, 0xc, 0x9, 0xb, 0xc,
0xa, 0xa, 0xd, 0xb, 0x0, 0xc, 0xb, 0x9, 0xc,
0x5, 0x6, 0x4, 0xa, 0xb, 0xc, 0xb, 0xb, 0xc,
0xc, 0xc, 0xc, 0xb, 0xc, 0xb, 0x3, 0xb, 0xc,
0x1, 0x4, 0x3, 0x2, 0x4, 0x4, 0x3, 0x2, 0x4,
0xc, 0xd, 0x2, 0xd, 0x4, 0x3, 0xd, 0x4, 0x0,
0xa, 0xb, 0x9, 0x8, 0x6, 0xb, 0x3, 0x4, 0x2,
0x4, 0x4, 0x0, 0xb, 0x0, 0x9, 0xd, 0xc, 0xb,
0xc, 0x3, 0x4, 0xc, 0xb, 0x3, 0xc, 0xc, 0xb,
0xb, 0x9, 0x5, 0xb, 0x4, 0x5, 0x1, 0x3, 0x3,
0x9, 0xc, 0xd, 0x3, 0xb, 0xc, 0x2, 0xb, 0xc,
0x4, 0xb, 0xb, 0x4, 0x5, 0xc, 0x8, 0x5, 0x0,
0x3, 0x4, 0x4, 0x0, 0xd, 0x4, 0xb, 0x2, 0x3,
0xc, 0xc, 0xc, 0xb, 0xc, 0xb, 0xb, 0x1, 0x2,
0x2, 0x1, 0xb, 0xb, 0xc, 0xc, 0xc, 0xc, 0xc,
0xb, 0xb, 0xa, 0x0, 0x2, 0x0, 0x5, 0x5, 0x4,
};

static int backbone_model4_conv2_relu2_threshold[64 * 7] =
{ // torch.Size([64, 7])
46, 107, 168, 229, 320, 442, 686,
34, 88, 142, 196, 278, 386, 603,
34, 87, 140, 194, 274, 381, 595,
-24, 45, 115, 185, 289, 429, 708,
10, 46, 83, 119, 173, 245, 390,
30, 70, 111, 152, 213, 295, 458,
14, 67, 120, 173, 253, 359, 571,
14, 69, 123, 178, 259, 368, 586,
35, 91, 147, 203, 286, 398, 622,
-38, 38, 114, 191, 306, 459, 766,
46, 96, 145, 195, 270, 369, 567,
47, 83, 119, 155, 209, 281, 425,
39, 86, 134, 181, 252, 347, 537,
-25, 25, 77, 128, 205, 307, 512,
102, 154, 206, 258, 336, 440, 648,
-128, -90, -52, -14, 41, 117, 267,
22, 64, 106, 148, 211, 296, 465,
21, 73, 126, 179, 258, 364, 575,
44, 93, 142, 191, 265, 363, 558,
34, 79, 125, 170, 239, 330, 512,
56, 102, 148, 194, 263, 356, 540,
52, 97, 142, 187, 255, 345, 526,
93, 147, 201, 256, 337, 445, 662,
74, 115, 157, 199, 261, 344, 510,
-4, 36, 76, 116, 177, 258, 420,
70, 105, 141, 176, 228, 298, 439,
-3, 31, 66, 101, 153, 223, 363,
61, 109, 156, 204, 275, 370, 560,
36, 70, 104, 138, 189, 257, 393,
84, 131, 178, 225, 295, 389, 578,
-60, -5, 49, 105, 187, 298, 519,
-22, 18, 59, 101, 163, 245, 411,
55, 117, 179, 240, 333, 456, 702,
-7, 35, 77, 120, 184, 269, 440,
58, 116, 173, 230, 316, 430, 658,
24, 73, 121, 170, 242, 339, 533,
-23, 18, 60, 102, 165, 249, 417,
68, 106, 144, 181, 238, 314, 465,
32, 84, 137, 189, 268, 373, 583,
54, 97, 140, 183, 247, 333, 504,
45, 87, 129, 171, 234, 318, 487,
-22, 22, 68, 113, 181, 272, 453,
63, 98, 132, 167, 219, 288, 426,
110, 168, 226, 284, 371, 487, 719,
17, 75, 134, 193, 281, 399, 634,
28, 72, 116, 160, 225, 313, 488,
49, 96, 143, 190, 261, 356, 545,
57, 99, 140, 182, 245, 328, 495,
-26, 21, 69, 117, 189, 286, 478,
-33, 18, 71, 124, 203, 309, 520,
-3, 73, 149, 226, 341, 494, 800,
21, 67, 113, 159, 228, 319, 503,
19, 59, 100, 141, 202, 284, 448,
-70, -15, 39, 94, 177, 288, 508,
-5, 52, 109, 166, 253, 368, 597,
10, 58, 107, 155, 228, 325, 518,
25, 66, 106, 147, 207, 288, 450,
22, 67, 113, 158, 225, 316, 496,
13, 62, 112, 161, 235, 333, 530,
83, 119, 156, 192, 247, 320, 466,
-77, -25, 25, 77, 155, 258, 465,
46, 87, 129, 170, 232, 314, 479,
56, 96, 136, 175, 235, 314, 473,
12, 53, 94, 135, 196, 278, 442,
};

static uint64_t backbone_model5_conv1_conv1_weight[64 * 1*4] =
{ // torch.Size([64, 1, 1, 64])
0xbccb3baa1bba2ba9,0xa04cd3b3bda34243,0xb11cb034382332aa,0x3a12b0b099b3cb2a,
0xc0ca34a58939a8b3,0x3b5980a42044a438,0xbac3b23229ca2023,0x390da294090103aa,
0xb30243431222a0c2,0x83c3343b03413339,0x1caa9c0033130381,0x340ab113b2ab2a8b,
0xca8b0bcc8aa20ca4,0x101c1410b29c0ad4,0xb482039b9cb90acb,0xb239a93bc295a0e3,
0x8a910bb40224023c,0x2344a0332134048a,0xaa2b943c30233123,0xb8234b10312a13b3,
0x3bb1ab2ca20bcb24,0xbca33cb2842cc9c3,0xc23242124bcbc4bb,0x4bc940ab39120538,
0x03330404bbc0bb03,0xbc5bc305424809a2,0x33343334cac3a833,0xbb1d34104c34b334,
0xbb51dabcb29d3ba4,0x044ba10bc1bc2cd9,0x21ac4b1131bca3b0,0xbb4cb34a1c3a834d,
0xc309494ab384c33b,0x4433a802043b3a34,0x042900bc03aba414,0x90b2418b39dca251,
0xc9a231b2cb32335a,0x332219040a33b90b,0x434302342ba3b408,0xb23e39328cb3babb,
0x4ca02cca2bbcb243,0x314384b33cbaa43d,0x2b398b13324344aa,0x2b3c422bb4db34a4,
0x4aa2cc2c821bb444,0x93a49ba3a0c92cb4,0x5d932b344c4bc5ab,0xa4cc232241ca49c9,
0x3023b03bb9c2c2c3,0x9b32ca03aadc8ba3,0x33333a3cc33bb3b2,0xd30341932222ab32,
0xbbca4ab12954b993,0xcc3c5b3399b1c483,0xa02b4bbb45dcbc22,0x0c3bc43a23bb45b2,
0x2a39c4809394b0ba,0xc54b8014a93932c8,0xcb3bc13ccb42d9b3,0xd8c25b09b0cac4c3,
0xab44ca4ca331c023,0x82c5b332349bccc4,0x3d4b4aab254cab42,0xb2cbab13424b43d3,
0xba338cbab413a592,0xaba4c411abb44aa5,0x3cb3b0a04bb8a5ca,0x3312b34a51bc0943,
0xc34a44331333423b,0xa233c3432ca4b543,0xb4c3d4344dc414cb,0x8b045cccb2c4bb2b,
0xbca2c332221b2bb3,0x2444cb442933233c,0x4cabb83aa93ab033,0xd4123cb2313c19cb,
0x234044c43a3b2141,0x809ab3344a33cb9c,0x44c224443acb2254,0x34bc1202345549cb,
0x5d02b44cc23ccbcb,0xa9cbc93abc03a8b3,0x3c04c5543dcbabad,0xcb2ba3bb1a459c23,
0x3ab4ccbc130bc434,0x3cb33a43b32bbcc4,0x0c3a53cc4532b4b4,0xb82b3b5332bc42d3,
0xb408c24a304bcbb8,0xb4bccb31bbccc2c2,0xb33a92bc85abb2b4,0xc9b00cb0a2a20c4b,
0xa1011bc92bc003a3,0xcc51b0aa13b4ca34,0x334b2b14cc2d3cb4,0x113b040a8b0a3b8c,
0x9944dbbbb2c230a9,0x3249cb024cdaad32,0x2b232cc3931cbb2c,0xb323248b39349c2b,
0x91b224334a3c13b4,0xbb8bb9b4b24bc2bc,0x1250a532bc39c5c9,0x3ada4aba33c5a33c,
0x4128acc3a9a0395c,0x0b2ba2132b1a32ab,0xaa92b194cdb3421c,0xc33b4c099130cb44,
0x3dc53bbcc5429cc2,0xd0b34c3ac5cc43d4,0xb0c3444c2ac3bbcc,0xca9ab45b13c242d4,
0x32120a9910044322,0x91a34200234022b0,0xa223030382a30ba4,0x30330a3102224233,
0xa12249a22a3bc38c,0x443433242a33432c,0x3b33b33c32443409,0xc0024214a03833b4,
0x4340ac0b9a22403c,0x494ca31a38d43c3b,0xa3200bc3813a4218,0x9a441c2bb3382cc3,
0xc4093422bb033123,0x0b44813038994b3a,0x059c1a2243c121b5,0x9baac28aaccbc0cc,
0xaa4803acb3bbc292,0x3bc48a3dc093234b,0x32442243b23231db,0x0a243301234348bc,
0xb2dbbcb203bbc3a2,0x1db4cbab2b92b300,0x4d3c1ba03c48b4b4,0x29adab9a38abc9a4,
0x22a9bc1321c3999a,0x443383339ba33093,0xb32a0bb4c9cb0bc4,0x0a13bc9cb85d3252,
0x234233301ac3e33b,0x3a3cc414abbb43c4,0x2334194c923ab4b3,0xc3b2a13439a21124,
0x3a38bdaca4a9434b,0x3bc4143bb2cbc4ca,0x4ddbbcc4adc194bc,0xcbacbc3b03bcbc4b,
0xa9c033103332cb3a,0xa2bc92aab83b5333,0xca4b20bc8382b3c4,0x030cd32b1ad9b234,
0xb440ba0c2bdb12c9,0xbc40ac4c329c4acb,0x013cbcc904414284,0x444c3c24b854abb2,
0xbb4cbd0b14c23abb,0x9d4c020ababb3bc1,0x13c3bcc34cd349c2,0xcc4aba3bab300c43,
0xbbb22b18b8bb1aa2,0xcdc4231b23a3d238,0x1bc328c3ba943baa,0x5c3cca24b3b3aa33,
0x1b2a493433c33a33,0xd440303582244a44,0x3adaab433bc4bbcb,0x2db43bca243d33c9,
0xa2b13381a224c3bc,0x8c1cb440002b52a0,0x04bca44cbb02a0c4,0xc434da32b1a4dc3c,
0x1444435894bb2234,0x3ccc0cbac5bcccb4,0x35c55bc2c2cbcab3,0x4acbbc4b44b12bc4,
0x43b3483a10c3c34a,0xac2b5ba2a6124bca,0x0cac4cca233bbb04,0x8a4bb14a842c43c3,
0xab9a99c02234a4a4,0x42c2b2320bba31bc,0x3d4a9c3b3c2c194a,0x263bc4a3a2dbbac2,
0x830a4a3a2a23a203,0xbb23313b19334a44,0x113c232b40833200,0x323a138223b0c2c4,
0xa8aa114bb35030a4,0x05db4a3cb0b03ab2,0xc3c2b3cb43a2323a,0x84a0cb1299bc1c2b,
0xccc3c2090b1208db,0x5ab4c39c303b43bc,0xcb4cb33cb441ab23,0x0382ba348a5bc032,
0x343c0c8231c53a4a,0x8caa9c00c03a3cb5,0xb15a2bc922313942,0xbbac4b02cc5b1a81,
0x93a033080b2cbb38,0x1ab4aba31a9aba3b,0xa09caaa8a82bba90,0x829bba91abac8bbb,
0x4132b09a43b4baca,0xcbcb889949ccc2cb,0x1dc3b1babb24a81b,0xa9c44b0a24b03a84,
0x415bc930acc9cc4a,0x4b3cc3c32c9c33c3,0x233110b3ca435b3b,0x2489c283b993cbb4,
0x393b13d139011b5c,0x432d30394b2bd339,0xd05ca8b1a144034c,0xb29258b0aa83c2b1,
0xcbc24523c4444ac3,0xbd0aa2403334b4cc,0xc443965b2cb4bcb2,0x398ab3b04cb4b231,
0x33a43b430432b33b,0x3ba35a8306aabb85,0x3bba5acb35cac293,0xa9bbb2494522431b,
0xc220030a13a232ad,0x3433baa0b3005334,0xc14dab0b354019d2,0x022cc91c24d9294c,
0x3a4b44b49239423b,0x2ab303043244c911,0x3bd4b2322cc2ab5c,0xa5a43bb4024933b9,
0xb3a9323540b3cbb2,0x9b3c04a439cb9a14,0xb84c9abaacd13323,0x3bbbdbab4923b235,
0x43b343accbb2d05d,0x9cc19ab3c3b93844,0xac44a3093390121b,0xc22caa30b9143b32,
0xabb2c222c0cc09b0,0x3b8cb0c1439c18c3,0x9313aab09c0231ab,0x92ba1c082b24a314,
0x444bbc4312b21149,0x9cc3ba423ab1cb35,0x14452ad3b2ab2300,0x10ab4c9b343a2a24,
0x445b2ac49814332c,0xb34d2ba1b98cbbac,0xab303b1acc888a10,0x2b443330bbc3aa4a,
0x2cc8c3c0c9b949cb,0x3a42001a43c5b43a,0x39bb9ab310cb5c03,0xbc44b321904b3cc3,
};

static int backbone_model5_conv1_quant1_threshold[64 * 14] =
{ // torch.Size([64, 14])
-1447, -963, -721, -539, -418, -297, -176, -55, 65, 186, 307, 488, 730, 1214,
-1579, -902, -563, -309, -139, 29, 198, 368, 537, 706, 876, 1130, 1469, 2146,
-1261, -778, -536, -355, -234, -114, 6, 127, 248, 368, 489, 670, 912, 1395,
-2368, -1659, -1305, -1039, -861, -684, -507, -330, -152, 24, 201, 467, 822, 1531,
-1040, -602, -384, -219, -110, -1, 108, 217, 327, 436, 546, 710, 929, 1366,
-1304, -790, -533, -340, -212, -83, 45, 173, 302, 430, 559, 752, 1009, 1523,
-1294, -767, -504, -307, -175, -44, 87, 219, 350, 482, 613, 811, 1074, 1600,
-1315, -890, -677, -518, -412, -306, -199, -93, 12, 118, 225, 384, 596, 1021,
-1157, -687, -453, -276, -159, -42, 75, 192, 310, 427, 545, 721, 956, 1425,
-1119, -688, -472, -310, -202, -94, 13, 121, 229, 336, 444, 606, 822, 1254,
-1158, -702, -474, -303, -189, -75, 38, 152, 266, 380, 494, 665, 893, 1348,
-1459, -928, -662, -463, -330, -197, -64, 68, 201, 334, 467, 666, 932, 1464,
-1494, -1024, -790, -613, -496, -379, -261, -144, -26, 90, 208, 384, 619, 1088,
-1043, -627, -419, -263, -159, -54, 49, 153, 257, 361, 465, 621, 829, 1246,
-1569, -1102, -869, -693, -577, -460, -343, -226, -110, 6, 123, 298, 532, 999,
-1611, -1039, -753, -538, -395, -252, -109, 33, 176, 319, 462, 677, 963, 1535,
-1370, -806, -523, -312, -171, -30, 110, 252, 393, 534, 675, 886, 1169, 1733,
-1431, -914, -655, -461, -332, -203, -73, 55, 184, 314, 443, 637, 896, 1413,
-1331, -860, -624, -448, -330, -212, -95, 22, 140, 258, 375, 552, 787, 1258,
-1288, -681, -377, -149, 2, 154, 305, 457, 609, 761, 913, 1141, 1444, 2052,
-1519, -995, -733, -537, -406, -275, -144, -13, 117, 248, 379, 575, 837, 1361,
-1320, -788, -522, -323, -190, -57, 75, 208, 341, 474, 607, 806, 1072, 1604,
-1199, -825, -638, -497, -404, -310, -217, -123, -29, 63, 157, 297, 484, 859,
-1098, -700, -501, -352, -253, -153, -54, 45, 144, 244, 343, 493, 692, 1090,
-1598, -1077, -816, -621, -491, -360, -230, -100, 30, 160, 290, 486, 746, 1267,
-1496, -894, -593, -367, -216, -66, 84, 235, 385, 536, 686, 912, 1213, 1815,
-1674, -1073, -772, -546, -396, -245, -95, 54, 205, 355, 506, 731, 1032, 1634,
-1894, -1125, -740, -452, -260, -67, 124, 316, 509, 701, 893, 1182, 1567, 2336,
-969, -533, -316, -152, -43, 65, 174, 283, 392, 500, 609, 773, 991, 1426,
-1156, -664, -418, -233, -110, 12, 135, 258, 381, 504, 628, 812, 1058, 1551,
-1415, -903, -646, -454, -326, -198, -70, 58, 186, 314, 442, 634, 891, 1403,
-1231, -731, -481, -294, -169, -44, 80, 205, 330, 455, 579, 767, 1017, 1516,
-963, -564, -365, -215, -115, -15, 83, 183, 283, 383, 482, 632, 831, 1230,
-1587, -1093, -847, -662, -538, -415, -292, -168, -45, 77, 200, 385, 632, 1125,
-1277, -816, -586, -413, -298, -183, -67, 47, 162, 277, 392, 565, 796, 1256,
-1779, -1173, -870, -643, -492, -340, -189, -37, 113, 264, 416, 643, 946, 1551,
-1999, -1306, -960, -700, -527, -354, -181, -7, 165, 338, 511, 771, 1117, 1810,
-1164, -754, -550, -396, -294, -192, -89, 12, 114, 217, 319, 473, 677, 1087,
-1360, -849, -594, -403, -275, -148, -20, 106, 234, 361, 489, 680, 935, 1445,
-2104, -1482, -1171, -938, -782, -627, -471, -316, -160, -5, 150, 383, 694, 1316,
-1252, -816, -597, -434, -324, -215, -106, 2, 111, 220, 330, 493, 712, 1148,
-1130, -702, -489, -328, -222, -115, -8, 98, 205, 312, 418, 579, 792, 1220,
-1408, -896, -640, -447, -319, -191, -63, 64, 192, 321, 449, 641, 897, 1410,
-1547, -914, -598, -361, -202, -44, 113, 271, 429, 587, 746, 983, 1299, 1932,
-1512, -919, -623, -401, -253, -104, 43, 191, 339, 487, 635, 857, 1154, 1746,
-1357, -868, -624, -441, -318, -196, -74, 47, 169, 291, 413, 597, 841, 1330,
-927, -538, -344, -198, -101, -3, 93, 190, 287, 385, 482, 628, 822, 1212,
-1205, -761, -540, -373, -262, -152, -41, 69, 180, 291, 402, 568, 790, 1233,
-1661, -1067, -770, -547, -399, -250, -102, 46, 194, 343, 491, 714, 1011, 1605,
-1897, -1283, -976, -745, -592, -438, -284, -131, 22, 176, 329, 560, 867, 1482,
-1417, -969, -745, -577, -465, -353, -240, -128, -16, 95, 207, 375, 599, 1047,
-1201, -809, -613, -466, -368, -270, -172, -74, 23, 121, 219, 365, 561, 953,
-2072, -1428, -1107, -866, -705, -544, -383, -222, -62, 98, 259, 500, 822, 1465,
-1526, -1045, -804, -624, -503, -383, -263, -142, -22, 97, 218, 398, 639, 1121,
-1742, -989, -612, -330, -142, 45, 234, 422, 610, 798, 987, 1269, 1646, 2399,
-1943, -1109, -692, -379, -171, 37, 245, 454, 662, 871, 1079, 1392, 1809, 2643,
-1305, -833, -597, -420, -302, -184, -66, 51, 169, 287, 405, 582, 818, 1290,
-1002, -599, -398, -247, -147, -46, 53, 154, 254, 355, 456, 607, 808, 1210,
-1265, -810, -583, -413, -300, -186, -72, 40, 154, 267, 381, 551, 778, 1232,
-1153, -728, -516, -356, -250, -144, -38, 67, 173, 280, 386, 545, 757, 1182,
-1322, -894, -680, -519, -412, -305, -197, -90, 16, 123, 230, 391, 605, 1034,
-1983, -1289, -942, -682, -509, -336, -162, 10, 184, 357, 530, 791, 1137, 1831,
-1102, -716, -523, -378, -281, -185, -88, 7, 104, 200, 297, 441, 634, 1021,
-1182, -744, -525, -361, -251, -141, -32, 77, 186, 296, 406, 570, 789, 1227,
};

static uint64_t backbone_model5_conv1_conv2_weight[64 * 9] =
{ // torch.Size([64, 3, 3, 1])
0xa, 0xa, 0xd, 0x4, 0x1, 0xc, 0x3, 0x2, 0x0,
0x4, 0x5, 0x2, 0xc, 0x2, 0x3, 0xd, 0xc, 0xa,
0xb, 0xb, 0x4, 0xc, 0xc, 0x3, 0xb, 0x0, 0x3,
0x4, 0x4, 0x4, 0x2, 0x4, 0xb, 0xc, 0xc, 0xd,
0xc, 0x3, 0x4, 0xc, 0xa, 0x4, 0xb, 0xb, 0x3,
0xa, 0x3, 0x5, 0xb, 0xc, 0x4, 0x2, 0xc, 0xa,
0x3, 0x3, 0x0, 0x3, 0x3, 0x3, 0x3, 0x3, 0x3,
0xd, 0xc, 0xc, 0x3, 0x0, 0x8, 0x4, 0x4, 0x4,
0x5, 0x4, 0x4, 0xc, 0xc, 0xc, 0xc, 0xb, 0xc,
0x1, 0x2, 0xb, 0x4, 0x2, 0xa, 0x3, 0xc, 0xe,
0x3, 0xa, 0xb, 0x4, 0x2, 0x0, 0x5, 0x3, 0x8,
0xc, 0xb, 0x3, 0xc, 0x8, 0x5, 0xc, 0x4, 0x5,
0x5, 0x8, 0xd, 0x2, 0xc, 0xb, 0x9, 0xb, 0x2,
0x5, 0x3, 0xa, 0x5, 0xa, 0xc, 0x3, 0x2, 0x3,
0x5, 0x4, 0x4, 0x8, 0x0, 0x0, 0xc, 0xa, 0xb,
0xc, 0xc, 0xd, 0x4, 0x4, 0x3, 0x4, 0x1, 0x4,
0x6, 0x1, 0xc, 0x5, 0xa, 0xb, 0xb, 0xb, 0x0,
0xc, 0xc, 0xd, 0xb, 0x3, 0x0, 0x9, 0xa, 0xa,
0xd, 0xa, 0xc, 0x9, 0xa, 0xb, 0x3, 0x1, 0xb,
0x3, 0x3, 0xc, 0xc, 0x2, 0xb, 0xb, 0xd, 0xc,
0x0, 0x3, 0x1, 0x3, 0x3, 0x3, 0x4, 0x4, 0x3,
0x8, 0xc, 0xc, 0x6, 0xb, 0x8, 0x4, 0x2, 0xb,
0xc, 0xc, 0x4, 0xc, 0x3, 0x4, 0x3, 0x4, 0xc,
0xb, 0x1, 0x3, 0xc, 0xc, 0x4, 0xb, 0x2, 0x4,
0x2, 0xc, 0xb, 0x9, 0xd, 0xc, 0x2, 0xb, 0x9,
0xd, 0x8, 0x3, 0xc, 0xa, 0x3, 0xc, 0xb, 0xa,
0x0, 0xc, 0x3, 0x4, 0xb, 0x3, 0xa, 0xd, 0xc,
0x0, 0x4, 0x2, 0x4, 0x4, 0x4, 0x3, 0x3, 0x2,
0x2, 0x9, 0x4, 0xb, 0xb, 0x3, 0xd, 0xc, 0xb,
0x5, 0x3, 0xc, 0x5, 0xa, 0xc, 0x4, 0x0, 0xc,
0xc, 0x3, 0x4, 0xc, 0x4, 0x4, 0xb, 0x0, 0x3,
0x9, 0xc, 0xb, 0x9, 0xa, 0x2, 0x4, 0x4, 0x4,
0x0, 0x3, 0xa, 0xb, 0x2, 0x2, 0xd, 0xb, 0x3,
0xb, 0xb, 0xb, 0xc, 0xb, 0xa, 0xb, 0xb, 0xb,
0x8, 0xb, 0xb, 0x3, 0x0, 0x3, 0x4, 0x5, 0x5,
0xc, 0xd, 0xb, 0xb, 0x4, 0x4, 0xa, 0x4, 0x3,
0x0, 0x2, 0xa, 0x2, 0x4, 0x3, 0x4, 0x5, 0x3,
0xc, 0x9, 0x4, 0xd, 0xb, 0x4, 0x9, 0x3, 0x3,
0x3, 0x4, 0x3, 0x4, 0x3, 0x4, 0x0, 0x3, 0x9,
0x4, 0x4, 0x5, 0x0, 0x3, 0x2, 0xc, 0x0, 0xc,
0xb, 0xc, 0xd, 0x4, 0x4, 0x0, 0x4, 0xa, 0x2,
0xb, 0xa, 0xb, 0x0, 0xd, 0xa, 0x0, 0xc, 0xa,
0xb, 0xc, 0xd, 0x3, 0x3, 0x1, 0x4, 0x4, 0x4,
0x5, 0x4, 0x4, 0x4, 0x1, 0x2, 0x3, 0xa, 0x8,
0xb, 0xb, 0x4, 0xa, 0x8, 0x5, 0x3, 0x1, 0x4,
0x1, 0x9, 0x4, 0x9, 0x4, 0x4, 0x4, 0x4, 0x0,
0xb, 0xb, 0xb, 0xb, 0x9, 0xb, 0x4, 0x3, 0x4,
0x5, 0x5, 0xa, 0x2, 0x2, 0xc, 0xb, 0xc, 0x9,
0xb, 0xb, 0xb, 0x3, 0x4, 0x1, 0x3, 0x4, 0x4,
0x3, 0x2, 0x5, 0x1, 0xa, 0x1, 0x2, 0x0, 0x5,
0x2, 0x3, 0x3, 0x3, 0x3, 0x4, 0xc, 0xb, 0x2,
0xb, 0xb, 0xb, 0x9, 0x3, 0xb, 0x3, 0x5, 0x2,
0xd, 0xa, 0x1, 0xc, 0x4, 0x3, 0xa, 0x4, 0x3,
0x3, 0x8, 0xd, 0x3, 0xa, 0xe, 0x3, 0x4, 0xa,
0xd, 0xb, 0xb, 0xa, 0x3, 0xb, 0xc, 0xb, 0xc,
0xa, 0xa, 0xc, 0xb, 0x8, 0xc, 0xa, 0x9, 0xc,
0xc, 0x4, 0xb, 0x2, 0x3, 0xb, 0xa, 0xd, 0xc,
0xc, 0x2, 0x5, 0xc, 0xa, 0x4, 0x2, 0xb, 0xc,
0x4, 0xc, 0xb, 0x5, 0xb, 0xc, 0x5, 0x4, 0xb,
0x0, 0x2, 0x2, 0x0, 0x1, 0x2, 0xd, 0xc, 0xc,
0x4, 0x3, 0x2, 0xc, 0x3, 0x4, 0xc, 0xb, 0x3,
0x1, 0xb, 0xd, 0x3, 0x0, 0xb, 0x3, 0xb, 0xb,
0x3, 0x3, 0x3, 0x3, 0x4, 0x1, 0xc, 0xc, 0xd,
0x0, 0x5, 0x4, 0x0, 0x4, 0x4, 0xa, 0xa, 0x0,
};

static int backbone_model5_conv1_relu2_threshold[64 * 7] =
{ // torch.Size([64, 7])
7, 49, 92, 135, 199, 284, 454,
-10, 26, 63, 100, 155, 229, 377,
0, 30, 61, 92, 138, 200, 324,
50, 87, 125, 162, 218, 292, 442,
25, 55, 85, 114, 159, 218, 337,
9, 42, 74, 107, 156, 221, 352,
19, 50, 80, 111, 156, 217, 339,
47, 88, 129, 171, 233, 315, 481,
38, 80, 122, 164, 227, 311, 479,
19, 57, 95, 132, 189, 264, 415,
7, 64, 121, 178, 264, 378, 607,
63, 122, 182, 242, 331, 450, 689,
-9, 22, 55, 87, 136, 201, 331,
29, 89, 150, 211, 302, 423, 665,
0, 52, 103, 154, 231, 334, 540,
44, 91, 138, 185, 255, 348, 535,
41, 107, 172, 237, 335, 466, 727,
-9, 33, 75, 118, 181, 266, 436,
-9, 51, 112, 174, 265, 387, 632,
42, 84, 125, 167, 229, 312, 478,
11, 57, 102, 148, 216, 306, 488,
43, 98, 152, 207, 289, 398, 617,
31, 64, 96, 129, 178, 243, 373,
7, 43, 80, 116, 170, 243, 388,
20, 65, 109, 154, 221, 310, 488,
1, 48, 95, 141, 211, 304, 490,
33, 73, 113, 154, 214, 295, 456,
-23, 30, 83, 136, 216, 323, 536,
18, 55, 92, 130, 185, 260, 409,
13, 70, 126, 182, 267, 380, 605,
14, 57, 99, 142, 205, 290, 460,
-36, 4, 46, 87, 149, 232, 398,
25, 57, 88, 120, 168, 231, 359,
44, 82, 120, 159, 216, 293, 446,
-44, 44, 132, 220, 353, 529, 882,
-12, 25, 63, 101, 157, 233, 385,
-40, 3, 47, 91, 156, 244, 418,
46, 80, 115, 149, 201, 270, 407,
-3, 34, 72, 110, 168, 244, 397,
49, 95, 140, 185, 253, 343, 524,
-12, 38, 89, 140, 216, 318, 522,
-11, 38, 87, 136, 210, 309, 506,
11, 56, 100, 144, 211, 299, 476,
1, 52, 104, 155, 233, 335, 541,
26, 73, 120, 167, 237, 331, 519,
14, 62, 110, 158, 231, 327, 519,
12, 44, 76, 107, 155, 219, 347,
-18, 28, 75, 122, 193, 287, 476,
16, 63, 109, 156, 226, 320, 506,
109, 152, 195, 238, 303, 390, 563,
35, 61, 87, 113, 152, 203, 307,
15, 59, 102, 146, 211, 299, 473,
21, 55, 88, 122, 173, 240, 375,
4, 79, 155, 230, 343, 493, 794,
115, 156, 197, 238, 299, 380, 543,
60, 78, 96, 114, 141, 177, 249,
33, 71, 110, 149, 207, 284, 439,
43, 71, 100, 128, 171, 227, 341,
25, 69, 114, 158, 225, 313, 491,
4, 58, 112, 167, 248, 356, 573,
32, 61, 90, 119, 163, 221, 338,
-48, 0, 49, 99, 173, 271, 468,
31, 77, 122, 168, 237, 328, 511,
19, 61, 103, 145, 208, 292, 459,
};

static uint64_t backbone_model5_conv2_conv1_weight[64 * 1*4] =
{ // torch.Size([64, 1, 1, 64])
0x0bac1a98c4943304,0x323a30c9c2243bbb,0xb0193c3248c3ac43,0x02b312a13b42ba22,
0xc30233abba3242cb,0xb43932b33bac0ba3,0x1343a3a4b3b4b1c3,0xb334243453058433,
0x232a442421342132,0x3853bba0c3b9a4a4,0xc82c203a38413b40,0x493042339a4bcb4a,
0xbc3b34c593bc3acb,0xbb4a8a32b2cb2dc4,0xbccbb04abccbbb3b,0xbcc24c9bcba913bb,
0xb44a228b2a44bb04,0x2b43bb32051d8b10,0xa433b344b83cbbbb,0x4c4b38282ca042b2,
0xbb21bac3b43b3b10,0x8b934b383411cbc8,0xbcba3b3cac6a024b,0x4bac9438babbb10b,
0xb3c2bbb04d4abccb,0xbab3ca3c2224cb1c,0x4ba9c4c3ac34b4d4,0xaccd4aa3b0db24c0,
0xabb0b39332aba22b,0x9cb9bc02c04bb398,0xcaa9b8ccbb3bbc4a,0x43bd4bb8c2bb1b4b,
0xa02b14a432a310b8,0x2341340bbb03b933,0x33b33b324ab8eab3,0x13324cea4b3292c3,
0x3c4210411c332b23,0x4c33922a93acaca3,0x338233a32433db23,0xb03311ca3b33baa4,
0xa18932bb4c3524db,0xb3823a1bb2c0408b,0xb0340ab3009ca022,0x3c3292a34b43b243,
0xb913b2924349344a,0x33b45b334334b950,0xb8c94accbc042a09,0x24393b43b5da3ac4,
0xba2a8bac5a21b590,0x8aaa189212aa3182,0x00819081980a0299,0xab9ab1a2a0aa03b0,
0xbbc2ac4183b21041,0x33c39a3b44bc10aa,0xb2b29cccab33312b,0x0babb3408ccbaca3,
0xcbc24c021aa3c22a,0x49ba383bbb2ba3ab,0x34301cb31a22b394,0xb130bc93b8ba89b2,
0x3c200b5b3b4b3423,0xb2cca33aa1ca232c,0x2b123ccbbb93442b,0xc3c0d49a329bb203,
0xb9caa2b80db5bb44,0x3b18bc333aab32ac,0xa43bccd2a1b93c1a,0x82bcac1ba2b9a9ca,
0x23344b2b3cb2abcb,0xa0cacb2b499c3cba,0x8b33b4c383acb3cb,0xbb322cb13c3139bb,
0xad4aa34cc9aba8b4,0x8c432344da13a3c3,0x8c234914034c295a,0xb242c4ad1b319a04,
0x4bb2acc2b2c43cac,0x23bbb4a95cc5422b,0xa200a31242cab2b0,0xb9bb310b3220423c,
0xca29c3b3433a3a34,0x4323434214ab2c24,0xbbbb2c04bba44bb9,0x9b420442b3b3a8b3,
0xbaab94c514ac330b,0x3019bb33cbc3a1a3,0xc9baac203cc4db33,0xaaa3a243bbab2b1a,
0x800aa329bccc8b8b,0xacac3341db220332,0xb3b8abac0bac24ad,0xb3a3cbbc43aa5ba2,
0x3433b42030cb3333,0x8314d122448342b0,0xb233d034a4c024ad,0x2a93222c238922ab,
0x33c42129a33c9013,0xb3244a3239141442,0x40339c45353c2420,0x0a91032b43a33303,
0x4a401182db2a3cb2,0xcbcbc2b9424bb4ca,0xcc83b42c282b0c8c,0xbcccba59b033b24c,
0xc028a34039c3c42a,0xc35b0a42bb224444,0x3cc3404cd3c0b494,0x4b4a42d2b44a3413,
0xcc2ab2a5b3cb4c1c,0xab44cca2cb290aca,0x9baa2b33b4cccb4b,0xc202214b2cbc23c3,
0x3330cb8b49232432,0x2b2ac3b4c884a350,0x42442b33bb334c93,0xc53b348184cb1334,
0xbb2c3a5432ba1a12,0x8b4bba41a2caabb3,0x1cca2ca32c11ba5b,0xa9222bca1bc9bc22,
0xab4b8490824a3cd3,0xbc8bcc3433acbaa0,0xcd4ba93dcbb33c3c,0x48cca81ac309a33c,
0x52cb98b053333343,0x001b84b033b4b1a0,0x949bbbba5a8b4bc3,0x93b02b3a204a002c,
0xba3b39bbac23caac,0x2b8b4bb4cbbbaacc,0xbcb3b4a9acb3bc12,0x0baa2bb3ab05c923,
0xaad3b343c4dc2b41,0x3ac1a3cb4c31b3d0,0xbab9bc9b13ab399a,0xb49392a01c30aca4,
0x9cbabbc3180a33bc,0x24a2003babc33384,0x20c291192d3b2150,0xcba343aa41bb9931,
0xbaa3304253c31433,0x193dc13444340333,0x025cc03b133431c3,0x3a38438a23c1998d,
0xac0b2340d3d44c4b,0x4b2cb335cb044383,0xa3c0bca982b3bccb,0xc4982b0c21b49a82,
0x2008dca13a39bb40,0x300333113b398223,0xa828310a98253133,0xbb1033c2a5a22b91,
0xbbc9193c4bcbac0b,0x01ac301c9b2b0332,0x2bc9c3bb20ca34b2,0xbab41ba1cb9a5bab,
0x333bb4c428b4ac2c,0x20034cb40bc13423,0x35d44004bb318a23,0x49312cb422c199c3,
0x3c2443414433334b,0x332440b4439d4bc5,0x2344c432a48cc43c,0xab34b0423b33a3c4,
0x83b2b4421a5b8244,0x0c322a22ba3bb00a,0xb1483124333b3134,0x3b344b193c332a93,
0x2aac34133b3334c4,0x3b2dc141c443841a,0x3434cc3223d3abb2,0xcbcab2b441343133,
0xa2a9acb84b1ba324,0xb243384c43bb3329,0x0adb9b24cb3aa483,0x4da92bb0c0babab3,
0x2c0b8ba44cbb2a30,0xbb3dca32b30ab0c2,0x930bdcac10c328dc,0xc1dab3aaaab9b31b,
0x10cb24b3c24b3c2a,0xcb4442b129922c33,0xbcdc133dabcabc9c,0x40bc6bb3822bb3b3,
0x211831b1bcc4bb9c,0x22b82aca9ba0022a,0x43b82bbb2b4210a6,0x5a2acca430acbcac,
0x0b4a22224ba81412,0x9c3dc203b21ba9c8,0x1139ebbc39d3b2dc,0xc2d1c31b1b91232d,
0x433124c2c3cb2a2b,0x23ccb20323322443,0x23a9ab2b93d142bc,0xb299cc42b3a0232a,
0x44b4c241c1b39a44,0x34a3a40c444c22c3,0x42bbb93a333b20ac,0x3b013cc2cabb4c4b,
0xa234bc805db3b3b9,0xb30a29bacccc2a13,0x3b4a4b43a45bc44a,0xab6aa4c33c3b1bbb,
0x13c85c22cc01c929,0x8b001bd0ba0c34c3,0x32cccbcbbaacbb0b,0xb4bb8b914cb31a90,
0x432cbabaab244a23,0x5c20b4341b9948ba,0xb492accc4b38bb0c,0xbba41b411b1c89da,
0x139b3c4bc51b33b3,0x1b81b4ca909344a4,0x19034b5c2aa32ad4,0x24b2a490389a8343,
0x9cc92614ca9b41a2,0x39abbc2abcc393a5,0xc32ccbabbb0bb08a,0xb033a14bc33c93c3,
0x225ba0ba384340d3,0x8b4ba04423294a00,0xbbba123cbb323a0c,0x2cbaa431b24ba29a,
0xd838334333abb443,0xc34bbd353cabd122,0x9c0942c4d4ac322b,0xb41a3322339041a3,
0xb4cc2bb45c5109ab,0x81abbccbbc1244a0,0x3cb9a2b200443bac,0x49194b251c002130,
0xbc223d3b2a244b19,0x2a3b3222bbcc2cab,0x032033c3ac42c92c,0xa342a5bb2322b109,
0x220b33529a931c03,0xa2bba2abb25abacc,0x3b532399b4282bca,0x8320cb332c98a3a0,
0xcb2cb433943a1309,0xc3c0bc2323b1cb42,0x9c334b2b93344323,0xa42c332334cb2324,
0x233bab41ba1a3a2b,0x4323330499b41b23,0xb2a4c1b42d2ac901,0x32c42000032339a3,
0x44349a4b248ca24c,0xb3b124c24b43c32c,0x1b92a241339bd39b,0xb424bbc2223033a2,
0x33bb4c8a4a3bc392,0x52c34ccc32223301,0x434bbbd34b0c2ba2,0x13b303001bb19c00,
};

static int backbone_model5_conv2_quant1_threshold[64 * 14] =
{ // torch.Size([64, 14])
-755, -483, -347, -245, -177, -109, -41, 26, 94, 162, 230, 332, 468, 741,
-797, -460, -291, -165, -80, 3, 87, 172, 256, 341, 425, 551, 720, 1058,
-1253, -796, -568, -396, -282, -168, -54, 59, 174, 288, 402, 573, 802, 1259,
-1110, -744, -561, -423, -332, -240, -149, -57, 33, 125, 217, 354, 537, 903,
-1014, -656, -477, -343, -254, -164, -75, 14, 103, 193, 282, 417, 595, 953,
-1120, -709, -504, -350, -247, -144, -41, 60, 163, 266, 369, 523, 728, 1139,
-1060, -710, -535, -404, -317, -230, -142, -55, 31, 119, 206, 337, 512, 861,
-1116, -758, -579, -445, -355, -266, -176, -86, 2, 92, 181, 316, 495, 853,
-991, -636, -458, -325, -236, -148, -59, 29, 118, 206, 295, 428, 606, 961,
-1019, -627, -431, -284, -186, -88, 9, 108, 206, 304, 402, 549, 745, 1137,
-908, -527, -337, -194, -99, -4, 91, 186, 281, 376, 471, 614, 804, 1185,
-1032, -666, -483, -346, -254, -162, -71, 20, 111, 203, 294, 432, 615, 981,
-781, -493, -349, -241, -168, -96, -24, 47, 119, 191, 263, 371, 515, 803,
-913, -616, -467, -355, -281, -206, -132, -57, 16, 91, 165, 277, 426, 724,
-739, -458, -318, -213, -142, -72, -2, 67, 137, 208, 278, 383, 524, 804,
-836, -529, -375, -260, -184, -107, -30, 45, 122, 199, 275, 390, 544, 851,
-1072, -688, -496, -352, -256, -160, -64, 31, 127, 223, 319, 463, 655, 1039,
-881, -590, -444, -335, -262, -189, -116, -43, 29, 102, 175, 284, 430, 721,
-1129, -713, -504, -348, -244, -140, -35, 68, 172, 276, 380, 537, 745, 1162,
-826, -529, -380, -269, -195, -120, -46, 27, 102, 176, 250, 362, 511, 808,
-842, -545, -397, -286, -212, -137, -63, 10, 84, 158, 233, 344, 492, 789,
-933, -617, -459, -340, -261, -182, -103, -24, 54, 133, 212, 330, 488, 804,
-941, -616, -453, -332, -250, -169, -88, -7, 73, 154, 236, 357, 520, 845,
-979, -611, -427, -289, -197, -105, -13, 79, 171, 263, 355, 493, 677, 1045,
-656, -355, -205, -92, -17, 57, 132, 207, 282, 358, 433, 545, 696, 996,
-903, -600, -449, -336, -260, -185, -109, -33, 41, 117, 192, 306, 457, 759,
-940, -588, -411, -279, -191, -103, -15, 72, 160, 248, 336, 469, 645, 997,
-843, -573, -438, -337, -269, -202, -134, -67, 0, 67, 134, 236, 371, 640,
-727, -419, -265, -149, -72, 4, 81, 158, 235, 312, 389, 504, 658, 966,
-998, -661, -492, -366, -282, -197, -113, -29, 54, 139, 223, 349, 518, 855,
-1083, -717, -533, -396, -304, -213, -121, -29, 61, 153, 245, 382, 565, 932,
-865, -536, -371, -248, -166, -83, -1, 80, 162, 245, 327, 450, 615, 944,
-1049, -675, -488, -347, -254, -160, -67, 26, 119, 213, 306, 447, 634, 1008,
-949, -632, -473, -354, -275, -195, -116, -37, 42, 121, 201, 320, 478, 796,
-868, -550, -390, -271, -191, -111, -32, 47, 127, 206, 286, 406, 565, 884,
-730, -443, -300, -193, -121, -50, 21, 92, 164, 236, 307, 415, 558, 844,
-1068, -701, -517, -380, -288, -196, -104, -12, 78, 170, 262, 400, 584, 951,
-680, -424, -296, -200, -136, -72, -8, 55, 119, 183, 247, 343, 471, 727,
-889, -593, -446, -335, -261, -187, -114, -40, 33, 107, 181, 291, 439, 734,
-866, -513, -337, -204, -116, -28, 59, 147, 236, 324, 412, 544, 721, 1073,
-840, -482, -302, -168, -78, 10, 100, 190, 279, 369, 459, 593, 773, 1131,
-833, -512, -351, -231, -150, -70, 9, 89, 170, 250, 330, 451, 611, 933,
-937, -567, -382, -243, -150, -58, 34, 127, 219, 312, 404, 543, 728, 1099,
-1008, -665, -494, -366, -280, -194, -109, -23, 62, 147, 233, 361, 533, 875,
-1319, -873, -650, -483, -372, -260, -149, -37, 74, 185, 297, 464, 687, 1133,
-1112, -707, -505, -353, -252, -151, -49, 51, 152, 253, 354, 506, 708, 1113,
-953, -585, -400, -262, -170, -78, 13, 105, 197, 289, 381, 519, 703, 1072,
-1031, -672, -492, -358, -268, -178, -88, 1, 90, 180, 270, 405, 584, 944,
-1013, -626, -433, -288, -191, -95, 1, 98, 194, 291, 388, 533, 726, 1113,
-825, -521, -368, -254, -178, -102, -26, 49, 125, 202, 278, 392, 544, 849,
-944, -575, -390, -251, -159, -67, 25, 117, 210, 302, 394, 533, 718, 1087,
-825, -536, -391, -283, -210, -138, -66, 6, 78, 150, 223, 331, 476, 765,
-870, -550, -390, -270, -190, -110, -30, 49, 130, 210, 290, 410, 570, 890,
-601, -341, -212, -115, -50, 14, 79, 144, 209, 273, 338, 435, 565, 824,
-909, -585, -422, -301, -219, -138, -57, 23, 104, 185, 267, 388, 551, 875,
-776, -487, -342, -233, -160, -88, -15, 56, 129, 201, 273, 382, 527, 817,
-1098, -739, -559, -424, -334, -244, -154, -64, 25, 114, 204, 339, 519, 879,
-782, -484, -335, -223, -148, -73, 0, 75, 150, 224, 299, 411, 560, 859,
-1067, -677, -483, -337, -240, -142, -45, 51, 149, 246, 343, 489, 684, 1073,
-809, -507, -355, -242, -166, -91, -15, 59, 135, 211, 286, 400, 551, 853,
-753, -467, -324, -217, -146, -74, -3, 68, 139, 210, 282, 389, 532, 818,
-762, -474, -331, -223, -151, -79, -7, 64, 136, 208, 280, 388, 532, 819,
-710, -431, -292, -188, -118, -49, 20, 89, 159, 229, 298, 402, 542, 820,
-743, -454, -310, -202, -129, -57, 14, 86, 158, 231, 303, 411, 555, 844,
};

static uint64_t backbone_model5_conv2_conv2_weight[64 * 9] =
{ // torch.Size([64, 3, 3, 1])
0xc, 0xb, 0xb, 0xc, 0xc, 0xc, 0x5, 0x2, 0x0,
0x5, 0x4, 0x3, 0x3, 0x4, 0x3, 0xa, 0x2, 0x2,
0x0, 0xa, 0xa, 0xa, 0x1, 0xa, 0xd, 0xc, 0xc,
0x1, 0xc, 0xa, 0xa, 0xa, 0xa, 0x8, 0x6, 0x2,
0xc, 0xc, 0xc, 0x4, 0x4, 0x3, 0x4, 0x4, 0x4,
0x5, 0x3, 0x3, 0x5, 0xb, 0x3, 0x3, 0xa, 0x0,
0x5, 0x4, 0x3, 0x4, 0x4, 0x3, 0x4, 0xb, 0xb,
0x1, 0x0, 0xc, 0x9, 0xc, 0xb, 0xc, 0xc, 0xb,
0xb, 0x8, 0xa, 0x4, 0xb, 0xb, 0x3, 0xc, 0xe,
0x2, 0x3, 0xb, 0xb, 0x2, 0xb, 0xc, 0xc, 0xd,
0x4, 0x4, 0x5, 0xb, 0x9, 0xc, 0xc, 0xc, 0xd,
0xb, 0xc, 0xd, 0x3, 0x3, 0xc, 0xa, 0x2, 0xc,
0x1, 0x4, 0x2, 0x2, 0x4, 0x3, 0x2, 0x3, 0x3,
0xb, 0x3, 0x5, 0xa, 0xa, 0x5, 0xb, 0xb, 0x0,
0xc, 0xb, 0x3, 0xb, 0xb, 0x4, 0xa, 0x3, 0x5,
0xb, 0x2, 0xa, 0xb, 0x3, 0x5, 0xd, 0xd, 0xb,
0x5, 0x4, 0x9, 0x4, 0x9, 0x2, 0x4, 0x0, 0xa,
0x8, 0x3, 0x3, 0x0, 0x1, 0x3, 0x3, 0x4, 0x4,
0xb, 0xc, 0xb, 0xa, 0xa, 0xb, 0xc, 0xc, 0xb,
0x5, 0x4, 0x4, 0x0, 0xb, 0xb, 0xb, 0xc, 0xc,
0x4, 0x3, 0xc, 0x4, 0xa, 0xc, 0xc, 0xc, 0xb,
0xc, 0x2, 0xb, 0x4, 0x3, 0xb, 0x5, 0x3, 0xc,
0x4, 0x3, 0x5, 0xb, 0x4, 0x2, 0xc, 0xc, 0xc,
0xd, 0xd, 0xd, 0x1, 0x8, 0xa, 0x4, 0x4, 0x4,
0x4, 0x2, 0x4, 0x9, 0xc, 0x9, 0xd, 0xc, 0xd,
0xa, 0x3, 0x6, 0xc, 0xb, 0x3, 0x3, 0x3, 0x3,
0xc, 0xd, 0x2, 0xc, 0xc, 0x8, 0xb, 0xb, 0xb,
0x3, 0x4, 0x2, 0xa, 0x2, 0x5, 0x2, 0x9, 0x4,
0xd, 0xb, 0xd, 0xa, 0x2, 0x0, 0xb, 0x9, 0xb,
0x4, 0x5, 0xb, 0x3, 0x3, 0xc, 0xb, 0xc, 0xc,
0x4, 0x4, 0x3, 0xa, 0x4, 0x1, 0x3, 0x4, 0xb,
0xa, 0xb, 0xd, 0x4, 0x4, 0xd, 0x3, 0x4, 0xb,
0x4, 0x0, 0xc, 0x4, 0x2, 0xb, 0x5, 0x4, 0x1,
0x4, 0x2, 0x5, 0x1, 0xa, 0x3, 0x0, 0x2, 0x5,
0xc, 0xc, 0xd, 0x1, 0x3, 0x3, 0x9, 0x2, 0x2,
0x4, 0x1, 0xc, 0x4, 0x4, 0xe, 0x3, 0xa, 0xd,
0x4, 0x3, 0x6, 0xc, 0xa, 0x3, 0xb, 0x9, 0x5,
0x2, 0x3, 0xa, 0xb, 0x3, 0xc, 0xb, 0xb, 0xd,
0x2, 0x4, 0x5, 0x0, 0x3, 0x4, 0xc, 0xa, 0xc,
0xd, 0x3, 0x4, 0xc, 0x3, 0x3, 0xc, 0xb, 0xb,
0xb, 0x9, 0xb, 0xb, 0x0, 0xc, 0xc, 0xb, 0xc,
0xc, 0xc, 0xc, 0xb, 0xb, 0xb, 0x4, 0x4, 0x3,
0x3, 0x3, 0x4, 0xc, 0xa, 0xa, 0xd, 0xd, 0xd,
0xd, 0xc, 0xc, 0xb, 0x1, 0x2, 0x9, 0x2, 0x0,
0x4, 0x3, 0x2, 0x3, 0x2, 0x3, 0x3, 0x3, 0x8,
0x4, 0x1, 0x5, 0x2, 0xa, 0x5, 0x3, 0xb, 0x4,
0xb, 0xc, 0x1, 0x6, 0xb, 0xc, 0x5, 0xc, 0x3,
0x4, 0x3, 0x3, 0x2, 0x3, 0x2, 0x3, 0x3, 0x4,
0x3, 0x3, 0x3, 0x0, 0x4, 0x4, 0x2, 0x4, 0x4,
0x0, 0x0, 0x3, 0x9, 0xa, 0x4, 0x5, 0x4, 0x5,
0x5, 0x3, 0xb, 0x5, 0xb, 0xa, 0x4, 0xb, 0x3,
0x3, 0xb, 0xb, 0x5, 0xc, 0xb, 0x5, 0x5, 0x4,
0x1, 0x5, 0x3, 0xc, 0x5, 0x9, 0xc, 0xb, 0x3,
0xb, 0xa, 0x0, 0xc, 0x4, 0x2, 0xe, 0x3, 0x1,
0x4, 0xc, 0xa, 0x3, 0xa, 0x0, 0x5, 0x5, 0x4,
0x4, 0x4, 0xc, 0x3, 0x5, 0xc, 0x2, 0x9, 0xc,
0xd, 0xd, 0xc, 0x2, 0xa, 0x2, 0xa, 0x4, 0x8,
0xc, 0xb, 0x5, 0xb, 0xb, 0x4, 0x4, 0x2, 0x5,
0xd, 0x2, 0x3, 0xc, 0xb, 0x4, 0xc, 0xa, 0xa,
0x5, 0x4, 0x4, 0x3, 0x8, 0x0, 0xc, 0xc, 0xc,
0xd, 0xc, 0xa, 0xb, 0x4, 0x3, 0xb, 0x3, 0x0,
0xc, 0xc, 0x0, 0xc, 0xb, 0x4, 0xb, 0x3, 0x5,
0xb, 0xd, 0xd, 0x2, 0xb, 0x8, 0x3, 0x3, 0x4,
0x4, 0xb, 0xc, 0x4, 0xa, 0xd, 0x5, 0x0, 0x3,
};

static int backbone_model5_conv2_relu2_threshold[64 * 7] =
{ // torch.Size([64, 7])
40, 77, 113, 150, 205, 278, 425,
30, 101, 171, 242, 348, 489, 772,
-61, -25, 10, 46, 100, 172, 315,
64, 101, 139, 176, 232, 307, 457,
72, 115, 158, 201, 265, 350, 521,
-20, 45, 112, 178, 277, 410, 675,
-26, 41, 109, 177, 279, 415, 687,
44, 89, 135, 181, 250, 342, 525,
77, 135, 193, 250, 337, 453, 685,
47, 91, 134, 177, 242, 329, 502,
46, 77, 109, 140, 187, 250, 376,
-51, 4, 59, 115, 199, 310, 533,
11, 43, 75, 107, 156, 220, 349,
43, 94, 145, 196, 272, 374, 578,
22, 60, 98, 136, 194, 270, 423,
36, 94, 151, 208, 294, 409, 638,
-35, 8, 51, 95, 160, 248, 422,
15, 54, 92, 131, 189, 266, 421,
28, 68, 107, 147, 207, 286, 446,
45, 92, 139, 186, 257, 351, 539,
23, 63, 103, 144, 204, 285, 447,
40, 73, 106, 139, 189, 255, 388,
46, 82, 118, 154, 208, 279, 423,
25, 105, 186, 266, 387, 548, 870,
65, 115, 164, 214, 288, 388, 587,
14, 81, 148, 215, 316, 450, 719,
41, 86, 132, 177, 245, 336, 518,
20, 82, 145, 208, 302, 428, 679,
36, 91, 146, 200, 282, 392, 610,
34, 81, 127, 174, 244, 337, 523,
11, 49, 87, 126, 183, 260, 413,
5, 49, 92, 135, 200, 286, 459,
-33, 13, 60, 107, 177, 271, 459,
74, 130, 187, 244, 329, 442, 669,
40, 81, 122, 163, 224, 307, 471,
20, 104, 188, 272, 398, 566, 902,
42, 132, 221, 311, 445, 624, 982,
-16, 44, 105, 166, 258, 380, 624,
5, 52, 100, 147, 218, 313, 502,
-3, 58, 119, 181, 273, 397, 643,
-6, 52, 112, 171, 260, 378, 615,
-24, 32, 89, 145, 230, 343, 570,
47, 145, 244, 343, 490, 688, 1082,
1, 53, 106, 158, 237, 342, 552,
-10, 25, 61, 97, 151, 223, 367,
-22, 42, 106, 171, 269, 398, 658,
-18, 33, 86, 138, 217, 321, 531,
53, 85, 117, 150, 198, 263, 392,
48, 92, 136, 181, 247, 336, 513,
60, 119, 178, 238, 326, 444, 681,
-24, 40, 104, 169, 266, 395, 654,
1, 57, 113, 168, 252, 364, 587,
32, 70, 109, 147, 205, 282, 436,
15, 85, 155, 225, 331, 471, 752,
19, 72, 125, 178, 257, 363, 574,
72, 117, 163, 209, 277, 369, 552,
-67, -18, 31, 80, 154, 253, 451,
-36, 21, 80, 139, 227, 344, 579,
16, 61, 106, 151, 218, 308, 487,
43, 81, 118, 156, 212, 287, 438,
9, 51, 94, 136, 199, 284, 453,
0, 46, 93, 140, 211, 305, 494,
64, 117, 169, 222, 301, 406, 617,
35, 84, 133, 182, 255, 353, 549,
};

static uint64_t neck_lateral_convs_0_conv1_weight[64 * 1*4] =
{ // torch.Size([64, 1, 1, 64])
0xbd991da33ac9caa8,0x14c112d82a9a3ab0,0x0332bab9a132aaa3,0xbb33b8a9a18cc391,
0x3b98c80b242c9b93,0xb30b221933ab2a4b,0xbc431393aa013a44,0x428b232a91192c98,
0x3334230bc3bb23c3,0x14ba0343c0b3cba2,0xbabcbb0ab49c8ac3,0xc32c3bb904d542c8,
0x32ac2ca34431cdbc,0xbcdcb0c9b3c1bac1,0xa14248ccbb39b32d,0xa938cb884c5c31c4,
0xac1a3b2b4bd2c034,0x349a8bc34a42b354,0xb5b5433b434b32b2,0xc5354bb4b3cbc4a5,
0x0a9833b3a31b2312,0xad29aba0b5b3bb21,0x232aca44a1b32b33,0x2ba29313112a39a1,
0x432033a2b9c24b84,0x3343b8402ccbba2b,0x3b43443904303385,0x2b22c8bbb453b014,
0x9a198b22353b913a,0x3c41c3ba21c232b0,0x1c9bcc43b3bbbbcb,0x4ba240bbb8abb91a,
0x3b04134b4cc45b4c,0x332a4a4baa3449c3,0xc324824a4b04b24b,0x3a3b2c4abd942bcb,
0x3a2023ab052ab018,0x9040208033b34a21,0xa1234c43042982c2,0x421ac50403109a31,
0x25c4a1232a22c5bb,0xb49899ba233249a9,0x3228bbaaaa85a18b,0x43933b101c13a223,
0xbbbc82cb31cb434b,0xbb3a33a193233233,0xbb53493b24934bb3,0x49a3c42481341911,
0xbc2c3dbca432cc21,0x2b3bbbcb45ab5233,0xcd0120331244cc23,0x38a58391b3bcc3b2,
0xb2033ba33201c3b2,0xab32cbba9b8cabc8,0x00b043ab3bab3531,0x2098bab40a3cb382,
0x3a03a322b9bc09a3,0x43a33b14ba2aab3b,0x44bbb3380cb22a8a,0xb39154bd94983182,
0x2a00c1c44b3bc230,0x8baa43c38d343cc9,0x133a914292b33cb3,0xc023b31d8c3129a8,
0x2cba3ca44db9d34b,0xcccb2cb481c8cbd9,0xabb0a415239aad30,0x1bc0b4c81433bbb3,
0x93ca1b933332c312,0xb51bb1bbc3ba083a,0x9548322aa3cb44a1,0xcbaac415344a33a9,
0x9a02b21bbc294bb9,0x0cd8b32a8c3aca13,0x1081b4bb9aa48ba2,0xd8983c9dbcc939a9,
0xa343c3b11b1348aa,0x4bd9ba1a2c33daa3,0x24b230090a4183c2,0xc2223b0b9b10b029,
0xbb34b83143383a5a,0x43b3433aad3babcb,0x39032a1b291ab4bb,0x99a4aa0cacab9249,
0xba8a23bb9b3b4423,0x2ac4aa320b4324c3,0x02c2339a322339bc,0x413a543a39b2a3b8,
0x2b0c23b294380a30,0x2ba31421292353c8,0x2319325028283bbb,0x5932b494a12aaab0,
0xbab1ab0c9ba9cb22,0x0caa2baa913a3221,0x04a321a02b00acb4,0xc1830aabb2abcc90,
0x20ca2a33a328bbb0,0x3c5094c92112423b,0x1c32c4248ac5234a,0x40033402a20b0b00,
0x2c82b9cb2332cb93,0x3cc0cc222a9231a0,0x139133343b32b324,0xca9243049a2cc9a3,
0x5bbbb0b2324a2c31,0x3ac23428a3904230,0xbb413432bbc5b2b4,0x42125b3dac1b2b23,
0x3682964ab2514222,0x9c590462a1a0ca30,0x8c9023b2aabb331c,0x43bc2a3949b55c0a,
0x3b508cbc4ac8bb44,0x81430cb44c43444b,0x45c31b333024cc2a,0xb544549a23bbc434,
0x3220222312283399,0xa420a3a2a0a0ba9a,0x0b2ab1a0a280132a,0x382b10223aa24398,
0x0a0bc31b534b308a,0xbd9c430b093438cb,0xaa30ab50a2b329a0,0xa321a49b1c2b21b2,
0x5224b33bccb940cb,0x0534c134124c3333,0x23a23a094b93513a,0xab4a3c442bbb3bb3,
0xa8cb20044a1ac313,0xddbc32bbab3501bc,0x3294b93403cbcb23,0xb3a918b4a39ab2bb,
0x343332c42451c231,0x003abc233a32c228,0x94b23054a23d34b2,0xb8ba322343400902,
0xba0bccc0b54cdac4,0x2ba0c9b4b4bcba4b,0x3bacbaa3912c3ac4,0xb4a934b43329b042,
0xa8acbcbab430d2d3,0xac91cac2ac8ac342,0x2cc228b1c3ca49a3,0xa8b214c6354cb3b2,
0xc9ccabc2454bd23a,0xcc9c43d333259032,0xc3b1dc4499bb2cd2,0xc3ca14b5332aa21b,
0x4a4b923344b14343,0xba43a4013032a342,0xbc34223442b4442b,0x23a233433c034b3a,
0xbb39ba4333b13ccb,0x02b20d1b2a33d0a2,0x240bcaab33cb2bcc,0xbc4d033921aab34b,
0xa320aca4b2b2a32a,0x91b98b10aba1d980,0x912abab482baa42a,0xba9bb0b5333bb332,
0xb91ba42b3bab341b,0xc3a89b3118013a9b,0xb33430bb3a33583c,0x1a2248395acb2234,
0x3439bc8332c04c41,0x45a8bc4a4b44b322,0x1433353234b321c5,0xc444ac11984bb454,
0xcb1b9c1cb3ab3388,0xa333b04a90cdb003,0x8a233ab3322b4b11,0x3ba0c9a433382b33,
0xca0a2cc2b302b834,0x1acc20a2bdc393c0,0x2bc331c104aabcc2,0x220324b53349a2a3,
0xba2b483c29c32c2b,0x10b2123bb9bb2aba,0x12ba928ca23eabab,0x3a09192c3bb32bc0,
0xb093b33bc3ba0bc9,0x8b43c83a133d8340,0xbdb10b139b38b4c0,0x94a14c2b24bbabb8,
0xabcbcda32a43b213,0x00db23c3ac24a3ba,0xba1baac4a3abcc34,0x23b334ba2310cb24,
0x229a40a230a2b90b,0xa02a1331a843bbc1,0x24bba9ac990cb91d,0xa8324a04203ba310,
0x3ab34b334b40a3b3,0xc3bc18acb2aa3bac,0xba8bbbcba1a2ba43,0xbc3b5d34bccb43cb,
0x2490842a80313001,0xab4903518980b801,0x8b8012089898100b,0x219a082839a44b99,
0xbd3052bcaddb4c4b,0x4db3a4b9ab31293b,0x2cdb2dccb849bbcb,0x3b339bbac3ba1118,
0xbd2a2db320c9b9ba,0x14c29cda392a40b9,0x13108a312222baa4,0xca3492b1c03dd302,
0xadcb4a4b8cda222b,0x2b99242bba802bb1,0xab22d3cc0ca4bb41,0x4aa29b3baccabcb2,
0x8b3aaacaa32bcbcb,0x2a3498b2a1b2b2a2,0x4ca1b3b494811ab4,0xbaa9c913b43128ca,
0xac33bcbb2ac9c9b3,0x35c92a0a2a2b2202,0x4504312338091ab4,0xd4a02c0ba43cc433,
0xbb2b324b0ac93901,0x2a1ab3b3ab019339,0xa42ac3c8a1952b42,0x8aaa020429302ab0,
0xcdbc8b1b9cc94d22,0xc2a00ad9c309ab2c,0xbcbbcbabb9c490c3,0x3bcbaa9aa4accb3c,
0xb13339492bb03123,0x34a92249bda4ba29,0x23ba53c3a339b44b,0x511c09a414a2924a,
0x3ac930b432bbbbb3,0xcc40b322cad40ccc,0x0d3dac3ab3b4aa29,0x3aadb2bcb3b98bab,
0xac3a312b41b43b33,0x9b0033132b45a398,0xb50022b45333c024,0x3b3a3434bc32b992,
0xb1b20a4a14b293b2,0x293abba9bdac9243,0xa808d9c8abb3b442,0x2abb3a8320139331,
0x43c9d2cb4238cccb,0xc131b4bbcc2b59dc,0xac4a3b2b1aa42ab8,0xd33cbb3cbac3391d,
0x322ccb3324238139,0x1b33028934ac334c,0xc244ca559bb3414c,0x5b419204294bb233,
0x5393432453a31594,0x43443543c332c400,0xb24243235a34045c,0x340d31242b344444,
};

static int neck_lateral_convs_0_quant1_threshold[64 * 14] =
{ // torch.Size([64, 14])
-1920, -1135, -742, -448, -251, -55, 140, 336, 533, 729, 925, 1219, 1612, 2397,
-721, -436, -293, -186, -114, -43, 28, 99, 171, 242, 314, 421, 564, 849,
-1722, -1167, -889, -681, -542, -404, -265, -126, 12, 150, 289, 497, 775, 1330,
-1452, -1009, -787, -620, -510, -399, -288, -177, -66, 44, 155, 321, 543, 987,
-1836, -1126, -770, -504, -326, -148, 28, 206, 383, 561, 739, 1005, 1361, 2071,
-770, -446, -284, -163, -82, -1, 79, 160, 241, 322, 403, 524, 686, 1010,
-820, -456, -274, -137, -46, 44, 135, 226, 317, 408, 499, 635, 817, 1181,
-1200, -805, -608, -460, -362, -263, -164, -66, 32, 130, 229, 377, 574, 969,
-1277, -800, -561, -381, -262, -143, -23, 95, 215, 334, 454, 633, 872, 1350,
-716, -390, -226, -104, -22, 58, 140, 222, 303, 385, 467, 589, 753, 1079,
-760, -439, -279, -159, -79, 0, 80, 160, 240, 321, 401, 521, 681, 1001,
-1095, -664, -449, -287, -179, -71, 35, 143, 251, 359, 466, 628, 844, 1275,
-1568, -1013, -735, -526, -387, -249, -110, 28, 167, 306, 445, 653, 931, 1487,
-919, -599, -439, -319, -239, -159, -79, 0, 80, 160, 240, 360, 520, 840,
-1205, -717, -473, -290, -168, -47, 74, 196, 318, 440, 562, 745, 989, 1476,
-867, -517, -342, -211, -123, -36, 51, 139, 226, 314, 401, 533, 708, 1058,
-1352, -952, -752, -602, -502, -402, -302, -201, -101, -1, 98, 248, 448, 848,
-962, -564, -365, -216, -116, -16, 82, 182, 281, 381, 480, 630, 829, 1227,
-895, -618, -480, -377, -308, -239, -170, -101, -32, 36, 105, 209, 347, 623,
-1103, -690, -483, -328, -225, -122, -19, 84, 187, 290, 394, 548, 755, 1168,
-929, -578, -403, -272, -184, -96, -9, 78, 165, 253, 341, 472, 647, 998,
-858, -511, -338, -208, -122, -35, 50, 137, 223, 310, 397, 526, 700, 1046,
-687, -362, -200, -78, 2, 83, 165, 246, 327, 408, 489, 611, 773, 1098,
-1571, -1011, -730, -520, -380, -239, -99, 40, 180, 320, 461, 671, 951, 1512,
-865, -499, -315, -178, -86, 4, 96, 188, 279, 371, 463, 600, 783, 1150,
-1276, -786, -541, -357, -235, -112, 9, 132, 254, 377, 499, 683, 928, 1418,
-1120, -663, -434, -262, -148, -33, 80, 194, 309, 423, 538, 709, 938, 1396,
-805, -479, -316, -194, -113, -31, 49, 131, 212, 294, 375, 497, 660, 986,
-1475, -832, -511, -270, -109, 50, 211, 372, 532, 693, 854, 1095, 1416, 2059,
-1323, -838, -595, -413, -292, -171, -49, 71, 192, 314, 435, 617, 859, 1345,
-963, -597, -414, -276, -185, -93, -2, 89, 181, 272, 364, 501, 684, 1051,
-990, -548, -326, -161, -50, 60, 170, 281, 391, 502, 613, 779, 1000, 1442,
-1288, -875, -669, -514, -411, -308, -205, -102, 0, 103, 206, 361, 567, 980,
-964, -596, -412, -273, -181, -89, 2, 94, 186, 278, 370, 508, 693, 1061,
-1284, -856, -642, -482, -375, -268, -161, -54, 52, 159, 266, 426, 640, 1068,
-1277, -875, -674, -524, -423, -323, -222, -122, -21, 78, 179, 330, 531, 933,
-674, -493, -403, -335, -290, -245, -200, -155, -109, -64, -19, 48, 138, 318,
-1113, -598, -341, -148, -20, 108, 236, 365, 494, 622, 751, 944, 1201, 1715,
-1501, -1027, -790, -613, -494, -376, -257, -139, -20, 97, 215, 393, 630, 1104,
-996, -696, -546, -434, -359, -284, -209, -134, -59, 15, 90, 202, 352, 652,
-1007, -593, -386, -230, -127, -23, 79, 183, 287, 390, 494, 649, 856, 1270,
-1363, -768, -470, -247, -98, 49, 198, 347, 496, 645, 794, 1017, 1315, 1910,
-934, -596, -426, -299, -215, -130, -45, 38, 123, 208, 292, 419, 589, 928,
-1243, -834, -629, -475, -373, -270, -168, -66, 36, 138, 241, 394, 599, 1009,
-1320, -919, -719, -568, -468, -368, -268, -168, -67, 32, 132, 282, 483, 884,
-1434, -960, -722, -544, -426, -307, -188, -70, 48, 167, 285, 463, 700, 1175,
-1503, -1037, -805, -630, -513, -397, -281, -164, -48, 68, 184, 359, 592, 1057,
-871, -592, -453, -348, -279, -209, -139, -69, 0, 69, 139, 243, 383, 662,
-1243, -840, -638, -487, -386, -285, -184, -83, 17, 118, 218, 370, 572, 975,
-943, -595, -421, -290, -203, -116, -29, 57, 144, 232, 319, 449, 624, 972,
-1537, -1030, -776, -586, -459, -332, -205, -79, 47, 174, 301, 491, 745, 1252,
-641, -407, -290, -203, -145, -86, -28, 29, 88, 146, 205, 292, 409, 642,
-1413, -965, -741, -572, -460, -348, -236, -124, -12, 99, 211, 380, 604, 1052,
-1045, -683, -502, -367, -276, -186, -95, -5, 85, 175, 266, 401, 582, 944,
-1023, -515, -261, -70, 56, 183, 310, 437, 564, 691, 818, 1008, 1262, 1770,
-714, -410, -258, -145, -69, 6, 82, 158, 234, 310, 386, 500, 651, 955,
-1821, -1280, -1009, -806, -670, -535, -400, -264, -129, 6, 141, 344, 615, 1156,
-888, -545, -373, -245, -159, -73, 11, 97, 183, 269, 354, 483, 654, 997,
-1516, -1095, -885, -727, -622, -517, -412, -306, -201, -96, 8, 166, 377, 797,
-1306, -745, -465, -255, -115, 24, 165, 305, 445, 585, 725, 936, 1216, 1777,
-971, -652, -493, -373, -293, -213, -133, -54, 25, 105, 185, 305, 464, 784,
-1585, -1017, -732, -519, -377, -235, -92, 49, 191, 333, 475, 689, 973, 1542,
-1337, -838, -589, -402, -277, -152, -28, 96, 221, 345, 470, 657, 906, 1405,
-1366, -644, -283, -12, 168, 348, 529, 710, 890, 1071, 1251, 1522, 1883, 2606,
};

static uint64_t neck_lateral_convs_0_conv2_weight[64 * 9] =
{ // torch.Size([64, 3, 3, 1])
0x3, 0x3, 0x3, 0x2, 0x3, 0x2, 0x3, 0x3, 0x3,
0xc, 0x4, 0x4, 0xb, 0xc, 0x3, 0x3, 0xb, 0xc,
0x3, 0xc, 0xa, 0x2, 0xc, 0xb, 0xb, 0xb, 0xa,
0x5, 0x1, 0xb, 0x4, 0x4, 0x9, 0x3, 0x4, 0x1,
0xc, 0xb, 0xd, 0x9, 0x4, 0xb, 0x0, 0x0, 0xb,
0xb, 0xc, 0xa, 0xb, 0xa, 0x9, 0x3, 0x5, 0x0,
0xc, 0xb, 0x3, 0xd, 0xb, 0x2, 0xb, 0xc, 0xa,
0x3, 0xd, 0xc, 0x4, 0xb, 0xc, 0xb, 0xc, 0x1,
0xa, 0x4, 0x3, 0xb, 0xd, 0xa, 0xb, 0xd, 0x3,
0x5, 0xd, 0x3, 0x2, 0xd, 0x3, 0xc, 0xa, 0x2,
0xb, 0x0, 0x0, 0x1, 0xd, 0x1, 0x9, 0xa, 0x0,
0xb, 0xd, 0xb, 0xc, 0xa, 0x2, 0xc, 0xb, 0x3,
0x3, 0x0, 0xa, 0x4, 0x5, 0x3, 0x2, 0x8, 0x2,
0x4, 0x5, 0x3, 0xb, 0x0, 0x3, 0xa, 0x1, 0x0,
0xa, 0xc, 0xb, 0xa, 0xb, 0x1, 0x9, 0xc, 0xb,
0x9, 0x8, 0x0, 0x9, 0xa, 0x2, 0x4, 0x5, 0x4,
0x0, 0x5, 0x5, 0x0, 0x4, 0xb, 0xa, 0xa, 0xc,
0xb, 0x3, 0x5, 0xb, 0xa, 0x4, 0xa, 0x2, 0x4,
0x5, 0xb, 0xa, 0x5, 0xc, 0x0, 0x4, 0x0, 0x9,
0x3, 0xa, 0x2, 0x5, 0xd, 0xa, 0x2, 0xa, 0x9,
0xc, 0xd, 0xb, 0x1, 0x4, 0xa, 0x0, 0x3, 0xb,
0x3, 0xc, 0x9, 0x3, 0xc, 0xc, 0x2, 0xa, 0xc,
0xc, 0xd, 0xc, 0xa, 0xb, 0x9, 0xa, 0x4, 0x2,
0x2, 0x3, 0x2, 0x2, 0x2, 0x2, 0x0, 0x2, 0x2,
0x1, 0xa, 0x2, 0xb, 0xd, 0x0, 0xb, 0x0, 0x0,
0x3, 0x4, 0x3, 0x0, 0x4, 0x3, 0xa, 0x2, 0x2,
0x3, 0xd, 0xc, 0x3, 0xb, 0xc, 0x0, 0xb, 0xc,
0xa, 0xa, 0xb, 0xa, 0x9, 0xa, 0xa, 0xa, 0xb,
0x9, 0x9, 0x4, 0xc, 0xb, 0x1, 0xe, 0xb, 0xa,
0xa, 0xa, 0xa, 0x9, 0xa, 0xa, 0x0, 0x9, 0xa,
0xb, 0x5, 0x2, 0xb, 0x3, 0xb, 0xb, 0xc, 0xb,
0x4, 0x2, 0xd, 0xb, 0x9, 0xd, 0x3, 0x1, 0xc,
0x6, 0x9, 0x2, 0x2, 0xb, 0xa, 0xa, 0xb, 0x0,
0xa, 0x4, 0x2, 0x1, 0xe, 0x2, 0xa, 0x1, 0xa,
0xb, 0x9, 0x3, 0xb, 0xb, 0x2, 0x6, 0x3, 0xa,
0x5, 0x6, 0x4, 0xa, 0xa, 0x2, 0x9, 0xa, 0x9,
0xb, 0x5, 0x5, 0xb, 0x5, 0x4, 0xa, 0x3, 0xa,
0xa, 0xc, 0x9, 0xa, 0xb, 0x8, 0xa, 0xc, 0x2,
0x3, 0x3, 0x3, 0x4, 0x4, 0x3, 0xb, 0x3, 0x1,
0x2, 0x4, 0x0, 0xd, 0x8, 0x2, 0xb, 0xd, 0xa,
0xa, 0xa, 0x1, 0xd, 0xa, 0x2, 0xc, 0xa, 0x1,
0xc, 0xb, 0x4, 0xc, 0xa, 0xb, 0x3, 0xb, 0xb,
0xb, 0x3, 0x0, 0xd, 0x2, 0x2, 0xc, 0xb, 0x2,
0xa, 0x9, 0xa, 0x8, 0x1, 0x5, 0xb, 0x3, 0x5,
0xa, 0x3, 0x3, 0xb, 0x6, 0x9, 0x1, 0x3, 0x0,
0x3, 0x3, 0xc, 0x9, 0xb, 0xc, 0xc, 0xc, 0xa,
0x2, 0xc, 0xa, 0x5, 0x9, 0x1, 0x5, 0x3, 0x3,
0x1, 0xc, 0x9, 0x4, 0xc, 0x3, 0x3, 0x9, 0xa,
0xc, 0x3, 0x3, 0xc, 0x3, 0x4, 0x1, 0x4, 0x4,
0xa, 0xa, 0xa, 0x9, 0x8, 0x9, 0xa, 0x9, 0xa,
0x9, 0x4, 0x3, 0x9, 0x5, 0x1, 0x4, 0x9, 0x2,
0x2, 0x2, 0x3, 0x2, 0x0, 0x2, 0x2, 0x2, 0x3,
0x4, 0x5, 0x4, 0x4, 0x4, 0xb, 0xa, 0xb, 0xb,
0xb, 0x2, 0x2, 0xa, 0x4, 0x3, 0x3, 0x4, 0x9,
0x3, 0x3, 0x3, 0x1, 0x8, 0x2, 0x3, 0x2, 0x3,
0x3, 0x5, 0x2, 0x9, 0xd, 0x1, 0x3, 0x2, 0x2,
0x9, 0x3, 0x2, 0x5, 0xb, 0x2, 0x3, 0x3, 0x2,
0x0, 0xa, 0xa, 0xc, 0xe, 0xa, 0x1, 0x3, 0x2,
0xb, 0x4, 0x3, 0xb, 0x5, 0x8, 0x9, 0x3, 0xb,
0x5, 0xb, 0x3, 0x4, 0xb, 0x2, 0x4, 0xa, 0x4,
0xc, 0xd, 0xb, 0x2, 0x4, 0x2, 0x3, 0x4, 0x3,
0x4, 0x6, 0x1, 0xc, 0x8, 0x3, 0x0, 0xb, 0x9,
0xd, 0xc, 0xc, 0xc, 0x5, 0x0, 0xc, 0xc, 0xc,
0xb, 0xd, 0xc, 0x8, 0x9, 0x0, 0xb, 0xa, 0xb,
};

static int neck_lateral_convs_0_relu2_threshold[64 * 7] =
{ // torch.Size([64, 7])
-88, -74, -59, -44, -22, 6, 65,
50, 80, 111, 142, 188, 250, 373,
-8, 26, 61, 95, 147, 217, 356,
71, 104, 137, 170, 220, 286, 418,
-129, -58, 12, 82, 188, 329, 612,
37, 76, 114, 153, 211, 288, 443,
52, 92, 133, 174, 235, 317, 480,
49, 91, 133, 176, 239, 324, 493,
40, 77, 115, 152, 208, 282, 431,
0, 50, 100, 151, 227, 328, 530,
6, 38, 70, 101, 149, 212, 339,
-2, 47, 97, 146, 221, 321, 520,
-70, -2, 64, 132, 233, 368, 639,
28, 56, 84, 112, 154, 209, 321,
5, 51, 98, 145, 215, 308, 495,
-6, 22, 51, 80, 123, 181, 296,
57, 98, 139, 179, 240, 321, 483,
54, 87, 120, 152, 201, 267, 398,
-88, -28, 31, 92, 183, 304, 545,
34, 68, 102, 136, 187, 255, 392,
29, 64, 99, 134, 187, 257, 397,
-5, 39, 83, 128, 195, 284, 462,
-17, 30, 78, 125, 197, 293, 484,
7, 19, 31, 43, 61, 85, 133,
-3, 31, 67, 102, 155, 225, 367,
-7, 27, 62, 97, 149, 219, 359,
-14, 32, 79, 125, 195, 289, 475,
64, 84, 103, 123, 152, 191, 269,
9, 107, 205, 303, 449, 645, 1036,
6, 16, 26, 37, 52, 73, 115,
47, 79, 112, 144, 192, 257, 386,
61, 96, 130, 165, 218, 288, 428,
55, 95, 134, 174, 233, 312, 470,
8, 53, 97, 142, 209, 298, 477,
36, 81, 125, 169, 235, 324, 500,
61, 107, 152, 198, 266, 357, 539,
-23, 150, 324, 498, 759, 1108, 1804,
-32, 8, 50, 91, 154, 237, 404,
-9, 22, 55, 87, 136, 202, 332,
-36, 23, 83, 144, 234, 355, 596,
28, 60, 93, 126, 174, 240, 370,
-2, 36, 74, 113, 171, 248, 403,
36, 67, 98, 129, 176, 238, 362,
42, 71, 99, 128, 171, 228, 343,
-25, 42, 111, 180, 283, 420, 694,
20, 45, 70, 95, 133, 183, 284,
55, 90, 125, 161, 214, 285, 426,
-49, -10, 29, 68, 127, 206, 363,
72, 110, 148, 186, 243, 319, 471,
25, 37, 50, 62, 81, 106, 156,
-23, 22, 67, 112, 181, 272, 453,
67, 90, 114, 137, 172, 219, 312,
10, 69, 128, 187, 276, 393, 629,
19, 46, 72, 99, 138, 191, 297,
-106, -76, -45, -15, 29, 89, 210,
8, 43, 78, 113, 166, 236, 376,
-69, -13, 43, 99, 184, 297, 523,
-35, 23, 81, 140, 227, 345, 579,
33, 79, 124, 170, 239, 330, 513,
48, 74, 100, 126, 165, 217, 321,
0, 57, 114, 171, 257, 371, 600,
-4, 48, 100, 153, 231, 336, 546,
-120, -81, -43, -4, 53, 130, 284,
-53, 24, 101, 179, 295, 450, 760,
};

static uint64_t neck_lateral_convs_1_conv1_weight[64 * 1*4] =
{ // torch.Size([64, 1, 1, 64])
0xb3ccb9330245b9a0,0xb22b3d19434ab3a4,0x3b82254b43bbca52,0x2bcbab3b31221392,
0xbc8bcc8132213dca,0xb134b9ba40bba4c2,0x9aa3bb23303122cc,0xcbb94ccb0bb83133,
0xb1cbab4ab44a2391,0x9ab54243b3b21ac5,0x0ca32baa253b34b2,0xa139cb2c42cb2522,
0x254254d35aba414d,0x34a42a034c4b248b,0x3433b334e3b44253,0x23434193cb45333a,
0x3449b4333ccb3133,0x443cb9b4a133bb4c,0xa3523cb4bc3a1013,0x3bd948c04c44335a,
0xbbabd4bc413413cc,0x2cb31b5b4c03208c,0x0bbbabac9bcd3d3b,0xca33b48dc0bbbbbb,
0xa0c1929302230c3b,0x1bbb2c0aba4bbbca,0xb20ad33bbdba8ca0,0xbbacab2bb828b331,
0x2a25a9b9a4b3b832,0x2003a1423a389b3b,0xd832a0a1202b5389,0x82392b822a33aba8,
0x42bcc43bc8513c53,0x24424cb33a39d444,0xc343443b352bcc43,0x41ca3ab344a2b34b,
0xa0acca1003302482,0x82239bb1889bcc2b,0xb3b222b8008acbb0,0x09b01b5b528abac2,
0x3b29c21418c3bab9,0xac10cd885c3b24c9,0x2caba30bbdba422b,0xc422983384b1ccc2,
0x329b31ab3424434c,0x0003123924bc3b29,0xaa334a0b439d1b4c,0x249201bd4cc9a22c,
0xaa49caaa44a333bb,0x935ccccacb43c43c,0xbc2ca230db38d332,0x0dc44cbc41c1cb2a,
0x1c44bdb9a510230a,0xb1450993bc833338,0x2a234a43aa243aa3,0x3b13304bab0aab42,
0x389b343bc1abba44,0x2402a3b4bba43a5a,0x94439103b2c1bb58,0x3b00401a2044abb3,
0xc424aac333421444,0xcb1513cb2bab3a42,0xd433d02b84392c24,0xcc098354c20032d2,
0xb49333a34523c533,0x34b63330b0443949,0x4b302c4204382334,0x34bb14b422bb3208,
0x0b899093aab3abb0,0xbbb4bba94a3ba4aa,0x8aa9b4b02bb3482c,0x333a8a93b4a2bab3,
0xcc800ac943b4cbc2,0xccc02b3a004ab421,0xbbbcc3a92acc1c30,0xb0481314c49a42bc,
0x0035a32b85ca2bb2,0x2a32c41239cb3ab2,0xb21081c81c3240a0,0xb2392332c3338933,
0x14bc138b343a3399,0xb0b48cbb32acca38,0xbc8a28bc433bb3cb,0x342cbc3323c983b3,
0x3b39b4b231c23dc4,0x3b13bbc24cab85cc,0xcb32b03bac313b3b,0xb4ca02c4b3ccccb3,
0x22b8332a4b911caa,0x31aba1b23aba101a,0x911b1a2142302309,0xb39a82122a2339b2,
0xa3034b2b814b31aa,0xaa3b340bbab44c83,0x3ac8ac2b32b3a421,0xa94b843b392283c8,
0xbb93bb0334c0ba0b,0xc302cb2a8b4093ac,0x4b4bdb4bdca33ab0,0xcdb1c238b3aba3b9,
0x122cb3a8023b022b,0x04001b02aba1a002,0x83333b2ac3aaba33,0x8bba80bc2c121a29,
0x32932a34a34caba3,0x0982ababb0a4a412,0xb9bb1b0a1323c3ab,0x25903ba5143b3224,
0x3aaca3a832c4223b,0xbab412409b0ab34c,0xa22b83cb1bbc3c2c,0x3232b23bc24b3b20,
0x3c53c2c3a2a324bb,0xc230b99bac2c944b,0x143042cab4b404ac,0xcb234b43aa48ac22,
0x200439a13cbc8bc0,0x1a9ba81839c3a330,0xb21bac82813334ba,0xbd332990a2218bb2,
0xcc233ab2bbb200d0,0xab03c5a090194dbb,0xabaac332cc0334cb,0xa423c042bb21db91,
0x298bc4349b4b3b32,0x99b1abb1422acb93,0x323ab2ca298999ba,0x0ab00acb9b832233,
0x4a12bb0b9ac921a1,0x3ba3b1ab59ca2321,0xa2b30b209c233c48,0x244a14249ca3cc93,
0x0a4aa33bb9a43aa9,0xa25cbaabba30c25a,0xb33aa225b892c393,0xbc144abc0943cc2a,
0xbc3220b4bca3233a,0xca383433ba338c38,0x33aba222a8b31b84,0x0b30193bbc21ac49,
0x2c3bcb9c2cba3bba,0xbc3dbcca8abcd3ca,0x33b99ca3ac83cacc,0x4cb02cbdbabbb9bb,
0xcc902b933acb333a,0xcb23835b3cbccdbb,0x2bcbc4c1cc94418c,0xc333b39abdc9c0b2,
0x41abb3c2b8c23bc3,0x4ca4b4a02ac22139,0xba41a9c9ac334abb,0x134c4bc3bc92cc25,
0x2b31cb9babda3003,0x0a1b320a2ab139ab,0x2304b2c20bb21243,0xcc02143aac3202c9,
0xb2c9a4a143b3b9b3,0xa4aaa2cb3233ca39,0x019cd8ab434cc80b,0xb0babbb2a2bb5220,
0x2a3b92a1bbbc2993,0x4a89a31aba3ccb9a,0xc84c80a3bb35a4ca,0xc30a2b43bb11dbc3,
0xbcbc2d5bbdbc21a8,0xbcb5bba3a4bbcbb3,0x54b403ca43cbc3cc,0xccbbcc90b1cca44c,
0xbac42caaa34b13bb,0xbbca3b3ab1a20ab2,0x3bd9204b31cbc994,0x004ba334b4a9a33b,
0x03143c9bb93b10ca,0x283b14bba3c43c23,0x32b21c333333b3b2,0xb0b2a4213b48922b,
0x000419010a3489ab,0xa13010111a3122b2,0xba0a9ca999bb183a,0x08289accdaa0a490,
0x32bc52923c322b3b,0xb34b4b4c4c32834a,0x058b0443a034004b,0x3333a24233343cb2,
0x0bbbcb58b45332b3,0xb8a5324294b4abb5,0x4b254b82051b35b3,0xa430cc3b439cc448,
0x3a842b0092c2c4c1,0x113224423299434a,0x32b2393488044320,0x94a8334b42982042,
0x330b9a0c23d02a32,0x943a1bca32c0304a,0x9484acb4bc19bc31,0x3c1892238033b2a4,
0xa05a3b33abbb0cbd,0x334ccc242a333aa9,0x432a3b22c3b34433,0xbb4429ab24350b4b,
0xbca40bbb3baab2c0,0x1abb4b19bc94cbbb,0x4abba3b1abb43c15,0xba39342ac4bb39db,
0x3c3302c442338b44,0xb29253bc340c4c4c,0xc340231ab0344d44,0xbb32a455c42b44a2,
0x1b30b9b90bb02283,0x0933b3cc3b2a11bb,0xbaca88b89b10ba08,0x21631b02a2280ac3,
0x14425353cc24392a,0x2490c3b4293b3244,0x3523233343acb54c,0x45c84c332c344c48,
0x3190833a0c3a4433,0x40933232438acc24,0x248414c34323ba31,0x440b12b93c023443,
0x0202a4a2ccc3ba24,0x4a22c3cabaa0433b,0xb03393439b00b3b0,0xb8b20113ad3adbc3,
0x344a2352bac93904,0xb434c5c433cc34a4,0x23442324143b35b3,0x030a3d1343340c40,
0xa3aca21cbd3cabc9,0x980cb22a22b2bbb2,0x3abba0b8322ab3cb,0xb2a12ab9cc9022d8,
0x324902233a4298ac,0x0432a9cb1b581a3e,0x48bbb2335b414c43,0xb3234304c2a5acba,
0x32a0b3ba21313c43,0x48293d0331b4c444,0xb43312a3b32bbb43,0xa2ba13c2a32a32b3,
0x23ac9ba81c9bba43,0x81b9b92ac4bbc91a,0xbb83b9a0b32b8ba3,0xba40bccadbb134c9,
0x1b4bd3ccbcd5b08b,0x2c13b4c100cb40ab,0x4834ad119c3b3c9b,0x03203a2caabab943,
0x3ac229ccb4409bc2,0xcc105bbbc5bccbda,0xd0b343cba4b4dcc2,0xcbaaa04c03bcb5db,
0x1a9b9c12aa3c301b,0x4204b2c1109094d2,0x30cb31b3231192ca,0x322b9bbb3ca2393c,
};

static int neck_lateral_convs_1_quant1_threshold[64 * 14] =
{ // torch.Size([64, 14])
-552, -300, -174, -79, -16, 46, 109, 172, 235, 299, 362, 456, 582, 835,
-1502, -1035, -801, -626, -510, -393, -276, -159, -42, 73, 190, 365, 599, 1066,
-3054, -2087, -1604, -1241, -999, -757, -516, -274, -32, 209, 450, 813, 1297, 2264,
-1749, -1066, -724, -468, -297, -126, 43, 214, 385, 556, 727, 983, 1325, 2008,
-1173, -714, -485, -313, -199, -84, 29, 144, 258, 373, 487, 659, 888, 1347,
-1546, -1085, -854, -681, -566, -451, -335, -220, -105, 9, 125, 298, 528, 990,
-1615, -1151, -919, -744, -628, -512, -396, -280, -164, -48, 67, 242, 474, 938,
-888, -575, -418, -300, -222, -144, -65, 12, 91, 169, 247, 365, 522, 835,
-1075, -606, -371, -195, -78, 39, 156, 274, 391, 508, 626, 802, 1037, 1506,
-877, -542, -375, -249, -165, -82, 1, 85, 168, 252, 336, 462, 629, 964,
-1243, -811, -595, -433, -325, -217, -109, -1, 106, 214, 322, 484, 700, 1132,
-1076, -693, -502, -358, -262, -167, -71, 24, 120, 215, 311, 455, 646, 1029,
-1692, -1169, -907, -711, -580, -449, -318, -188, -57, 73, 204, 400, 662, 1185,
-1100, -640, -409, -237, -121, -6, 108, 223, 338, 453, 568, 741, 971, 1432,
-1286, -728, -448, -239, -100, 39, 179, 318, 458, 597, 737, 946, 1226, 1784,
-1650, -1040, -735, -506, -354, -201, -49, 103, 255, 408, 560, 789, 1094, 1704,
-1232, -610, -300, -67, 87, 243, 398, 553, 709, 864, 1019, 1252, 1563, 2184,
-947, -592, -415, -281, -193, -104, -15, 72, 161, 250, 339, 472, 649, 1004,
-1206, -808, -609, -459, -360, -260, -161, -61, 37, 137, 236, 386, 585, 983,
-701, -401, -251, -139, -64, 10, 85, 160, 235, 310, 385, 497, 647, 947,
-1336, -886, -661, -492, -380, -267, -155, -42, 69, 182, 294, 463, 688, 1138,
-1317, -880, -661, -496, -387, -278, -168, -59, 50, 159, 269, 433, 652, 1090,
-1097, -683, -475, -320, -216, -113, -9, 94, 198, 301, 405, 560, 768, 1182,
-1300, -826, -589, -411, -293, -174, -56, 62, 180, 299, 417, 595, 832, 1306,
-1841, -1272, -987, -774, -631, -489, -347, -204, -62, 79, 221, 435, 719, 1289,
-940, -628, -472, -355, -277, -199, -121, -43, 34, 112, 190, 307, 463, 775,
-875, -503, -317, -177, -84, 8, 101, 194, 287, 380, 473, 612, 799, 1171,
-1211, -773, -554, -390, -280, -171, -61, 47, 157, 266, 376, 540, 759, 1197,
-1702, -1077, -765, -531, -375, -219, -63, 92, 248, 404, 560, 794, 1106, 1730,
-996, -649, -476, -346, -259, -173, -86, 0, 86, 173, 260, 390, 563, 909,
-1589, -1069, -809, -614, -484, -354, -224, -94, 35, 166, 296, 491, 751, 1271,
-1022, -656, -473, -336, -244, -153, -61, 29, 121, 212, 303, 441, 624, 990,
-1253, -789, -557, -383, -267, -151, -34, 81, 197, 313, 429, 603, 835, 1300,
-1476, -965, -710, -518, -391, -263, -135, -8, 119, 247, 374, 566, 821, 1332,
-1234, -771, -539, -365, -250, -134, -18, 97, 213, 329, 445, 618, 850, 1313,
-1801, -1282, -1023, -829, -699, -570, -440, -310, -181, -51, 77, 272, 531, 1049,
-1443, -1009, -792, -629, -521, -412, -304, -195, -86, 21, 130, 292, 509, 944,
-1261, -843, -634, -477, -373, -268, -164, -59, 44, 149, 253, 410, 619, 1037,
-1657, -1110, -836, -631, -494, -357, -220, -83, 53, 189, 326, 532, 805, 1353,
-1322, -875, -651, -484, -372, -260, -148, -36, 74, 186, 298, 466, 689, 1136,
-1252, -831, -620, -462, -356, -251, -145, -40, 64, 170, 275, 433, 644, 1066,
-1851, -1252, -952, -728, -578, -428, -278, -129, 20, 170, 320, 544, 844, 1443,
-1676, -1088, -795, -574, -427, -280, -134, 12, 159, 306, 453, 674, 967, 1555,
-1143, -745, -546, -397, -298, -198, -99, 0, 99, 198, 298, 447, 646, 1043,
-868, -597, -462, -361, -293, -225, -158, -90, -22, 44, 112, 213, 349, 619,
-875, -433, -212, -46, 64, 174, 285, 395, 506, 616, 727, 893, 1114, 1556,
-1276, -797, -557, -377, -257, -137, -17, 102, 222, 342, 462, 642, 882, 1362,
-954, -515, -295, -130, -20, 89, 199, 309, 419, 529, 639, 803, 1023, 1463,
-1703, -1086, -777, -545, -391, -236, -82, 71, 226, 380, 534, 766, 1075, 1692,
-1519, -977, -706, -503, -368, -233, -97, 37, 173, 308, 443, 646, 917, 1459,
-1243, -808, -591, -428, -319, -211, -102, 6, 114, 223, 332, 495, 712, 1147,
-189, 10, 110, 185, 235, 285, 335, 385, 435, 485, 535, 610, 710, 910,
-1544, -988, -710, -501, -362, -223, -84, 54, 193, 332, 471, 680, 958, 1514,
-872, -373, -124, 62, 186, 311, 435, 560, 685, 809, 934, 1121, 1370, 1868,
-1013, -530, -289, -108, 12, 132, 253, 374, 495, 615, 736, 917, 1158, 1641,
-1364, -908, -680, -508, -394, -280, -166, -52, 61, 175, 289, 460, 689, 1145,
-1479, -915, -633, -421, -280, -139, 1, 142, 282, 423, 564, 776, 1058, 1622,
-1216, -872, -700, -571, -485, -399, -313, -226, -140, -54, 31, 160, 332, 676,
-670, -342, -178, -54, 27, 109, 191, 273, 355, 438, 520, 643, 807, 1136,
-809, -463, -289, -160, -73, 13, 99, 186, 272, 359, 445, 575, 748, 1095,
-1187, -845, -674, -546, -461, -375, -290, -204, -118, -33, 52, 180, 351, 693,
-1772, -1229, -957, -753, -617, -481, -345, -209, -73, 62, 198, 401, 673, 1217,
-1984, -1366, -1057, -825, -671, -516, -362, -207, -53, 101, 255, 487, 796, 1414,
-1292, -869, -657, -499, -393, -287, -182, -76, 29, 135, 240, 399, 611, 1034,
};

static uint64_t neck_lateral_convs_1_conv2_weight[64 * 9] =
{ // torch.Size([64, 3, 3, 1])
0xd, 0xb, 0xb, 0xd, 0x2, 0x1, 0x0, 0xb, 0x2,
0x1, 0x2, 0x0, 0xb, 0x9, 0xa, 0xc, 0xd, 0xb,
0xb, 0xb, 0xc, 0xb, 0x8, 0xa, 0xc, 0xb, 0xb,
0x4, 0xb, 0xc, 0x9, 0x2, 0xc, 0xc, 0xb, 0xd,
0x0, 0x4, 0x2, 0xc, 0xc, 0xa, 0xc, 0xd, 0xa,
0x3, 0x4, 0xb, 0x3, 0x5, 0xa, 0x8, 0x2, 0x3,
0xb, 0x4, 0x4, 0xb, 0x4, 0x4, 0xb, 0x3, 0x2,
0xb, 0xc, 0x2, 0xd, 0x5, 0x3, 0xb, 0xb, 0x9,
0x2, 0xb, 0xe, 0x1, 0x4, 0xc, 0x0, 0x3, 0x0,
0xa, 0xb, 0xa, 0xa, 0x5, 0x1, 0x2, 0xb, 0x9,
0x3, 0xb, 0x8, 0x1, 0x3, 0xa, 0xa, 0x5, 0x3,
0xc, 0xc, 0x3, 0xd, 0xb, 0x2, 0xb, 0x4, 0x0,
0x5, 0x4, 0x5, 0xa, 0x3, 0xa, 0xa, 0x1, 0x2,
0x8, 0xc, 0xb, 0x3, 0xd, 0xb, 0x2, 0xb, 0x1,
0x4, 0x3, 0x4, 0xa, 0xa, 0x0, 0x4, 0x2, 0x4,
0xa, 0xa, 0xb, 0xb, 0xd, 0xa, 0xb, 0xa, 0xb,
0xc, 0xb, 0xb, 0xa, 0x0, 0x9, 0xc, 0xa, 0xb,
0x2, 0x1, 0x0, 0xa, 0xa, 0x2, 0xb, 0x2, 0x5,
0x4, 0x5, 0xa, 0x2, 0x4, 0x4, 0xb, 0xc, 0x8,
0x2, 0x0, 0xb, 0x3, 0xe, 0xa, 0x1, 0x3, 0x2,
0x9, 0x3, 0x3, 0x9, 0xb, 0xa, 0xc, 0xc, 0xc,
0x5, 0x5, 0x4, 0x4, 0x3, 0x0, 0xb, 0x8, 0xa,
0x3, 0x2, 0x3, 0x3, 0x2, 0x2, 0xa, 0x1, 0xa,
0xc, 0xc, 0x4, 0xb, 0xb, 0xc, 0x9, 0x1, 0x0,
0x3, 0x2, 0xb, 0x4, 0x4, 0x3, 0x4, 0x2, 0x4,
0xc, 0xc, 0x2, 0xb, 0x3, 0x3, 0x0, 0x4, 0x8,
0x1, 0x0, 0xc, 0x9, 0xb, 0xc, 0xc, 0xc, 0x3,
0x0, 0x3, 0x4, 0xa, 0x3, 0x5, 0x0, 0x2, 0x3,
0x0, 0x4, 0x4, 0xb, 0x2, 0x4, 0x2, 0x9, 0x3,
0x3, 0x3, 0x0, 0x5, 0x1, 0x9, 0x3, 0xa, 0xa,
0x8, 0xa, 0xa, 0x9, 0x2, 0x4, 0x0, 0x4, 0x5,
0xa, 0x2, 0x1, 0xd, 0xa, 0x4, 0xc, 0xc, 0x3,
0xa, 0xa, 0x3, 0x0, 0x4, 0x2, 0x5, 0x4, 0xb,
0x5, 0x4, 0x4, 0x3, 0xc, 0x2, 0x2, 0xb, 0x2,
0x8, 0x9, 0x1, 0x1, 0xa, 0x3, 0x4, 0x4, 0x4,
0x4, 0x4, 0x3, 0x3, 0x0, 0x3, 0x3, 0x9, 0x3,
0x2, 0x4, 0xa, 0x4, 0x6, 0x3, 0xa, 0x2, 0xc,
0x8, 0x0, 0x1, 0x9, 0xa, 0x4, 0xa, 0xa, 0x6,
0x1, 0x4, 0x3, 0x0, 0x3, 0x8, 0x3, 0x3, 0x3,
0x4, 0x5, 0x4, 0x0, 0x3, 0x0, 0xa, 0x2, 0x1,
0x2, 0xa, 0x9, 0x5, 0x3, 0xa, 0x4, 0x4, 0xb,
0x4, 0xa, 0x3, 0xc, 0x5, 0x4, 0x2, 0x0, 0x4,
0xa, 0xc, 0xc, 0xa, 0xb, 0xb, 0xa, 0x9, 0x8,
0x2, 0xc, 0xc, 0x3, 0x0, 0xd, 0x9, 0x1, 0x9,
0xc, 0x2, 0xa, 0xd, 0x4, 0x3, 0x2, 0xb, 0xa,
0xa, 0x0, 0xb, 0x9, 0xd, 0xc, 0x0, 0x2, 0x9,
0xb, 0xb, 0xb, 0xa, 0xa, 0x9, 0xb, 0xb, 0xb,
0x4, 0x4, 0xb, 0x4, 0x3, 0xb, 0x2, 0x0, 0x0,
0x4, 0x0, 0x2, 0x3, 0x1, 0x2, 0x3, 0x3, 0x2,
0x3, 0x0, 0xb, 0x3, 0xb, 0x8, 0x4, 0x4, 0x5,
0xb, 0x4, 0x4, 0xb, 0x3, 0x5, 0x9, 0x0, 0x3,
0xb, 0xb, 0x9, 0xc, 0xc, 0xb, 0xc, 0xb, 0xb,
0x3, 0x2, 0x4, 0x3, 0x2, 0x2, 0xc, 0xa, 0xb,
0x3, 0x0, 0xb, 0xb, 0xb, 0xc, 0xb, 0xb, 0xd,
0x2, 0x3, 0xc, 0x0, 0xa, 0xd, 0xa, 0xc, 0xa,
0x0, 0x0, 0x2, 0x3, 0x2, 0x2, 0x5, 0x4, 0x4,
0xb, 0xd, 0xb, 0xd, 0xb, 0x0, 0xb, 0x3, 0x8,
0x1, 0xa, 0x0, 0x9, 0x6, 0x2, 0x1, 0x2, 0x9,
0xd, 0x0, 0x2, 0xd, 0xa, 0x4, 0xb, 0x9, 0xa,
0x4, 0x3, 0x3, 0xb, 0xc, 0xd, 0x0, 0xa, 0xb,
0x0, 0x5, 0x3, 0x2, 0x4, 0x9, 0x2, 0xb, 0xa,
0x4, 0x3, 0x3, 0x5, 0x0, 0x2, 0x4, 0xa, 0xc,
0x4, 0x3, 0x4, 0x3, 0xc, 0x0, 0x4, 0x3, 0x3,
0x2, 0x4, 0x3, 0xa, 0xa, 0xb, 0xa, 0xd, 0xc,
};

static int neck_lateral_convs_1_relu2_threshold[64 * 7] =
{ // torch.Size([64, 7])
88, 163, 238, 313, 425, 575, 875,
-12, 27, 68, 108, 169, 249, 411,
-118, -90, -62, -34, 8, 64, 177,
-51, 14, 79, 144, 242, 372, 633,
40, 130, 221, 311, 446, 627, 988,
39, 76, 112, 148, 203, 275, 420,
-9, 54, 118, 183, 279, 408, 665,
-2, 48, 98, 149, 224, 325, 527,
68, 123, 177, 232, 314, 424, 642,
-3, 52, 109, 166, 251, 364, 591,
53, 110, 166, 223, 307, 420, 646,
32, 78, 124, 170, 239, 331, 515,
-42, 34, 111, 189, 304, 459, 767,
1, 43, 85, 127, 189, 273, 440,
5, 30, 54, 78, 115, 163, 260,
8, 46, 83, 120, 176, 251, 400,
-5, 42, 89, 136, 207, 302, 491,
34, 58, 81, 105, 140, 187, 281,
53, 113, 172, 232, 321, 440, 677,
-98, -2, 93, 190, 334, 526, 911,
-19, 27, 74, 121, 192, 287, 475,
10, 74, 138, 202, 298, 426, 682,
15, 39, 62, 85, 119, 165, 258,
12, 40, 69, 97, 140, 196, 310,
-15, 45, 106, 167, 259, 381, 625,
23, 81, 140, 199, 287, 404, 639,
-9, 31, 71, 112, 173, 254, 417,
19, 60, 101, 142, 204, 286, 451,
24, 58, 92, 126, 177, 244, 380,
22, 54, 87, 120, 169, 234, 365,
57, 86, 115, 144, 188, 247, 363,
43, 84, 125, 166, 227, 308, 471,
3, 42, 81, 120, 178, 256, 411,
15, 86, 158, 230, 337, 480, 767,
1, 27, 53, 79, 117, 169, 273,
-118, -47, 22, 93, 199, 340, 622,
93, 161, 229, 297, 399, 535, 807,
59, 104, 150, 196, 264, 355, 538,
7, 54, 100, 147, 217, 310, 496,
47, 87, 128, 168, 228, 309, 470,
36, 78, 121, 163, 227, 312, 482,
-4, 60, 126, 191, 289, 419, 680,
30, 66, 102, 139, 193, 265, 410,
-5, 22, 50, 78, 120, 177, 289,
-65, -7, 50, 108, 195, 310, 542,
36, 98, 161, 224, 318, 444, 695,
43, 64, 85, 106, 138, 180, 265,
61, 99, 137, 175, 232, 307, 459,
-13, 23, 60, 97, 153, 227, 375,
26, 78, 129, 181, 258, 361, 567,
59, 98, 138, 178, 237, 317, 476,
75, 228, 381, 534, 764, 1070, 1683,
31, 52, 73, 94, 126, 168, 252,
19, 84, 149, 213, 310, 440, 699,
49, 105, 162, 218, 303, 416, 642,
6, 53, 101, 149, 220, 315, 506,
-132, -75, -18, 38, 124, 238, 467,
0, 84, 167, 251, 377, 544, 879,
50, 161, 271, 381, 546, 766, 1206,
40, 92, 143, 195, 272, 375, 581,
-60, 0, 60, 121, 213, 334, 578,
54, 103, 153, 202, 276, 375, 572,
26, 70, 115, 159, 225, 313, 490,
36, 86, 135, 185, 259, 358, 556,
};

static uint64_t neck_lateral_convs_2_conv1_weight[64 * 1*4] =
{ // torch.Size([64, 1, 1, 64])
0x2cac83244ab39cca,0xb0891b8bab4abbd3,0x3492a34cc833342a,0x32d24abbb3822bc3,
0x43a413c432944b43,0x2b29ac4313b2d242,0x8c0c32caa2c3b0b4,0xa33420483ac30543,
0x83bccbcca23ca3c4,0xcc9c4adbccab4d2c,0x303a5a9d4ccaccc2,0xbcbcab2cbc0bc8bb,
0x9cb2ab9bca4cc3b9,0x5994001ab88931b4,0x39303b9520383a09,0x022435abc3412ba4,
0xc2c930bbaac34bc2,0xd20c2bc3cca0c324,0xbb1a3ab24cabd1dc,0xbbabb94b4c2ccb4c,
0x244844c4c5332c3b,0xb03bb82b9315c34a,0xbc334bcbacbbaa33,0x3c44b2c8230b54bc,
0x441ba3435b844343,0x92bb2a33b384c2a0,0xc02a112b2303a0aa,0x1402c02b4242c342,
0xa293bdbaa40b43c1,0x3b329c2c3242380b,0x9b9934121bb28caa,0xc0933a3c2b43b342,
0x3a3cbabc0a10a243,0x3cb4aa3b2b34313b,0x340aa14acca9c8b4,0xc8831b23ccab24ab,
0x34bc243a404ba2bb,0x33483b0492ba00a3,0x012b2a80434338b3,0x3412130b25244134,
0xa498b3b4a89b3c42,0x0bc1c33c1c1c4cb9,0xa3a43b3a2c12424c,0x2b2bc5b3c90032cb,
0x89944941b33435a3,0x3443344ca38b4334,0x2db32313139b2234,0x5c2b924a3cb4ad44,
0x2991a2bb33321b4b,0xb8bcccb392b8c949,0xb933c93b13ab3a13,0xaa9b1bc2219343c0,
0x2dcc2b29314283aa,0x312a9b12a22a32b1,0x3baaa0ba49029923,0x11ababb343854c08,
0x0299b348b802919b,0x55b39b2113a92bc4,0x22b3ca2b3531a340,0x25bbaa2bc4bab3b3,
0xac2c323bbbcb03a4,0x32a1401a92c0a030,0xa92b2933b4a23b2a,0xb48b233aa33b2342,
0xa42a433bc2b942c3,0x222233cbc2a1b42a,0xb24a3abb0848da1c,0xaa2bc13b211dba13,
0xb23934a2b43cbc30,0x4d039b4b4322b22d,0x0230243bbb494340,0x4ba432b4a33343cb,
0x12234ac9428cb4a1,0x3cc33b2b5ab2434a,0x42320cc33bba2c4a,0xb23353844c033924,
0xc24ca4bd222cc434,0x3ba20344bbb324b9,0x122d34a3210414aa,0x928b31a2444b3334,
0x8abcc9baba23b3ca,0xdbcb4342223b2cdb,0x42c2c39b9cb2ca2c,0xcbb33bac3aacb40b,
0xb82cb900a08bbb42,0x9b29c833c3bbb99c,0x92311b1c0b0b1b92,0x3bbacc0419bb43cc,
0xc3c0aba49bbbbc3a,0xd14ec3b42cd1bbb4,0xbcccc2bb3aac2bca,0xb2bcc8c3b143abbb,
0xa14943c92320b442,0xd5cc43312b44c44a,0x2a32234bcb24cc40,0x403430443c32039a,
0xbc1b43a29bdcdd1b,0xcc2b4a9330bab13d,0x033c8333a04382ad,0x1bb42913cc0bbbc3,
0x32b3b90350a94bbc,0xabba8cbb0c1b19c8,0xb4a1b4bbb013a9b9,0x24b04ca00c212a9b,
0x9c2b42b3a023b849,0xac32c94391c21a3b,0x13c1cba1b8bc3aa3,0x3b8ab2ccab013ac3,
0x0394cbb55a99b42b,0x4bc3bb4c1c0b2ab1,0x43b3b9b1aca19329,0xb43355ba4b230343,
0x238c931343bdb0a3,0xb45bc4b3dc3a00bc,0x849a3bcc1cc49bb9,0x05cb3bbcc0985bac,
0x2dc420b44a43bb1b,0xcbabababbc31bb22,0xd3bbc35acba849c4,0xb3c23b0abd129abb,
0xa2ba0b8cc34431b2,0xc2a93c03bcb3c234,0xba0c09b33cca3bb5,0x8140d9b2cbcd2a0a,
0x2abb04491ab9bb23,0x23ba4bc2141cc9b0,0xa2b993a2b322b28b,0xc2b42832aa0bc32b,
0x80810c4b9424423a,0x4d443b2c43224032,0x33492cacbca9cb44,0xa244329831da044c,
0x94b3412ca4382dcc,0xb03243b3ab34c413,0xc44a402bcb40cc34,0x2932cb94ca0c43b2,
0xab99229283ab3cca,0xc22a0819cb15b1ab,0xaacbcab9aa3ac1ab,0xcbbbbabcbbcc80cc,
0xc39bcc0c3b82baac,0x1992a03243a23ca3,0xcb4bb4b83443b20c,0x2221aa044449bb4a,
0xc942543ab3439abd,0xbac222cba330922a,0x0943c30a8232cc83,0x4b34a2c4bbcc32c8,
0x2c3a43bbbcc3019c,0x0ccb40b20bb4b341,0x4c3021b3ca39bcbc,0x1a0a23b0baccba22,
0x13322a3023ba3b39,0x22b0adcb4344c3b1,0x311ab8335333bc10,0xc2b3321443a20031,
0x22a1ba83132c0bc0,0x32248b8a9b22ac3c,0x910b92323b40d99a,0x3832a323c1b991b4,
0x84b399842a1b0b2b,0x0bbccb34a4cbccd3,0x2ccbcaa3c490b11a,0x92a1452ab2b4a2ac,
0xbd0a344bc43b0bb9,0xc31ab823b4aa9334,0xbb942004d231b243,0x3a41bc34b3bb42b2,
0xbcc4bb04334bc0bc,0x83b03bab99a33aaa,0xc3b4c34a1b0b3023,0xb8c02294c8b1430b,
0x9a300db0ad4bc42c,0xcc9bb42ab121ca4b,0xbc3a92a32840bb31,0xbcbc1924ac4b23c2,
0xcaab4b91c3b22c3a,0x0cc34a4b4932e33c,0xd232bbaa2b3bb40a,0xbc34a3429bcba422,
0xaa43220310312443,0x4433dbccc43b4b48,0xac444b2b33213399,0x30acab32442493c9,
0x39aca38b43cb3cb3,0xbbc03b283a2ba3ba,0x333c244bc834a3ab,0xb4c43c23824bc4a2,
0x221229ba13502c09,0x33022b34a80b211b,0x0aa9138aa4942395,0x23191939a4ca04b3,
0x04dbcc90b33a3ac3,0x9b0b23cc0c3d4b34,0xa41315343a23bb32,0x323bbaa3ca5acccb,
0x84c3ab1c4112a9c1,0x90c002bba3caa8c1,0x94499858b248b3a1,0x12c14b43a3bc1222,
0xac1bb39ab5bbc0b9,0x8a34ab08d2a4ab3b,0xab333a9aab2a2b3c,0xb9b38b82aa8ababa,
0x9bb03c3ca022b3bc,0x283228c3232c123c,0xa13144cca1022022,0x424b8c00b32328b4,
0x53b4cbb32bc14aab,0xa1430aabab43b2c3,0x92823dabbaccab13,0xc29a00bccaaba3ca,
0xc39acda3cc9db3cc,0x043bb333a02c4ac3,0xcccbc8c34bcc333b,0xa32ccbbc154b3293,
0x24a2b2333c33ab23,0x3331a32533cb1a24,0x931ab3b13b329414,0xa434c233a53ca533,
0x3333cb2b4c9343cc,0x4bd31bc1a98a28ca,0x4213439acbc4cbb1,0xb39b34bcbbabcb2c,
0x34b2baa4303602ac,0xb91bac02c34aa2b3,0x0b92142baab3ab33,0xb1394bb0abc3839c,
0x4333b2db0b0b38bc,0xabc10cabab142302,0x403943419290bc22,0x0b3c3cc32bab2393,
0x424b3a3b2dc34385,0x2022332b32ab0b33,0x4b002b9b83c3b9bc,0x3332bbbc3a23db94,
0xba9b08bb3a39231b,0x3a89b8bbacbb12b3,0x02b3abb4aab4c901,0x349400cc3a3b3bbc,
0x4308232bb0bc4233,0xb24b33134a038021,0xa94b3dc1409c24ab,0x3943903243334343,
0x0b413a312b2c0594,0x4343255cb3205334,0x32444a95333a954c,0x4bac434843434443,
0x814c3a1a3dbb0bdb,0xc89a4a203303ab9a,0x02c228bc13cb8cc0,0xd1c8a22b18b00a13,
0xa34032029cb84223,0x300431c8bb2230a3,0x1aa03ab44bc52301,0xa41a3acd3b22c34c,
};

static int neck_lateral_convs_2_quant1_threshold[64 * 14] =
{ // torch.Size([64, 14])
-685, -430, -302, -207, -143, -79, -15, 47, 111, 175, 239, 334, 462, 717,
-922, -554, -370, -232, -140, -48, 43, 135, 227, 319, 411, 549, 733, 1101,
-1364, -949, -741, -586, -482, -378, -274, -170, -67, 36, 140, 296, 503, 918,
-941, -603, -435, -308, -224, -139, -55, 28, 113, 197, 281, 408, 577, 914,
-1212, -840, -654, -514, -421, -328, -235, -142, -49, 43, 136, 276, 462, 834,
-765, -450, -292, -174, -95, -16, 62, 140, 219, 298, 377, 495, 652, 968,
-641, -376, -244, -145, -78, -12, 53, 119, 185, 251, 318, 417, 549, 814,
-788, -497, -351, -242, -169, -96, -24, 48, 121, 194, 266, 376, 521, 812,
-1064, -660, -458, -306, -205, -104, -3, 97, 198, 299, 400, 551, 753, 1157,
-717, -420, -271, -160, -86, -11, 62, 136, 210, 285, 359, 470, 619, 916,
-795, -504, -359, -250, -177, -105, -32, 40, 112, 185, 258, 367, 512, 803,
-962, -576, -383, -239, -142, -46, 50, 146, 242, 339, 435, 580, 772, 1158,
-745, -508, -389, -300, -240, -181, -122, -62, -3, 56, 115, 204, 323, 561,
-1251, -859, -662, -515, -417, -319, -221, -123, -25, 73, 171, 318, 514, 907,
-784, -444, -273, -146, -61, 23, 108, 193, 278, 364, 449, 576, 746, 1087,
-699, -437, -305, -207, -141, -75, -9, 55, 121, 187, 252, 351, 482, 745,
-481, -320, -239, -179, -138, -98, -58, -17, 22, 62, 103, 163, 244, 405,
-995, -619, -431, -290, -196, -102, -8, 85, 179, 273, 367, 508, 696, 1072,
-914, -564, -389, -258, -170, -83, 4, 91, 179, 266, 354, 485, 660, 1010,
-711, -438, -302, -200, -132, -64, 3, 71, 139, 208, 276, 378, 514, 786,
-928, -615, -459, -342, -264, -186, -108, -30, 47, 125, 204, 321, 477, 789,
-992, -669, -507, -386, -306, -225, -144, -63, 16, 97, 178, 299, 460, 783,
-1159, -800, -620, -486, -396, -306, -216, -126, -37, 52, 142, 277, 456, 816,
-691, -407, -265, -158, -87, -16, 54, 125, 196, 267, 338, 445, 587, 871,
-1114, -763, -587, -456, -368, -280, -193, -105, -17, 70, 157, 289, 465, 816,
-1191, -825, -642, -505, -413, -322, -230, -139, -47, 43, 135, 272, 455, 821,
-866, -586, -446, -341, -271, -201, -131, -61, 8, 78, 148, 253, 392, 672,
-950, -560, -365, -219, -122, -24, 72, 170, 267, 365, 462, 609, 803, 1193,
-1042, -678, -496, -360, -269, -178, -87, 3, 94, 185, 276, 412, 594, 958,
-893, -605, -461, -353, -281, -209, -137, -65, 6, 78, 150, 258, 402, 690,
-989, -659, -494, -370, -288, -205, -122, -40, 42, 124, 207, 330, 495, 825,
-907, -588, -428, -309, -229, -149, -69, 9, 89, 169, 249, 368, 528, 847,
-786, -456, -290, -166, -84, -1, 81, 163, 246, 328, 411, 535, 700, 1031,
-734, -464, -329, -228, -160, -93, -25, 41, 109, 176, 244, 345, 480, 750,
-1028, -707, -547, -427, -347, -266, -186, -106, -26, 53, 133, 253, 414, 734,
-716, -458, -329, -232, -168, -104, -39, 24, 89, 153, 218, 314, 443, 701,
-716, -453, -321, -223, -157, -91, -25, 39, 105, 171, 237, 335, 467, 730,
-930, -626, -474, -360, -283, -207, -131, -55, 20, 96, 172, 286, 438, 743,
-764, -455, -300, -184, -107, -30, 46, 124, 201, 278, 356, 472, 626, 935,
-800, -508, -361, -252, -179, -106, -33, 39, 112, 185, 258, 368, 514, 806,
-1003, -681, -520, -400, -319, -239, -159, -78, 1, 82, 162, 283, 444, 765,
-884, -542, -371, -243, -157, -72, 13, 98, 184, 269, 355, 483, 654, 997,
-761, -485, -347, -243, -174, -105, -36, 32, 101, 170, 239, 342, 480, 756,
-800, -542, -414, -317, -253, -189, -124, -60, 3, 68, 132, 228, 357, 614,
-1281, -828, -602, -433, -319, -206, -93, 19, 132, 245, 358, 528, 754, 1206,
-784, -462, -301, -180, -99, -18, 61, 142, 222, 303, 384, 505, 666, 988,
-918, -575, -404, -276, -190, -105, -19, 65, 151, 236, 322, 450, 621, 963,
-729, -448, -307, -202, -131, -61, 8, 79, 149, 220, 290, 395, 536, 818,
-887, -557, -392, -268, -185, -103, -20, 62, 144, 227, 309, 433, 598, 928,
-774, -499, -361, -258, -189, -120, -51, 17, 85, 154, 223, 326, 464, 740,
-934, -617, -459, -340, -261, -181, -102, -23, 56, 135, 214, 333, 492, 809,
-827, -528, -378, -266, -191, -116, -41, 32, 107, 182, 257, 369, 519, 818,
-875, -559, -402, -283, -204, -125, -46, 31, 110, 189, 268, 387, 544, 860,
-1199, -781, -571, -414, -310, -205, -101, 3, 108, 212, 317, 474, 683, 1102,
-671, -375, -227, -116, -42, 31, 105, 179, 253, 327, 401, 512, 660, 956,
-864, -563, -412, -299, -224, -148, -73, 1, 77, 152, 227, 340, 491, 792,
-1071, -683, -490, -344, -248, -151, -54, 42, 139, 236, 333, 478, 672, 1059,
-862, -559, -407, -293, -217, -142, -66, 9, 85, 161, 237, 350, 502, 805,
-871, -539, -373, -249, -166, -83, 0, 82, 165, 248, 331, 456, 622, 954,
-756, -506, -380, -287, -224, -161, -99, -36, 25, 88, 150, 244, 369, 620,
-688, -411, -273, -170, -100, -31, 37, 106, 175, 244, 313, 417, 555, 831,
-800, -395, -193, -41, 59, 160, 262, 363, 464, 565, 667, 819, 1021, 1426,
-848, -561, -418, -310, -238, -167, -95, -23, 48, 119, 191, 299, 442, 729,
-670, -395, -258, -155, -86, -18, 50, 118, 187, 256, 324, 427, 565, 839,
};

static uint64_t neck_lateral_convs_2_conv2_weight[64 * 9] =
{ // torch.Size([64, 3, 3, 1])
0x9, 0xa, 0x6, 0xd, 0xc, 0x4, 0x8, 0x3, 0x5,
0x0, 0x4, 0x4, 0x2, 0x3, 0x3, 0x4, 0x3, 0x4,
0x4, 0x3, 0x5, 0x4, 0x2, 0x4, 0x3, 0x2, 0x3,
0x4, 0x2, 0x3, 0x4, 0x3, 0x3, 0x4, 0x3, 0x4,
0xb, 0xb, 0x1, 0xb, 0xb, 0x8, 0xd, 0xd, 0xd,
0x3, 0x8, 0x4, 0xb, 0xb, 0x4, 0x9, 0x4, 0x6,
0x3, 0x1, 0x2, 0x2, 0x1, 0xc, 0xc, 0xd, 0xd,
0x9, 0x3, 0x4, 0xb, 0x9, 0x8, 0xd, 0xd, 0xc,
0x4, 0x2, 0x0, 0x4, 0x2, 0x2, 0x4, 0x4, 0x2,
0x8, 0x9, 0xb, 0xb, 0xb, 0xb, 0x0, 0xd, 0xc,
0x5, 0x4, 0x5, 0xb, 0x8, 0x4, 0xc, 0x9, 0x3,
0x3, 0x0, 0x2, 0xb, 0xc, 0xb, 0xc, 0xd, 0xc,
0xc, 0xc, 0xc, 0xb, 0x4, 0x4, 0x2, 0x4, 0x5,
0xc, 0xd, 0xc, 0x4, 0x4, 0x3, 0xc, 0xc, 0xb,
0x4, 0x8, 0x4, 0x2, 0xb, 0x3, 0x5, 0x4, 0x5,
0xc, 0x9, 0xa, 0x1, 0x3, 0x5, 0x2, 0x4, 0x4,
0x2, 0x8, 0x2, 0xc, 0xc, 0xc, 0xc, 0xc, 0xd,
0x4, 0x2, 0xb, 0x5, 0x0, 0xb, 0x5, 0x4, 0x9,
0x2, 0x2, 0xa, 0x2, 0xc, 0xc, 0xb, 0xd, 0xc,
0xc, 0xb, 0xb, 0xd, 0xc, 0x3, 0xc, 0x0, 0x4,
0x0, 0x0, 0x4, 0x0, 0x3, 0x3, 0x4, 0x4, 0x4,
0xc, 0xc, 0xc, 0xb, 0xa, 0xb, 0xb, 0xa, 0xb,
0x4, 0x3, 0x3, 0x1, 0x4, 0x3, 0x3, 0x4, 0x4,
0x9, 0x2, 0xd, 0x3, 0x3, 0xd, 0xc, 0x0, 0xd,
0x5, 0x3, 0xa, 0x3, 0xa, 0x3, 0x5, 0x3, 0x3,
0x4, 0x4, 0xc, 0x4, 0x4, 0xc, 0x5, 0x4, 0xc,
0x0, 0xa, 0x3, 0x2, 0x0, 0x3, 0x4, 0x4, 0x5,
0xc, 0xc, 0xd, 0x1, 0x9, 0xc, 0x1, 0x8, 0xc,
0x4, 0x2, 0x2, 0x9, 0x3, 0x3, 0x2, 0x5, 0x5,
0x4, 0x5, 0x6, 0xc, 0xb, 0x2, 0x2, 0xa, 0x2,
0x4, 0x4, 0x4, 0x2, 0x1, 0x3, 0x4, 0x3, 0x4,
0x3, 0x3, 0x4, 0x2, 0x2, 0x4, 0x1, 0x2, 0x3,
0xc, 0x9, 0x4, 0xe, 0xc, 0x4, 0xc, 0x9, 0x4,
0x6, 0x5, 0x5, 0x2, 0xb, 0x0, 0x2, 0xb, 0x2,
0x4, 0x3, 0x5, 0x2, 0x1, 0x4, 0x0, 0x0, 0x3,
0xc, 0xb, 0x1, 0xd, 0xc, 0x3, 0xd, 0x3, 0x3,
0xb, 0xc, 0x8, 0x6, 0x3, 0xb, 0x3, 0x3, 0x2,
0x3, 0x4, 0x5, 0x3, 0x3, 0x4, 0xb, 0x1, 0x3,
0x1, 0x3, 0x4, 0xa, 0x2, 0xb, 0xc, 0xd, 0xd,
0x4, 0x4, 0x1, 0x3, 0x2, 0x3, 0x3, 0x3, 0xb,
0x4, 0x4, 0x6, 0x2, 0xb, 0x4, 0xa, 0xb, 0xb,
0x4, 0x3, 0x3, 0x1, 0x4, 0x5, 0x3, 0x4, 0x3,
0x3, 0x4, 0x2, 0x4, 0x6, 0x1, 0xd, 0x9, 0xb,
0x4, 0x9, 0xb, 0x4, 0x9, 0xc, 0x5, 0x4, 0xc,
0x2, 0x3, 0x5, 0x2, 0x3, 0x5, 0x3, 0x3, 0x4,
0xe, 0xc, 0xc, 0x2, 0x0, 0x0, 0xb, 0xb, 0xa,
0x2, 0x5, 0x4, 0x3, 0x4, 0x0, 0x4, 0xb, 0x2,
0x4, 0xb, 0xa, 0x4, 0xb, 0xc, 0x5, 0x2, 0x9,
0xb, 0xa, 0x2, 0x3, 0x3, 0x5, 0x5, 0x4, 0x5,
0xa, 0xc, 0x0, 0xa, 0xc, 0x4, 0xb, 0x9, 0x6,
0x2, 0x1, 0xa, 0x0, 0x2, 0x3, 0x5, 0x4, 0x3,
0x9, 0xb, 0xc, 0xa, 0xa, 0xc, 0x9, 0xb, 0xc,
0x3, 0x5, 0x0, 0x9, 0x5, 0x3, 0x3, 0x3, 0x5,
0x4, 0x3, 0x2, 0x4, 0x5, 0x4, 0x3, 0x4, 0x3,
0xa, 0x0, 0x8, 0xb, 0x2, 0xc, 0xd, 0xc, 0xc,
0x4, 0x5, 0x5, 0x4, 0x4, 0x3, 0x2, 0xb, 0xb,
0xc, 0x1, 0x4, 0xc, 0x4, 0x5, 0xd, 0x3, 0x5,
0x5, 0x1, 0xc, 0x3, 0xc, 0xc, 0xc, 0xc, 0xd,
0xa, 0xd, 0xd, 0x3, 0xb, 0xc, 0x4, 0x4, 0x4,
0x3, 0x9, 0xa, 0x2, 0x2, 0xb, 0xc, 0xc, 0xd,
0x0, 0xb, 0x3, 0x0, 0xd, 0x2, 0x3, 0xd, 0xa,
0x8, 0x3, 0xb, 0xc, 0xc, 0xc, 0xd, 0xc, 0xb,
0xe, 0xd, 0xc, 0xa, 0x4, 0x3, 0xa, 0x4, 0x0,
0x3, 0x3, 0xb, 0x2, 0x2, 0xb, 0x8, 0xc, 0xe,
};

static int neck_lateral_convs_2_relu2_threshold[64 * 7] =
{ // torch.Size([64, 7])
5, 83, 162, 241, 359, 516, 831,
20, 77, 133, 190, 275, 388, 614,
66, 114, 162, 211, 283, 380, 573,
61, 118, 174, 231, 316, 429, 655,
54, 114, 174, 234, 324, 444, 684,
19, 73, 127, 181, 263, 371, 588,
-59, 54, 169, 283, 455, 684, 1141,
39, 106, 173, 240, 341, 475, 743,
-35, 15, 66, 117, 193, 295, 499,
-34, 38, 111, 184, 293, 440, 732,
-17, 61, 139, 217, 335, 492, 805,
-50, 15, 80, 146, 244, 375, 638,
-14, 42, 99, 156, 241, 355, 583,
-67, -41, -15, 9, 48, 99, 202,
-69, -15, 38, 92, 173, 280, 496,
3, 81, 158, 235, 350, 505, 813,
108, 239, 369, 500, 695, 956, 1477,
12, 67, 122, 177, 260, 369, 589,
22, 82, 143, 203, 293, 413, 654,
58, 118, 177, 236, 325, 444, 681,
-73, 0, 72, 145, 254, 400, 692,
51, 102, 154, 206, 284, 387, 594,
23, 68, 112, 156, 223, 311, 489,
-80, -7, 65, 138, 248, 394, 687,
15, 74, 133, 192, 281, 400, 636,
122, 166, 209, 253, 319, 406, 581,
-3, 82, 169, 255, 384, 556, 901,
38, 108, 177, 247, 351, 490, 768,
6, 58, 109, 160, 237, 340, 545,
-7, 72, 151, 231, 350, 509, 828,
57, 121, 184, 247, 341, 467, 719,
-1, 46, 95, 143, 215, 312, 505,
35, 113, 191, 268, 385, 540, 851,
94, 187, 280, 373, 512, 698, 1070,
-10, 71, 153, 236, 359, 524, 853,
56, 115, 174, 234, 322, 441, 677,
80, 131, 183, 234, 312, 415, 621,
-13, 72, 159, 245, 375, 548, 894,
15, 74, 134, 193, 282, 401, 638,
-14, 45, 105, 165, 254, 374, 614,
26, 101, 175, 250, 362, 512, 811,
33, 89, 145, 201, 286, 398, 623,
112, 177, 242, 306, 403, 532, 791,
4, 74, 145, 215, 321, 462, 745,
70, 117, 165, 212, 284, 379, 569,
9, 88, 168, 248, 367, 527, 845,
9, 51, 94, 136, 199, 284, 453,
0, 53, 106, 159, 239, 345, 558,
-53, 31, 117, 203, 332, 504, 847,
87, 154, 222, 289, 390, 525, 795,
52, 92, 132, 172, 232, 312, 471,
27, 96, 164, 233, 336, 474, 749,
-4, 64, 133, 202, 306, 443, 719,
-37, 37, 111, 186, 297, 446, 745,
1, 87, 173, 258, 387, 559, 902,
-24, 57, 139, 222, 345, 510, 839,
76, 129, 183, 237, 318, 425, 640,
-59, 26, 112, 198, 327, 499, 843,
83, 123, 163, 202, 262, 341, 500,
-33, 44, 121, 199, 315, 470, 780,
20, 64, 109, 153, 220, 309, 488,
-15, 61, 138, 215, 330, 485, 793,
42, 149, 256, 362, 523, 736, 1164,
1, 77, 153, 229, 343, 495, 798,
};

static uint64_t bbox_head_multi_level_share_convs_0_0_conv1_weight[64 * 1*4] =
{ // torch.Size([64, 1, 1, 64])
0xb302b19a00929881,0x0c93020bba031c2a,0x02029b3109322993,0x19a4aba4cbc03c2a,
0x1b928a3111898a88,0x9332b9831208b1a3,0xc302830280b89b39,0x2033042223b1b3b2,
0xbaa2291303ba0302,0xc12224928922a0a2,0x322901202ab90430,0xb8aa389a14a1caa2,
0xba2429a34a93a2a2,0x02421402422b32b3,0x2933033344a39249,0x403b2208a232213b,
0xbb894bba33b24b2a,0xb2442312931b39b2,0xbb12343403a0b259,0x413b338d12129323,
0x9809a2a09a032192,0x02a2c0a132ab9338,0xc12193020290a39b,0x0b00112933a2b29a,
0x33b912c3cb80930b,0x9a1a0909a2abaa49,0x9aaa90babbba100a,0x09a1a9aaaabaa8ba,
0xa1aaa8393c220b03,0x28a29c3b99bc0c3d,0xc2aa99bab1011abc,0xa192b23a282a4289,
0x3bc23aa3b4294c4b,0x934942a3c22133b4,0x4c2b433a29a3c234,0x93193b3b223abaa3,
0x2244a832a321832a,0xa33832a25320b240,0x0218a1b10a921822,0x300aa2030142a89a,
0xc84333bbac13c3c3,0xa233133130bb3224,0x2a24c3b232830942,0x403c22328394302c,
0x3922221201923a23,0x323baa93323b2333,0xa302330018b2aa98,0x2b213341332bc9b2,
0xa308114999219182,0x9aa10a2a9b82b24a,0x9181999b9b193a93,0xba82bb13388b3baa,
0x9110a20bcc23c1b1,0x19cb8c099cba38a9,0x30a2bbbcab10a1b2,0xcabcbba22a122cac,
0x112901a11280a31a,0x2280299109111091,0x2900a08211123931,0x21b8b00190912112,
0x0285094302040281,0x18820120a1281042,0x922991911024a112,0x1802133429a19932,
0x2abb1a22a53c8d02,0x03383902a12445b2,0x4233293343119935,0x4b4b22b429332913,
0x81a0898aa2382a1a,0x9a2001a3b01b9988,0xb99922aaa999b018,0x992a2a09a892a9ab,
0xba3ac4ab0b02c3a2,0x8b880a4b9ac22a2b,0x2404d02120824292,0xa31a9282ba34303a,
0xaba210c339a42310,0x102aa219128b50b8,0x2a0829228384b01b,0x408b010b08200932,
0x2a221aa3410b322b,0x8a330320333bbbbb,0xa10a3314131aa139,0x413432ba931b2312,
0xb9b2aab80ab9a999,0xb9aa9a3ac094ba92,0x20a2bb9991a89ab3,0xb1801a89a3aab9a0,
0xaa10812ab2308900,0x33b8bc222a89a229,0xc20a809b1aa0bb00,0xa8b0a2832810b3a0,
0x0038ca2a0320221c,0x012331aa3892c92c,0x23192ab229bc00b2,0x33b29108093402a3,
0xa0230932a229b318,0x93a8289140021323,0x3229b1122aaa2912,0x11a3a3a1224921b9,
0xb4333131991c0302,0x02203c091b93bb3a,0x22890b9b9b3c11c3,0xbbbbb1143aaa3bb9,
0x191a999000ab020a,0x091248a80009abb2,0x4a0a00020301221b,0x281a290bb13201a0,
0xa82122aa233c9b2b,0x831a1aa2309325ba,0x3b1b21802ba29822,0xa292b3c3919a99b2,
0x41ca3c2384bb5b5b,0x032b29d22342babb,0xabbd6bb2c919b08b,0x99b3aa0b39adb234,
0x3b3242821390a9b3,0x143bbb13322a4224,0xbb21a20928a4b119,0x3a4bb2ab4428b2a3,
0x020c99b2abaa3aaa,0x9933a19a2318cbca,0x0ab932b2b88bb1ab,0x403b23bab0b299b3,
0x908a9a020ac81083,0xa890123b11a31800,0xa29a0a0991c09b90,0x8b9910299419c1a8,
0x2b00a991919a9189,0x91210082120b21a2,0xa20099030282a028,0x20000209a0a8b120,
0x11222b2b04a28a81,0x281231220b223393,0x243881413020a223,0x081a904819a21321,
0x23b902b32ba2830b,0xa81199a989aa9a3a,0x9caa88aaacba881a,0xa29882a899caa8b9,
0x3b914ba10a930a03,0x209aa024222b4b14,0xab8012029304008c,0x3923331b2312b1a0,
0x12aa091aa2482a9b,0xba80a1b2939b01ba,0xbbaa33aabaa0ba20,0x113a10aa9ab2a9aa,
0x2a118002baba2c29,0xd382812901a000a2,0x19a999aaa0c9bc90,0xa9a22909a3a2c9b2,
0x1030010a02030a0a,0x220b1290a9230330,0x132a100a20230092,0x39192a2391922821,
0xab999c000801ab9a,0xa982a2223a1ca0b2,0xca91a3111acacc3a,0x90a8332bb3b2b298,
0xb123a2290cb2bba3,0x93bb882aabb3b2aa,0x0293bbbca11a00b9,0xbaaaa99312a329ab,
0x3ca83a8a391a0b09,0x933ab1a3833a8384,0x1a0284b202b0113b,0x2b0a324b32a2b299,
0x2a12032282332310,0x1a93b898383b203a,0xca2b239328833333,0x0c883333131ba1b2,
0xc223a3bb3b8b9c94,0xab13b42923b2a3cb,0xb2a4a3b3a3ba9129,0x2c2d23229204acab,
0x3ac292c43c83121b,0xa1038b2b22bdcc2c,0xbccb92c3c8c220cc,0xc2b3a2ac10c1c8bc,
0xaba908b33a928309,0xb81298a01a9a89b9,0x8b8a89989baa911a,0x991102b8a8a2a0b8,
0x1aaa01999a22120a,0x21bb3c092a8232a8,0x2b8120aa90030ba9,0xb1bbab2a20492a38,
0xb81933aa223cbcbb,0x122b39aba1942a98,0x2323b9222a39bcb4,0x9222b2c39c2a4bbb,
0x91988999a1001980,0x99108009a3090a00,0x890823a981108980,0x98293a0800b09989,
0x3b012b9a19842310,0x02808ab3381aba31,0x10832092943abb2b,0x1321108b1132114a,
0x43c32a0411b4342b,0x9b432a3ba23b3c3c,0x0a3333424231313a,0x3333303b9cbb2322,
0xa0b1c00089012918,0x1ca1c12b82903b29,0xb1902111920198b3,0xa91308920a018902,
0x12001a9a2bc09b82,0xa22b1a2b01031139,0x90999a8292a98ca1,0x2911aa89a308b999,
0xbba10981209a0a0b,0xb8049ab0ba1a98c9,0x0b928a9a9119231b,0x099aa12a8a91b930,
0x93aaa0a1a1a0b4aa,0x2b0a3b2ca9230a3b,0x3322ab13113a4423,0x931aaaa3ab1a322a,
0xb819192a124baa8b,0x3a812ba3b98a009a,0xbaa1a29bab290092,0x00a090ab8ba139b2,
0xb223a20aba120113,0x00c3cb230aa20319,0x030a0cba8a2200c1,0xcab0b2c34390bbbb,
0xa321aa3ccb13baba,0xa0bb0b380ba3b939,0x1a99bb9bac290298,0xc1cbbb2b31938a2b,
0xba110319223cac98,0xb0ba3293b1b9a3a3,0xba1aa19b2ba9abb3,0xb0b1028a9bc9bac9,
0x1a34103a23010a02,0x2309120229232232,0x223b293031034a32,0xa0939a32114a2032,
0x1301180a9a1b2b1a,0xaaac0b1ab9a29a39,0x29a98a91ab119cc2,0xb3a2b0c89ca23aa9,
0x2a99a901938ab810,0x803a10a891308981,0x0932b00121081229,0x19828998290aa10a,
0xaa1a0a11823baa02,0x28aa1b39a09119bc,0xcaaaa1aa9bba31a3,0xaba98981b3a148a1,
0xb9021110203a920b,0x39ab92a20aab9100,0xba819a200a1109a9,0x089a8a0a9a1a3a90,
};

static int bbox_head_multi_level_share_convs_0_0_quant1_threshold[64 * 14] =
{ // torch.Size([64, 14])
-403, -256, -183, -128, -91, -55, -18, 18, 54, 91, 128, 183, 256, 403,
-283, -158, -95, -48, -17, 13, 45, 76, 107, 138, 170, 217, 279, 404,
-422, -262, -182, -121, -81, -41, -1, 38, 78, 118, 158, 218, 298, 459,
-396, -211, -119, -50, -4, 41, 87, 133, 179, 225, 271, 340, 432, 616,
-563, -329, -212, -125, -66, -8, 49, 108, 166, 224, 283, 370, 487, 721,
-517, -315, -215, -139, -88, -38, 12, 62, 113, 163, 214, 289, 390, 592,
-657, -429, -315, -229, -172, -115, -58, -1, 55, 112, 169, 254, 369, 597,
-788, -535, -408, -313, -249, -186, -122, -59, 3, 67, 130, 225, 352, 606,
-780, -502, -364, -260, -190, -121, -52, 17, 86, 155, 225, 329, 467, 745,
-308, -161, -87, -32, 4, 41, 78, 115, 152, 189, 226, 281, 355, 502,
-815, -498, -340, -221, -142, -63, 15, 95, 174, 253, 332, 451, 609, 926,
-296, -157, -88, -36, -1, 32, 67, 102, 136, 171, 206, 258, 327, 466,
-482, -325, -246, -187, -148, -108, -69, -29, 9, 48, 88, 147, 225, 383,
-799, -563, -444, -355, -296, -237, -178, -119, -59, 0, 58, 147, 265, 502,
-290, -169, -108, -63, -32, -2, 28, 58, 88, 119, 149, 195, 256, 377,
-265, -128, -59, -8, 26, 60, 95, 129, 163, 198, 232, 284, 352, 490,
-711, -421, -276, -167, -95, -22, 49, 122, 194, 267, 339, 448, 593, 883,
-471, -319, -243, -186, -148, -111, -73, -35, 2, 40, 78, 135, 211, 362,
-755, -501, -375, -280, -216, -153, -90, -26, 36, 100, 163, 258, 385, 638,
-303, -188, -130, -87, -58, -29, 0, 27, 56, 85, 114, 157, 215, 330,
-443, -252, -157, -85, -37, 9, 57, 105, 152, 200, 248, 319, 415, 605,
-601, -418, -326, -257, -211, -165, -119, -74, -28, 17, 63, 132, 223, 407,
-413, -268, -195, -141, -104, -68, -32, 4, 40, 76, 112, 167, 239, 385,
-462, -272, -177, -106, -58, -11, 36, 83, 131, 178, 225, 297, 391, 581,
-375, -216, -136, -77, -37, 2, 42, 81, 121, 161, 201, 260, 340, 499,
-478, -321, -243, -184, -145, -106, -66, -27, 11, 50, 90, 148, 227, 384,
-333, -201, -135, -86, -53, -20, 12, 45, 77, 110, 143, 193, 258, 390,
-270, -176, -129, -94, -71, -48, -24, -1, 22, 45, 69, 104, 150, 244,
-513, -323, -228, -157, -110, -62, -15, 32, 79, 127, 175, 246, 341, 531,
-450, -253, -155, -81, -32, 17, 66, 115, 164, 213, 263, 336, 435, 632,
-512, -346, -263, -201, -159, -118, -76, -35, 6, 47, 89, 151, 234, 400,
-307, -214, -167, -132, -109, -86, -63, -39, -16, 6, 29, 64, 111, 204,
-295, -175, -115, -70, -40, -10, 19, 49, 79, 108, 138, 183, 243, 363,
-556, -327, -213, -127, -70, -12, 44, 101, 159, 216, 273, 359, 473, 703,
-550, -374, -285, -219, -175, -131, -87, -43, 1, 45, 89, 155, 243, 420,
-223, -118, -65, -26, 0, 25, 52, 78, 104, 131, 157, 196, 249, 354,
-525, -354, -268, -204, -161, -118, -75, -33, 9, 52, 95, 159, 245, 416,
-526, -370, -292, -233, -194, -155, -116, -77, -38, 0, 39, 98, 176, 332,
-468, -284, -192, -123, -77, -31, 14, 60, 107, 153, 199, 268, 360, 544,
-459, -297, -216, -156, -115, -75, -34, 5, 46, 86, 127, 187, 268, 430,
-737, -503, -385, -297, -239, -180, -122, -63, -4, 53, 112, 200, 317, 552,
-458, -287, -201, -137, -95, -52, -9, 33, 75, 118, 161, 225, 310, 481,
-374, -208, -125, -62, -21, 20, 61, 103, 144, 186, 227, 289, 372, 539,
-986, -648, -479, -353, -268, -184, -99, -14, 69, 154, 238, 365, 534, 872,
-927, -606, -446, -326, -245, -165, -85, -5, 74, 155, 235, 355, 516, 836,
-483, -324, -245, -185, -145, -105, -65, -26, 13, 53, 93, 152, 232, 391,
-330, -221, -166, -125, -98, -71, -43, -16, 10, 38, 65, 106, 161, 270,
-564, -373, -277, -205, -157, -109, -61, -13, 34, 82, 130, 201, 297, 489,
-528, -343, -251, -182, -136, -89, -43, 2, 48, 94, 140, 210, 302, 487,
-478, -293, -200, -131, -84, -38, 7, 54, 100, 146, 193, 262, 355, 540,
-258, -103, -26, 31, 69, 108, 147, 185, 224, 263, 301, 359, 436, 591,
-515, -331, -239, -169, -123, -77, -31, 14, 60, 106, 152, 221, 313, 497,
-488, -330, -250, -191, -151, -112, -72, -32, 6, 46, 86, 145, 225, 383,
-515, -333, -242, -174, -128, -83, -37, 8, 53, 99, 144, 213, 304, 486,
-428, -267, -187, -126, -86, -46, -6, 34, 74, 114, 154, 215, 295, 456,
-426, -284, -212, -159, -123, -88, -52, -17, 18, 54, 89, 143, 214, 356,
-368, -267, -216, -178, -152, -127, -101, -76, -51, -25, 0, 37, 88, 190,
-634, -431, -329, -253, -202, -151, -101, -50, 0, 51, 102, 178, 279, 482,
-311, -238, -202, -175, -156, -138, -120, -102, -84, -66, -47, -20, 15, 88,
-333, -171, -90, -29, 10, 51, 91, 132, 172, 213, 253, 314, 395, 557,
-519, -361, -282, -223, -184, -144, -105, -65, -26, 13, 52, 111, 190, 348,
-450, -273, -185, -119, -74, -30, 13, 57, 101, 145, 190, 256, 344, 521,
-462, -312, -237, -180, -143, -105, -67, -30, 7, 44, 82, 138, 214, 364,
-366, -250, -193, -149, -120, -92, -63, -34, -5, 23, 52, 95, 153, 268,
};

static uint64_t bbox_head_multi_level_share_convs_0_0_conv2_weight[64 * 9] =
{ // torch.Size([64, 3, 3, 1])
0xb, 0xc, 0x3, 0x4, 0xc, 0xc, 0x4, 0x4, 0x1,
0x2, 0x8, 0x3, 0x2, 0xd, 0x4, 0x3, 0x1, 0x1,
0x2, 0xb, 0xa, 0x3, 0xd, 0x1, 0x0, 0x8, 0xa,
0x9, 0xb, 0x0, 0xb, 0xd, 0x1, 0x9, 0x2, 0x9,
0x2, 0x4, 0xb, 0x3, 0x6, 0xa, 0xb, 0x8, 0xb,
0x3, 0x2, 0xd, 0x3, 0x1, 0xc, 0x1, 0x9, 0xb,
0x3, 0x4, 0x1, 0x3, 0xb, 0x2, 0x1, 0x4, 0x0,
0x0, 0x4, 0x2, 0xb, 0x4, 0x1, 0xa, 0x4, 0x1,
0x0, 0xd, 0x3, 0xb, 0xc, 0x3, 0x9, 0xc, 0x0,
0xa, 0xd, 0xc, 0x0, 0x8, 0x8, 0xa, 0xa, 0xa,
0xa, 0xc, 0xa, 0xb, 0xb, 0x0, 0xa, 0xa, 0xa,
0xc, 0x8, 0x1, 0xd, 0x3, 0x0, 0xa, 0xa, 0x8,
0xc, 0xc, 0xb, 0x2, 0x5, 0x2, 0x9, 0x4, 0xa,
0xa, 0xb, 0xa, 0xa, 0x6, 0x1, 0x3, 0x9, 0x8,
0xc, 0xb, 0x0, 0xa, 0x1, 0x2, 0x3, 0x3, 0x2,
0xb, 0xb, 0xb, 0x1, 0xc, 0xa, 0x9, 0xd, 0xb,
0xa, 0x9, 0x1, 0xb, 0xd, 0xb, 0x2, 0xa, 0x2,
0x3, 0x4, 0x0, 0x0, 0x2, 0xb, 0x1, 0x2, 0xb,
0xc, 0xb, 0xb, 0xa, 0x8, 0x2, 0xb, 0xc, 0xb,
0xa, 0xc, 0xa, 0xc, 0xd, 0xb, 0x4, 0x4, 0x3,
0xa, 0x4, 0x3, 0x3, 0xe, 0xa, 0x0, 0x3, 0xa,
0x2, 0x4, 0x4, 0xa, 0x1, 0x3, 0x9, 0x0, 0x1,
0x0, 0xb, 0x4, 0xb, 0xc, 0x4, 0x3, 0xb, 0x0,
0xd, 0xd, 0xa, 0xb, 0x3, 0x1, 0x2, 0x3, 0x2,
0x2, 0xd, 0xa, 0x0, 0x8, 0xb, 0x0, 0x4, 0x0,
0x3, 0x5, 0x1, 0xc, 0x2, 0xa, 0xc, 0xc, 0xa,
0x9, 0x4, 0xa, 0x4, 0x2, 0xc, 0x0, 0xc, 0x1,
0xa, 0x2, 0x0, 0x0, 0x2, 0x2, 0x0, 0x4, 0x5,
0x3, 0x3, 0x3, 0x3, 0xa, 0x4, 0x4, 0x4, 0x3,
0x5, 0x3, 0x0, 0x5, 0xb, 0xa, 0xa, 0x3, 0xb,
0xa, 0xa, 0xa, 0xb, 0x6, 0x8, 0x9, 0x0, 0xa,
0x4, 0x8, 0x8, 0x3, 0x1, 0xa, 0x3, 0x1, 0x9,
0x3, 0x4, 0x2, 0xa, 0xb, 0x9, 0xa, 0xb, 0x2,
0xb, 0x2, 0x9, 0xd, 0x1, 0xa, 0xc, 0x2, 0xa,
0x9, 0x2, 0x0, 0x3, 0x4, 0x1, 0x9, 0x2, 0x0,
0xd, 0xb, 0x3, 0x2, 0x5, 0x3, 0x3, 0x3, 0xb,
0x5, 0x2, 0xa, 0x4, 0x3, 0x9, 0x0, 0x0, 0x2,
0x3, 0xa, 0x0, 0x5, 0x9, 0x0, 0x3, 0x1, 0x1,
0xa, 0xc, 0xa, 0xa, 0x2, 0xb, 0x9, 0x2, 0x9,
0x4, 0x9, 0x1, 0x6, 0xc, 0x0, 0x2, 0x0, 0x1,
0xa, 0x4, 0x1, 0xa, 0x5, 0x0, 0xa, 0x2, 0xa,
0xb, 0x4, 0x3, 0xd, 0x4, 0x1, 0xb, 0x3, 0x2,
0xc, 0xc, 0x0, 0xb, 0xb, 0x2, 0xb, 0xb, 0x0,
0x2, 0x1, 0x4, 0x3, 0xb, 0x3, 0x3, 0x3, 0x4,
0x3, 0x4, 0x0, 0x2, 0x5, 0x2, 0x2, 0x3, 0x0,
0x0, 0x3, 0x0, 0x4, 0xb, 0x3, 0x0, 0x3, 0x2,
0x2, 0xc, 0xb, 0xa, 0x5, 0xa, 0x0, 0xc, 0xb,
0x1, 0x5, 0x0, 0x0, 0x5, 0xc, 0x3, 0x3, 0xb,
0x2, 0x3, 0x3, 0x2, 0x3, 0x2, 0x2, 0xa, 0xa,
0x9, 0xb, 0x2, 0xb, 0xc, 0x0, 0xb, 0x9, 0x0,
0x2, 0xb, 0xd, 0xa, 0xc, 0xc, 0x3, 0x3, 0x9,
0x2, 0x2, 0x1, 0xa, 0xa, 0xb, 0xb, 0xd, 0xa,
0x0, 0x4, 0x3, 0xb, 0x3, 0x0, 0x1, 0x3, 0x3,
0x4, 0xb, 0x3, 0x3, 0xb, 0x4, 0x3, 0xa, 0x2,
0xd, 0x3, 0x1, 0xd, 0x3, 0x8, 0xb, 0x2, 0x1,
0x3, 0x3, 0x8, 0x3, 0x4, 0x3, 0x2, 0x0, 0x0,
0xc, 0xb, 0x3, 0xc, 0x3, 0x5, 0xb, 0x3, 0x3,
0x9, 0xb, 0x1, 0x0, 0x6, 0xa, 0x2, 0xb, 0xa,
0x4, 0x3, 0x9, 0x4, 0x3, 0x2, 0x2, 0x1, 0xa,
0x8, 0xa, 0x9, 0x0, 0xe, 0x2, 0x8, 0x0, 0x8,
0xa, 0x4, 0x2, 0x2, 0x5, 0x2, 0xa, 0x2, 0x2,
0x9, 0xa, 0x1, 0x9, 0x2, 0x3, 0x0, 0x3, 0x4,
0x2, 0x2, 0x1, 0x3, 0x3, 0x3, 0x1, 0x1, 0x1,
0x4, 0x3, 0xb, 0x2, 0x2, 0xb, 0x3, 0x2, 0xb,
};

static int bbox_head_multi_level_share_convs_0_0_relu2_threshold[64 * 7] =
{ // torch.Size([64, 7])
54, 93, 132, 171, 229, 307, 463,
15, 40, 65, 90, 127, 176, 276,
-14, 12, 39, 65, 105, 158, 264,
-56, -17, 22, 61, 121, 200, 358,
50, 88, 125, 163, 219, 294, 444,
6, 33, 59, 86, 125, 178, 284,
-45, -30, -15, 0, 21, 51, 110,
-28, 0, 30, 59, 103, 161, 278,
-140, -111, -83, -54, -11, 46, 161,
-1, 25, 53, 81, 122, 178, 289,
-109, -69, -28, 11, 72, 153, 314,
-67, -31, 4, 41, 95, 167, 312,
21, 57, 93, 129, 182, 254, 398,
-121, -54, 12, 79, 179, 313, 581,
3, 19, 34, 50, 73, 104, 167,
-47, -18, 10, 38, 81, 139, 253,
-79, -42, -5, 30, 85, 159, 305,
0, 16, 33, 50, 75, 108, 175,
-130, -103, -76, -49, -9, 44, 152,
-58, -30, -1, 26, 68, 125, 238,
-51, -5, 40, 86, 155, 247, 431,
31, 53, 76, 98, 132, 176, 266,
44, 74, 103, 133, 177, 236, 354,
41, 67, 93, 119, 157, 209, 312,
-22, 3, 29, 54, 93, 144, 247,
96, 151, 205, 260, 342, 452, 671,
30, 56, 81, 107, 146, 197, 300,
-73, 14, 101, 188, 320, 495, 844,
-479, -396, -312, -229, -103, 63, 397,
61, 87, 113, 139, 179, 231, 335,
-72, -28, 15, 58, 124, 212, 386,
-75, -22, 29, 82, 160, 265, 476,
10, 28, 47, 65, 92, 129, 202,
-67, -33, 0, 32, 82, 149, 283,
3, 20, 37, 55, 80, 115, 184,
137, 202, 267, 332, 429, 559, 818,
-20, 11, 44, 77, 126, 191, 321,
-34, -3, 27, 59, 105, 168, 293,
-7, 9, 27, 45, 72, 107, 178,
-172, -125, -78, -31, 39, 133, 320,
-31, 3, 38, 74, 127, 197, 338,
78, 111, 144, 177, 226, 292, 424,
33, 71, 110, 148, 205, 281, 434,
-38, -2, 33, 69, 123, 195, 339,
-133, -94, -55, -16, 42, 121, 278,
12, 30, 48, 67, 94, 131, 204,
25, 55, 85, 115, 160, 220, 339,
-82, -43, -4, 34, 92, 170, 326,
11, 30, 49, 68, 96, 133, 209,
-33, -8, 16, 41, 79, 129, 230,
106, 189, 271, 353, 476, 641, 970,
48, 80, 113, 145, 194, 259, 388,
11, 35, 59, 84, 120, 168, 265,
-12, 7, 27, 48, 78, 119, 201,
-170, -113, -57, 0, 84, 197, 423,
-7, 15, 38, 62, 96, 143, 236,
168, 248, 328, 408, 528, 688, 1007,
-38, 8, 56, 103, 175, 270, 460,
-5, 61, 128, 195, 296, 431, 699,
-48, -1, 44, 91, 160, 254, 440,
-22, 5, 32, 59, 100, 155, 265,
10, 23, 36, 49, 69, 95, 146,
-1, 12, 25, 39, 59, 86, 141,
12, 43, 73, 104, 150, 211, 334,
};

static uint64_t bbox_head_multi_level_share_convs_1_0_conv1_weight[64 * 1*4] =
{ // torch.Size([64, 1, 1, 64])
0x2b803a0bab113bab,0x9a29a9a99c0a2a8b,0xabbb9b9b80b18b92,0x4012abbbb90aab9b,
0x2811b04bd084acbd,0x123144493c33ddcd,0xcdb32393ba4cc43c,0xbbdcb403ac3bbcbc,
0xb84a302b22b23a0a,0x0da8b90223b4ab32,0x3423bb30a0122a91,0x983123441b034bc3,
0xb2129a33bb2228cb,0xbc13b98a2b9a0bab,0xaaaa9b22b1a103a2,0xaa909bcbc23bbbbb,
0x2a8cb8b9233a82bb,0x022bb0b201cb1b22,0x0c21bc222938b8c2,0x91ab48401a92a1c2,
0x5332aa40023ba0a9,0xbaa3442909bc9302,0x315b2932496c44b1,0xa51b38bdb991aa0b,
0x32c1bbaa3bbbc0b0,0x94b2b2a4a1282b20,0xb3930bbc9143b812,0x92aaaa9aabbcb333,
0xa929320a00a12b1a,0x1c12ab211292a192,0x0311a910a01119b9,0x0911011119a13293,
0x54baba140a0cc4b8,0x25b244ba199ca0bb,0x2c3b4249a99c444a,0x232b3ccdc194c54a,
0xcc3c39dc24331b43,0x3c4392b034243b4a,0xc324c9b42a33dcba,0x44a414155c003cb0,
0x2342333b5bcacca5,0x2423252b25544234,0xb3332123343b1c24,0xb52ba414a2bc23c5,
0x2aa2a22acc8133ac,0x0a32a00b8dac390b,0xbbc99cbcabc18a0b,0x30319ccc3a8b1b9c,
0x98a09a0abbbabc23,0xb6c9cbbb43b84b43,0xbbb3aabac2b3c0b4,0xa230b1ccc2bcc48c,
0xc49c2213b2bd33ba,0x4280a33823b3920c,0x25ba20c232903a11,0x8392aaa3009a312b,
0x3ba1da8b33bdcaab,0xcc30c3b2b30bcdbb,0xabc2c8b34948b4b2,0x1aaa32b4b14bb3bc,
0x31043a51cb3bac3b,0xcca3bb1b2c293b18,0x3cbc9babaaca3b3a,0xcb43898cda82cc3a,
0x1329804a9aab4882,0x01ac414d3a0a2003,0x02d1249a42313529,0x80a304194350432b,
0xcba2ba2abbb0bc34,0xb6b2cbaa43b34c33,0xbcb49bcac3b3cbc4,0xbb42b0dcb2bcc4ac,
0xca0930d4a314b020,0xc042bba4cb332c94,0xc4b8cc2b392bd93b,0xcc3b1c3b4aa53dc4,
0x34d2a843babc439c,0xbb2a54438c14213c,0xb2c323b849aba44b,0x903b3443534b448d,
0xa43a0135440153bc,0x4dc33c319bc333b4,0x533c3a441032613b,0x1b33432c55854b0b,
0xbb4039b1b899c339,0xab2b33cba0c1ac9c,0xbcc3b42399ccc1cb,0x9192dca4bb10ba80,
0x5045c1aa4b2c4ca4,0xa33a35b3335b43b3,0xb13a212b43522bb4,0xa459bca2c9aca444,
0xb2baca3b99829024,0x282423398a293c33,0xac3b2b3b4151b4b1,0x3201a3da4121221b,
0x9bcac2cbcd2b4bad,0xba32aaac3dbc4a2b,0xadba2dbebcc3bbcb,0x38c8cd4d42ca2cbc,
0x100189918910a29a,0x9408a8a1981a19a1,0x0a8aaa9a919aa891,0x1a0a9aaaa189bb19,
0xc4a9422338bb44bb,0x408422331bb3142a,0x442b331842b25b91,0x02022a1034b93323,
0xa343b84c3b333204,0x01cc5b4c35bc4442,0x4033449cc3b45bb5,0xa443bbabc30ba25b,
0xa32cbb33c328b3bb,0x3aa2228ba00ab94a,0x3c309a43188994a9,0xab2a4cba209b12b1,
0x029088a180983811,0x9131804a10893010,0x990808a900000011,0x209080b83a803909,
0xb0d4b3c4abbb3143,0xc22803cc235b593c,0xb19355bba2b3c344,0x54c3cb0c543b024c,
0x545ccab4240ba5ab,0x42b925a0cccd3b38,0x3d3c2c40435c4433,0x259c4dc92b93d996,
0x2ca9323bcc823bbc,0xab3bbaba2d8a3a0b,0xbbcb9caca8c14ca0,0x3041acccc1991cbb,
0xb38aa23b1292aa89,0x22bdb921abbb2a92,0x8a920a0ba1094bc9,0xca3aab3cc0b10821,
0x343bc24bd4204b43,0x4bc042403bd24b24,0x3d4a4c49313b4533,0xa3134b2942b142a2,
0xba3b285b83bc3a92,0x3434243a2bcaabba,0x394a1932424952b1,0x313b3bba24ab14a3,
0x4a9248b2529b2112,0x929ba2b423333224,0x03bb24ba30ab3b43,0xa300245130120311,
0x2bcab91baa11cc3a,0xba32a2b3923abcbb,0xcc43ba92a8abc19a,0xa0aa3ba1b0bacbb2,
0xa38cc033d291239b,0xabbc8a2ca1cbab8d,0xbcb33c223834b5aa,0x0ab8acd3ba21aabd,
0x22a1a03abc01109c,0x9b90a03b0d0c302b,0xabba8cbca9c23bba,0x3021bc2cbaab2b9c,
0x231820312aba4339,0xac19c9a09333a219,0x3323ca2b89b3332a,0xa32833340c333a30,
0x03c10913ca29433a,0x9394033300443233,0xb2112b4a3890a933,0x81b83b344bb13834,
0xb9a300b03a2200bb,0xbb222cbbabacbaba,0x3a9930b3b920bb3b,0xbaa9b2bc44b994b0,
0xcc344bb152a9c0bb,0xcc43c0c4a013c024,0x24b1c41aa0ccaddb,0x8a3a92abc210c1c4,
0x094a02a2c21a0a33,0x3aac219c2a943924,0x2aab243a220013a2,0x3238ca5a8b381a94,
0xa5a9a84449cc52ab,0x32da4c4a2b5b39b2,0x34ba53a2b1334b43,0x0432a23d449a321a,
0x232cca2b1acc2224,0x33b3b3cb32cc5353,0xbb2523b13144c4c5,0xa4232a1c51b0450c,
0x2cba3bbbcca03c9c,0x9a2bb9cbacab3a0b,0x2bbbacac99c0ccb0,0x3009bb9c421bbbbb,
0xb9c1d24dcbb8bc0b,0xb3aa322c22abbbbc,0x5db421b24832a93c,0x0ca0c4a3b43c4a8e,
0xc4c450450cc82322,0x8924439c42533cad,0x345235a8b9b40343,0x9433cc2a22a22aa3,
0xb1b99029022a322b,0xa4b53a350b81219a,0x20532c3001a33ba1,0x49325bb034cb2133,
0x2bb9a2b8cd2021ad,0xaa3ab02c9dac3a2c,0xaccbadbdbad32bc0,0x4823bcad089b9cbc,
0x221ac222c42c1133,0x023aaba339ebbb91,0x2d229c03a22b233c,0x2c2232ab8c032403,
0x529ad23b12909001,0xcba33a1a821bcba1,0xab33ac82b04223ab,0xb80022dbb02982ab,
0x8b433bcb88032b2a,0x2b123b0aa23333b4,0x940a29abb9b2bcca,0x3149092bbbb299a5,
0x33b4913aaaba82ab,0x0ba4422cab329199,0xb00034b33038ba4b,0x02a8d8d922300220,
0x2d4dc0ae83adda94,0x333ab4c280bccbbb,0x0a9ab9b3304bcba2,0x8a9cb0bcdabdc4c4,
0xa002aa391aa88232,0x432541101ba2a0a4,0x2a4b3bab12582810,0x42312acb34b992a4,
0xa19a332ba2122928,0x9c402922a3a2c0a9,0xa33098232a213a2c,0x9a12a22329814ab3,
0xa8b38239b232b20a,0xba253a9b2bcbabab,0xac3ba833a1a0abab,0xcab13bcb22c80bb4,
0x128382142a35331b,0xc2088c9baa0baba3,0x42abba0bb13a22ab,0x2b22ba0b23441b9a,
0xc834224b5b3838b2,0x03454b931048b5b3,0x303b138aa2131bab,0x42829cd2a38aa244,
0xbab4bb9cab399cbb,0xda8ab3a92c38401b,0xbba023b3404cb023,0x90a1a113a33ccbbb,
0x9288402343ccb1dc,0x3b31badaacc4d3dc,0x04abc43222cc3c3d,0xdcadac344231aa3a,
};

static int bbox_head_multi_level_share_convs_1_0_quant1_threshold[64 * 14] =
{ // torch.Size([64, 14])
-1088, -725, -544, -408, -317, -227, -136, -45, 45, 135, 226, 362, 543, 906,
-1470, -1030, -810, -644, -534, -424, -314, -204, -94, 15, 125, 290, 510, 951,
-1035, -662, -476, -337, -244, -151, -58, 34, 127, 221, 314, 453, 639, 1011,
-945, -630, -473, -355, -276, -197, -119, -40, 38, 117, 195, 313, 471, 785,
-925, -618, -465, -351, -274, -197, -121, -44, 31, 108, 184, 299, 452, 758,
-376, -202, -115, -49, -6, 37, 81, 124, 168, 211, 255, 320, 408, 582,
-1013, -665, -491, -361, -274, -187, -100, -13, 73, 160, 247, 378, 552, 900,
-789, -500, -355, -247, -174, -102, -29, 42, 114, 187, 259, 368, 512, 802,
-944, -594, -419, -288, -201, -113, -26, 61, 148, 235, 323, 454, 629, 979,
-817, -504, -348, -231, -152, -74, 3, 81, 159, 238, 316, 433, 590, 903,
-1418, -841, -552, -336, -192, -48, 96, 240, 384, 528, 672, 889, 1177, 1754,
-1227, -830, -631, -482, -383, -284, -184, -85, 13, 113, 212, 361, 560, 957,
-1161, -738, -526, -368, -262, -157, -51, 54, 159, 265, 371, 529, 741, 1163,
-1082, -705, -516, -375, -281, -186, -92, 1, 95, 190, 284, 425, 614, 991,
-468, -350, -290, -246, -217, -187, -158, -128, -98, -69, -39, 4, 63, 181,
-942, -612, -447, -323, -240, -158, -75, 6, 89, 171, 254, 378, 543, 873,
-679, -390, -245, -137, -64, 7, 79, 151, 224, 296, 368, 477, 621, 911,
-1123, -717, -514, -362, -261, -160, -58, 42, 143, 245, 346, 498, 701, 1107,
-1107, -758, -583, -452, -365, -278, -191, -104, -16, 70, 157, 288, 462, 811,
-1003, -616, -423, -278, -181, -85, 11, 108, 205, 301, 398, 543, 737, 1123,
-1260, -687, -400, -185, -42, 101, 244, 387, 530, 674, 817, 1032, 1318, 1892,
-1057, -717, -547, -420, -335, -250, -165, -80, 4, 89, 173, 301, 471, 810,
-914, -504, -299, -145, -42, 59, 162, 265, 367, 470, 572, 726, 931, 1342,
-550, -326, -214, -130, -74, -18, 37, 94, 150, 206, 262, 346, 458, 683,
-1402, -959, -737, -571, -461, -350, -239, -128, -18, 92, 203, 369, 590, 1033,
-906, -599, -445, -330, -253, -177, -100, -23, 53, 129, 206, 321, 475, 782,
-771, -433, -265, -138, -53, 30, 115, 199, 284, 368, 453, 579, 748, 1086,
-1036, -582, -355, -184, -71, 42, 156, 269, 383, 496, 610, 780, 1007, 1462,
-733, -478, -351, -256, -192, -128, -64, -1, 62, 126, 189, 285, 412, 667,
-530, -322, -218, -140, -89, -37, 14, 66, 118, 170, 222, 300, 404, 612,
-331, -149, -58, 9, 55, 101, 146, 192, 237, 283, 329, 397, 488, 671,
-855, -531, -370, -248, -168, -87, -6, 74, 155, 236, 316, 438, 599, 923,
-1281, -869, -663, -509, -406, -303, -200, -97, 5, 108, 211, 366, 572, 984,
-683, -452, -336, -249, -192, -134, -76, -18, 39, 97, 155, 241, 357, 589,
-149, -27, 33, 78, 109, 139, 170, 200, 230, 261, 291, 337, 398, 519,
-776, -455, -294, -174, -94, -14, 66, 146, 226, 306, 387, 507, 667, 988,
-666, -376, -231, -123, -50, 21, 94, 166, 239, 311, 384, 492, 637, 927,
-1010, -696, -539, -421, -342, -264, -185, -107, -28, 49, 128, 246, 403, 717,
-1048, -721, -558, -436, -354, -273, -191, -109, -28, 53, 134, 257, 420, 746,
-1203, -798, -596, -444, -343, -241, -140, -39, 62, 163, 264, 416, 619, 1024,
-956, -603, -426, -294, -206, -117, -29, 58, 147, 235, 323, 456, 632, 986,
-738, -436, -285, -172, -96, -21, 54, 130, 205, 281, 356, 469, 620, 923,
-661, -444, -336, -255, -200, -146, -92, -38, 16, 70, 124, 205, 314, 531,
-432, -316, -259, -216, -187, -158, -129, -101, -72, -43, -14, 28, 85, 201,
-742, -466, -328, -225, -156, -87, -18, 50, 119, 188, 256, 360, 498, 773,
-1037, -642, -445, -297, -198, -99, -1, 97, 196, 294, 393, 541, 739, 1133,
-1165, -679, -436, -253, -132, -10, 110, 232, 353, 475, 596, 778, 1021, 1507,
-1153, -797, -619, -485, -396, -307, -218, -129, -40, 48, 137, 270, 449, 805,
-1474, -1001, -765, -588, -470, -352, -234, -116, 1, 119, 238, 415, 651, 1123,
-732, -405, -241, -119, -37, 44, 125, 207, 289, 370, 452, 575, 738, 1065,
-538, -293, -170, -78, -17, 43, 105, 166, 227, 289, 350, 442, 565, 810,
-1419, -974, -752, -585, -474, -363, -252, -141, -30, 81, 192, 358, 581, 1025,
-1262, -812, -587, -419, -306, -194, -81, 30, 143, 255, 368, 536, 761, 1211,
-604, -397, -293, -215, -163, -111, -59, -7, 44, 96, 148, 226, 329, 537,
-782, -506, -367, -264, -195, -125, -56, 12, 81, 150, 219, 323, 461, 738,
-520, -334, -241, -171, -125, -78, -32, 14, 60, 107, 153, 223, 316, 502,
-1768, -1240, -976, -778, -646, -514, -382, -250, -118, 13, 145, 343, 607, 1135,
-564, -321, -199, -107, -47, 13, 74, 135, 196, 257, 318, 409, 531, 775,
-1446, -938, -684, -493, -366, -239, -112, 14, 141, 268, 395, 586, 840, 1348,
-670, -429, -308, -217, -157, -96, -36, 24, 84, 144, 205, 296, 416, 658,
-1222, -775, -552, -384, -273, -161, -49, 61, 173, 285, 397, 564, 788, 1235,
-715, -410, -258, -144, -67, 8, 84, 160, 237, 313, 389, 503, 656, 961,
-859, -551, -397, -282, -205, -128, -51, 25, 101, 178, 255, 371, 524, 832,
-1443, -1014, -800, -640, -532, -425, -318, -211, -104, 2, 109, 270, 484, 913,
};

static uint64_t bbox_head_multi_level_share_convs_1_0_conv2_weight[64 * 9] =
{ // torch.Size([64, 3, 3, 1])
0x0, 0x0, 0x1, 0x3, 0x3, 0x1, 0x2, 0x1, 0x0,
0xb, 0xa, 0xb, 0x3, 0xb, 0xc, 0x5, 0x5, 0x3,
0x9, 0xb, 0xa, 0xa, 0xc, 0xb, 0x1, 0xa, 0x3,
0x8, 0xb, 0x3, 0x3, 0x4, 0x3, 0x1, 0x8, 0x9,
0x4, 0x2, 0xa, 0x4, 0xa, 0x2, 0x0, 0x1, 0x8,
0x9, 0xd, 0xb, 0x4, 0x3, 0x3, 0x3, 0x4, 0x3,
0x3, 0x2, 0x3, 0x2, 0xa, 0xa, 0x2, 0x3, 0x2,
0x0, 0xb, 0xb, 0x1, 0x9, 0xb, 0x8, 0x0, 0x9,
0x9, 0x4, 0xb, 0x3, 0x5, 0x2, 0x1, 0x9, 0x3,
0x1, 0xa, 0x0, 0x9, 0xe, 0x0, 0x2, 0x3, 0xa,
0x9, 0xc, 0x0, 0x9, 0xc, 0xb, 0x0, 0xb, 0xb,
0xa, 0x4, 0x9, 0x8, 0x4, 0x1, 0x0, 0x3, 0x1,
0x2, 0x4, 0x3, 0x2, 0x3, 0x1, 0x2, 0x2, 0x1,
0xb, 0xb, 0xa, 0xa, 0x0, 0x9, 0xb, 0xb, 0xb,
0x0, 0x5, 0x3, 0x2, 0x4, 0x2, 0xa, 0x3, 0xa,
0x8, 0x0, 0x9, 0x3, 0x5, 0x2, 0xb, 0xa, 0x0,
0xb, 0x3, 0x1, 0xc, 0x0, 0x1, 0xd, 0xb, 0x0,
0x2, 0x3, 0x3, 0x2, 0x4, 0x3, 0x1, 0x2, 0x1,
0xa, 0x1, 0x3, 0x0, 0x5, 0x3, 0xb, 0xb, 0xa,
0xd, 0x0, 0x1, 0xc, 0x2, 0xb, 0xd, 0xb, 0x9,
0x0, 0xc, 0xc, 0x1, 0xc, 0xa, 0x9, 0xb, 0xb,
0x0, 0x2, 0x3, 0x1, 0x3, 0x3, 0x4, 0x3, 0xb,
0x3, 0x3, 0x2, 0xb, 0xc, 0xb, 0x9, 0xd, 0x0,
0x3, 0x4, 0x2, 0xc, 0xc, 0xa, 0xb, 0xb, 0xa,
0xa, 0x3, 0x2, 0x1, 0x5, 0x0, 0x0, 0x2, 0xa,
0x2, 0x1, 0x0, 0x2, 0x2, 0x0, 0x8, 0x2, 0x0,
0xa, 0xc, 0xb, 0xa, 0xb, 0xa, 0x0, 0xb, 0xa,
0x3, 0x9, 0x2, 0x9, 0xe, 0x1, 0x0, 0x0, 0xb,
0x3, 0x4, 0x3, 0x4, 0x2, 0x9, 0xb, 0xb, 0xb,
0x8, 0x0, 0x3, 0x1, 0x3, 0x3, 0xa, 0x9, 0x0,
0x1, 0xa, 0x8, 0x3, 0x4, 0xe, 0x8, 0xc, 0xb,
0x5, 0x6, 0x3, 0x4, 0x3, 0xb, 0xa, 0xb, 0xc,
0xa, 0x2, 0x8, 0x1, 0x5, 0x1, 0x1, 0x2, 0x1,
0x3, 0x1, 0x3, 0x3, 0xc, 0x4, 0x3, 0x3, 0x0,
0x8, 0xb, 0x3, 0xc, 0xc, 0x9, 0xc, 0xc, 0xc,
0x2, 0x3, 0xa, 0xa, 0xd, 0x1, 0xa, 0xc, 0x3,
0x3, 0x2, 0xa, 0xc, 0xd, 0xa, 0x1, 0x3, 0x2,
0x2, 0x3, 0x3, 0x3, 0x2, 0x3, 0x0, 0x9, 0x0,
0x2, 0x9, 0xb, 0x3, 0x5, 0x3, 0xc, 0x8, 0x9,
0x0, 0x3, 0x2, 0x1, 0x3, 0x3, 0x8, 0x3, 0x9,
0xa, 0xc, 0x3, 0x1, 0xb, 0x9, 0x1, 0x9, 0xb,
0xb, 0xb, 0xa, 0xa, 0xb, 0x8, 0xa, 0xa, 0x9,
0x2, 0x4, 0xa, 0xa, 0x3, 0x9, 0xa, 0x4, 0xb,
0x0, 0x8, 0xb, 0x4, 0x4, 0x2, 0x3, 0x4, 0x2,
0xb, 0xb, 0x8, 0xb, 0x3, 0xb, 0xa, 0xc, 0x8,
0x2, 0x0, 0xb, 0x4, 0x3, 0xc, 0x0, 0xc, 0xd,
0xc, 0xd, 0xc, 0xc, 0x2, 0xb, 0x8, 0x0, 0x2,
0x2, 0x3, 0x1, 0x3, 0xa, 0x3, 0x2, 0x4, 0x8,
0xa, 0x4, 0x1, 0xc, 0x3, 0x3, 0xe, 0xc, 0xb,
0xb, 0x3, 0x3, 0x4, 0x4, 0x9, 0x2, 0x2, 0xe,
0x8, 0xc, 0x0, 0x2, 0xd, 0xa, 0xa, 0xb, 0xb,
0x8, 0x4, 0x9, 0x2, 0x3, 0x1, 0x9, 0x3, 0x1,
0x8, 0x3, 0x8, 0x2, 0x2, 0xc, 0xb, 0xc, 0xd,
0x1, 0xb, 0x3, 0x4, 0x5, 0x2, 0xb, 0xb, 0xa,
0xa, 0xb, 0xc, 0x3, 0x1, 0xb, 0x4, 0x4, 0x4,
0xc, 0x3, 0x8, 0xc, 0x4, 0xa, 0x9, 0x2, 0x2,
0x5, 0x4, 0x4, 0x4, 0x2, 0x3, 0x3, 0xa, 0xb,
0x3, 0x1, 0x9, 0x1, 0xd, 0x3, 0x2, 0xa, 0xa,
0xa, 0xb, 0xa, 0xa, 0xa, 0x9, 0xa, 0xa, 0xb,
0x2, 0x2, 0xb, 0x1, 0x5, 0xb, 0x3, 0xb, 0x1,
0xb, 0x8, 0xb, 0xa, 0x9, 0xb, 0x0, 0x0, 0xa,
0x0, 0xd, 0x2, 0x2, 0xa, 0x0, 0x0, 0x9, 0x1,
0xb, 0xb, 0x5, 0x8, 0xb, 0x4, 0x2, 0x2, 0x3,
0x4, 0x4, 0x4, 0xa, 0x4, 0xa, 0x9, 0xb, 0x3,
};

static int bbox_head_multi_level_share_convs_1_0_relu2_threshold[64 * 7] =
{ // torch.Size([64, 7])
4, 18, 32, 46, 67, 95, 150,
36, 104, 173, 241, 344, 481, 755,
-3, 14, 31, 49, 76, 111, 182,
-6, 18, 43, 68, 106, 156, 257,
-4, 18, 41, 64, 99, 146, 239,
44, 135, 226, 317, 453, 635, 998,
-15, 13, 42, 71, 114, 172, 288,
8, 22, 37, 51, 73, 101, 159,
36, 74, 112, 150, 208, 284, 436,
-51, 10, 72, 134, 227, 351, 598,
-95, -47, 0, 48, 120, 215, 407,
0, 18, 37, 55, 83, 121, 196,
-83, -38, 5, 50, 117, 207, 385,
0, 20, 42, 64, 96, 139, 226,
58, 152, 246, 341, 482, 670, 1048,
-6, 18, 43, 68, 105, 155, 255,
1, 29, 57, 85, 126, 182, 294,
-82, -33, 15, 64, 138, 236, 432,
35, 113, 192, 270, 388, 545, 859,
-28, 35, 99, 163, 259, 387, 642,
-20, 22, 65, 108, 172, 258, 430,
16, 42, 68, 95, 134, 187, 292,
10, 51, 93, 135, 197, 280, 446,
-31, 2, 36, 70, 122, 190, 327,
-30, 0, 30, 60, 105, 165, 286,
6, 16, 27, 38, 54, 76, 120,
3, 27, 50, 74, 109, 156, 250,
4, 84, 165, 245, 366, 527, 849,
-6, 26, 58, 90, 138, 203, 332,
16, 36, 57, 77, 108, 149, 230,
134, 315, 496, 677, 949, 1311, 2036,
182, 249, 316, 383, 483, 617, 885,
0, 21, 41, 61, 92, 132, 214,
9, 38, 67, 96, 140, 198, 314,
52, 160, 268, 375, 537, 753, 1184,
-6, 26, 58, 91, 140, 205, 335,
-27, 9, 47, 84, 141, 216, 365,
13, 37, 61, 84, 120, 168, 263,
-24, 16, 57, 97, 159, 240, 403,
-4, 11, 28, 44, 69, 102, 169,
-17, 3, 23, 43, 73, 113, 193,
10, 32, 55, 77, 110, 155, 245,
-2, 19, 41, 63, 97, 141, 230,
68, 181, 294, 407, 577, 803, 1256,
6, 33, 60, 86, 127, 180, 287,
11, 54, 97, 140, 205, 291, 462,
-37, 55, 148, 241, 380, 566, 939,
-15, 2, 20, 37, 64, 100, 171,
78, 121, 165, 209, 274, 362, 536,
95, 145, 195, 244, 319, 419, 618,
-60, 13, 86, 160, 271, 418, 713,
-5, 11, 27, 44, 69, 103, 170,
16, 46, 76, 106, 151, 211, 331,
-35, 2, 39, 76, 132, 207, 357,
-4, 22, 50, 77, 118, 174, 284,
-30, 9, 49, 90, 150, 231, 392,
-11, 37, 87, 136, 210, 308, 506,
-9, 27, 63, 100, 155, 228, 374,
-23, 1, 25, 49, 85, 134, 230,
-35, -1, 31, 64, 114, 181, 314,
-5, 17, 40, 63, 98, 144, 236,
-18, 15, 49, 83, 134, 202, 338,
-9, 22, 55, 87, 135, 200, 329,
13, 70, 126, 183, 267, 380, 606,
};

static uint64_t bbox_head_multi_level_share_convs_2_0_conv1_weight[64 * 1*4] =
{ // torch.Size([64, 1, 1, 64])
0xa0909a9101319991,0x0a991899a99019a0,0x9aa9aa1b231a0082,0x039998a998b30a0b,
0x40ab312ab2a8022a,0x1200212918322212,0x01a134839021a932,0x99b2110a23402220,
0xca93b4abb98a93b2,0x9ca3139903332092,0xb083a3cb19b99a2a,0x382930912bb9a1b4,
0x4ba333034b539245,0x1ac240253b233b4c,0xb093bb4a3004298a,0x243a30a09aaa3323,
0x3331139083a09022,0x0192828011132820,0xa23222130a802821,0x3028a33089280082,
0xb21bb18bbc9c1bcc,0x4c2a9a1a332c23ca,0x99abb3bb1cc4a3b3,0x00a33320b0c42081,
0x9c09a4a339234434,0xb330ca42324bb443,0x43b1b3bb3235b03b,0xbb82acba2049a33b,
0x413943a8c2c00cc3,0x1aa330aa21a1baab,0x083d4bdbb3bc32bb,0x2b30c441b3cb82ab,
0x3029341c301a99b1,0x4b22b223931a4a91,0xb449b43cb40b3a0b,0x3222a82a3241219c,
0x2082bcb8c3ccacba,0xab992b92c3a23bc8,0xb3229432aabb29b3,0x1ca2b29143011cb0,
0x0a9a2344404343b1,0x834aba4b934bb44b,0x44c9b43c444392bb,0xa1b1cbb83a102330,
0x300a031ab9a91120,0x8322021829110128,0x232122a399a20a33,0xaa02212200399182,
0x0302a3a4444494a2,0x08bad4323229412a,0x1494b23c4b20313a,0x230a9bc0b14b232b,
0xc3329a100b0c0aca,0x3b0b22b0a9a4b919,0x933bccbc31a32830,0xba0ba800a9a8a90a,
0x343333a3a334c334,0x23c0924bab213c40,0x82445a2ba3ab4aa4,0x23bcab90ca300a20,
0x209320319b4a1b23,0x2234320a1095bb12,0x220aaa322324aa42,0x9282ab3a3aa30b0a,
0x530bbcc42b313caa,0x34a93ca3290cc333,0x3b1b42b322134194,0x4b33c8313452133b,
0x9933b30aba2c2444,0x933024b829033333,0xbba20bb441ab933c,0xb3c04a329bdb33b5,
0x2ba2aa02aab2ac22,0xd9b8ab1ab0cbbbba,0xa039c9bd29bbb2d1,0xc9a3bbc4112a9bbb,
0xc28b9b13cb2bacab,0x3ba200b4c3ba91d1,0xab4bb329b42b0a24,0x333a35314b328a3c,
0xa0bba32a2334034b,0x92b8b1011a2b4221,0x8ab393a3012a2031,0x229230bbaa302024,
0x34a1318334432434,0xc3c02224baa43c2a,0x8b429134252b3944,0x341bb4113b139bb3,
0xbaba33114a320320,0x9123113322342350,0x289a49233933baab,0xa3cb94922a91331a,
0xc322a9a23b1199a1,0x999aaaa102babb29,0xa908bc3c0b0902bb,0x192baaa0bcca9aa2,
0x843ba20bb4c8ba4b,0x2cc2b3b3b2142acc,0xb183b2cc2cca3bc0,0x4a29c39b924bbcc2,
0xaa2333b321a39303,0x89b89c3a4b3b1142,0x82aa4bcc2b1b2bbc,0x0ccb3cc1b02b1811,
0x1b3a34b3ca022231,0x1c93944b0a4d12c0,0xb4ba49ba43cb22db,0x92cbaa23b92b3992,
0xb39105a24844a420,0xb003c4353ab9b2a9,0xa2142b3333344324,0x233a2400ba421324,
0xa48813141cb22320,0x0222290413c34330,0x9341423482213aba,0x4bca03a130128333,
0xbb08b90ab3b402aa,0xcb290a0ab2ac48ba,0x9834c23b8abba9b8,0xa2a031a3a1b81bb1,
0xa199200218a32109,0x02221a2313812148,0x234930a3a003398b,0x20b22232213a2213,
0x3a219dabb3aacb40,0xbc00c4d092c42bcb,0xbc22bc1babacbb1c,0x913ab4bb34bb0bb3,
0x2331309a82bc92c1,0x189230a24028cc1a,0x080b1c93b90a089c,0x2b2aa0a9b8ca82a1,
0x3b3b4a2bc8cba4b2,0xb9bac2b0403db329,0x3b803bb3c0ab9abd,0x2bb309abc0c3842c,
0x842202a422a3b433,0x93c9a139aa244b42,0x08434b4403984a33,0x443bb2baab2ab034,
0xccb92b091a3920c9,0x8a0a2b918a9ba8b0,0x3abaaa9b13309aa0,0xc2a01cb800b8000b,
0x91b9a4013bb39b43,0xd031ba91cacbcab2,0x913bbabc32aaa9c2,0xbb938aa2a8b0b1b2,
0x3b0113a0b4c4a35b,0x2ca3ba20b149329a,0xca0233c98abc21ba,0x8a0113aa913a29ba,
0xa0240abbc3cdb2b3,0x32a3b2b22034bbb9,0x0a2c9b94baab2041,0x1b20aa9bbacb8aa8,
0x191234c3c8a02012,0x3c230320a24022a2,0x02b923c933920183,0xaba32321203402b2,
0xc038253b932392b9,0x0390bb4b194d0233,0x24ba4b4ca20a90c1,0x019b2c82cb3aa91c,
0x339a332c24ab03b9,0x33332b3003420252,0x24214405aa23b94b,0x31b12332430a03b3,
0x228041b8a9bab3a2,0x0cb03bc35213238b,0x08c3dbb2c09bab9d,0x215b830ba02b93ba,
0xa0880a8a803899a1,0x98a90a18a08899a1,0x99a0099a231aa2aa,0x03990a9000a20809,
0xb3380bab13bcacc0,0x192abaa222b99988,0x01099ca0b19b02b0,0x313b223abbbaa0aa,
0x5ac22b223a40331b,0x30223c3bba4b9143,0x2bb244433343b133,0xb2b29cb34421314b,
0x12aa2b3180ccbbcc,0xd2bbb9bdb13cc4a4,0x9bbc24b4cb2cba08,0xbbc2bd4b0b22082e,
0xa22b33abc9ca1acb,0x3c02b82a23343300,0xa49b03dba2bba01c,0x9c33b32b29420a8e,
0xb390bbadc4dc143b,0xcabbcaab382934a2,0xacb4a933ca9bca4d,0x0b2a320a01bb92b3,
0x998a022c90da9aaa,0x01309b1eba3303a1,0x23324ab3bb9bca1d,0xbddcbc22321bb2a1,
0xba903a48aa21109a,0x8a0a19ba88a980aa,0x92a0a899b1390a98,0xb3981b99a0092088,
0x91a30b242ab8b32b,0x3ab0a80b1a0b0acb,0x9bba2b4bac0a08b2,0x220bb9a3b9ca9b3b,
0x43b339b14a323a4b,0x94b3203218aaa0aa,0xa03352cbc33b03a4,0x3333922289239214,
0xcba2802b410383aa,0xc430a24998290133,0x243b4b43b908b0bb,0xb9cc83332cb384b3,
0xb130b4344944a3a9,0x53a9a339b113a3ba,0x25aa933d30234a23,0x33b0bbb3b1ab232b,
0x43aa32230313022b,0x12902b3b094a9039,0x22bb4423aa2a9032,0x2390b11223422302,
0x334394cb33d1c443,0x3bcac44b3b440a4b,0xcb242dcccccb318d,0x3b1ab2aad3ddb2c4,
0xb0baaa991b1889a8,0x99190a18a80a9a91,0x2aaa0a8a00a1a2aa,0x880200ba12a28919,
0x3323b21cc02c0193,0x202103ab2a4334b1,0x0aa3833402921233,0xbba3a22112ab99a9,
0x5ab98b29b33882b0,0x30224220ba432212,0x2331341521a3a944,0x00b3803144338202,
0xaa13c9aba1bba8c3,0x298bb3aa99b390b0,0x0992cb4bbb9a9183,0xba8a2a9ab9cba91b,
0x9bab3c3c43baacab,0x800b8ab3b0bb22aa,0x323b0abcb82289b3,0x21180232b4b3a4b3,
0xe421c5235b441cbb,0xa41a3b3b20ccc22a,0x43bcac4c4444a4c4,0x231a332abc13043a,
0x882a4a3021aa31bc,0xb2abbaabaabc91c3,0x9b3bb200304b19a5,0xa90b0231bbb31c93,
};

static int bbox_head_multi_level_share_convs_2_0_quant1_threshold[64 * 14] =
{ // torch.Size([64, 14])
-1049, -684, -502, -365, -274, -182, -91, 0, 90, 182, 273, 410, 592, 957,
-812, -482, -317, -193, -110, -27, 54, 137, 220, 302, 385, 509, 674, 1005,
-712, -472, -352, -261, -201, -141, -81, -21, 38, 98, 158, 248, 368, 608,
-958, -553, -350, -198, -97, 3, 105, 206, 307, 408, 510, 662, 864, 1269,
-610, -361, -236, -143, -81, -18, 43, 105, 168, 230, 292, 386, 510, 760,
-920, -591, -426, -302, -220, -138, -55, 26, 109, 191, 273, 397, 562, 891,
-659, -379, -239, -133, -63, 6, 76, 146, 216, 286, 356, 462, 602, 882,
-1040, -694, -521, -391, -305, -218, -132, -45, 40, 127, 213, 343, 516, 862,
-1111, -692, -483, -325, -221, -116, -11, 92, 197, 302, 406, 564, 773, 1192,
-888, -598, -453, -345, -272, -200, -128, -55, 16, 88, 161, 269, 414, 704,
-810, -485, -322, -200, -119, -37, 43, 124, 205, 287, 368, 490, 653, 978,
-836, -505, -340, -216, -133, -50, 32, 114, 197, 280, 362, 486, 652, 983,
-820, -505, -348, -230, -152, -73, 5, 83, 162, 241, 319, 437, 595, 909,
-815, -542, -406, -303, -235, -167, -98, -30, 37, 105, 174, 276, 412, 685,
-1035, -665, -480, -342, -249, -157, -64, 27, 120, 212, 305, 443, 628, 998,
-620, -358, -227, -129, -64, 1, 66, 131, 197, 262, 327, 426, 556, 818,
-739, -413, -249, -127, -46, 35, 117, 198, 280, 361, 443, 565, 728, 1055,
-1130, -714, -506, -350, -246, -142, -38, 65, 169, 273, 377, 533, 741, 1157,
-1225, -860, -677, -540, -449, -358, -267, -175, -84, 6, 97, 234, 417, 782,
-981, -644, -476, -350, -265, -181, -97, -13, 70, 155, 239, 365, 533, 870,
-669, -416, -289, -194, -131, -68, -4, 58, 121, 185, 248, 343, 470, 723,
-1011, -600, -395, -240, -138, -35, 67, 170, 273, 376, 478, 633, 838, 1249,
-663, -377, -234, -127, -56, 14, 86, 157, 228, 300, 371, 478, 621, 906,
-1025, -703, -542, -421, -341, -260, -180, -99, -19, 61, 141, 262, 423, 745,
-1136, -741, -543, -395, -297, -198, -99, 0, 97, 196, 295, 443, 640, 1035,
-1078, -722, -545, -411, -322, -233, -144, -55, 33, 121, 210, 344, 522, 877,
-1250, -821, -607, -447, -340, -233, -126, -19, 87, 195, 302, 462, 676, 1104,
-889, -506, -315, -172, -76, 19, 114, 210, 306, 401, 497, 640, 832, 1214,
-1145, -732, -526, -371, -268, -165, -61, 41, 144, 247, 351, 505, 712, 1125,
-878, -581, -433, -322, -248, -174, -100, -26, 48, 122, 196, 307, 455, 751,
-727, -424, -272, -159, -83, -7, 68, 143, 219, 295, 370, 484, 636, 938,
-991, -684, -530, -415, -338, -262, -185, -108, -31, 44, 121, 236, 390, 697,
-749, -495, -368, -273, -210, -146, -83, -20, 43, 106, 170, 265, 391, 645,
-1050, -700, -525, -394, -306, -219, -131, -44, 43, 130, 218, 349, 524, 874,
-879, -536, -364, -236, -150, -64, 21, 106, 192, 278, 364, 492, 664, 1007,
-901, -600, -449, -336, -260, -185, -110, -34, 40, 116, 191, 304, 455, 757,
-1083, -731, -555, -424, -336, -248, -160, -72, 15, 103, 191, 323, 499, 850,
-295, -211, -169, -138, -117, -96, -75, -54, -33, -12, 8, 39, 81, 165,
-961, -651, -497, -381, -304, -226, -149, -72, 5, 82, 159, 275, 430, 739,
-636, -379, -250, -154, -89, -25, 38, 103, 167, 231, 296, 392, 521, 778,
-1094, -724, -539, -400, -308, -216, -123, -31, 61, 153, 246, 385, 569, 939,
-936, -499, -281, -117, -8, 100, 209, 318, 427, 536, 646, 809, 1028, 1464,
-1008, -637, -451, -312, -219, -126, -33, 59, 152, 245, 337, 477, 662, 1034,
-900, -579, -419, -299, -219, -139, -59, 20, 100, 180, 260, 380, 540, 860,
-723, -487, -369, -280, -221, -162, -103, -44, 14, 73, 132, 220, 338, 574,
-827, -473, -296, -164, -75, 12, 101, 189, 278, 366, 454, 587, 764, 1118,
-1329, -908, -697, -539, -434, -329, -223, -118, -13, 92, 197, 355, 565, 987,
-1151, -766, -574, -429, -333, -237, -141, -45, 50, 146, 243, 387, 579, 964,
-1296, -885, -680, -526, -423, -320, -217, -115, -12, 90, 193, 347, 552, 963,
-1644, -1127, -869, -675, -546, -416, -287, -158, -28, 100, 229, 423, 681, 1199,
-512, -340, -254, -190, -147, -104, -61, -18, 24, 67, 110, 174, 260, 432,
-808, -555, -429, -334, -270, -207, -144, -81, -17, 45, 108, 203, 329, 583,
-923, -584, -415, -287, -203, -118, -33, 50, 135, 220, 305, 432, 601, 940,
-990, -645, -472, -343, -257, -170, -84, 1, 87, 174, 260, 389, 562, 907,
-890, -534, -357, -224, -135, -46, 42, 131, 219, 308, 397, 530, 708, 1063,
-803, -464, -295, -168, -83, 1, 86, 170, 255, 340, 424, 551, 721, 1059,
-1370, -913, -685, -513, -399, -285, -171, -57, 57, 171, 285, 456, 685, 1141,
-675, -446, -332, -247, -190, -133, -75, -18, 38, 95, 152, 237, 351, 580,
-644, -383, -253, -155, -90, -24, 40, 105, 170, 236, 301, 399, 529, 790,
-795, -425, -240, -102, -9, 82, 175, 267, 359, 452, 544, 683, 868, 1237,
-1031, -709, -548, -428, -347, -267, -186, -106, -25, 54, 135, 256, 417, 739,
-783, -494, -350, -241, -169, -96, -24, 47, 119, 192, 264, 373, 517, 806,
-371, -228, -156, -102, -67, -31, 4, 40, 76, 111, 147, 201, 273, 416,
-730, -477, -351, -257, -193, -130, -67, -4, 58, 121, 184, 279, 405, 658,
};

static uint64_t bbox_head_multi_level_share_convs_2_0_conv2_weight[64 * 9] =
{ // torch.Size([64, 3, 3, 1])
0x0, 0x2, 0x0, 0x1, 0x2, 0x2, 0x2, 0x2, 0x2,
0xa, 0xb, 0xa, 0xb, 0xb, 0x8, 0x9, 0xa, 0x2,
0xc, 0x4, 0x3, 0x2, 0x4, 0xc, 0x3, 0xb, 0xc,
0xb, 0xa, 0xb, 0xb, 0x0, 0x0, 0xc, 0xc, 0xc,
0x0, 0x9, 0x8, 0xa, 0xb, 0xa, 0x0, 0xb, 0xa,
0x8, 0xb, 0x8, 0x2, 0x0, 0x1, 0x4, 0x4, 0x5,
0xc, 0xb, 0xe, 0x4, 0x4, 0xa, 0x1, 0x3, 0xc,
0x9, 0x3, 0x4, 0x8, 0xa, 0x3, 0x1, 0x3, 0x5,
0xa, 0xb, 0xc, 0xa, 0xb, 0xa, 0xc, 0xb, 0x1,
0xb, 0x2, 0xb, 0x3, 0x3, 0x3, 0x4, 0x4, 0x4,
0xa, 0xb, 0xd, 0x3, 0xa, 0xc, 0x5, 0xb, 0xc,
0x1, 0xa, 0xa, 0xa, 0xb, 0xa, 0xb, 0x8, 0x9,
0xc, 0xb, 0x2, 0xb, 0xb, 0x2, 0xd, 0xc, 0xb,
0xa, 0x4, 0x3, 0xb, 0x4, 0xb, 0x9, 0x5, 0x3,
0xd, 0xc, 0xd, 0xa, 0x3, 0xb, 0x0, 0x2, 0xb,
0x9, 0xc, 0xc, 0x1, 0xa, 0xb, 0xa, 0xb, 0xc,
0xc, 0x4, 0x2, 0x4, 0x3, 0xd, 0x3, 0xd, 0xd,
0x9, 0x1, 0xb, 0x0, 0xb, 0xd, 0xb, 0xd, 0xc,
0xb, 0x5, 0x3, 0xa, 0x5, 0x2, 0x2, 0x5, 0xc,
0xe, 0xc, 0xd, 0xa, 0x4, 0xa, 0x0, 0x0, 0x9,
0xb, 0xa, 0x9, 0xb, 0xa, 0x0, 0xa, 0xb, 0xc,
0xc, 0xb, 0xc, 0x0, 0x3, 0x0, 0xc, 0xc, 0xc,
0x2, 0x9, 0x2, 0xd, 0xc, 0xc, 0x1, 0xb, 0xb,
0x3, 0x3, 0x3, 0x4, 0x4, 0x0, 0x8, 0x9, 0xc,
0x5, 0x4, 0x9, 0x5, 0x9, 0xc, 0x9, 0x3, 0xc,
0x3, 0x5, 0x5, 0xb, 0x9, 0x4, 0x8, 0x2, 0x2,
0xa, 0xc, 0x9, 0xd, 0xb, 0x2, 0xd, 0x9, 0x3,
0xc, 0xb, 0xa, 0xb, 0x8, 0x1, 0xb, 0xb, 0xc,
0xc, 0xc, 0xd, 0xc, 0xc, 0xb, 0x4, 0x4, 0x3,
0x2, 0x2, 0x3, 0x9, 0x0, 0x3, 0x1, 0x3, 0x4,
0xb, 0xb, 0x2, 0xc, 0xc, 0xc, 0x2, 0x2, 0xb,
0x3, 0x4, 0x6, 0xb, 0xd, 0x2, 0x4, 0xc, 0x3,
0x4, 0x3, 0x2, 0x4, 0x0, 0x1, 0x3, 0x0, 0x0,
0x5, 0x3, 0x4, 0x3, 0x0, 0x3, 0x3, 0x2, 0x3,
0xd, 0xb, 0xc, 0xb, 0x3, 0x2, 0xc, 0x3, 0x3,
0xa, 0x0, 0x0, 0x3, 0x3, 0x3, 0x2, 0x3, 0x3,
0x3, 0x4, 0xb, 0x3, 0x4, 0xc, 0x9, 0x5, 0x8,
0xc, 0x1, 0x3, 0xb, 0x4, 0x5, 0xa, 0x3, 0x5,
0x4, 0xb, 0xa, 0x5, 0x3, 0xb, 0x4, 0x3, 0x1,
0x4, 0xc, 0x2, 0xb, 0xd, 0x3, 0xb, 0x0, 0x4,
0xa, 0x2, 0xa, 0xa, 0x3, 0xa, 0xe, 0xb, 0x9,
0x4, 0x2, 0x2, 0x1, 0xd, 0xc, 0xa, 0xc, 0xa,
0x4, 0x4, 0x4, 0x3, 0x1, 0x0, 0x0, 0x8, 0x0,
0x1, 0x2, 0x0, 0x3, 0x2, 0x2, 0x2, 0x2, 0x1,
0x3, 0x3, 0x2, 0x2, 0x2, 0x0, 0x4, 0x3, 0x1,
0xc, 0xa, 0x2, 0x3, 0x2, 0xb, 0xc, 0xd, 0xd,
0x4, 0x4, 0x4, 0x4, 0xa, 0x2, 0x4, 0x4, 0x4,
0x0, 0x3, 0x4, 0x2, 0x1, 0x4, 0x2, 0x4, 0x5,
0x5, 0x3, 0x1, 0x1, 0x1, 0xb, 0x5, 0x3, 0x2,
0x5, 0x4, 0x5, 0x3, 0x2, 0x3, 0x2, 0x1, 0x2,
0x0, 0xa, 0x0, 0x9, 0xa, 0x3, 0x1, 0x8, 0x5,
0xb, 0x3, 0xb, 0x2, 0x4, 0x8, 0x2, 0x5, 0x3,
0x3, 0xc, 0xc, 0x4, 0xb, 0xc, 0x4, 0xc, 0xd,
0xc, 0xc, 0x9, 0xc, 0xd, 0x3, 0x4, 0x4, 0x4,
0xc, 0x9, 0x3, 0xc, 0x0, 0x0, 0xd, 0xa, 0xa,
0x3, 0x9, 0x2, 0xb, 0xd, 0x9, 0xb, 0xc, 0x3,
0xb, 0xc, 0xd, 0x9, 0x4, 0x4, 0x4, 0x6, 0x5,
0x1, 0x2, 0x1, 0x2, 0x3, 0x2, 0x0, 0x2, 0x0,
0xa, 0xc, 0x4, 0x3, 0xd, 0xc, 0x4, 0x2, 0xc,
0xb, 0xc, 0xb, 0x8, 0xc, 0xc, 0x3, 0x2, 0x3,
0x3, 0x3, 0xb, 0x4, 0x4, 0x8, 0x2, 0x3, 0x8,
0xc, 0xc, 0xb, 0x3, 0x4, 0x4, 0x4, 0x4, 0x2,
0x3, 0x3, 0x3, 0xb, 0xc, 0xb, 0xc, 0xe, 0xd,
0x8, 0xb, 0xb, 0x4, 0x5, 0x5, 0xb, 0xb, 0x2,
};

static int bbox_head_multi_level_share_convs_2_0_relu2_threshold[64 * 7] =
{ // torch.Size([64, 7])
0, 15, 31, 47, 71, 102, 166,
0, 21, 43, 64, 97, 140, 226,
36, 76, 116, 155, 215, 294, 453,
31, 54, 77, 100, 135, 181, 274,
1, 19, 37, 54, 81, 116, 186,
-74, 1, 78, 154, 269, 423, 729,
28, 119, 209, 300, 436, 617, 979,
19, 58, 96, 135, 192, 269, 423,
6, 41, 75, 110, 162, 231, 369,
0, 36, 73, 110, 166, 240, 388,
41, 118, 195, 272, 387, 541, 848,
-2, 21, 46, 71, 108, 158, 257,
-5, 34, 75, 115, 176, 257, 419,
40, 104, 168, 232, 327, 455, 710,
-100, -37, 24, 87, 181, 306, 556,
0, 44, 88, 132, 199, 287, 464,
97, 159, 220, 282, 374, 497, 743,
-9, 34, 78, 123, 190, 279, 456,
-21, 42, 105, 168, 263, 390, 643,
-14, 38, 91, 144, 224, 330, 542,
14, 40, 66, 91, 129, 181, 283,
-51, 14, 80, 146, 245, 377, 641,
9, 50, 91, 131, 192, 273, 436,
3, 31, 60, 88, 130, 187, 300,
52, 125, 197, 269, 378, 523, 813,
28, 82, 136, 190, 271, 379, 595,
3, 44, 86, 127, 190, 272, 438,
26, 53, 80, 106, 147, 200, 307,
-54, -10, 32, 76, 142, 229, 404,
7, 31, 55, 79, 115, 163, 259,
-8, 33, 74, 116, 178, 261, 427,
78, 148, 219, 289, 395, 536, 819,
14, 46, 78, 110, 159, 223, 352,
34, 69, 104, 140, 192, 263, 404,
-67, -7, 52, 111, 201, 321, 560,
-1, 16, 35, 54, 82, 119, 194,
-1, 45, 93, 141, 212, 308, 498,
-18, 178, 375, 572, 867, 1261, 2048,
-2, 30, 62, 94, 143, 208, 337,
2, 37, 72, 106, 159, 228, 368,
-1, 35, 73, 111, 167, 243, 394,
-1, 35, 73, 110, 166, 241, 391,
-24, 7, 40, 72, 120, 185, 314,
0, 16, 33, 49, 73, 106, 171,
8, 34, 60, 86, 125, 177, 281,
56, 111, 165, 220, 302, 411, 629,
65, 106, 148, 189, 251, 334, 500,
14, 62, 109, 156, 227, 321, 510,
26, 74, 123, 171, 243, 340, 533,
24, 87, 149, 212, 306, 431, 682,
24, 52, 80, 108, 150, 206, 318,
8, 50, 92, 134, 197, 281, 449,
-57, 2, 63, 123, 214, 334, 576,
53, 111, 168, 225, 312, 426, 656,
21, 55, 89, 124, 175, 244, 381,
20, 58, 97, 135, 192, 268, 421,
108, 240, 371, 502, 698, 961, 1485,
0, 12, 24, 37, 56, 81, 132,
11, 44, 78, 111, 161, 228, 362,
2, 32, 63, 93, 139, 200, 321,
9, 36, 64, 91, 133, 188, 298,
-13, 24, 62, 100, 157, 233, 385,
143, 361, 580, 798, 1126, 1563, 2437,
-17, 45, 108, 171, 265, 391, 643,
};

static uint64_t bbox_head_multi_level_cls_0_conv1_weight[1 * 1*4] =
{ // torch.Size([1, 1, 1, 64])
0xab2be3b2bb3883b3,0x15cc4b522bb34cd3,0xa24824434523282c,0x2bc49b42bd45c244,
};

static int bbox_head_multi_level_cls_0_quant1_threshold[1 * 14] =
{ // torch.Size([1, 14])
-2676, -1748, -1284, -937, -705, -473, -241, -9, 222, 454, 686, 1034, 1498, 2425,
};

static uint64_t bbox_head_multi_level_cls_0_conv2_weight[1 * 9] =
{ // torch.Size([1, 3, 3, 1])
0x3, 0x4, 0x3, 0x4, 0x6, 0x4, 0x3, 0x5, 0x2,
};

static int bbox_head_multi_level_cls_0_quant2_threshold[1 * 14] =
{ // torch.Size([1, 14])
-7686, -4923, -3541, -2505, -1814, -1123, -432, 258, 949, 1640, 2331, 3367, 4749, 7513,
};

static uint64_t bbox_head_multi_level_cls_1_conv1_weight[1 * 1*4] =
{ // torch.Size([1, 1, 1, 64])
0x4454bb21c344d345,0xd40c3acb4bc24b4d,0x54c51cbd04caa5d9,0x383cdd56c35cd35d,
};

static int bbox_head_multi_level_cls_1_quant1_threshold[1 * 14] =
{ // torch.Size([1, 14])
-3344, -2181, -1600, -1164, -873, -582, -292, -1, 289, 580, 870, 1306, 1888, 3050,
};

static uint64_t bbox_head_multi_level_cls_1_conv2_weight[1 * 9] =
{ // torch.Size([1, 3, 3, 1])
0x4, 0x5, 0x5, 0x5, 0x6, 0x5, 0x4, 0x6, 0x5,
};

static int bbox_head_multi_level_cls_1_quant2_threshold[1 * 14] =
{ // torch.Size([1, 14])
-9480, -6040, -4320, -3030, -2169, -1309, -449, 410, 1270, 2130, 2990, 4280, 6001, 9441,
};

static uint64_t bbox_head_multi_level_cls_2_conv1_weight[1 * 1*4] =
{ // torch.Size([1, 1, 1, 64])
0xa9998a5a02b0b480,0x9a13599b889a621b,0xb83a1bbb0a33a0ba,0x90a03b8b0a452a04,
};

static int bbox_head_multi_level_cls_2_quant1_threshold[1 * 14] =
{ // torch.Size([1, 14])
-1014, -626, -431, -286, -188, -91, 5, 102, 199, 296, 393, 539, 733, 1122,
};

static uint64_t bbox_head_multi_level_cls_2_conv2_weight[1 * 9] =
{ // torch.Size([1, 3, 3, 1])
0xd, 0xe, 0xc, 0xe, 0xe, 0xe, 0xe, 0xd, 0xe,
};

static int bbox_head_multi_level_cls_2_quant2_threshold[1 * 14] =
{ // torch.Size([1, 14])
-15366, -9818, -7045, -4964, -3578, -2191, -804, 582, 1969, 3356, 4743, 6823, 9597, 15144,
};

static uint64_t bbox_head_multi_level_bbox_0_conv1_weight[4 * 1*4] =
{ // torch.Size([4, 1, 1, 64])
0xb215ab02bd243238,0x423aa482d1cc2033,0x8a93333a11430bba,0xaa1243a139c23402,
0x3333c4323919b23a,0x1a3a013213ab03aa,0x1c08a20bb31344a2,0xd01913d22b324000,
0x32aa4c2a994a0b30,0xc1462c3233b0a558,0x13abc223b3ba9b15,0xb123abc455c9a422,
0x8cc94c4aa931a9c2,0xc246020324a9a543,0x93abda24bab9ab06,0xb3232bc445b2a123,
};

static int bbox_head_multi_level_bbox_0_quant1_threshold[4 * 14] =
{ // torch.Size([4, 14])
-1158, -727, -512, -351, -243, -135, -28, 79, 187, 294, 402, 563, 779, 1209,
-631, -358, -221, -119, -50, 17, 85, 154, 222, 290, 359, 461, 598, 871,
-1356, -749, -446, -218, -67, 84, 236, 388, 539, 691, 843, 1070, 1374, 1981,
-1484, -859, -546, -311, -155, 0, 157, 313, 469, 626, 782, 1017, 1330, 1955,
};

static uint64_t bbox_head_multi_level_bbox_0_conv2_weight[4 * 9] =
{ // torch.Size([4, 3, 3, 1])
0xb, 0xa, 0x4, 0xb, 0xb, 0x6, 0xa, 0x9, 0x4,
0xb, 0xd, 0xa, 0x8, 0x0, 0x1, 0x3, 0x6, 0x2,
0xa, 0xc, 0xa, 0xa, 0xb, 0xa, 0xa, 0xb, 0xa,
0xa, 0xb, 0xa, 0xa, 0xb, 0xa, 0xa, 0xb, 0xa,
};

static int bbox_head_multi_level_bbox_0_quant2_threshold[4 * 14] =
{ // torch.Size([4, 14])
-654, -267, -74, 70, 166, 263, 360, 456, 553, 649, 746, 891, 1084, 1470,
-455, -190, -57, 41, 108, 174, 240, 307, 373, 439, 505, 605, 737, 1003,
-560, -380, -290, -223, -178, -133, -88, -43, 1, 46, 90, 158, 248, 427,
-626, -461, -379, -317, -276, -234, -193, -152, -110, -69, -28, 33, 115, 280,
};

static uint64_t bbox_head_multi_level_bbox_1_conv1_weight[4 * 1*4] =
{ // torch.Size([4, 1, 1, 64])
0x13bb49d342080bb0,0x29cc14429bb2cc49,0x0b82ac0009cc5aa3,0x2c0b22090cb292a0,
0xbaccb93d83c48023,0x9a12429aacbc44a0,0xa2acba0043ba3223,0x2d43292898bbb228,
0x233a092c3a0a69a0,0x5bb3a38b52b10b25,0x81213cb514adcabb,0x32ba5541aa013a94,
0x32b3b2a40a22d930,0xdbb23032dc1cc49d,0x9a8b1a2e9ca33a22,0xd4b2dda82332b1bc,
};

static int bbox_head_multi_level_bbox_1_quant1_threshold[4 * 14] =
{ // torch.Size([4, 14])
-577, -363, -256, -176, -123, -69, -16, 37, 90, 143, 197, 277, 384, 597,
-777, -519, -390, -293, -229, -165, -100, -36, 28, 92, 157, 254, 382, 640,
-1209, -729, -489, -310, -190, -70, 49, 169, 289, 408, 528, 708, 948, 1427,
-1554, -1076, -836, -657, -537, -418, -298, -178, -59, 60, 180, 359, 598, 1077,
};

static uint64_t bbox_head_multi_level_bbox_1_conv2_weight[4 * 9] =
{ // torch.Size([4, 3, 3, 1])
0x3, 0xa, 0xd, 0x3, 0x2, 0xe, 0x3, 0xa, 0xd,
0x2, 0x8, 0x1, 0x3, 0x6, 0x5, 0x3, 0x0, 0x2,
0xa, 0xb, 0xb, 0xb, 0xc, 0xc, 0xa, 0xc, 0xb,
0x2, 0x3, 0x3, 0x3, 0x4, 0x4, 0x2, 0x4, 0x3,
};

static int bbox_head_multi_level_bbox_1_quant2_threshold[4 * 14] =
{ // torch.Size([4, 14])
-1491, -794, -445, -184, -10, 163, 338, 512, 686, 860, 1035, 1296, 1644, 2341,
-1187, -624, -343, -132, 8, 148, 289, 429, 570, 711, 851, 1062, 1343, 1906,
-1085, -744, -573, -445, -360, -274, -189, -103, -18, 66, 152, 280, 450, 792,
-1101, -783, -623, -504, -424, -344, -265, -185, -106, -26, 53, 172, 332, 650,
};

static uint64_t bbox_head_multi_level_bbox_2_conv1_weight[4 * 1*4] =
{ // torch.Size([4, 1, 1, 64])
0x0184bcb935951a25,0xdb9318b134dbcc33,0x9281c3c320cb1d99,0xb2a32913dbbc9001,
0xbd4843b00c08aa69,0xb393bcca2ab0bb02,0x0c0c11404d301aba,0x2d9b23c882cba93a,
0x2c2434324c1543cc,0xddab4c524bb543db,0x9443b00041b3b522,0xab4c4b1bc3a3d344,
0x3d53533b494a32dc,0xcc34445829b233ca,0x14a5d2b044ccb898,0x03ad48cabbb2d243,
};

static int bbox_head_multi_level_bbox_2_quant1_threshold[4 * 14] =
{ // torch.Size([4, 14])
-1281, -846, -629, -466, -358, -249, -141, -32, 75, 184, 292, 455, 672, 1106,
-1161, -791, -606, -467, -374, -282, -189, -97, -4, 87, 180, 318, 503, 874,
-1201, -733, -500, -324, -208, -91, 25, 142, 259, 376, 493, 668, 901, 1369,
-1332, -841, -595, -410, -288, -165, -42, 80, 203, 326, 449, 633, 879, 1370,
};

static uint64_t bbox_head_multi_level_bbox_2_conv2_weight[4 * 9] =
{ // torch.Size([4, 3, 3, 1])
0xc, 0xd, 0xd, 0xc, 0xe, 0xd, 0xb, 0xe, 0xd,
0xc, 0xc, 0xc, 0xd, 0xe, 0xe, 0xc, 0xd, 0xc,
0xb, 0xc, 0xc, 0xc, 0xd, 0xc, 0xb, 0xd, 0xd,
0xc, 0xc, 0xb, 0xc, 0xd, 0xd, 0xc, 0xc, 0xc,
};

static int bbox_head_multi_level_bbox_2_quant2_threshold[4 * 14] =
{ // torch.Size([4, 14])
-1278, -585, -239, 20, 194, 367, 540, 713, 887, 1060, 1233, 1493, 1840, 2533,
-1405, -834, -549, -335, -192, -49, 92, 235, 378, 521, 663, 878, 1163, 1734,
-3293, -2246, -1722, -1329, -1068, -806, -544, -282, -20, 241, 502, 895, 1419, 2466,
-3026, -2154, -1719, -1392, -1174, -957, -739, -521, -303, -86, 131, 458, 894, 1765,
};

static uint64_t bbox_head_multi_level_obj_0_conv1_weight[1 * 1*4] =
{ // torch.Size([1, 1, 1, 64])
0xbac039cca2bb5ca3,0xbcb2dbdcaa23d92b,0x24562cd35cbca53b,0x13cc852bb23549cd,
};

static int bbox_head_multi_level_obj_0_quant1_threshold[1 * 14] =
{ // torch.Size([1, 14])
-2937, -2099, -1681, -1367, -1157, -948, -739, -530, -320, -111, 97, 411, 830, 1667,
};

static uint64_t bbox_head_multi_level_obj_0_conv2_weight[1 * 9] =
{ // torch.Size([1, 3, 3, 1])
0x1, 0x3, 0x2, 0x3, 0x6, 0x2, 0x1, 0x2, 0x2,
};

static int bbox_head_multi_level_obj_0_quant2_threshold[1 * 14] =
{ // torch.Size([1, 14])
-2393, -1292, -741, -328, -53, 222, 497, 772, 1048, 1323, 1598, 2011, 2562, 3663,
};

static uint64_t bbox_head_multi_level_obj_1_conv1_weight[1 * 1*4] =
{ // torch.Size([1, 1, 1, 64])
0xd4a314923494aad6,0x3dcac2a40aa809b3,0x6db3d92c1cb34c62,0x4ab5905533d234d3,
};

static int bbox_head_multi_level_obj_1_quant1_threshold[1 * 14] =
{ // torch.Size([1, 14])
-1387, -993, -796, -648, -549, -451, -352, -253, -155, -56, 41, 189, 386, 781,
};

static uint64_t bbox_head_multi_level_obj_1_conv2_weight[1 * 9] =
{ // torch.Size([1, 3, 3, 1])
0x3, 0x2, 0x0, 0x1, 0x6, 0x9, 0x9, 0x1, 0xa,
};

static int bbox_head_multi_level_obj_1_quant2_threshold[1 * 14] =
{ // torch.Size([1, 14])
-2370, -1320, -795, -401, -139, 123, 385, 648, 910, 1173, 1435, 1829, 2354, 3404,
};

static uint64_t bbox_head_multi_level_obj_2_conv1_weight[1 * 1*4] =
{ // torch.Size([1, 1, 1, 64])
0xc5cb9c264c5ac493,0xc552a40dd0044da0,0x6a302dd59bd3d2d6,0x0d4cb5bc35d3252a,
};

static int bbox_head_multi_level_obj_2_quant1_threshold[1 * 14] =
{ // torch.Size([1, 14])
-889, -579, -424, -308, -230, -153, -75, 1, 79, 157, 234, 350, 506, 816,
};

static uint64_t bbox_head_multi_level_obj_2_conv2_weight[1 * 9] =
{ // torch.Size([1, 3, 3, 1])
0x4, 0x3, 0x1, 0x1, 0x6, 0x3, 0x2, 0x3, 0x2,
};

static int bbox_head_multi_level_obj_2_quant2_threshold[1 * 14] =
{ // torch.Size([1, 14])
-4711, -3146, -2363, -1776, -1385, -993, -602, -211, 180, 571, 962, 1549, 2332, 3897,
};

static uint64_t bbox_head_multi_level_kps_0_conv1_weight[10 * 1*4] =
{ // torch.Size([10, 1, 1, 64])
0xbc9c94aad4a31242,0xb98b11133b5008bb,0x52239ba8293201a9,0x01aacc29bba9bda0,
0x13b2c4322122382b,0x090aa0138c3a3302,0xbc822932b2835220,0xd01a11da8a324a01,
0x250d2b2ca4a4b911,0xda933c834140a9ba,0x5198bcb1b93b9a13,0x02aac3000139bc02,
0x33b0c4323121302a,0x090aa013ac3a1382,0xbc823a31b2935310,0xd11918da0b224a01,
0xb39d081bd3a5a241,0xc9993b03485b99ab,0x6009bb999b4a0090,0x21aac218aa29ada9,
0x3102c333298bb238,0x183aac0983933220,0xbc30112ba2224130,0xd12182c1aa024802,
0x34140d225c0a0bcb,0x30039aaab1d2a843,0xdaa93a20a29a0b08,0xa921438033103532,
0x9b9b4cbbc13a3bc0,0xb09423038c8aaa12,0xa4a2cb0529bbc1b2,0x5b9c124233b9c11b,
0x340d3b2c23a5b081,0xca933c03425a90ba,0x51a0baa1bb3b0a23,0x339ac3a00939acaa,
0x13a3c43349a1b341,0x301cab2b9322229a,0x2c2a448da1335939,0xd3149acabb325a93,
};

static int bbox_head_multi_level_kps_0_quant1_threshold[10 * 14] =
{ // torch.Size([10, 14])
-1329, -846, -605, -423, -303, -182, -61, 59, 180, 300, 421, 602, 844, 1327,
-973, -579, -382, -234, -135, -37, 61, 160, 258, 357, 455, 603, 800, 1195,
-1292, -799, -553, -368, -245, -122, 0, 124, 247, 370, 493, 678, 924, 1417,
-981, -592, -397, -251, -153, -56, 41, 138, 236, 333, 430, 577, 771, 1161,
-1418, -878, -608, -405, -270, -135, 0, 134, 269, 404, 539, 742, 1012, 1552,
-881, -546, -378, -252, -168, -84, 0, 83, 167, 251, 335, 461, 629, 964,
-1396, -907, -663, -480, -357, -235, -113, 8, 130, 252, 374, 557, 802, 1290,
-1428, -914, -657, -465, -336, -208, -79, 48, 177, 305, 433, 626, 883, 1397,
-1271, -778, -532, -347, -224, -101, 21, 144, 268, 391, 514, 699, 945, 1438,
-1535, -969, -687, -474, -333, -191, -50, 90, 232, 373, 515, 727, 1010, 1576,
};

static uint64_t bbox_head_multi_level_kps_0_conv2_weight[10 * 9] =
{ // torch.Size([10, 3, 3, 1])
0x1, 0xa, 0xd, 0x2, 0x0, 0xe, 0x9, 0xa, 0xd,
0xc, 0xd, 0xc, 0xa, 0xa, 0xa, 0x3, 0x5, 0x2,
0x1, 0xa, 0xe, 0x2, 0xa, 0xe, 0xa, 0xb, 0xd,
0xc, 0xd, 0xc, 0xa, 0x8, 0xa, 0x3, 0x5, 0x2,
0x8, 0xb, 0xd, 0x2, 0xa, 0xe, 0xa, 0xb, 0xd,
0xb, 0xd, 0xb, 0x2, 0x1, 0x2, 0x4, 0x6, 0x3,
0x9, 0x2, 0x5, 0x9, 0x0, 0x6, 0x9, 0x2, 0x5,
0x3, 0x4, 0x3, 0xb, 0xb, 0xb, 0xc, 0xe, 0xc,
0x0, 0xa, 0xd, 0x2, 0xa, 0xe, 0x0, 0xa, 0xd,
0xb, 0xc, 0xb, 0x3, 0x3, 0x3, 0x4, 0x6, 0x4,
};

static int bbox_head_multi_level_kps_0_quant2_threshold[10 * 14] =
{ // torch.Size([10, 14])
-2484, -1417, -883, -483, -216, 50, 317, 584, 850, 1117, 1384, 1784, 2318, 3385,
-1622, -952, -617, -366, -199, -31, 135, 303, 470, 637, 805, 1056, 1391, 2060,
-3266, -2176, -1630, -1221, -949, -676, -404, -131, 141, 413, 686, 1095, 1640, 2730,
-1528, -897, -581, -345, -187, -29, 128, 286, 443, 601, 759, 996, 1311, 1943,
-2687, -1676, -1170, -791, -538, -285, -33, 219, 472, 725, 977, 1356, 1862, 2873,
-1818, -1180, -861, -622, -462, -303, -143, 16, 175, 335, 494, 734, 1053, 1691,
-2593, -1508, -965, -558, -287, -16, 255, 526, 797, 1069, 1340, 1747, 2290, 3375,
-2885, -2000, -1557, -1225, -1004, -783, -561, -340, -119, 102, 323, 655, 1098, 1983,
-3196, -2112, -1570, -1163, -892, -621, -350, -80, 190, 461, 732, 1139, 1681, 2765,
-2815, -1949, -1516, -1191, -974, -757, -541, -324, -107, 108, 325, 650, 1083, 1949,
};

static uint64_t bbox_head_multi_level_kps_1_conv1_weight[10 * 1*4] =
{ // torch.Size([10, 1, 1, 64])
0xa1b34ac3322aadb2,0xa29c22d8ab40a92a,0x29a12b8a9ac832a4,0x1c4aaba1a403aa09,
0x1ab3114b03d22a02,0x22a838aa2bab3310,0xba998c02543aa033,0x2cda2329abccb118,
0x203ac943c0028548,0xa92d08c291cb24b8,0x222a93a8aa4402ac,0xa432ab01a23ca1a0,
0xa03a88c31a5ba10a,0x90a0b033a332ab89,0x3a01158bdcc028ab,0xa45aaaa023433a20,
0x88a342b83919aec1,0x023488db1a522b39,0x8bb23c2810c0a1b5,0x2b2b18a004a49080,
0xb04c11cb0a5b82ab,0x2a00c02183148c11,0x22921401cbcc110b,0x9442810013342a01,
0x803ac14bb88a263b,0x1aa4b95124ab13a2,0xa10a0301811abb2c,0x03ba12183cab2230,
0x00c2a83000c3b033,0xb2b3423abc3d25ba,0xa02bac9a401229a3,0x8bbbaaa092abb110,
0x2ab940ba4ba01dc1,0x1a35203a1b43ac30,0xab941c21322b1904,0x2aa223092ba420a9,
0x08c1a8301ad3a222,0xa213531bbc8c15ba,0xa12cad8a413329b3,0x0ab9ba80919ab2a8,
};

static int bbox_head_multi_level_kps_1_quant1_threshold[10 * 14] =
{ // torch.Size([10, 14])
-923, -594, -430, -306, -224, -142, -59, 22, 104, 187, 269, 392, 557, 886,
-1041, -668, -481, -341, -248, -154, -61, 32, 125, 218, 312, 452, 639, 1012,
-925, -585, -415, -288, -203, -118, -33, 51, 136, 220, 305, 433, 603, 942,
-990, -623, -439, -302, -210, -118, -26, 65, 156, 248, 340, 478, 661, 1029,
-983, -636, -463, -334, -247, -160, -74, 12, 98, 185, 271, 401, 574, 920,
-1090, -692, -494, -345, -245, -146, -47, 52, 151, 251, 350, 499, 698, 1095,
-848, -537, -381, -265, -187, -109, -31, 46, 123, 201, 279, 396, 552, 863,
-1287, -843, -621, -455, -344, -233, -122, -11, 99, 210, 321, 487, 709, 1153,
-776, -486, -341, -232, -159, -87, -14, 57, 130, 203, 275, 384, 529, 820,
-1161, -753, -548, -395, -293, -191, -89, 12, 114, 216, 319, 472, 676, 1084,
};

static uint64_t bbox_head_multi_level_kps_1_conv2_weight[10 * 9] =
{ // torch.Size([10, 3, 3, 1])
0x2, 0xb, 0xd, 0x1, 0xb, 0xe, 0x9, 0xb, 0xd,
0x3, 0x3, 0x2, 0x4, 0x6, 0x6, 0x3, 0x3, 0x3,
0x8, 0x4, 0x6, 0x8, 0x4, 0x6, 0x8, 0x4, 0x5,
0xa, 0xb, 0xb, 0xc, 0xe, 0xe, 0xb, 0xb, 0xb,
0x8, 0xc, 0xd, 0x1, 0xc, 0xe, 0x9, 0xc, 0xe,
0xa, 0xb, 0xb, 0xc, 0xe, 0xe, 0xb, 0xb, 0xb,
0x9, 0x2, 0x5, 0xa, 0x3, 0x6, 0xb, 0x4, 0x6,
0x3, 0x3, 0x4, 0x4, 0x6, 0x6, 0x3, 0x3, 0x3,
0x8, 0xb, 0xd, 0x2, 0xc, 0xe, 0x3, 0xc, 0xe,
0x3, 0x2, 0x4, 0x4, 0x6, 0x6, 0x3, 0x3, 0x3,
};

static int bbox_head_multi_level_kps_1_quant2_threshold[10 * 14] =
{ // torch.Size([10, 14])
-3360, -1978, -1287, -769, -423, -78, 267, 612, 958, 1303, 1649, 2167, 2858, 4240,
-3834, -2259, -1471, -880, -486, -93, 300, 694, 1088, 1482, 1876, 2467, 3255, 4830,
-3996, -2660, -1993, -1492, -1158, -824, -490, -156, 177, 510, 844, 1345, 2013, 3348,
-3840, -2263, -1475, -883, -489, -95, 298, 692, 1086, 1481, 1875, 2466, 3254, 4831,
-4086, -2582, -1829, -1265, -889, -512, -136, 239, 615, 991, 1368, 1932, 2684, 4189,
-4039, -2593, -1871, -1329, -967, -606, -245, 116, 477, 838, 1200, 1742, 2464, 3910,
-3534, -2112, -1402, -868, -513, -158, 197, 552, 908, 1263, 1619, 2152, 2863, 4284,
-4343, -2945, -2247, -1723, -1374, -1024, -675, -326, 23, 372, 721, 1245, 1944, 3341,
-4253, -2806, -2083, -1540, -1178, -817, -455, -93, 268, 629, 991, 1534, 2257, 3704,
-4262, -2888, -2201, -1686, -1342, -999, -655, -312, 31, 374, 718, 1233, 1920, 3294,
};

static uint64_t bbox_head_multi_level_kps_2_conv1_weight[10 * 1*4] =
{ // torch.Size([10, 1, 1, 64])
0x0b9b33380baab8b0,0xad802b3a0d4924cd,0x2a58c93b0334b533,0x5abd3219c03133a1,
0xc32b3ab0a2bb2943,0x33a8b5bb1aabac64,0x3b8952494d2050bb,0x3031abc0a3cac24a,
0x0b149a423a2382bb,0xcd243c2324e222c5,0xa431b2b332a680ab,0xd0333ba24b23c822,
0x5ab3b930301b80cb,0xbb233d33909a14ed,0xb281c0cbc599d313,0xb2b08351b23332b8,
0x1903aa002c0a198c,0x302429a314d19a15,0xa1c241ba2aa521bb,0xe24523b358a2c029,
0xcb4a4832b80389a3,0x0cb124ab0bc10255,0x4282a15a3d9240ab,0x4b3c2ada9a83da22,
0xab0b3439bb13a0b1,0x0d2b3b3aac4413cd,0x2050ca23a334a323,0x59ad2b2baba24b02,
0xac4942512b9b020a,0xad9443993ada3354,0x22b8d04b4c2c32a9,0x3bbc30e2b244d323,
0xa32c33b0ca331131,0x353db30bbb638b4c,0x29babb34b02d0b2a,0x5accaa998bab5b80,
0xbc484351ac329229,0xbd23338a2ab32a55,0x23bad9324cbb3a9b,0x2aac4ad21b54da22,
};

static int bbox_head_multi_level_kps_2_quant1_threshold[10 * 14] =
{ // torch.Size([10, 14])
-1227, -787, -567, -401, -291, -181, -71, 38, 148, 258, 369, 534, 754, 1194,
-1307, -838, -604, -429, -312, -195, -77, 39, 156, 273, 390, 565, 800, 1268,
-1466, -949, -691, -497, -368, -238, -109, 19, 148, 277, 406, 600, 859, 1375,
-1388, -888, -638, -451, -326, -201, -76, 48, 173, 298, 423, 610, 860, 1360,
-1043, -670, -484, -344, -250, -157, -64, 28, 122, 215, 308, 448, 634, 1007,
-1232, -793, -573, -409, -299, -189, -79, 29, 139, 249, 359, 523, 743, 1182,
-1130, -717, -511, -356, -253, -149, -46, 56, 160, 263, 366, 521, 728, 1141,
-1370, -880, -634, -451, -328, -205, -83, 39, 162, 284, 407, 591, 836, 1326,
-1145, -706, -486, -322, -212, -102, 7, 117, 226, 336, 446, 611, 830, 1270,
-1218, -776, -555, -390, -279, -169, -59, 51, 161, 271, 382, 547, 768, 1210,
};

static uint64_t bbox_head_multi_level_kps_2_conv2_weight[10 * 9] =
{ // torch.Size([10, 3, 3, 1])
0x4, 0x5, 0x5, 0x4, 0x5, 0x5, 0x4, 0x5, 0x5,
0xc, 0xc, 0xc, 0xd, 0xd, 0xd, 0xc, 0xc, 0xc,
0xc, 0xd, 0xc, 0xc, 0xd, 0xc, 0xc, 0xd, 0xc,
0x2, 0x4, 0x5, 0x5, 0x5, 0x6, 0x4, 0x4, 0x5,
0xc, 0xd, 0xc, 0xc, 0xd, 0xd, 0xd, 0xe, 0xd,
0xc, 0xc, 0xc, 0xd, 0xd, 0xd, 0xc, 0xc, 0xc,
0x4, 0x4, 0x4, 0x3, 0x5, 0x5, 0x4, 0x6, 0x5,
0xc, 0xc, 0xc, 0xd, 0xd, 0xd, 0xc, 0xd, 0xc,
0x4, 0x4, 0x2, 0x4, 0x5, 0x4, 0x4, 0x6, 0x5,
0xc, 0xc, 0xc, 0xd, 0xd, 0xd, 0xc, 0xd, 0xd,
};

static int bbox_head_multi_level_kps_2_quant2_threshold[10 * 14] =
{ // torch.Size([10, 14])
-3934, -2315, -1505, -898, -493, -88, 316, 720, 1125, 1530, 1935, 2542, 3352, 4971,
-3469, -2089, -1399, -882, -537, -192, 152, 497, 842, 1187, 1532, 2050, 2740, 4120,
-4079, -2710, -2026, -1513, -1170, -828, -486, -144, 197, 540, 882, 1395, 2079, 3448,
-4050, -2431, -1621, -1014, -610, -205, 199, 603, 1008, 1413, 1818, 2425, 3234, 4853,
-5009, -3156, -2229, -1535, -1071, -608, -145, 317, 781, 1244, 1707, 2402, 3328, 5181,
-4471, -2895, -2107, -1516, -1122, -728, -334, 59, 453, 847, 1241, 1832, 2620, 4195,
-3545, -2101, -1379, -838, -477, -116, 244, 605, 966, 1327, 1688, 2230, 2952, 4396,
-4120, -2799, -2138, -1643, -1313, -982, -652, -322, 7, 338, 668, 1163, 1824, 3145,
-4655, -3074, -2284, -1691, -1295, -900, -505, -109, 285, 680, 1075, 1668, 2459, 4040,
-4478, -3039, -2320, -1781, -1421, -1061, -702, -342, 16, 376, 736, 1275, 1994, 3433,
};
